{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rust_decimal","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=af01ff44cbebfb8c","-C","extra-filename=-af01ff44cbebfb8c","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","arrayvec=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libarrayvec-0ac98e6fc6073cd3.rmeta","--extern","num_traits=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libnum_traits-03a209f6f115a067.rmeta","--extern","serde=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libserde-85a75bbc8b1c033c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/librust_decimal-af01ff44cbebfb8c.rmeta"},"prelude":{"crate_id":{"name":"rust_decimal","disambiguator":[12023699366839756949,6481154855103688176]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","num":18,"id":{"name":"arrayvec","disambiguator":[16812213824293510722,6721845783464980165]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","num":19,"id":{"name":"num_traits","disambiguator":[17924127444694990130,16038643942559545046]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","num":20,"id":{"name":"serde","disambiguator":[10046370283642847503,3691239908664621752]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","num":21,"id":{"name":"serde_derive","disambiguator":[15453067340294867731,17590767171064247847]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":0,"byte_end":1803,"line_start":1,"line_end":60,"column_start":1,"column_end":21}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1526,"byte_end":1533,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1535,"byte_end":1551,"line_start":49,"line_end":49,"column_start":28,"column_end":44},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1569,"byte_end":1574,"line_start":50,"line_end":50,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1615,"byte_end":1622,"line_start":53,"line_end":53,"column_start":21,"column_end":28},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1624,"byte_end":1640,"line_start":53,"line_end":53,"column_start":30,"column_end":46},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":2,"index":11108},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1666,"byte_end":1673,"line_start":54,"line_end":54,"column_start":24,"column_end":31},"alias_span":null,"name":"FromStr","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":19,"index":320},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1700,"byte_end":1713,"line_start":55,"line_end":55,"column_start":26,"column_end":39},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":19,"index":507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1715,"byte_end":1718,"line_start":55,"line_end":55,"column_start":41,"column_end":44},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":19,"index":294},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1720,"byte_end":1731,"line_start":55,"line_end":55,"column_start":46,"column_end":57},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":19,"index":497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1733,"byte_end":1737,"line_start":55,"line_end":55,"column_start":59,"column_end":63},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":529}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":0,"byte_end":1803,"line_start":1,"line_end":60,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":457},{"krate":0,"index":471},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529}],"decl_id":null,"docs":"\n A Decimal implementation written in pure Rust suitable\n for financial calculations that require significant integral\n and fractional digits with no round-off errors.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":0,"byte_end":3,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"/ A Decimal implementation written in pure Rust suitable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":4,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"/ for financial calculations that require significant integral","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":63,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ and fractional digits with no round-off errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":128,"byte_end":179,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":180,"byte_end":183,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The binary representation consists of a 96 bit integer number,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":184,"byte_end":250,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ a scaling factor used to specify the decimal fraction and a 1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":251,"byte_end":316,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/ bit sign. Because of this representation, trailing zeros are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":317,"byte_end":381,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ preserved and may be exposed when in string form. These can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":382,"byte_end":448,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ truncated using the `normalize` or `round_dp` functions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":449,"byte_end":509,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":510,"byte_end":513,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":514,"byte_end":526,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":527,"byte_end":530,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Decimal numbers can be created in a few distinct ways, depending","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":531,"byte_end":599,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ on the rust compiler version you're targeting.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":600,"byte_end":650,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":651,"byte_end":654,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The stable version of rust requires you to create a Decimal number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":655,"byte_end":725,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ using one of it's convenience methods.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":726,"byte_end":768,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":769,"byte_end":772,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":773,"byte_end":784,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":785,"byte_end":818,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":819,"byte_end":822,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Using an integer followed by the decimal points","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":823,"byte_end":877,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ let scaled = Decimal::new(202, 2); // 2.02","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":878,"byte_end":924,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":925,"byte_end":928,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // From a string representation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":929,"byte_end":964,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/ let from_string = Decimal::from_str(\"2.02\").unwrap(); // 2.02","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":965,"byte_end":1030,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1031,"byte_end":1034,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Using the `Into` trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1035,"byte_end":1064,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ let my_int : Decimal = 3i32.into();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1065,"byte_end":1104,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Using the raw decimal representation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1109,"byte_end":1152,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/ // 3.1415926535897932384626433832","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1153,"byte_end":1190,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/ let pi = Decimal::from_parts(1102470952, 185874565, 1703060790, false, 28);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1191,"byte_end":1270,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1271,"byte_end":1278,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1279,"byte_end":1282,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1283,"byte_end":1306,"line_start":37,"line_end":37,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4829,"byte_end":4844,"line_start":114,"line_end":114,"column_start":12,"column_end":27},"name":"UnpackedDecimal","qualname":"::decimal::UnpackedDecimal","value":"UnpackedDecimal { is_negative, scale, hi, mid, lo }","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":" `UnpackedDecimal` contains unpacked representation of `Decimal` where each component\n of decimal-format stored in it's own field\n","sig":null,"attributes":[{"value":"/ `UnpackedDecimal` contains unpacked representation of `Decimal` where each component","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4652,"byte_end":4740,"line_start":111,"line_end":111,"column_start":1,"column_end":89}},{"value":"/ of decimal-format stored in it's own field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4741,"byte_end":4787,"line_start":112,"line_end":112,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4855,"byte_end":4866,"line_start":115,"line_end":115,"column_start":9,"column_end":20},"name":"is_negative","qualname":"::decimal::UnpackedDecimal::is_negative","value":"bool","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4882,"byte_end":4887,"line_start":116,"line_end":116,"column_start":9,"column_end":14},"name":"scale","qualname":"::decimal::UnpackedDecimal::scale","value":"u32","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4902,"byte_end":4904,"line_start":117,"line_end":117,"column_start":9,"column_end":11},"name":"hi","qualname":"::decimal::UnpackedDecimal::hi","value":"u32","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4919,"byte_end":4922,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"name":"mid","qualname":"::decimal::UnpackedDecimal::mid","value":"u32","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":558},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4937,"byte_end":4939,"line_start":119,"line_end":119,"column_start":9,"column_end":11},"name":"lo","qualname":"::decimal::UnpackedDecimal::lo","value":"u32","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5367,"byte_end":5374,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::decimal::Decimal","value":"Decimal {  }","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"decl_id":null,"docs":" `Decimal` represents a 128 bit representation of a fixed-precision decimal number.\n The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,\n where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer\n between 0 and 28 inclusive.\n","sig":null,"attributes":[{"value":"/ `Decimal` represents a 128 bit representation of a fixed-precision decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":4949,"byte_end":5035,"line_start":122,"line_end":122,"column_start":1,"column_end":87}},{"value":"/ The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5036,"byte_end":5118,"line_start":123,"line_end":123,"column_start":1,"column_end":83}},{"value":"/ where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5119,"byte_end":5212,"line_start":124,"line_end":124,"column_start":1,"column_end":94}},{"value":"/ between 0 and 28 inclusive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5213,"byte_end":5244,"line_start":125,"line_end":125,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6411,"byte_end":6426,"line_start":153,"line_end":153,"column_start":5,"column_end":20},"name":"BankersRounding","qualname":"::decimal::RoundingStrategy::BankersRounding","value":"RoundingStrategy::BankersRounding","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6432,"byte_end":6443,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"RoundHalfUp","qualname":"::decimal::RoundingStrategy::RoundHalfUp","value":"RoundingStrategy::RoundHalfUp","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6449,"byte_end":6462,"line_start":155,"line_end":155,"column_start":5,"column_end":18},"name":"RoundHalfDown","qualname":"::decimal::RoundingStrategy::RoundHalfDown","value":"RoundingStrategy::RoundHalfDown","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6468,"byte_end":6477,"line_start":156,"line_end":156,"column_start":5,"column_end":14},"name":"RoundDown","qualname":"::decimal::RoundingStrategy::RoundDown","value":"RoundingStrategy::RoundDown","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6483,"byte_end":6490,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"RoundUp","qualname":"::decimal::RoundingStrategy::RoundUp","value":"RoundingStrategy::RoundUp","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6388,"byte_end":6404,"line_start":152,"line_end":152,"column_start":10,"column_end":26},"name":"RoundingStrategy","qualname":"::decimal::RoundingStrategy","value":"pub enum RoundingStrategy {\n    BankersRounding,\n    RoundHalfUp,\n    RoundHalfDown,\n    RoundDown,\n    RoundUp,\n}","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581}],"decl_id":null,"docs":" `RoundingStrategy` represents the different strategies that can be used by\n `round_dp_with_strategy`.","sig":null,"attributes":[{"value":"/ `RoundingStrategy` represents the different strategies that can be used by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5772,"byte_end":5850,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ `round_dp_with_strategy`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5851,"byte_end":5880,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5881,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `RoundingStrategy::BankersRounding` - Rounds toward the nearest even number, e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5885,"byte_end":5989,"line_start":144,"line_end":144,"column_start":1,"column_end":105}},{"value":"/ `RoundingStrategy::RoundHalfUp` - Rounds up if the value >= 5, otherwise rounds down, e.g. 6.5 -> 7,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":5990,"byte_end":6094,"line_start":145,"line_end":145,"column_start":1,"column_end":105}},{"value":"/ `RoundingStrategy::RoundHalfDown` - Rounds down if the value =< 5, otherwise rounds up, e.g.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6095,"byte_end":6191,"line_start":146,"line_end":146,"column_start":1,"column_end":97}},{"value":"/ 6.5 -> 6, 6.51 -> 7","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6192,"byte_end":6215,"line_start":147,"line_end":147,"column_start":1,"column_end":24}},{"value":"/ 1.4999999 -> 1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6216,"byte_end":6234,"line_start":148,"line_end":148,"column_start":1,"column_end":19}},{"value":"/ `RoundingStrategy::RoundDown` - Always round down.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6235,"byte_end":6289,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/ `RoundingStrategy::RoundUp` - Always round up.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6290,"byte_end":6340,"line_start":150,"line_end":150,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7010,"byte_end":7013,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Decimal>::new","value":"pub fn new(i64, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","sig":null,"attributes":[{"value":"/ Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6534,"byte_end":6619,"line_start":162,"line_end":162,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6624,"byte_end":6627,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6632,"byte_end":6647,"line_start":164,"line_end":164,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6652,"byte_end":6655,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `num` - An i64 that represents the `m` portion of the decimal number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6660,"byte_end":6734,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ * `scale` - A u32 representing the `e` portion of the decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6739,"byte_end":6812,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6817,"byte_end":6820,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6825,"byte_end":6838,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6843,"byte_end":6846,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6851,"byte_end":6858,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6863,"byte_end":6893,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6898,"byte_end":6901,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6906,"byte_end":6941,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(pi.to_string(), \"3.141\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6946,"byte_end":6986,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6991,"byte_end":6998,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8274,"byte_end":8294,"line_start":217,"line_end":217,"column_start":12,"column_end":32},"name":"from_i128_with_scale","qualname":"<Decimal>::from_i128_with_scale","value":"pub fn from_i128_with_scale(i128, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Decimal` using a 128 bit signed `m` representation and corresponding `e` scale.","sig":null,"attributes":[{"value":"/ Creates a `Decimal` using a 128 bit signed `m` representation and corresponding `e` scale.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7767,"byte_end":7861,"line_start":202,"line_end":202,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7866,"byte_end":7869,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7874,"byte_end":7889,"line_start":204,"line_end":204,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7894,"byte_end":7897,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ * `num` - An i128 that represents the `m` portion of the decimal number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7902,"byte_end":7977,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ * `scale` - A u32 representing the `e` portion of the decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":7982,"byte_end":8055,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8060,"byte_end":8063,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8068,"byte_end":8081,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8086,"byte_end":8089,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8094,"byte_end":8101,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8106,"byte_end":8136,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8141,"byte_end":8144,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_i128_with_scale(3141i128, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8149,"byte_end":8205,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(pi.to_string(), \"3.141\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8210,"byte_end":8250,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":8255,"byte_end":8262,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9836,"byte_end":9846,"line_start":261,"line_end":261,"column_start":18,"column_end":28},"name":"from_parts","qualname":"<Decimal>::from_parts","value":"pub const fn from_parts(u32, u32, u32, bool, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` using the instances constituent parts.","sig":null,"attributes":[{"value":"/ Returns a `Decimal` using the instances constituent parts.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9181,"byte_end":9243,"line_start":243,"line_end":243,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9248,"byte_end":9251,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9256,"byte_end":9271,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9276,"byte_end":9279,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ * `lo` - The low 32 bits of a 96-bit integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9284,"byte_end":9333,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/ * `mid` - The middle 32 bits of a 96-bit integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9338,"byte_end":9391,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/ * `hi` - The high 32 bits of a 96-bit integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9396,"byte_end":9446,"line_start":249,"line_end":249,"column_start":5,"column_end":55}},{"value":"/ * `negative` - `true` to indicate a negative number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9451,"byte_end":9507,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ * `scale` - A power of 10 ranging from 0 to 28.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9512,"byte_end":9563,"line_start":251,"line_end":251,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9568,"byte_end":9571,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9576,"byte_end":9589,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9594,"byte_end":9597,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9602,"byte_end":9609,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9614,"byte_end":9644,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9649,"byte_end":9652,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_parts(1102470952, 185874565, 1703060790, false, 28);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9657,"byte_end":9736,"line_start":258,"line_end":258,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(pi.to_string(), \"3.1415926535897932384626433832\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9741,"byte_end":9806,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":9811,"byte_end":9818,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10510,"byte_end":10525,"line_start":285,"line_end":285,"column_start":12,"column_end":27},"name":"from_scientific","qualname":"<Decimal>::from_scientific","value":"pub fn from_scientific(&str) -> Result<Decimal, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Result` which if successful contains the `Decimal` constitution of\n the scientific notation provided by `value`.","sig":null,"attributes":[{"value":"/ Returns a `Result` which if successful contains the `Decimal` constitution of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10047,"byte_end":10128,"line_start":270,"line_end":270,"column_start":5,"column_end":86}},{"value":"/ the scientific notation provided by `value`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10133,"byte_end":10181,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10186,"byte_end":10189,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10194,"byte_end":10209,"line_start":273,"line_end":273,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10214,"byte_end":10217,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ * `value` - The scientific notation of the `Decimal`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10222,"byte_end":10279,"line_start":275,"line_end":275,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10284,"byte_end":10287,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10292,"byte_end":10305,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10310,"byte_end":10313,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10318,"byte_end":10325,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10330,"byte_end":10360,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10365,"byte_end":10368,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let value = Decimal::from_scientific(\"9.7e-7\").unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10373,"byte_end":10433,"line_start":282,"line_end":282,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(value.to_string(), \"0.00000097\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10438,"byte_end":10486,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":10491,"byte_end":10498,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11678,"byte_end":11683,"line_start":321,"line_end":321,"column_start":18,"column_end":23},"name":"scale","qualname":"<Decimal>::scale","value":"pub const fn scale(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scale of the decimal number, otherwise known as `e`.","sig":null,"attributes":[{"value":"/ Returns the scale of the decimal number, otherwise known as `e`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11397,"byte_end":11465,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11470,"byte_end":11473,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11478,"byte_end":11491,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11496,"byte_end":11499,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11504,"byte_end":11511,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11516,"byte_end":11546,"line_start":315,"line_end":315,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11551,"byte_end":11554,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(1234, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11559,"byte_end":11595,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.scale(), 3u32);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11600,"byte_end":11634,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11639,"byte_end":11646,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11651,"byte_end":11660,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12254,"byte_end":12262,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"set_sign","qualname":"<Decimal>::set_sign","value":"pub fn set_sign(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11769,"byte_end":11835,"line_start":325,"line_end":325,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11840,"byte_end":11843,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11848,"byte_end":11863,"line_start":327,"line_end":327,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11868,"byte_end":11871,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ * `positive`: true if the resulting decimal should be positive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11876,"byte_end":11943,"line_start":329,"line_end":329,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11948,"byte_end":11951,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11956,"byte_end":11969,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11974,"byte_end":11977,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11982,"byte_end":11989,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":11994,"byte_end":12024,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12029,"byte_end":12032,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12037,"byte_end":12074,"line_start":336,"line_end":336,"column_start":5,"column_end":42}},{"value":"/ one.set_sign(false);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12079,"byte_end":12103,"line_start":337,"line_end":337,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12108,"byte_end":12146,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12151,"byte_end":12158,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"1.4.0\", note =\n             \"please use `set_sign_positive` instead\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12163,"byte_end":12242,"line_start":340,"line_end":340,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12777,"byte_end":12794,"line_start":361,"line_end":361,"column_start":12,"column_end":29},"name":"set_sign_positive","qualname":"<Decimal>::set_sign_positive","value":"pub fn set_sign_positive(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12345,"byte_end":12411,"line_start":345,"line_end":345,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12416,"byte_end":12419,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12424,"byte_end":12439,"line_start":347,"line_end":347,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12444,"byte_end":12447,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ * `positive`: true if the resulting decimal should be positive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12452,"byte_end":12519,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12524,"byte_end":12527,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12532,"byte_end":12545,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12550,"byte_end":12553,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12558,"byte_end":12565,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12570,"byte_end":12600,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12605,"byte_end":12608,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12613,"byte_end":12650,"line_start":356,"line_end":356,"column_start":5,"column_end":42}},{"value":"/ one.set_sign_positive(false);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12655,"byte_end":12688,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12693,"byte_end":12731,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12736,"byte_end":12743,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12748,"byte_end":12765,"line_start":360,"line_end":360,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13391,"byte_end":13408,"line_start":385,"line_end":385,"column_start":12,"column_end":29},"name":"set_sign_negative","qualname":"<Decimal>::set_sign_negative","value":"pub fn set_sign_negative(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":12960,"byte_end":13026,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13031,"byte_end":13034,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13039,"byte_end":13054,"line_start":371,"line_end":371,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13059,"byte_end":13062,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ * `negative`: true if the resulting decimal should be negative.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13067,"byte_end":13134,"line_start":373,"line_end":373,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13139,"byte_end":13142,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13147,"byte_end":13160,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13165,"byte_end":13168,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13173,"byte_end":13180,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13185,"byte_end":13215,"line_start":378,"line_end":378,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13220,"byte_end":13223,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13228,"byte_end":13265,"line_start":380,"line_end":380,"column_start":5,"column_end":42}},{"value":"/ one.set_sign_negative(true);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13270,"byte_end":13302,"line_start":381,"line_end":381,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13307,"byte_end":13345,"line_start":382,"line_end":382,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13350,"byte_end":13357,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13362,"byte_end":13379,"line_start":384,"line_end":384,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13871,"byte_end":13880,"line_start":404,"line_end":404,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<Decimal>::set_scale","value":"pub fn set_scale(&mut Self, u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the scale of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the scale of a decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13492,"byte_end":13559,"line_start":389,"line_end":389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13564,"byte_end":13567,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13572,"byte_end":13587,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13592,"byte_end":13595,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ * `scale`: the new scale of the number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13600,"byte_end":13642,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13647,"byte_end":13650,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13655,"byte_end":13668,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13673,"byte_end":13676,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13681,"byte_end":13688,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13693,"byte_end":13723,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13728,"byte_end":13731,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::new(1, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13736,"byte_end":13773,"line_start":400,"line_end":400,"column_start":5,"column_end":42}},{"value":"/ one.set_scale(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13778,"byte_end":13799,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(one.to_string(), \"0.00001\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13804,"byte_end":13847,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":13852,"byte_end":13859,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15076,"byte_end":15083,"line_start":436,"line_end":436,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Decimal>::rescale","value":"pub fn rescale(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `Decimal` to the given scale, attempting to do so without changing the\n underlying number itself.","sig":null,"attributes":[{"value":"/ Modifies the `Decimal` to the given scale, attempting to do so without changing the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14141,"byte_end":14228,"line_start":412,"line_end":412,"column_start":5,"column_end":92}},{"value":"/ underlying number itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14233,"byte_end":14262,"line_start":413,"line_end":413,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14267,"byte_end":14270,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that setting the scale to something less then the current `Decimal`s scale will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14275,"byte_end":14363,"line_start":415,"line_end":415,"column_start":5,"column_end":93}},{"value":"/ cause the newly created `Decimal` to have some rounding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14368,"byte_end":14428,"line_start":416,"line_end":416,"column_start":5,"column_end":65}},{"value":"/ Scales greater than the maximum precision supported by `Decimal` will be automatically","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14433,"byte_end":14523,"line_start":417,"line_end":417,"column_start":5,"column_end":95}},{"value":"/ rounded to `Decimal::MAX_PRECISION`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14528,"byte_end":14568,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/ Rounding leverages the half up strategy.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14573,"byte_end":14617,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14622,"byte_end":14625,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14630,"byte_end":14645,"line_start":421,"line_end":421,"column_start":5,"column_end":20}},{"value":"/ * `scale`: The scale to use for the new `Decimal` number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14650,"byte_end":14711,"line_start":422,"line_end":422,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14716,"byte_end":14719,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14724,"byte_end":14737,"line_start":424,"line_end":424,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14742,"byte_end":14745,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14750,"byte_end":14757,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14762,"byte_end":14792,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14797,"byte_end":14800,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let mut number = Decimal::new(1_123, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14805,"byte_end":14849,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/ number.rescale(6);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14854,"byte_end":14876,"line_start":430,"line_end":430,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(number, Decimal::new(1_123_000, 6));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14881,"byte_end":14932,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/ let mut round = Decimal::new(145, 2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14937,"byte_end":14978,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/ round.rescale(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":14983,"byte_end":15004,"line_start":433,"line_end":433,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(round, Decimal::new(15, 1));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15009,"byte_end":15052,"line_start":434,"line_end":434,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15057,"byte_end":15064,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15736,"byte_end":15745,"line_start":453,"line_end":453,"column_start":18,"column_end":27},"name":"serialize","qualname":"<Decimal>::serialize","value":"pub const fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a serialized version of the decimal number.\n The resulting byte array will have the following representation:","sig":null,"attributes":[{"value":"/ Returns a serialized version of the decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15432,"byte_end":15487,"line_start":446,"line_end":446,"column_start":5,"column_end":60}},{"value":"/ The resulting byte array will have the following representation:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15492,"byte_end":15560,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15565,"byte_end":15568,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ * Bytes 1-4: flags","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15573,"byte_end":15595,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/ * Bytes 5-8: lo portion of `m`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15600,"byte_end":15634,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ * Bytes 9-12: mid portion of `m`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15639,"byte_end":15675,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/ * Bytes 13-16: high portion of `m`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":15680,"byte_end":15718,"line_start":452,"line_end":452,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16863,"byte_end":16874,"line_start":481,"line_end":481,"column_start":18,"column_end":29},"name":"deserialize","qualname":"<Decimal>::deserialize","value":"pub const fn deserialize([u8; ]) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the given bytes into a decimal number.\n The deserialized byte representation must be 16 bytes and adhere to the followign convention:","sig":null,"attributes":[{"value":"/ Deserializes the given bytes into a decimal number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16530,"byte_end":16585,"line_start":474,"line_end":474,"column_start":5,"column_end":60}},{"value":"/ The deserialized byte representation must be 16 bytes and adhere to the followign convention:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16590,"byte_end":16687,"line_start":475,"line_end":475,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16692,"byte_end":16695,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ * Bytes 1-4: flags","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16700,"byte_end":16722,"line_start":477,"line_end":477,"column_start":5,"column_end":27}},{"value":"/ * Bytes 5-8: lo portion of `m`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16727,"byte_end":16761,"line_start":478,"line_end":478,"column_start":5,"column_end":39}},{"value":"/ * Bytes 9-12: mid portion of `m`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16766,"byte_end":16802,"line_start":479,"line_end":479,"column_start":5,"column_end":41}},{"value":"/ * Bytes 13-16: high portion of `m`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":16807,"byte_end":16845,"line_start":480,"line_end":480,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17543,"byte_end":17554,"line_start":492,"line_end":492,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Decimal>::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the decimal is negative.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17402,"byte_end":17448,"line_start":490,"line_end":490,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_negative` instead\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17453,"byte_end":17531,"line_start":491,"line_end":491,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17756,"byte_end":17767,"line_start":498,"line_end":498,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Decimal>::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the decimal is positive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17615,"byte_end":17661,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_positive` instead\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17666,"byte_end":17744,"line_start":497,"line_end":497,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17930,"byte_end":17946,"line_start":504,"line_end":504,"column_start":18,"column_end":34},"name":"is_sign_negative","qualname":"<Decimal>::is_sign_negative","value":"pub const fn is_sign_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the sign bit of the decimal is negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the sign bit of the decimal is negative.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17828,"byte_end":17890,"line_start":502,"line_end":502,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":17895,"byte_end":17912,"line_start":503,"line_end":503,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18112,"byte_end":18128,"line_start":510,"line_end":510,"column_start":18,"column_end":34},"name":"is_sign_positive","qualname":"<Decimal>::is_sign_positive","value":"pub const fn is_sign_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the sign bit of the decimal is positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the sign bit of the decimal is positive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18010,"byte_end":18072,"line_start":508,"line_end":508,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18077,"byte_end":18094,"line_start":509,"line_end":509,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18280,"byte_end":18289,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"name":"min_value","qualname":"<Decimal>::min_value","value":"pub const fn min_value() -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum possible number that `Decimal` can represent.\n","sig":null,"attributes":[{"value":"/ Returns the minimum possible number that `Decimal` can represent.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18193,"byte_end":18262,"line_start":514,"line_end":514,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18415,"byte_end":18424,"line_start":520,"line_end":520,"column_start":18,"column_end":27},"name":"max_value","qualname":"<Decimal>::max_value","value":"pub const fn max_value() -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum possible number that `Decimal` can represent.\n","sig":null,"attributes":[{"value":"/ Returns the maximum possible number that `Decimal` can represent.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18328,"byte_end":18397,"line_start":519,"line_end":519,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18869,"byte_end":18874,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Decimal>::trunc","value":"pub fn trunc(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` integral with no fractional portion.\n This is a true truncation whereby no rounding is performed.","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` integral with no fractional portion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18463,"byte_end":18527,"line_start":524,"line_end":524,"column_start":5,"column_end":69}},{"value":"/ This is a true truncation whereby no rounding is performed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18532,"byte_end":18595,"line_start":525,"line_end":525,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18600,"byte_end":18603,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18608,"byte_end":18621,"line_start":527,"line_end":527,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18626,"byte_end":18629,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18634,"byte_end":18641,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18646,"byte_end":18676,"line_start":530,"line_end":530,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18681,"byte_end":18684,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18689,"byte_end":18724,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/ let trunc = Decimal::new(3, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18729,"byte_end":18764,"line_start":533,"line_end":533,"column_start":5,"column_end":40}},{"value":"/ // note that it returns a decimal","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18769,"byte_end":18806,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(pi.trunc(), trunc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18811,"byte_end":18845,"line_start":535,"line_end":535,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":18850,"byte_end":18857,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20012,"byte_end":20017,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"fract","qualname":"<Decimal>::fract","value":"pub fn fract(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` representing the fractional portion of the number.","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` representing the fractional portion of the number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19658,"byte_end":19736,"line_start":563,"line_end":563,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19741,"byte_end":19744,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19749,"byte_end":19762,"line_start":565,"line_end":565,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19767,"byte_end":19770,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19775,"byte_end":19782,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19787,"byte_end":19817,"line_start":568,"line_end":568,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19822,"byte_end":19825,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19830,"byte_end":19865,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/ let fract = Decimal::new(141, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19870,"byte_end":19907,"line_start":571,"line_end":571,"column_start":5,"column_end":42}},{"value":"/ // note that it returns a decimal","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19912,"byte_end":19949,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(pi.fract(), fract);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19954,"byte_end":19988,"line_start":573,"line_end":573,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":19993,"byte_end":20000,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20451,"byte_end":20454,"line_start":591,"line_end":591,"column_start":12,"column_end":15},"name":"abs","qualname":"<Decimal>::abs","value":"pub fn abs(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20202,"byte_end":20244,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20249,"byte_end":20252,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20257,"byte_end":20270,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20275,"byte_end":20278,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20283,"byte_end":20290,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20295,"byte_end":20325,"line_start":586,"line_end":586,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20330,"byte_end":20333,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(-3141, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20338,"byte_end":20375,"line_start":588,"line_end":588,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(num.abs().to_string(), \"3.141\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20380,"byte_end":20427,"line_start":589,"line_end":589,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20432,"byte_end":20439,"line_start":590,"line_end":590,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20828,"byte_end":20833,"line_start":607,"line_end":607,"column_start":12,"column_end":17},"name":"floor","qualname":"<Decimal>::floor","value":"pub fn floor(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20561,"byte_end":20624,"line_start":597,"line_end":597,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20629,"byte_end":20632,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20637,"byte_end":20650,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20655,"byte_end":20658,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20663,"byte_end":20670,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20675,"byte_end":20705,"line_start":602,"line_end":602,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20710,"byte_end":20713,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(3641, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20718,"byte_end":20754,"line_start":604,"line_end":604,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.floor().to_string(), \"3\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20759,"byte_end":20804,"line_start":605,"line_end":605,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":20809,"byte_end":20816,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21575,"byte_end":21579,"line_start":635,"line_end":635,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Decimal>::ceil","value":"pub fn ceil(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21218,"byte_end":21285,"line_start":623,"line_end":623,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21290,"byte_end":21293,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21298,"byte_end":21311,"line_start":625,"line_end":625,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21316,"byte_end":21319,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21324,"byte_end":21331,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21336,"byte_end":21366,"line_start":628,"line_end":628,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21371,"byte_end":21374,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(3141, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21379,"byte_end":21415,"line_start":630,"line_end":630,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.ceil().to_string(), \"4\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21420,"byte_end":21464,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/ let num = Decimal::new(3, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21469,"byte_end":21502,"line_start":632,"line_end":632,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(num.ceil().to_string(), \"3\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21507,"byte_end":21551,"line_start":633,"line_end":633,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21556,"byte_end":21563,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22173,"byte_end":22176,"line_start":659,"line_end":659,"column_start":12,"column_end":15},"name":"max","qualname":"<Decimal>::max","value":"pub fn max(Self, Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21938,"byte_end":21981,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21986,"byte_end":21989,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":21994,"byte_end":22001,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22006,"byte_end":22036,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22041,"byte_end":22044,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let x = Decimal::new(1, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22049,"byte_end":22080,"line_start":655,"line_end":655,"column_start":5,"column_end":36}},{"value":"/ let y = Decimal::new(2, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22085,"byte_end":22116,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(y, x.max(y));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22121,"byte_end":22149,"line_start":657,"line_end":657,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22154,"byte_end":22161,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22546,"byte_end":22549,"line_start":676,"line_end":676,"column_start":12,"column_end":15},"name":"min","qualname":"<Decimal>::min","value":"pub fn min(Self, Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22311,"byte_end":22354,"line_start":667,"line_end":667,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22359,"byte_end":22362,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22367,"byte_end":22374,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22379,"byte_end":22409,"line_start":670,"line_end":670,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22414,"byte_end":22417,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let x = Decimal::new(1, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22422,"byte_end":22453,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ let y = Decimal::new(2, 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22458,"byte_end":22489,"line_start":673,"line_end":673,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(x, x.min(y));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22494,"byte_end":22522,"line_start":674,"line_end":674,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22527,"byte_end":22534,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23036,"byte_end":23045,"line_start":695,"line_end":695,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Decimal>::normalize","value":"pub fn normalize(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Strips any trailing zero's from a `Decimal` and converts -0 to 0.","sig":null,"attributes":[{"value":"/ Strips any trailing zero's from a `Decimal` and converts -0 to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22684,"byte_end":22753,"line_start":684,"line_end":684,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22758,"byte_end":22761,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22766,"byte_end":22779,"line_start":686,"line_end":686,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22784,"byte_end":22787,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22792,"byte_end":22799,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22804,"byte_end":22834,"line_start":689,"line_end":689,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22839,"byte_end":22842,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let number = Decimal::new(3100, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22847,"byte_end":22886,"line_start":691,"line_end":691,"column_start":5,"column_end":44}},{"value":"/ // note that it returns a decimal, without the extra scale","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22891,"byte_end":22953,"line_start":692,"line_end":692,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(number.normalize().to_string(), \"3.1\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":22958,"byte_end":23012,"line_start":693,"line_end":693,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23017,"byte_end":23024,"line_start":694,"line_end":694,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24331,"byte_end":24336,"line_start":738,"line_end":738,"column_start":12,"column_end":17},"name":"round","qualname":"<Decimal>::round","value":"pub fn round(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with no fractional portion (i.e. an integer).\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with no fractional portion (i.e. an integer).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23800,"byte_end":23880,"line_start":724,"line_end":724,"column_start":5,"column_end":85}},{"value":"/ Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23885,"byte_end":23965,"line_start":725,"line_end":725,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23970,"byte_end":23973,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23978,"byte_end":23991,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":23996,"byte_end":23999,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24004,"byte_end":24011,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24016,"byte_end":24046,"line_start":730,"line_end":730,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24051,"byte_end":24054,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ // Demonstrating bankers rounding...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24059,"byte_end":24099,"line_start":732,"line_end":732,"column_start":5,"column_end":45}},{"value":"/ let number_down = Decimal::new(65, 1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24104,"byte_end":24146,"line_start":733,"line_end":733,"column_start":5,"column_end":47}},{"value":"/ let number_up   = Decimal::new(75, 1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24151,"byte_end":24193,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(number_down.round().to_string(), \"6\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24198,"byte_end":24251,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(number_up.round().to_string(), \"8\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24256,"byte_end":24307,"line_start":736,"line_end":736,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24312,"byte_end":24319,"line_start":737,"line_end":737,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":25037,"byte_end":25059,"line_start":759,"line_end":759,"column_start":12,"column_end":34},"name":"round_dp_with_strategy","qualname":"<Decimal>::round_dp_with_strategy","value":"pub fn round_dp_with_strategy(&Self, u32, RoundingStrategy) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional\n portion.\n Rounding is performed using the provided [`RoundingStrategy`]","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with the specified number of decimal points for fractional","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24393,"byte_end":24486,"line_start":742,"line_end":742,"column_start":5,"column_end":98}},{"value":"/ portion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24491,"byte_end":24503,"line_start":743,"line_end":743,"column_start":5,"column_end":17}},{"value":"/ Rounding is performed using the provided [`RoundingStrategy`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24508,"byte_end":24573,"line_start":744,"line_end":744,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24578,"byte_end":24581,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24586,"byte_end":24601,"line_start":746,"line_end":746,"column_start":5,"column_end":20}},{"value":"/ * `dp`: the number of decimal points to round to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24606,"byte_end":24659,"line_start":747,"line_end":747,"column_start":5,"column_end":58}},{"value":"/ * `strategy`: the [`RoundingStrategy`] to use.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24664,"byte_end":24714,"line_start":748,"line_end":748,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24719,"byte_end":24722,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24727,"byte_end":24740,"line_start":750,"line_end":750,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24745,"byte_end":24748,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24753,"byte_end":24760,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::{Decimal, RoundingStrategy};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24765,"byte_end":24815,"line_start":753,"line_end":753,"column_start":5,"column_end":55}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24820,"byte_end":24847,"line_start":754,"line_end":754,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24852,"byte_end":24855,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let tax = Decimal::from_str(\"3.4395\").unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24860,"byte_end":24911,"line_start":756,"line_end":756,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(tax.round_dp_with_strategy(2, RoundingStrategy::RoundHalfUp).to_string(), \"3.44\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":24916,"byte_end":25013,"line_start":757,"line_end":757,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":25018,"byte_end":25025,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30125,"byte_end":30133,"line_start":905,"line_end":905,"column_start":12,"column_end":20},"name":"round_dp","qualname":"<Decimal>::round_dp","value":"pub fn round_dp(&Self, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional portion.\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with the specified number of decimal points for fractional portion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29572,"byte_end":29674,"line_start":890,"line_end":890,"column_start":5,"column_end":107}},{"value":"/ Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29679,"byte_end":29759,"line_start":891,"line_end":891,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29764,"byte_end":29767,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29772,"byte_end":29787,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/ * `dp`: the number of decimal points to round to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29792,"byte_end":29845,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29850,"byte_end":29853,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29858,"byte_end":29871,"line_start":896,"line_end":896,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29876,"byte_end":29879,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29884,"byte_end":29891,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29896,"byte_end":29926,"line_start":899,"line_end":899,"column_start":5,"column_end":35}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29931,"byte_end":29958,"line_start":900,"line_end":900,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29963,"byte_end":29966,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_str(\"3.1415926535897932384626433832\").unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":29971,"byte_end":30045,"line_start":902,"line_end":902,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pi.round_dp(2).to_string(), \"3.14\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30050,"byte_end":30101,"line_start":903,"line_end":903,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30106,"byte_end":30113,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":31068,"byte_end":31074,"line_start":928,"line_end":928,"column_start":18,"column_end":24},"name":"unpack","qualname":"<Decimal>::unpack","value":"pub const fn unpack(&Self) -> UnpackedDecimal","parent":null,"children":[],"decl_id":null,"docs":" Convert `Decimal` to an internal representation of the underlying struct. This is useful\n for debugging the internal state of the object.","sig":null,"attributes":[{"value":"/ Convert `Decimal` to an internal representation of the underlying struct. This is useful","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30249,"byte_end":30341,"line_start":909,"line_end":909,"column_start":5,"column_end":97}},{"value":"/ for debugging the internal state of the object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30346,"byte_end":30397,"line_start":910,"line_end":910,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30402,"byte_end":30405,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Important Disclaimer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30410,"byte_end":30436,"line_start":912,"line_end":912,"column_start":5,"column_end":31}},{"value":"/ This is primarily intended for library maintainers. The internal representation of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30441,"byte_end":30529,"line_start":913,"line_end":913,"column_start":5,"column_end":93}},{"value":"/ `Decimal` is considered \"unstable\" for public use.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30534,"byte_end":30588,"line_start":914,"line_end":914,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30593,"byte_end":30596,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30601,"byte_end":30614,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30619,"byte_end":30622,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30627,"byte_end":30634,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30639,"byte_end":30669,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30674,"byte_end":30701,"line_start":920,"line_end":920,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30706,"byte_end":30709,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_str(\"3.1415926535897932384626433832\").unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30714,"byte_end":30788,"line_start":922,"line_end":922,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(format!(\"{:?}\", pi), \"3.1415926535897932384626433832\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30793,"byte_end":30863,"line_start":923,"line_end":923,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(format!(\"{:?}\", pi.unpack()), \"UnpackedDecimal { \\","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30868,"byte_end":30933,"line_start":924,"line_end":924,"column_start":5,"column_end":70}},{"value":"/     is_negative: false, scale: 28, hi: 1703060790, mid: 185874565, lo: 1102470952 \\","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":30938,"byte_end":31025,"line_start":925,"line_end":925,"column_start":5,"column_end":92}},{"value":"/ }\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":31030,"byte_end":31038,"line_start":926,"line_end":926,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":31043,"byte_end":31050,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":38169,"byte_end":38180,"line_start":1108,"line_end":1108,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Decimal>::checked_add","value":"pub fn checked_add(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked addition. Computes `self + other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked addition. Computes `self + other`, returning `None` if overflow occurred.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":38050,"byte_end":38135,"line_start":1106,"line_end":1106,"column_start":5,"column_end":90}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":38140,"byte_end":38157,"line_start":1107,"line_end":1107,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":40758,"byte_end":40769,"line_start":1185,"line_end":1185,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Decimal>::checked_sub","value":"pub fn checked_sub(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":40636,"byte_end":40724,"line_start":1183,"line_end":1183,"column_start":5,"column_end":93}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":40729,"byte_end":40746,"line_start":1184,"line_end":1184,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":41154,"byte_end":41165,"line_start":1197,"line_end":1197,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal>::checked_mul","value":"pub fn checked_mul(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":41037,"byte_end":41128,"line_start":1195,"line_end":1195,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":41133,"byte_end":41142,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":48552,"byte_end":48563,"line_start":1370,"line_end":1370,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Decimal>::checked_div","value":"pub fn checked_div(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the\n division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":48414,"byte_end":48502,"line_start":1368,"line_end":1368,"column_start":5,"column_end":93}},{"value":"/ division results in overflow.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":48507,"byte_end":48540,"line_start":1369,"line_end":1369,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":48898,"byte_end":48909,"line_start":1379,"line_end":1379,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Decimal>::checked_rem","value":"pub fn checked_rem(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.\n","sig":null,"attributes":[{"value":"/ Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":48803,"byte_end":48886,"line_start":1378,"line_end":1378,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":50931,"byte_end":50934,"line_start":1430,"line_end":1430,"column_start":12,"column_end":15},"name":"exp","qualname":"<Decimal>::exp","value":"pub fn exp(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" The estimated exponential function, e<sup>x</sup>, rounded to 8 decimal places. Stops\n calculating when it is within tolerance is roughly 0.000002 in order to prevent\n multiplication overflow.\n","sig":null,"attributes":[{"value":"/ The estimated exponential function, e<sup>x</sup>, rounded to 8 decimal places. Stops","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":50709,"byte_end":50798,"line_start":1427,"line_end":1427,"column_start":5,"column_end":94}},{"value":"/ calculating when it is within tolerance is roughly 0.000002 in order to prevent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":50803,"byte_end":50886,"line_start":1428,"line_end":1428,"column_start":5,"column_end":88}},{"value":"/ multiplication overflow.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":50891,"byte_end":50919,"line_start":1429,"line_end":1429,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51465,"byte_end":51483,"line_start":1441,"line_end":1441,"column_start":12,"column_end":30},"name":"exp_with_tolerance","qualname":"<Decimal>::exp_with_tolerance","value":"pub fn exp_with_tolerance(&Self, Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" The estimated exponential function, e<sup>x</sup>, rounded to 8 decimal places. Stops\n calculating when it is within `tolerance`.\n Multiplication overflows are likely if you are not careful with the size of `tolerance`.\n It is recommended to set the `tolerance` larger for larger numbers and smaller for smaller\n numbers to avoid multiplication overflow.\n","sig":null,"attributes":[{"value":"/ The estimated exponential function, e<sup>x</sup>, rounded to 8 decimal places. Stops","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51053,"byte_end":51142,"line_start":1435,"line_end":1435,"column_start":5,"column_end":94}},{"value":"/ calculating when it is within `tolerance`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51147,"byte_end":51193,"line_start":1436,"line_end":1436,"column_start":5,"column_end":51}},{"value":"/ Multiplication overflows are likely if you are not careful with the size of `tolerance`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51198,"byte_end":51290,"line_start":1437,"line_end":1437,"column_start":5,"column_end":97}},{"value":"/ It is recommended to set the `tolerance` larger for larger numbers and smaller for smaller","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51295,"byte_end":51389,"line_start":1438,"line_end":1438,"column_start":5,"column_end":99}},{"value":"/ numbers to avoid multiplication overflow.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51394,"byte_end":51439,"line_start":1439,"line_end":1439,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":51444,"byte_end":51453,"line_start":1440,"line_end":1440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":52306,"byte_end":52310,"line_start":1466,"line_end":1466,"column_start":12,"column_end":16},"name":"powi","qualname":"<Decimal>::powi","value":"pub fn powi(&Self, u64) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Raise self to the given unsigned integer exponent: x<sup>y</sup>\n","sig":null,"attributes":[{"value":"/ Raise self to the given unsigned integer exponent: x<sup>y</sup>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":52226,"byte_end":52294,"line_start":1465,"line_end":1465,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":53215,"byte_end":53219,"line_start":1491,"line_end":1491,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal>::sqrt","value":"pub fn sqrt(&Self) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" The square root of a Decimal. Uses a standard Babylonian method.\n","sig":null,"attributes":[{"value":"/ The square root of a Decimal. Uses a standard Babylonian method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":53135,"byte_end":53203,"line_start":1490,"line_end":1490,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":54152,"byte_end":54154,"line_start":1519,"line_end":1519,"column_start":12,"column_end":14},"name":"ln","qualname":"<Decimal>::ln","value":"pub fn ln(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" The natural logarithm for a Decimal. Uses a [fast estimation algorithm](https://en.wikipedia.org/wiki/Natural_logarithm#High_precision)\n This is more accurate on larger numbers and less on numbers less than 1.\n","sig":null,"attributes":[{"value":"/ The natural logarithm for a Decimal. Uses a [fast estimation algorithm](https://en.wikipedia.org/wiki/Natural_logarithm#High_precision)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":53920,"byte_end":54059,"line_start":1517,"line_end":1517,"column_start":5,"column_end":144}},{"value":"/ This is more accurate on larger numbers and less on numbers less than 1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":54064,"byte_end":54140,"line_start":1518,"line_end":1518,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":54766,"byte_end":54769,"line_start":1535,"line_end":1535,"column_start":12,"column_end":15},"name":"erf","qualname":"<Decimal>::erf","value":"pub fn erf(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Abramowitz Approximation of Error Function from [wikipedia](https://en.wikipedia.org/wiki/Error_function#Numerical_approximations)\n","sig":null,"attributes":[{"value":"/ Abramowitz Approximation of Error Function from [wikipedia](https://en.wikipedia.org/wiki/Error_function#Numerical_approximations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":54620,"byte_end":54754,"line_start":1534,"line_end":1534,"column_start":5,"column_end":139}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":55594,"byte_end":55602,"line_start":1554,"line_end":1554,"column_start":12,"column_end":20},"name":"norm_cdf","qualname":"<Decimal>::norm_cdf","value":"pub fn norm_cdf(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" The Cumulative distribution function for a Normal distribution\n","sig":null,"attributes":[{"value":"/ The Cumulative distribution function for a Normal distribution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":55516,"byte_end":55582,"line_start":1553,"line_end":1553,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":55805,"byte_end":55813,"line_start":1559,"line_end":1559,"column_start":12,"column_end":20},"name":"norm_pdf","qualname":"<Decimal>::norm_pdf","value":"pub fn norm_pdf(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" The Probability density function for a Normal distribution\n","sig":null,"attributes":[{"value":"/ The Probability density function for a Normal distribution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":55731,"byte_end":55793,"line_start":1558,"line_end":1558,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":56054,"byte_end":56068,"line_start":1569,"line_end":1569,"column_start":12,"column_end":26},"name":"from_str_radix","qualname":"<Decimal>::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":158955,"byte_end":158960,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":668}],"decl_id":null,"docs":" Error type for the library.\n","sig":null,"attributes":[{"value":"/ Error type for the library.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":158888,"byte_end":158919,"line_start":4,"line_end":4,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":529},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","byte_start":1585,"byte_end":1592,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6520,"byte_end":6527,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":56280,"byte_end":56287,"line_start":1578,"line_end":1578,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":78372,"byte_end":78377,"line_start":2254,"line_end":2254,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":81751,"byte_end":81756,"line_start":2355,"line_end":2355,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":116069,"byte_end":116076,"line_start":3234,"line_end":3234,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":116344,"byte_end":116351,"line_start":3249,"line_end":3249,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":116513,"byte_end":116520,"line_start":3260,"line_end":3260,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":131291,"byte_end":131298,"line_start":3722,"line_end":3722,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":131492,"byte_end":131499,"line_start":3730,"line_end":3730,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":131652,"byte_end":131659,"line_start":3738,"line_end":3738,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":136181,"byte_end":136188,"line_start":3886,"line_end":3886,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":138433,"byte_end":138440,"line_start":3961,"line_end":3961,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":138662,"byte_end":138669,"line_start":3969,"line_end":3969,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":140803,"byte_end":140810,"line_start":4048,"line_end":4048,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":141041,"byte_end":141048,"line_start":4055,"line_end":4055,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":142808,"byte_end":142815,"line_start":4102,"line_end":4102,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":142959,"byte_end":142966,"line_start":4108,"line_end":4108,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":143100,"byte_end":143107,"line_start":4114,"line_end":4114,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":143898,"byte_end":143905,"line_start":4151,"line_end":4151,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":144162,"byte_end":144169,"line_start":4161,"line_end":4161,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":144937,"byte_end":144944,"line_start":4193,"line_end":4193,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":145201,"byte_end":145208,"line_start":4203,"line_end":4203,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":145971,"byte_end":145978,"line_start":4235,"line_end":4235,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":146235,"byte_end":146242,"line_start":4245,"line_end":4245,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":147076,"byte_end":147083,"line_start":4277,"line_end":4277,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":147340,"byte_end":147347,"line_start":4287,"line_end":4287,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148099,"byte_end":148106,"line_start":4319,"line_end":4319,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148363,"byte_end":148370,"line_start":4329,"line_end":4329,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148799,"byte_end":148806,"line_start":4347,"line_end":4347,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148921,"byte_end":148928,"line_start":4354,"line_end":4354,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148947,"byte_end":148954,"line_start":4356,"line_end":4356,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":149175,"byte_end":149182,"line_start":4366,"line_end":4366,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":149316,"byte_end":149323,"line_start":4373,"line_end":4373,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":151010,"byte_end":151017,"line_start":4423,"line_end":4423,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":151225,"byte_end":151232,"line_start":4433,"line_end":4433,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":158992,"byte_end":158997,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":159398,"byte_end":159403,"line_start":23,"line_end":23,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":159495,"byte_end":159500,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","byte_start":159831,"byte_end":159838,"line_start":8,"line_end":8,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","byte_start":160895,"byte_end":160909,"line_start":43,"line_end":43,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","byte_start":164753,"byte_end":164760,"line_start":172,"line_end":172,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":6520,"byte_end":6527,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":56280,"byte_end":56287,"line_start":1578,"line_end":1578,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":78372,"byte_end":78377,"line_start":2254,"line_end":2254,"column_start":10,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":81751,"byte_end":81756,"line_start":2355,"line_end":2355,"column_start":10,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":116069,"byte_end":116076,"line_start":3234,"line_end":3234,"column_start":15,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":564},"to":{"krate":19,"index":497}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":116344,"byte_end":116351,"line_start":3249,"line_end":3249,"column_start":14,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":564},"to":{"krate":19,"index":507}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":116513,"byte_end":116520,"line_start":3260,"line_end":3260,"column_start":17,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":564},"to":{"krate":19,"index":898}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":131291,"byte_end":131298,"line_start":3722,"line_end":3722,"column_start":14,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":564},"to":{"krate":19,"index":923}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":131492,"byte_end":131499,"line_start":3730,"line_end":3730,"column_start":18,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":131652,"byte_end":131659,"line_start":3738,"line_end":3738,"column_start":24,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":564},"to":{"krate":19,"index":320}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":136181,"byte_end":136188,"line_start":3886,"line_end":3886,"column_start":22,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":564},"to":{"krate":19,"index":294}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":138433,"byte_end":138440,"line_start":3961,"line_end":3961,"column_start":38,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":138662,"byte_end":138669,"line_start":3969,"line_end":3969,"column_start":38,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":140803,"byte_end":140810,"line_start":4048,"line_end":4048,"column_start":23,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":141041,"byte_end":141048,"line_start":4055,"line_end":4055,"column_start":21,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":142808,"byte_end":142815,"line_start":4102,"line_end":4102,"column_start":24,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":8720}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":142959,"byte_end":142966,"line_start":4108,"line_end":4108,"column_start":24,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":8722}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":143100,"byte_end":143107,"line_start":4114,"line_end":4114,"column_start":14,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":143898,"byte_end":143905,"line_start":4151,"line_end":4151,"column_start":20,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":144162,"byte_end":144169,"line_start":4161,"line_end":4161,"column_start":37,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":144937,"byte_end":144944,"line_start":4193,"line_end":4193,"column_start":20,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":145201,"byte_end":145208,"line_start":4203,"line_end":4203,"column_start":37,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":145971,"byte_end":145978,"line_start":4235,"line_end":4235,"column_start":20,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2928}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":146235,"byte_end":146242,"line_start":4245,"line_end":4245,"column_start":37,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2928}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":147076,"byte_end":147083,"line_start":4277,"line_end":4277,"column_start":20,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":147340,"byte_end":147347,"line_start":4287,"line_end":4287,"column_start":37,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148099,"byte_end":148106,"line_start":4319,"line_end":4319,"column_start":20,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2936}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148363,"byte_end":148370,"line_start":4329,"line_end":4329,"column_start":37,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2936}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148799,"byte_end":148806,"line_start":4347,"line_end":4347,"column_start":20,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148921,"byte_end":148928,"line_start":4354,"line_end":4354,"column_start":13,"column_end":20},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":148947,"byte_end":148954,"line_start":4356,"line_end":4356,"column_start":15,"column_end":22},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":8907}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":149175,"byte_end":149182,"line_start":4366,"line_end":4366,"column_start":21,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":149316,"byte_end":149323,"line_start":4373,"line_end":4373,"column_start":14,"column_end":21},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":151010,"byte_end":151017,"line_start":4423,"line_end":4423,"column_start":14,"column_end":21},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":6957}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/decimal.rs","byte_start":151225,"byte_end":151232,"line_start":4433,"line_end":4433,"column_start":31,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":6957}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":158992,"byte_end":158997,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":159398,"byte_end":159403,"line_start":23,"line_end":23,"column_start":28,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":667},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/error.rs","byte_start":159495,"byte_end":159500,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","byte_start":159831,"byte_end":159838,"line_start":8,"line_end":8,"column_start":39,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":564},"to":{"krate":20,"index":1535}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","byte_start":160895,"byte_end":160909,"line_start":43,"line_end":43,"column_start":39,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":499},"to":{"krate":20,"index":1619}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.10.3/src/serde_types.rs","byte_start":164753,"byte_end":164760,"line_start":172,"line_end":172,"column_start":27,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":564},"to":{"krate":20,"index":2074}}]}