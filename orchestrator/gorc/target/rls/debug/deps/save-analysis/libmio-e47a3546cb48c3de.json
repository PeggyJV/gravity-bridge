{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","mio","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","--cfg","feature=\"os-util\"","--cfg","feature=\"tcp\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=e47a3546cb48c3de","-C","extra-filename=-e47a3546cb48c3de","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","libc=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/liblibc-79a05afd6422acd8.rmeta","--extern","log=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/liblog-fac7a9de76e9754d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libmio-e47a3546cb48c3de.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[980902961067663816,14858026113145421146]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","num":18,"id":{"name":"log","disambiguator":[9999652943946548626,13641826928383836309]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","num":19,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","num":20,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":0,"byte_end":9508,"line_start":1,"line_end":265,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","byte_start":52599,"byte_end":52604,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","byte_start":52629,"byte_end":52635,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":1041},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","byte_start":52637,"byte_end":52641,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","byte_start":52666,"byte_end":52672,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":0,"index":1190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235513,"byte_end":10235524,"line_start":11,"line_end":11,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1827},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235526,"byte_end":10235535,"line_start":11,"line_end":11,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235537,"byte_end":10235546,"line_start":11,"line_end":11,"column_start":45,"column_end":54},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1831},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235548,"byte_end":10235560,"line_start":11,"line_end":11,"column_start":56,"column_end":68},"alias_span":null,"name":"TcpKeepalive","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1481},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235592,"byte_end":10235601,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235659,"byte_end":10235669,"line_start":19,"line_end":19,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1581},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235671,"byte_end":10235683,"line_start":19,"line_end":19,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1673},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235685,"byte_end":10235697,"line_start":19,"line_end":19,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":1758},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235699,"byte_end":10235709,"line_start":19,"line_end":19,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1134}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1487,"byte_end":1493,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1513,"byte_end":1521,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1538,"byte_end":1542,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1544,"byte_end":1552,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1570,"byte_end":1575,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1570,"byte_end":1575,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1592,"byte_end":1597,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":946},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1891,"byte_end":1894,"line_start":81,"line_end":81,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":1007},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1896,"byte_end":1904,"line_start":81,"line_end":81,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":1003},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1906,"byte_end":1912,"line_start":81,"line_end":81,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1946,"byte_end":1954,"line_start":84,"line_end":84,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":248}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1946,"byte_end":1954,"line_start":84,"line_end":84,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":248}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":0,"byte_end":9508,"line_start":1,"line_end":265,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":41},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":129},{"krate":0,"index":1051},{"krate":0,"index":1134},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":54,"byte_end":174,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":361,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":441,"byte_end":521,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":522,"byte_end":572,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":573,"byte_end":576,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":577,"byte_end":588,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":589,"byte_end":592,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":593,"byte_end":672,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":673,"byte_end":750,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":751,"byte_end":754,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":755,"byte_end":789,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":790,"byte_end":793,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":794,"byte_end":831,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":832,"byte_end":879,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":880,"byte_end":883,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":884,"byte_end":899,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":900,"byte_end":903,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":904,"byte_end":981,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":982,"byte_end":994,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":995,"byte_end":998,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":999,"byte_end":1068,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1069,"byte_end":1072,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1073,"byte_end":1085,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1086,"byte_end":1089,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1090,"byte_end":1155,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1156,"byte_end":1159,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1160,"byte_end":1185,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1186,"byte_end":1189,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1190,"byte_end":1258,"line_start":42,"line_end":42,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11947,"byte_end":11955,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11308,"byte_end":11341,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11342,"byte_end":11345,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11346,"byte_end":11423,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11424,"byte_end":11503,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11504,"byte_end":11580,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11581,"byte_end":11632,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11633,"byte_end":11636,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11637,"byte_end":11692,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11693,"byte_end":11741,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11742,"byte_end":11772,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11773,"byte_end":11837,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":11838,"byte_end":11880,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":12488,"byte_end":12496,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":12412,"byte_end":12473,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":12647,"byte_end":12655,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":12571,"byte_end":12632,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13667,"byte_end":13670,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13216,"byte_end":13248,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13253,"byte_end":13256,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13261,"byte_end":13329,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13334,"byte_end":13356,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13361,"byte_end":13364,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13369,"byte_end":13376,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13381,"byte_end":13403,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13408,"byte_end":13411,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13416,"byte_end":13491,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13496,"byte_end":13546,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13551,"byte_end":13592,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13597,"byte_end":13604,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13609,"byte_end":13649,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14601,"byte_end":14607,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13803,"byte_end":13846,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13851,"byte_end":13854,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13859,"byte_end":13927,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13932,"byte_end":13935,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13940,"byte_end":13947,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13952,"byte_end":13974,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13979,"byte_end":13982,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":13987,"byte_end":14065,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14070,"byte_end":14073,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14078,"byte_end":14139,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14144,"byte_end":14214,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14219,"byte_end":14258,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14263,"byte_end":14301,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14306,"byte_end":14309,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14314,"byte_end":14376,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14381,"byte_end":14441,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14446,"byte_end":14449,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14454,"byte_end":14516,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14521,"byte_end":14577,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14582,"byte_end":14589,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14808,"byte_end":14819,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14732,"byte_end":14790,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14962,"byte_end":14973,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":14886,"byte_end":14944,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15111,"byte_end":15117,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15040,"byte_end":15093,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15250,"byte_end":15256,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15179,"byte_end":15232,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25249,"byte_end":25253,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":16955,"byte_end":17011,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17012,"byte_end":17015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17016,"byte_end":17092,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17093,"byte_end":17172,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17173,"byte_end":17251,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17252,"byte_end":17322,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17323,"byte_end":17337,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17338,"byte_end":17341,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17342,"byte_end":17420,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17421,"byte_end":17493,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17494,"byte_end":17569,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17570,"byte_end":17646,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17647,"byte_end":17724,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17725,"byte_end":17799,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17800,"byte_end":17842,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17843,"byte_end":17846,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17847,"byte_end":17895,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17896,"byte_end":17949,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":17950,"byte_end":18005,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18006,"byte_end":18060,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18061,"byte_end":18064,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18065,"byte_end":18079,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18080,"byte_end":18083,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18084,"byte_end":18145,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18146,"byte_end":18149,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18299,"byte_end":18327,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18328,"byte_end":18375,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18376,"byte_end":18421,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18422,"byte_end":18450,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18451,"byte_end":18454,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18455,"byte_end":18492,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18493,"byte_end":18496,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18497,"byte_end":18539,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18540,"byte_end":18590,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18591,"byte_end":18638,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18639,"byte_end":18642,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18643,"byte_end":18720,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18721,"byte_end":18753,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18754,"byte_end":18803,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18804,"byte_end":18807,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18808,"byte_end":18833,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18834,"byte_end":18897,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18898,"byte_end":18901,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18902,"byte_end":18940,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":18941,"byte_end":19035,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19036,"byte_end":19039,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19040,"byte_end":19116,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19117,"byte_end":19148,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19149,"byte_end":19159,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19160,"byte_end":19198,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19199,"byte_end":19202,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19203,"byte_end":19233,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19234,"byte_end":19299,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19300,"byte_end":19379,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19380,"byte_end":19406,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19407,"byte_end":19437,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19438,"byte_end":19451,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19452,"byte_end":19461,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19462,"byte_end":19467,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19468,"byte_end":19475,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19476,"byte_end":19483,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19484,"byte_end":19487,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19488,"byte_end":19505,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19506,"byte_end":19509,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19510,"byte_end":19586,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19587,"byte_end":19649,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19650,"byte_end":19653,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19654,"byte_end":19677,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19678,"byte_end":19681,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19682,"byte_end":19751,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19752,"byte_end":19821,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19822,"byte_end":19900,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19901,"byte_end":19975,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":19976,"byte_end":20011,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20012,"byte_end":20015,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20016,"byte_end":20092,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20093,"byte_end":20171,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20172,"byte_end":20185,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20186,"byte_end":20189,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20190,"byte_end":20216,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20217,"byte_end":20220,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20221,"byte_end":20296,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20297,"byte_end":20375,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20376,"byte_end":20454,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20455,"byte_end":20508,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20509,"byte_end":20512,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20513,"byte_end":20563,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20564,"byte_end":20567,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20568,"byte_end":20596,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20597,"byte_end":20600,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20601,"byte_end":20675,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20676,"byte_end":20754,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20755,"byte_end":20827,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20828,"byte_end":20902,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20903,"byte_end":20980,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":20981,"byte_end":21052,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21053,"byte_end":21124,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21125,"byte_end":21203,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21204,"byte_end":21278,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21279,"byte_end":21312,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21313,"byte_end":21316,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21317,"byte_end":21397,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21398,"byte_end":21467,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21468,"byte_end":21545,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21546,"byte_end":21592,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21593,"byte_end":21596,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21597,"byte_end":21659,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21660,"byte_end":21722,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21723,"byte_end":21779,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21780,"byte_end":21848,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21849,"byte_end":21919,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21920,"byte_end":21923,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21924,"byte_end":21951,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21952,"byte_end":21955,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":21956,"byte_end":22028,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22029,"byte_end":22106,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22107,"byte_end":22118,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22119,"byte_end":22122,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22123,"byte_end":22139,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22140,"byte_end":22143,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22293,"byte_end":22321,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22322,"byte_end":22341,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22342,"byte_end":22389,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22390,"byte_end":22427,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22428,"byte_end":22456,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22457,"byte_end":22486,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22487,"byte_end":22515,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22516,"byte_end":22536,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22537,"byte_end":22540,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22541,"byte_end":22594,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22595,"byte_end":22647,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22648,"byte_end":22711,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22712,"byte_end":22715,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22716,"byte_end":22758,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22759,"byte_end":22762,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22763,"byte_end":22791,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22792,"byte_end":22795,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22796,"byte_end":22874,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22875,"byte_end":22892,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22893,"byte_end":22985,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":22986,"byte_end":23002,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23003,"byte_end":23010,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23011,"byte_end":23018,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23019,"byte_end":23022,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23023,"byte_end":23046,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23047,"byte_end":23050,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23051,"byte_end":23129,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23130,"byte_end":23209,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23210,"byte_end":23290,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23291,"byte_end":23368,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23369,"byte_end":23413,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23414,"byte_end":23417,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23418,"byte_end":23464,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23465,"byte_end":23468,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23469,"byte_end":23495,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23496,"byte_end":23499,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23500,"byte_end":23570,"line_start":168,"line_end":168,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23571,"byte_end":23574,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23575,"byte_end":23608,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23609,"byte_end":23642,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23643,"byte_end":23676,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23677,"byte_end":23710,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23711,"byte_end":23744,"line_start":174,"line_end":174,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23745,"byte_end":23778,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23779,"byte_end":23812,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23813,"byte_end":23846,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/ | Solaris       | [epoll]   |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23847,"byte_end":23880,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23881,"byte_end":23914,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23915,"byte_end":23948,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23949,"byte_end":23982,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":23983,"byte_end":24016,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24017,"byte_end":24020,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24021,"byte_end":24095,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24096,"byte_end":24171,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24172,"byte_end":24245,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24246,"byte_end":24326,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24327,"byte_end":24355,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24356,"byte_end":24359,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24360,"byte_end":24438,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24439,"byte_end":24518,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24519,"byte_end":24599,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24600,"byte_end":24671,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24672,"byte_end":24752,"line_start":194,"line_end":194,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24753,"byte_end":24829,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24830,"byte_end":24841,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24842,"byte_end":24845,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24846,"byte_end":24908,"line_start":198,"line_end":198,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24909,"byte_end":24981,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":24982,"byte_end":25073,"line_start":200,"line_end":200,"column_start":1,"column_end":92}},{"value":"/ [`signalfd`]: http://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25074,"byte_end":25144,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25145,"byte_end":25188,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25189,"byte_end":25237,"line_start":203,"line_end":203,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25323,"byte_end":25331,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25283,"byte_end":25311,"line_start":208,"line_end":208,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25482,"byte_end":25490,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25382,"byte_end":25444,"line_start":214,"line_end":214,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25449,"byte_end":25470,"line_start":215,"line_end":215,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29412,"byte_end":29416,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25547,"byte_end":25576,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25581,"byte_end":25584,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25589,"byte_end":25664,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25669,"byte_end":25744,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25749,"byte_end":25822,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25827,"byte_end":25903,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25908,"byte_end":25972,"line_start":226,"line_end":226,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25977,"byte_end":25980,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25985,"byte_end":26062,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26067,"byte_end":26142,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26147,"byte_end":26220,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26225,"byte_end":26265,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26270,"byte_end":26273,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26278,"byte_end":26351,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26356,"byte_end":26432,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26437,"byte_end":26510,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26515,"byte_end":26589,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26594,"byte_end":26667,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26672,"byte_end":26706,"line_start":238,"line_end":238,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26711,"byte_end":26714,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26719,"byte_end":26785,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26790,"byte_end":26859,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26864,"byte_end":26923,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26928,"byte_end":26931,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":26936,"byte_end":27009,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27014,"byte_end":27026,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27031,"byte_end":27034,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27039,"byte_end":27087,"line_start":247,"line_end":247,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27092,"byte_end":27158,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27163,"byte_end":27229,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27234,"byte_end":27264,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27269,"byte_end":27321,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27326,"byte_end":27329,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27334,"byte_end":27345,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27350,"byte_end":27353,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27358,"byte_end":27432,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27437,"byte_end":27509,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27514,"byte_end":27544,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27549,"byte_end":27552,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27557,"byte_end":27571,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27576,"byte_end":27579,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27584,"byte_end":27645,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27650,"byte_end":27653,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27815,"byte_end":27843,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27848,"byte_end":27895,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27900,"byte_end":27945,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27950,"byte_end":27978,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27983,"byte_end":27986,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":27991,"byte_end":28035,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28040,"byte_end":28060,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28065,"byte_end":28068,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28073,"byte_end":28115,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28120,"byte_end":28170,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28175,"byte_end":28217,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28222,"byte_end":28266,"line_start":276,"line_end":276,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28271,"byte_end":28274,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28279,"byte_end":28321,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28326,"byte_end":28353,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28358,"byte_end":28390,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28395,"byte_end":28402,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28407,"byte_end":28410,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28415,"byte_end":28492,"line_start":283,"line_end":283,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28497,"byte_end":28529,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28534,"byte_end":28583,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28588,"byte_end":28591,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28596,"byte_end":28621,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28626,"byte_end":28673,"line_start":288,"line_end":288,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28678,"byte_end":28681,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28686,"byte_end":28724,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28729,"byte_end":28758,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28763,"byte_end":28783,"line_start":292,"line_end":292,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28788,"byte_end":28805,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28810,"byte_end":28860,"line_start":294,"line_end":294,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28865,"byte_end":28868,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28873,"byte_end":28949,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28954,"byte_end":28985,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":28990,"byte_end":29000,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29005,"byte_end":29043,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29048,"byte_end":29051,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29056,"byte_end":29086,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29091,"byte_end":29156,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29161,"byte_end":29240,"line_start":303,"line_end":303,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29245,"byte_end":29271,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29276,"byte_end":29306,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29311,"byte_end":29324,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29329,"byte_end":29338,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29343,"byte_end":29348,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29353,"byte_end":29360,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29365,"byte_end":29372,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29377,"byte_end":29380,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29385,"byte_end":29400,"line_start":312,"line_end":312,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":30846,"byte_end":30849,"line_start":353,"line_end":353,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35282,"byte_end":35290,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31290,"byte_end":31349,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31354,"byte_end":31357,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31362,"byte_end":31436,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31441,"byte_end":31516,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31521,"byte_end":31591,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31596,"byte_end":31599,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31604,"byte_end":31652,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31657,"byte_end":31660,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31665,"byte_end":31680,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31685,"byte_end":31688,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ `source: &S: event::Source`: This is the source of events that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31693,"byte_end":31763,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31768,"byte_end":31831,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31836,"byte_end":31839,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31844,"byte_end":31918,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31923,"byte_end":31997,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32002,"byte_end":32070,"line_start":390,"line_end":390,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32075,"byte_end":32144,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32149,"byte_end":32176,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32181,"byte_end":32184,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32189,"byte_end":32258,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32263,"byte_end":32284,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32289,"byte_end":32292,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32297,"byte_end":32371,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32376,"byte_end":32450,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32455,"byte_end":32486,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32491,"byte_end":32494,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32499,"byte_end":32574,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32579,"byte_end":32633,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32638,"byte_end":32641,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32646,"byte_end":32722,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32727,"byte_end":32757,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32762,"byte_end":32765,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32770,"byte_end":32781,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32786,"byte_end":32789,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32794,"byte_end":32865,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32870,"byte_end":32942,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":32947,"byte_end":33016,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/ `register` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33021,"byte_end":33058,"line_start":412,"line_end":412,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33063,"byte_end":33066,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33071,"byte_end":33146,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33151,"byte_end":33226,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33231,"byte_end":33304,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33309,"byte_end":33377,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33382,"byte_end":33401,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33406,"byte_end":33409,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33414,"byte_end":33462,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33467,"byte_end":33509,"line_start":421,"line_end":421,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33514,"byte_end":33572,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33577,"byte_end":33635,"line_start":423,"line_end":423,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33640,"byte_end":33672,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33677,"byte_end":33680,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33685,"byte_end":33699,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33704,"byte_end":33707,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33869,"byte_end":33897,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33902,"byte_end":33921,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33926,"byte_end":33973,"line_start":432,"line_end":432,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":33978,"byte_end":34023,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34028,"byte_end":34056,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34061,"byte_end":34090,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34095,"byte_end":34134,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34139,"byte_end":34142,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34147,"byte_end":34179,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34184,"byte_end":34187,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34192,"byte_end":34245,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34250,"byte_end":34302,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34307,"byte_end":34372,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34377,"byte_end":34380,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34385,"byte_end":34423,"line_start":444,"line_end":444,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34428,"byte_end":34457,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34462,"byte_end":34482,"line_start":446,"line_end":446,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34487,"byte_end":34504,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34509,"byte_end":34559,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34564,"byte_end":34567,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34572,"byte_end":34621,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34626,"byte_end":34657,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34662,"byte_end":34707,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34712,"byte_end":34715,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34720,"byte_end":34730,"line_start":454,"line_end":454,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34735,"byte_end":34773,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34778,"byte_end":34781,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34786,"byte_end":34817,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34822,"byte_end":34857,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34862,"byte_end":34888,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34893,"byte_end":34902,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34907,"byte_end":34910,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34915,"byte_end":34957,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":34962,"byte_end":35011,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35016,"byte_end":35019,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35024,"byte_end":35054,"line_start":465,"line_end":465,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35059,"byte_end":35101,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35106,"byte_end":35169,"line_start":467,"line_end":467,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35174,"byte_end":35204,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35209,"byte_end":35222,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35227,"byte_end":35236,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35241,"byte_end":35246,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35251,"byte_end":35258,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35263,"byte_end":35270,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37958,"byte_end":37968,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35628,"byte_end":35690,"line_start":486,"line_end":486,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35695,"byte_end":35698,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35703,"byte_end":35772,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35777,"byte_end":35850,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35855,"byte_end":35931,"line_start":490,"line_end":490,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35936,"byte_end":35939,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":35944,"byte_end":36019,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36024,"byte_end":36100,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36105,"byte_end":36180,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36185,"byte_end":36214,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36219,"byte_end":36222,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36227,"byte_end":36303,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36308,"byte_end":36359,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36364,"byte_end":36367,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36372,"byte_end":36441,"line_start":500,"line_end":500,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36446,"byte_end":36516,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36521,"byte_end":36533,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36538,"byte_end":36541,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36546,"byte_end":36560,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36565,"byte_end":36568,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36730,"byte_end":36758,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36763,"byte_end":36782,"line_start":509,"line_end":509,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36787,"byte_end":36834,"line_start":510,"line_end":510,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36839,"byte_end":36876,"line_start":511,"line_end":511,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36881,"byte_end":36909,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36914,"byte_end":36943,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36948,"byte_end":36951,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36956,"byte_end":36984,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36989,"byte_end":36992,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":36997,"byte_end":37050,"line_start":517,"line_end":517,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37055,"byte_end":37107,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37112,"byte_end":37177,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37182,"byte_end":37185,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37190,"byte_end":37249,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37254,"byte_end":37283,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37288,"byte_end":37308,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37313,"byte_end":37330,"line_start":524,"line_end":524,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37335,"byte_end":37364,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37369,"byte_end":37372,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37377,"byte_end":37452,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37457,"byte_end":37507,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37512,"byte_end":37543,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37548,"byte_end":37568,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37573,"byte_end":37590,"line_start":531,"line_end":531,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37595,"byte_end":37624,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37629,"byte_end":37645,"line_start":533,"line_end":533,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37650,"byte_end":37657,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37662,"byte_end":37669,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37674,"byte_end":37677,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37682,"byte_end":37730,"line_start":537,"line_end":537,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37735,"byte_end":37767,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37772,"byte_end":37826,"line_start":539,"line_end":539,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37831,"byte_end":37886,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":37891,"byte_end":37946,"line_start":541,"line_end":541,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40437,"byte_end":40447,"line_start":605,"line_end":605,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S: ?Sized>(&Self, &mut S) -> io::Result<()> where\nS: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38310,"byte_end":38371,"line_start":554,"line_end":554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38376,"byte_end":38379,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38384,"byte_end":38460,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38465,"byte_end":38536,"line_start":557,"line_end":557,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38541,"byte_end":38615,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38620,"byte_end":38692,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38697,"byte_end":38773,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38778,"byte_end":38851,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38856,"byte_end":38869,"line_start":562,"line_end":562,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38874,"byte_end":38877,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38882,"byte_end":38958,"line_start":564,"line_end":564,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":38963,"byte_end":39014,"line_start":565,"line_end":565,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39019,"byte_end":39022,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39027,"byte_end":39090,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39095,"byte_end":39167,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39172,"byte_end":39222,"line_start":569,"line_end":569,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39227,"byte_end":39230,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39235,"byte_end":39249,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39254,"byte_end":39257,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39419,"byte_end":39447,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39452,"byte_end":39471,"line_start":576,"line_end":576,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39476,"byte_end":39523,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39528,"byte_end":39573,"line_start":578,"line_end":578,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39578,"byte_end":39606,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39611,"byte_end":39640,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39645,"byte_end":39673,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39678,"byte_end":39681,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39686,"byte_end":39718,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39723,"byte_end":39726,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39731,"byte_end":39784,"line_start":585,"line_end":585,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39789,"byte_end":39841,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39846,"byte_end":39911,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39916,"byte_end":39919,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39924,"byte_end":39962,"line_start":589,"line_end":589,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":39967,"byte_end":39996,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40001,"byte_end":40021,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40026,"byte_end":40043,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40048,"byte_end":40077,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40082,"byte_end":40085,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40090,"byte_end":40135,"line_start":595,"line_end":595,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40140,"byte_end":40143,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40148,"byte_end":40197,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40202,"byte_end":40205,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40210,"byte_end":40281,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40286,"byte_end":40344,"line_start":600,"line_end":600,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40349,"byte_end":40380,"line_start":601,"line_end":601,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40385,"byte_end":40401,"line_start":602,"line_end":602,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40406,"byte_end":40413,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40418,"byte_end":40425,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40844,"byte_end":40853,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40644,"byte_end":40693,"line_start":613,"line_end":613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40698,"byte_end":40701,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40706,"byte_end":40779,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":40784,"byte_end":40832,"line_start":616,"line_end":616,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169323,"byte_end":10169331,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166655,"byte_end":10166727,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166728,"byte_end":10166731,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166732,"byte_end":10166801,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166802,"byte_end":10166805,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166806,"byte_end":10166879,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166880,"byte_end":10166958,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10166959,"byte_end":10167004,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167005,"byte_end":10167008,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167009,"byte_end":10167085,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167086,"byte_end":10167158,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167159,"byte_end":10167239,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167240,"byte_end":10167301,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167302,"byte_end":10167363,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167364,"byte_end":10167367,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167368,"byte_end":10167417,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167418,"byte_end":10167451,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167452,"byte_end":10167519,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167520,"byte_end":10167523,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167524,"byte_end":10167538,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167539,"byte_end":10167542,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167543,"byte_end":10167559,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167560,"byte_end":10167563,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167713,"byte_end":10167741,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167742,"byte_end":10167789,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167790,"byte_end":10167827,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167828,"byte_end":10167856,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167857,"byte_end":10167860,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167861,"byte_end":10167896,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167897,"byte_end":10167927,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167928,"byte_end":10167931,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167932,"byte_end":10167958,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10167959,"byte_end":10168012,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168013,"byte_end":10168016,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168017,"byte_end":10168045,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168046,"byte_end":10168049,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168050,"byte_end":10168078,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168079,"byte_end":10168108,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168109,"byte_end":10168154,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168155,"byte_end":10168172,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168173,"byte_end":10168202,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168203,"byte_end":10168219,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168220,"byte_end":10168227,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168228,"byte_end":10168235,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168236,"byte_end":10168239,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168240,"byte_end":10168315,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168316,"byte_end":10168319,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168475,"byte_end":10168523,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168524,"byte_end":10168552,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168553,"byte_end":10168556,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168557,"byte_end":10168590,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168591,"byte_end":10168607,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168608,"byte_end":10168611,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168612,"byte_end":10168637,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168638,"byte_end":10168659,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168660,"byte_end":10168678,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168679,"byte_end":10168684,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168685,"byte_end":10168688,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168689,"byte_end":10168722,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168723,"byte_end":10168809,"line_start":68,"line_end":68,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168810,"byte_end":10168839,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168840,"byte_end":10168849,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168850,"byte_end":10168917,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168918,"byte_end":10168927,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168928,"byte_end":10168931,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10168932,"byte_end":10169020,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169021,"byte_end":10169050,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169051,"byte_end":10169060,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169061,"byte_end":10169130,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169131,"byte_end":10169140,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169141,"byte_end":10169144,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169145,"byte_end":10169218,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169219,"byte_end":10169270,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169271,"byte_end":10169280,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169281,"byte_end":10169286,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169287,"byte_end":10169294,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169336,"byte_end":10169349,"line_start":86,"line_end":86,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204296,"byte_end":10204306,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10203930,"byte_end":10203990,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10203991,"byte_end":10203994,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10203995,"byte_end":10204071,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204072,"byte_end":10204148,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204149,"byte_end":10204193,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204194,"byte_end":10204197,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204198,"byte_end":10204253,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204254,"byte_end":10204284,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10206601,"byte_end":10206611,"line_start":83,"line_end":83,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10206543,"byte_end":10206585,"line_start":82,"line_end":82,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10207009,"byte_end":10207020,"line_start":96,"line_end":96,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":946},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219213,"byte_end":10219216,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"pub fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214576,"byte_end":10214616,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214617,"byte_end":10214620,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214621,"byte_end":10214699,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214700,"byte_end":10214750,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214751,"byte_end":10214754,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214755,"byte_end":10214835,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214836,"byte_end":10214916,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214917,"byte_end":10214942,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214943,"byte_end":10214946,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10214947,"byte_end":10215032,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215033,"byte_end":10215036,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215037,"byte_end":10215049,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215050,"byte_end":10215053,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215054,"byte_end":10215128,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215129,"byte_end":10215209,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215210,"byte_end":10215286,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215287,"byte_end":10215290,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215291,"byte_end":10215371,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215372,"byte_end":10215444,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215445,"byte_end":10215520,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215521,"byte_end":10215598,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215599,"byte_end":10215678,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215679,"byte_end":10215682,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215683,"byte_end":10215719,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215720,"byte_end":10215768,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215769,"byte_end":10215805,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215806,"byte_end":10215853,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215854,"byte_end":10215906,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215907,"byte_end":10215961,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215962,"byte_end":10215965,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215966,"byte_end":10215985,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215986,"byte_end":10215989,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10215990,"byte_end":10216063,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216064,"byte_end":10216133,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216134,"byte_end":10216137,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216138,"byte_end":10216221,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216222,"byte_end":10216225,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216226,"byte_end":10216240,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216241,"byte_end":10216244,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216245,"byte_end":10216322,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216323,"byte_end":10216341,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216342,"byte_end":10216345,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216346,"byte_end":10216353,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216354,"byte_end":10216391,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216392,"byte_end":10216395,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216396,"byte_end":10216441,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216442,"byte_end":10216466,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216467,"byte_end":10216470,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216471,"byte_end":10216524,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216525,"byte_end":10216563,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216564,"byte_end":10216602,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216603,"byte_end":10216606,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216607,"byte_end":10216642,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216643,"byte_end":10216704,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216705,"byte_end":10216737,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216738,"byte_end":10216784,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216785,"byte_end":10216788,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216789,"byte_end":10216814,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216815,"byte_end":10216865,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216866,"byte_end":10216869,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216870,"byte_end":10216911,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216912,"byte_end":10216988,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10216989,"byte_end":10217063,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217064,"byte_end":10217067,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217068,"byte_end":10217110,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217111,"byte_end":10217114,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217115,"byte_end":10217125,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217126,"byte_end":10217164,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217165,"byte_end":10217168,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217169,"byte_end":10217205,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217206,"byte_end":10217239,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217240,"byte_end":10217286,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217287,"byte_end":10217340,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217341,"byte_end":10217417,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217418,"byte_end":10217493,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217494,"byte_end":10217542,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217543,"byte_end":10217607,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217608,"byte_end":10217640,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217641,"byte_end":10217675,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217676,"byte_end":10217704,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217705,"byte_end":10217735,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217736,"byte_end":10217778,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217779,"byte_end":10217832,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217833,"byte_end":10217892,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217893,"byte_end":10217938,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217939,"byte_end":10217983,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10217984,"byte_end":10218018,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218019,"byte_end":10218037,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218038,"byte_end":10218074,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218075,"byte_end":10218088,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218089,"byte_end":10218098,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218099,"byte_end":10218104,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218105,"byte_end":10218112,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218113,"byte_end":10218120,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218121,"byte_end":10218124,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218125,"byte_end":10218189,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218190,"byte_end":10218193,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218194,"byte_end":10218201,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218202,"byte_end":10218220,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218221,"byte_end":10218226,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218227,"byte_end":10218274,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218275,"byte_end":10218301,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218302,"byte_end":10218307,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218308,"byte_end":10218348,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218349,"byte_end":10218389,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218390,"byte_end":10218395,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218396,"byte_end":10218431,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218432,"byte_end":10218474,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218475,"byte_end":10218507,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218508,"byte_end":10218554,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218555,"byte_end":10218558,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218559,"byte_end":10218609,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218610,"byte_end":10218613,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218614,"byte_end":10218690,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218691,"byte_end":10218765,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218766,"byte_end":10218769,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218770,"byte_end":10218793,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218794,"byte_end":10218811,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218812,"byte_end":10218815,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218816,"byte_end":10218850,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218851,"byte_end":10218854,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218855,"byte_end":10218887,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218888,"byte_end":10218917,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218918,"byte_end":10218970,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10218971,"byte_end":10219027,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219028,"byte_end":10219072,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219073,"byte_end":10219103,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219104,"byte_end":10219118,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219119,"byte_end":10219151,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219152,"byte_end":10219161,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219162,"byte_end":10219167,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219168,"byte_end":10219189,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219190,"byte_end":10219197,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10219198,"byte_end":10219205,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1003},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221190,"byte_end":10221196,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1004}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221070,"byte_end":10221102,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221103,"byte_end":10221106,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221107,"byte_end":10221161,"line_start":208,"line_end":208,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221313,"byte_end":10221328,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221247,"byte_end":10221301,"line_start":215,"line_end":215,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223631,"byte_end":10223639,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1008}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223509,"byte_end":10223543,"line_start":303,"line_end":303,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223544,"byte_end":10223547,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223548,"byte_end":10223602,"line_start":305,"line_end":305,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223760,"byte_end":10223775,"line_start":313,"line_end":313,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223692,"byte_end":10223748,"line_start":312,"line_end":312,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49293,"byte_end":49298,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44342,"byte_end":44398,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44399,"byte_end":44402,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44403,"byte_end":44472,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44473,"byte_end":44529,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44530,"byte_end":44533,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44534,"byte_end":44585,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44586,"byte_end":44589,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44590,"byte_end":44638,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44639,"byte_end":44669,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44670,"byte_end":44734,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44735,"byte_end":44803,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44804,"byte_end":44807,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44808,"byte_end":44821,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44822,"byte_end":44825,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44826,"byte_end":44903,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44904,"byte_end":44973,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44974,"byte_end":44977,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":44978,"byte_end":45021,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45022,"byte_end":45025,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45175,"byte_end":45203,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45204,"byte_end":45251,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45252,"byte_end":45297,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45298,"byte_end":45328,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45329,"byte_end":45332,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45333,"byte_end":45353,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45354,"byte_end":45384,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45385,"byte_end":45419,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45420,"byte_end":45423,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45424,"byte_end":45498,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45499,"byte_end":45533,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45534,"byte_end":45537,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45538,"byte_end":45616,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45617,"byte_end":45641,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45642,"byte_end":45682,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45683,"byte_end":45686,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45687,"byte_end":45720,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45721,"byte_end":45758,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45759,"byte_end":45762,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45763,"byte_end":45822,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45823,"byte_end":45857,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45858,"byte_end":45861,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45862,"byte_end":45888,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45889,"byte_end":45921,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45922,"byte_end":45925,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45926,"byte_end":45945,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":45946,"byte_end":46012,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46013,"byte_end":46016,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46017,"byte_end":46045,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46046,"byte_end":46121,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46122,"byte_end":46125,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46126,"byte_end":46200,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46201,"byte_end":46239,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46240,"byte_end":46267,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46268,"byte_end":46300,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46301,"byte_end":46304,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46305,"byte_end":46383,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46384,"byte_end":46421,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46422,"byte_end":46465,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46466,"byte_end":46520,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46521,"byte_end":46530,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46531,"byte_end":46538,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46539,"byte_end":46542,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46543,"byte_end":46563,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46564,"byte_end":46613,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46614,"byte_end":46617,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46618,"byte_end":46673,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46674,"byte_end":46701,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46702,"byte_end":46705,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46706,"byte_end":46732,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46733,"byte_end":46743,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46744,"byte_end":46770,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46771,"byte_end":46809,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46810,"byte_end":46813,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46814,"byte_end":46844,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46845,"byte_end":46878,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46879,"byte_end":46908,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46909,"byte_end":46982,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":46983,"byte_end":47018,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47019,"byte_end":47045,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47046,"byte_end":47095,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47096,"byte_end":47148,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47149,"byte_end":47203,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47204,"byte_end":47273,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47274,"byte_end":47324,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47325,"byte_end":47358,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47359,"byte_end":47362,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47363,"byte_end":47426,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47427,"byte_end":47496,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47497,"byte_end":47552,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47553,"byte_end":47556,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47557,"byte_end":47623,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47624,"byte_end":47722,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47723,"byte_end":47726,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47727,"byte_end":47778,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47779,"byte_end":47841,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47842,"byte_end":47871,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47872,"byte_end":47956,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":47957,"byte_end":48035,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48036,"byte_end":48074,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48075,"byte_end":48104,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48105,"byte_end":48180,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48181,"byte_end":48206,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48207,"byte_end":48228,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48229,"byte_end":48246,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48247,"byte_end":48273,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48274,"byte_end":48321,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48322,"byte_end":48348,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48349,"byte_end":48428,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48429,"byte_end":48467,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48468,"byte_end":48543,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48544,"byte_end":48599,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48600,"byte_end":48638,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48639,"byte_end":48668,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48669,"byte_end":48741,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48742,"byte_end":48794,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48795,"byte_end":48879,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48880,"byte_end":48956,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48957,"byte_end":48995,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":48996,"byte_end":49025,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49026,"byte_end":49101,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49102,"byte_end":49127,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49128,"byte_end":49149,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49150,"byte_end":49167,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49168,"byte_end":49181,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49182,"byte_end":49191,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49192,"byte_end":49197,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49198,"byte_end":49205,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49206,"byte_end":49213,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1013},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/token.rs","byte_start":49299,"byte_end":49308,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":1011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51973,"byte_end":51978,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1034}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49455,"byte_end":49504,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49505,"byte_end":49508,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49509,"byte_end":49582,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49583,"byte_end":49656,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49657,"byte_end":49660,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49661,"byte_end":49691,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49692,"byte_end":49754,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49755,"byte_end":49798,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49799,"byte_end":49802,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49803,"byte_end":49814,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49815,"byte_end":49818,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49819,"byte_end":49897,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49898,"byte_end":49911,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49912,"byte_end":49915,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49916,"byte_end":49994,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":49995,"byte_end":50068,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50069,"byte_end":50140,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50141,"byte_end":50155,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50156,"byte_end":50159,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50160,"byte_end":50186,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50187,"byte_end":50190,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50191,"byte_end":50265,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50266,"byte_end":50344,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50345,"byte_end":50384,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50385,"byte_end":50388,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50389,"byte_end":50464,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: http://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50465,"byte_end":50531,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50532,"byte_end":50535,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50536,"byte_end":50550,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50551,"byte_end":50554,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50555,"byte_end":50604,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50605,"byte_end":50608,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50712,"byte_end":50771,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50772,"byte_end":50792,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50793,"byte_end":50821,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50822,"byte_end":50845,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50846,"byte_end":50849,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50850,"byte_end":50892,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50893,"byte_end":50896,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50897,"byte_end":50937,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50938,"byte_end":50941,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50942,"byte_end":50974,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":50975,"byte_end":51021,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51022,"byte_end":51025,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51026,"byte_end":51093,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51094,"byte_end":51097,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51098,"byte_end":51169,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51170,"byte_end":51200,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51201,"byte_end":51232,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51233,"byte_end":51273,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51274,"byte_end":51317,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51318,"byte_end":51368,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51369,"byte_end":51372,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51373,"byte_end":51429,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51430,"byte_end":51477,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51478,"byte_end":51485,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51486,"byte_end":51489,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51490,"byte_end":51560,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51561,"byte_end":51595,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51596,"byte_end":51599,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51600,"byte_end":51679,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51680,"byte_end":51706,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51707,"byte_end":51739,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51740,"byte_end":51792,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51793,"byte_end":51832,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51833,"byte_end":51881,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51882,"byte_end":51911,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51912,"byte_end":51928,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51929,"byte_end":51936,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":51937,"byte_end":51944,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52061,"byte_end":52064,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52024,"byte_end":52049,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52398,"byte_end":52402,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52289,"byte_end":52343,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52348,"byte_end":52351,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52356,"byte_end":52386,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":161},{"krate":0,"index":193},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/mod.rs","byte_start":52465,"byte_end":52505,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1037},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53082,"byte_end":53087,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1038}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52716,"byte_end":52738,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52739,"byte_end":52742,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52743,"byte_end":52818,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52819,"byte_end":52838,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52839,"byte_end":52842,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52843,"byte_end":52906,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52907,"byte_end":52910,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52911,"byte_end":52962,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52963,"byte_end":52996,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":52997,"byte_end":53032,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53050,"byte_end":53070,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53175,"byte_end":53180,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53133,"byte_end":53163,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53319,"byte_end":53330,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53249,"byte_end":53307,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53474,"byte_end":53485,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53404,"byte_end":53462,"line_start":32,"line_end":32,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54487,"byte_end":54495,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53559,"byte_end":53614,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53619,"byte_end":53622,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53627,"byte_end":53702,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53707,"byte_end":53780,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53785,"byte_end":53835,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53840,"byte_end":53843,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53848,"byte_end":53859,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53864,"byte_end":53867,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53872,"byte_end":53947,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53952,"byte_end":53968,"line_start":46,"line_end":46,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53973,"byte_end":53976,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53981,"byte_end":54041,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54046,"byte_end":54049,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54054,"byte_end":54093,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54098,"byte_end":54137,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54142,"byte_end":54181,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54186,"byte_end":54259,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54264,"byte_end":54267,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54272,"byte_end":54331,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54336,"byte_end":54398,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54403,"byte_end":54475,"line_start":57,"line_end":57,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55808,"byte_end":55822,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54566,"byte_end":54627,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54632,"byte_end":54635,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54640,"byte_end":54651,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54656,"byte_end":54659,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54664,"byte_end":54737,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54742,"byte_end":54755,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54760,"byte_end":54823,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54828,"byte_end":54901,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54906,"byte_end":54925,"line_start":70,"line_end":70,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":54930,"byte_end":55004,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55009,"byte_end":55070,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55075,"byte_end":55078,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55083,"byte_end":55155,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55160,"byte_end":55228,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55233,"byte_end":55268,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55273,"byte_end":55276,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55281,"byte_end":55341,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55346,"byte_end":55349,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55354,"byte_end":55393,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55398,"byte_end":55437,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55442,"byte_end":55481,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55486,"byte_end":55536,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55541,"byte_end":55580,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55585,"byte_end":55588,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55593,"byte_end":55652,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55657,"byte_end":55719,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55724,"byte_end":55796,"line_start":88,"line_end":88,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57053,"byte_end":57068,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55899,"byte_end":55961,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55966,"byte_end":55969,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55974,"byte_end":55985,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55990,"byte_end":55993,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":55998,"byte_end":56067,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56072,"byte_end":56146,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56151,"byte_end":56154,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56159,"byte_end":56227,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56232,"byte_end":56267,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56272,"byte_end":56275,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56280,"byte_end":56352,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56357,"byte_end":56426,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56431,"byte_end":56466,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56471,"byte_end":56474,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56479,"byte_end":56539,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56544,"byte_end":56547,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56552,"byte_end":56591,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56596,"byte_end":56635,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56640,"byte_end":56679,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56684,"byte_end":56727,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56732,"byte_end":56781,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56786,"byte_end":56825,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56830,"byte_end":56833,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56838,"byte_end":56897,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56902,"byte_end":56964,"line_start":117,"line_end":117,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":56969,"byte_end":57041,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57839,"byte_end":57850,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57146,"byte_end":57204,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57209,"byte_end":57212,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57217,"byte_end":57228,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57233,"byte_end":57236,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57241,"byte_end":57316,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57321,"byte_end":57340,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57345,"byte_end":57348,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57353,"byte_end":57413,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57418,"byte_end":57421,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57426,"byte_end":57465,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57470,"byte_end":57509,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57514,"byte_end":57553,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57558,"byte_end":57597,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57602,"byte_end":57605,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57610,"byte_end":57669,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57674,"byte_end":57736,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57741,"byte_end":57813,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57818,"byte_end":57827,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58655,"byte_end":58661,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57924,"byte_end":57977,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57982,"byte_end":57985,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":57990,"byte_end":58001,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58006,"byte_end":58009,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58014,"byte_end":58090,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58095,"byte_end":58098,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58103,"byte_end":58163,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58168,"byte_end":58171,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58176,"byte_end":58215,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58220,"byte_end":58259,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58264,"byte_end":58303,"line_start":155,"line_end":155,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58308,"byte_end":58351,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58356,"byte_end":58359,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58364,"byte_end":58427,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58432,"byte_end":58435,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58440,"byte_end":58499,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58504,"byte_end":58566,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58571,"byte_end":58643,"line_start":162,"line_end":162,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58965,"byte_end":58971,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58730,"byte_end":58783,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58788,"byte_end":58791,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58796,"byte_end":58807,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58812,"byte_end":58815,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58820,"byte_end":58895,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":58900,"byte_end":58953,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61968,"byte_end":61974,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":172}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":60858,"byte_end":60895,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":60896,"byte_end":60899,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":60900,"byte_end":60975,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":60976,"byte_end":61053,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61054,"byte_end":61128,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61129,"byte_end":61171,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61172,"byte_end":61175,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61176,"byte_end":61227,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61228,"byte_end":61231,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61232,"byte_end":61283,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61284,"byte_end":61317,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61318,"byte_end":61321,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61322,"byte_end":61336,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61337,"byte_end":61340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61444,"byte_end":61472,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61473,"byte_end":61520,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61521,"byte_end":61549,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61550,"byte_end":61578,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61579,"byte_end":61582,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61583,"byte_end":61632,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61633,"byte_end":61665,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61666,"byte_end":61671,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61672,"byte_end":61705,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61706,"byte_end":61709,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61710,"byte_end":61755,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61756,"byte_end":61759,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61760,"byte_end":61822,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61823,"byte_end":61826,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61827,"byte_end":61859,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61860,"byte_end":61917,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61918,"byte_end":61923,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61924,"byte_end":61940,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61941,"byte_end":61948,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":61949,"byte_end":61956,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1041},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62807,"byte_end":62811,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62004,"byte_end":62028,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62029,"byte_end":62032,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62033,"byte_end":62097,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62098,"byte_end":62101,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62102,"byte_end":62136,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62137,"byte_end":62181,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62182,"byte_end":62185,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62186,"byte_end":62200,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62201,"byte_end":62204,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62308,"byte_end":62336,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62337,"byte_end":62384,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62385,"byte_end":62413,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62414,"byte_end":62442,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62443,"byte_end":62446,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62447,"byte_end":62496,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62497,"byte_end":62529,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62530,"byte_end":62533,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62534,"byte_end":62570,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62571,"byte_end":62574,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62575,"byte_end":62637,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62638,"byte_end":62641,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62642,"byte_end":62674,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62675,"byte_end":62732,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62733,"byte_end":62738,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62739,"byte_end":62755,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62756,"byte_end":62763,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62764,"byte_end":62771,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63146,"byte_end":63159,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62878,"byte_end":62947,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62952,"byte_end":62955,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62960,"byte_end":62974,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62979,"byte_end":62982,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62987,"byte_end":62994,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62999,"byte_end":63019,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63024,"byte_end":63027,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63032,"byte_end":63077,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63082,"byte_end":63122,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63127,"byte_end":63134,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63518,"byte_end":63526,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63284,"byte_end":63346,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63351,"byte_end":63354,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63359,"byte_end":63366,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63371,"byte_end":63391,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63396,"byte_end":63399,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63404,"byte_end":63449,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63454,"byte_end":63494,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63499,"byte_end":63506,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63832,"byte_end":63840,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63586,"byte_end":63642,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63647,"byte_end":63650,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63655,"byte_end":63669,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63674,"byte_end":63677,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63682,"byte_end":63689,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63694,"byte_end":63714,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63719,"byte_end":63722,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63727,"byte_end":63772,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63777,"byte_end":63808,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63813,"byte_end":63820,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64641,"byte_end":64645,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63899,"byte_end":63947,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63952,"byte_end":63955,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63960,"byte_end":63974,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":63979,"byte_end":63982,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64098,"byte_end":64126,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64131,"byte_end":64178,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64183,"byte_end":64211,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64216,"byte_end":64244,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64249,"byte_end":64252,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64257,"byte_end":64306,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64311,"byte_end":64343,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64348,"byte_end":64351,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64356,"byte_end":64392,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64397,"byte_end":64400,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64405,"byte_end":64467,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64472,"byte_end":64475,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64480,"byte_end":64512,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64517,"byte_end":64574,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64579,"byte_end":64584,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64589,"byte_end":64605,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64610,"byte_end":64617,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64622,"byte_end":64629,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65613,"byte_end":65618,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64748,"byte_end":64806,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64811,"byte_end":64814,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64819,"byte_end":64830,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64835,"byte_end":64838,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64843,"byte_end":64916,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64921,"byte_end":64939,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64944,"byte_end":64947,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64952,"byte_end":64966,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":64971,"byte_end":64974,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65090,"byte_end":65118,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65123,"byte_end":65170,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65175,"byte_end":65203,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65208,"byte_end":65236,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65241,"byte_end":65244,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65249,"byte_end":65298,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65303,"byte_end":65335,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65340,"byte_end":65343,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65348,"byte_end":65384,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65389,"byte_end":65392,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65397,"byte_end":65459,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65464,"byte_end":65467,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65472,"byte_end":65496,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65501,"byte_end":65520,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65525,"byte_end":65556,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65561,"byte_end":65577,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65582,"byte_end":65589,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65594,"byte_end":65601,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":207},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69198,"byte_end":69204,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66649,"byte_end":66710,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66711,"byte_end":66714,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66715,"byte_end":66778,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66779,"byte_end":66852,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66853,"byte_end":66931,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66932,"byte_end":66944,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66945,"byte_end":66948,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66949,"byte_end":66987,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66988,"byte_end":66991,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":66992,"byte_end":67033,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67034,"byte_end":67037,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67038,"byte_end":67072,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67073,"byte_end":67076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67077,"byte_end":67156,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67157,"byte_end":67231,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67232,"byte_end":67309,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67310,"byte_end":67389,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67390,"byte_end":67407,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67408,"byte_end":67411,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67412,"byte_end":67459,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67460,"byte_end":67506,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67507,"byte_end":67510,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67511,"byte_end":67542,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67543,"byte_end":67546,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67547,"byte_end":67626,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67627,"byte_end":67705,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67706,"byte_end":67785,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67786,"byte_end":67861,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67862,"byte_end":67919,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67920,"byte_end":67923,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67924,"byte_end":67985,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67986,"byte_end":67989,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":67990,"byte_end":68004,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68005,"byte_end":68008,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68009,"byte_end":68067,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68068,"byte_end":68071,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68221,"byte_end":68262,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68263,"byte_end":68290,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68291,"byte_end":68319,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68320,"byte_end":68323,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68324,"byte_end":68340,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68341,"byte_end":68344,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68345,"byte_end":68370,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68371,"byte_end":68396,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68397,"byte_end":68423,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68424,"byte_end":68429,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68430,"byte_end":68433,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68434,"byte_end":68464,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68465,"byte_end":68551,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68552,"byte_end":68581,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68582,"byte_end":68591,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68592,"byte_end":68647,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68648,"byte_end":68708,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68709,"byte_end":68718,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68719,"byte_end":68722,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68723,"byte_end":68811,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68812,"byte_end":68841,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68842,"byte_end":68851,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68852,"byte_end":68909,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68910,"byte_end":68972,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68973,"byte_end":68982,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68983,"byte_end":68986,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":68987,"byte_end":69060,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69061,"byte_end":69118,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69119,"byte_end":69163,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69164,"byte_end":69173,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69174,"byte_end":69179,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69180,"byte_end":69187,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69556,"byte_end":69564,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69211,"byte_end":69266,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69271,"byte_end":69274,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69279,"byte_end":69354,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69359,"byte_end":69434,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69439,"byte_end":69468,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69473,"byte_end":69476,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69481,"byte_end":69548,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70059,"byte_end":70069,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69695,"byte_end":69753,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69758,"byte_end":69761,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69766,"byte_end":69818,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69823,"byte_end":69887,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69892,"byte_end":69967,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69972,"byte_end":69975,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":69980,"byte_end":70051,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70555,"byte_end":70565,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70200,"byte_end":70257,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70262,"byte_end":70265,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70270,"byte_end":70322,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70327,"byte_end":70391,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70396,"byte_end":70463,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70468,"byte_end":70471,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70476,"byte_end":70547,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1134},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1824}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/macros.rs","byte_start":10432,"byte_end":10455,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235122,"byte_end":10235148,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235149,"byte_end":10235152,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235153,"byte_end":10235226,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235227,"byte_end":10235305,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235306,"byte_end":10235384,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235385,"byte_end":10235416,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235417,"byte_end":10235420,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/mod.rs","byte_start":10235421,"byte_end":10235482,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237021,"byte_end":10237032,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1191}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236222,"byte_end":10236266,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236267,"byte_end":10236270,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236271,"byte_end":10236285,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236286,"byte_end":10236289,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236393,"byte_end":10236421,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236422,"byte_end":10236469,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236470,"byte_end":10236515,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236516,"byte_end":10236546,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236547,"byte_end":10236575,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236576,"byte_end":10236579,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236580,"byte_end":10236650,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236651,"byte_end":10236654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236655,"byte_end":10236687,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236688,"byte_end":10236736,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236737,"byte_end":10236740,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236741,"byte_end":10236779,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236780,"byte_end":10236855,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236856,"byte_end":10236859,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236860,"byte_end":10236922,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236923,"byte_end":10236926,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236927,"byte_end":10236976,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236977,"byte_end":10236993,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10236994,"byte_end":10237001,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237002,"byte_end":10237009,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237526,"byte_end":10237530,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237100,"byte_end":10237174,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237179,"byte_end":10237210,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237215,"byte_end":10237218,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237223,"byte_end":10237271,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237276,"byte_end":10237279,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237284,"byte_end":10237315,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237320,"byte_end":10237379,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237384,"byte_end":10237432,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237437,"byte_end":10237514,"line_start":51,"line_end":51,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238582,"byte_end":10238590,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238232,"byte_end":10238299,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238304,"byte_end":10238307,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238312,"byte_end":10238384,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238389,"byte_end":10238463,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238468,"byte_end":10238540,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238545,"byte_end":10238570,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239105,"byte_end":10239111,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238723,"byte_end":10238753,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238758,"byte_end":10238761,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238766,"byte_end":10238817,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238822,"byte_end":10238898,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238903,"byte_end":10238976,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238981,"byte_end":10238984,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10238989,"byte_end":10239061,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239066,"byte_end":10239093,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239377,"byte_end":10239387,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239311,"byte_end":10239365,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239651,"byte_end":10239658,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239466,"byte_end":10239524,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239529,"byte_end":10239532,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239537,"byte_end":10239613,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239618,"byte_end":10239639,"line_start":103,"line_end":103,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239928,"byte_end":10239931,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239739,"byte_end":10239797,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239802,"byte_end":10239805,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239810,"byte_end":10239876,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239881,"byte_end":10239884,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239889,"byte_end":10239916,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240249,"byte_end":10240259,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10239996,"byte_end":10240054,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240059,"byte_end":10240062,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240067,"byte_end":10240141,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240146,"byte_end":10240222,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240227,"byte_end":10240237,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1827},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242985,"byte_end":10242994,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":1828}],"decl_id":null,"docs":" A non-blocking TCP socket used to configure a stream or listener.","sig":null,"attributes":[{"value":"/ A non-blocking TCP socket used to configure a stream or listener.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242626,"byte_end":10242695,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242696,"byte_end":10242699,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `TcpSocket` type wraps the operating-system's socket handle. This type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242700,"byte_end":10242778,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ is used to configure the socket before establishing a connection or start","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242779,"byte_end":10242856,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ listening for inbound connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242857,"byte_end":10242895,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242896,"byte_end":10242899,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10242900,"byte_end":10242956,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1831},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243126,"byte_end":10243138,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::net::tcp::socket::TcpKeepalive","value":"TcpKeepalive {  }","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834}],"decl_id":null,"docs":" Configures a socket's TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Configures a socket's TCP keepalive parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243030,"byte_end":10243081,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243738,"byte_end":10243744,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv4 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv4 TCP socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243653,"byte_end":10243686,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243691,"byte_end":10243694,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243699,"byte_end":10243726,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243933,"byte_end":10243939,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv6 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv6 TCP socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243848,"byte_end":10243881,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243886,"byte_end":10243889,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243894,"byte_end":10243921,"line_start":58,"line_end":58,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244291,"byte_end":10244295,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind `addr` to the TCP socket.\n","sig":null,"attributes":[{"value":"/ Bind `addr` to the TCP socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244245,"byte_end":10244279,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244630,"byte_end":10244637,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub fn connect(Self, SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Connect the socket to `addr`.","sig":null,"attributes":[{"value":"/ Connect the socket to `addr`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244391,"byte_end":10244424,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244429,"byte_end":10244432,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This consumes the socket and performs the connect operation. Once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244437,"byte_end":10244510,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ connection completes, the socket is now a non-blocking `TcpStream` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244515,"byte_end":10244589,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ can be used as such.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244594,"byte_end":10244618,"line_start":80,"line_end":80,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244956,"byte_end":10244962,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Listen for inbound connections, converting the socket to a\n `TcpListener`.\n","sig":null,"attributes":[{"value":"/ Listen for inbound connections, converting the socket to a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244859,"byte_end":10244921,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ `TcpListener`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10244926,"byte_end":10244944,"line_start":90,"line_end":90,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245254,"byte_end":10245267,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEADDR` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEADDR` on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245190,"byte_end":10245242,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245443,"byte_end":10245456,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"get_reuseaddr","qualname":"<TcpSocket>::get_reuseaddr","value":"pub fn get_reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_REUSEADDR` set on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of `SO_REUSEADDR` set on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245376,"byte_end":10245431,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245722,"byte_end":10245735,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEPORT` on this socket.\n Only supported available in unix\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEPORT` on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245539,"byte_end":10245591,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/ Only supported available in unix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245596,"byte_end":10245632,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"cfg(all(unix, not(any(target_os = \"solaris\", target_os = \"illumos\"))))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245637,"byte_end":10245710,"line_start":111,"line_end":111,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246030,"byte_end":10246043,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"get_reuseport","qualname":"<TcpSocket>::get_reuseport","value":"pub fn get_reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_REUSEPORT` set on this socket.\n Only supported available in unix\n","sig":null,"attributes":[{"value":"/ Get the value of `SO_REUSEPORT` set on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245844,"byte_end":10245899,"line_start":116,"line_end":116,"column_start":5,"column_end":60}},{"value":"/ Only supported available in unix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245904,"byte_end":10245940,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"cfg(all(unix, not(any(target_os = \"solaris\", target_os = \"illumos\"))))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10245945,"byte_end":10246018,"line_start":118,"line_end":118,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246187,"byte_end":10246197,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpSocket>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_LINGER` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_LINGER` on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246126,"byte_end":10246175,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246363,"byte_end":10246373,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"get_linger","qualname":"<TcpSocket>::get_linger","value":"pub fn get_linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of `SO_LINGER` on this socket\n","sig":null,"attributes":[{"value":"/ Gets the value of `SO_LINGER` on this socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246303,"byte_end":10246351,"line_start":128,"line_end":128,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246526,"byte_end":10246546,"line_start":134,"line_end":134,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_RCVBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_RCVBUF` on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246465,"byte_end":10246514,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247773,"byte_end":10247793,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"get_recv_buffer_size","qualname":"<TcpSocket>::get_recv_buffer_size","value":"pub fn get_recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_RCVBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_RCVBUF` set on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246651,"byte_end":10246703,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246708,"byte_end":10246711,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246716,"byte_end":10246788,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246793,"byte_end":10246867,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_recv_buffer_size`. This is for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246872,"byte_end":10246940,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246945,"byte_end":10246967,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246972,"byte_end":10246975,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10246980,"byte_end":10247055,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247060,"byte_end":10247134,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247139,"byte_end":10247215,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247220,"byte_end":10247239,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247244,"byte_end":10247319,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247324,"byte_end":10247399,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247404,"byte_end":10247420,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket receive buffer in bytes. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247425,"byte_end":10247493,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247498,"byte_end":10247563,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247568,"byte_end":10247640,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247645,"byte_end":10247690,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247695,"byte_end":10247698,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247703,"byte_end":10247761,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247943,"byte_end":10247963,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_SNDBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_SNDBUF` on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10247882,"byte_end":10247931,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249187,"byte_end":10249207,"line_start":187,"line_end":187,"column_start":12,"column_end":32},"name":"get_send_buffer_size","qualname":"<TcpSocket>::get_send_buffer_size","value":"pub fn get_send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_SNDBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_SNDBUF` set on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248068,"byte_end":10248120,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248125,"byte_end":10248128,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248133,"byte_end":10248205,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248210,"byte_end":10248284,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248289,"byte_end":10248357,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248362,"byte_end":10248384,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248389,"byte_end":10248392,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248397,"byte_end":10248472,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248477,"byte_end":10248551,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248556,"byte_end":10248632,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248637,"byte_end":10248656,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248661,"byte_end":10248736,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248741,"byte_end":10248816,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248821,"byte_end":10248837,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248842,"byte_end":10248907,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248912,"byte_end":10248977,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10248982,"byte_end":10249054,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249059,"byte_end":10249104,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249109,"byte_end":10249112,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249117,"byte_end":10249175,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249454,"byte_end":10249467,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpSocket>::set_keepalive","value":"pub fn set_keepalive(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249296,"byte_end":10249370,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249375,"byte_end":10249378,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This will set the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249383,"byte_end":10249442,"line_start":193,"line_end":193,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249664,"byte_end":10249677,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"get_keepalive","qualname":"<TcpSocket>::get_keepalive","value":"pub fn get_keepalive(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not TCP keepalive probes will be sent by this socket.\n","sig":null,"attributes":[{"value":"/ Returns whether or not TCP keepalive probes will be sent by this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249576,"byte_end":10249652,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251473,"byte_end":10251493,"line_start":240,"line_end":240,"column_start":12,"column_end":32},"name":"set_keepalive_params","qualname":"<TcpSocket>::set_keepalive_params","value":"pub fn set_keepalive_params(&Self, TcpKeepalive) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets parameters configuring TCP keepalive probes for this socket.","sig":null,"attributes":[{"value":"/ Sets parameters configuring TCP keepalive probes for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249760,"byte_end":10249829,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249834,"byte_end":10249837,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The supported parameters depend on the operating system, and are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249842,"byte_end":10249910,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ configured using the [`TcpKeepalive`] struct. At a minimum, all systems","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249915,"byte_end":10249990,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ support configuring the [keepalive time]: the time after which the OS","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10249995,"byte_end":10250068,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ will start sending keepalive messages on an idle connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250073,"byte_end":10250137,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250142,"byte_end":10250145,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250150,"byte_end":10250161,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250166,"byte_end":10250169,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ * This will enable TCP keepalive on this socket, if it is not already","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250174,"byte_end":10250247,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/   enabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250252,"byte_end":10250266,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ * On some platforms, such as Windows, any keepalive parameters *not*","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250271,"byte_end":10250343,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/   configured by the `TcpKeepalive` struct passed to this function may be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250348,"byte_end":10250424,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/   overwritten with their default values. Therefore, this function should","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250429,"byte_end":10250505,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/   either only be called once per socket, or the same parameters should","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250510,"byte_end":10250584,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/   be passed every time it is called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250589,"byte_end":10250629,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250634,"byte_end":10250637,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250642,"byte_end":10250656,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/ use mio::net::{TcpSocket, TcpKeepalive};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250772,"byte_end":10250816,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250821,"byte_end":10250849,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250854,"byte_end":10250857,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250862,"byte_end":10250909,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ let socket = TcpSocket::new_v6()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250914,"byte_end":10250952,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/ let keepalive = TcpKeepalive::default()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10250957,"byte_end":10251000,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     .with_time(Duration::from_secs(4));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251005,"byte_end":10251048,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/     // Depending on the target operating system, we may also be able to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251053,"byte_end":10251128,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/     // configure the keepalive probe interval and/or the number of retries","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251133,"byte_end":10251211,"line_start":231,"line_end":231,"column_start":5,"column_end":83}},{"value":"/     // here as well.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251216,"byte_end":10251240,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251245,"byte_end":10251248,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ socket.set_keepalive_params(keepalive)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251253,"byte_end":10251297,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251302,"byte_end":10251316,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251321,"byte_end":10251328,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251333,"byte_end":10251336,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`TcpKeepalive`]: ../struct.TcpKeepalive.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251341,"byte_end":10251390,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"/ [keepalive time]: ../struct.TcpKeepalive.html#method.with_time","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251395,"byte_end":10251461,"line_start":239,"line_end":239,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252373,"byte_end":10252391,"line_start":259,"line_end":259,"column_start":12,"column_end":30},"name":"get_keepalive_time","qualname":"<TcpSocket>::get_keepalive_time","value":"pub fn get_keepalive_time(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time after which TCP keepalive probes will be sent\n on idle connections.","sig":null,"attributes":[{"value":"/ Returns the amount of time after which TCP keepalive probes will be sent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251652,"byte_end":10251728,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ on idle connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251733,"byte_end":10251757,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251762,"byte_end":10251765,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ If `None`, then keepalive messages are disabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251770,"byte_end":10251822,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251827,"byte_end":10251830,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `SO_KEEPALIVE` + `IPPROTO_TCP` on OpenBSD,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251835,"byte_end":10251907,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ NetBSD, and Haiku, `TCP_KEEPALIVE` on macOS and iOS, and `TCP_KEEPIDLE`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251912,"byte_end":10251987,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ on all other Unix operating systems. On Windows, it is not possible to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10251992,"byte_end":10252066,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ access the value of TCP keepalive parameters after they have been set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252071,"byte_end":10252145,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252150,"byte_end":10252153,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252158,"byte_end":10252221,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252226,"byte_end":10252260,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"cfg(not(target_os = \"windows\"))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252327,"byte_end":10252361,"line_start":258,"line_end":258,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253418,"byte_end":10253440,"line_start":291,"line_end":291,"column_start":12,"column_end":34},"name":"get_keepalive_interval","qualname":"<TcpSocket>::get_keepalive_interval","value":"pub fn get_keepalive_interval(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the time interval between TCP keepalive probes, if TCP keepalive is\n enabled on this socket.","sig":null,"attributes":[{"value":"/ Returns the time interval between TCP keepalive probes, if TCP keepalive is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252491,"byte_end":10252570,"line_start":263,"line_end":263,"column_start":5,"column_end":84}},{"value":"/ enabled on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252575,"byte_end":10252602,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252607,"byte_end":10252610,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ If `None`, then keepalive messages are disabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252615,"byte_end":10252667,"line_start":266,"line_end":266,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252672,"byte_end":10252675,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `TCP_KEEPINTVL` on supported Unix operating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252680,"byte_end":10252753,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ systems. On Windows, it is not possible to access the value of TCP","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252758,"byte_end":10252828,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ keepalive parameters after they have been set..","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252833,"byte_end":10252884,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252889,"byte_end":10252892,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252897,"byte_end":10252960,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10252965,"byte_end":10252999,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\",))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253242,"byte_end":10253406,"line_start":284,"line_end":290,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254411,"byte_end":10254432,"line_start":320,"line_end":320,"column_start":12,"column_end":33},"name":"get_keepalive_retries","qualname":"<TcpSocket>::get_keepalive_retries","value":"pub fn get_keepalive_retries(&Self) -> io::Result<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of TCP keepalive probes that will be sent before\n dropping a connection, if TCP keepalive is enabled on this socket.","sig":null,"attributes":[{"value":"/ Returns the maximum number of TCP keepalive probes that will be sent before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253544,"byte_end":10253623,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ dropping a connection, if TCP keepalive is enabled on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253628,"byte_end":10253698,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253703,"byte_end":10253706,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `None`, then keepalive messages are disabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253711,"byte_end":10253763,"line_start":298,"line_end":298,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253768,"byte_end":10253771,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `TCP_KEEPCNT` on Unix operating systems that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253776,"byte_end":10253850,"line_start":300,"line_end":300,"column_start":5,"column_end":79}},{"value":"/ support this option. On Windows, it is not possible to access the value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253855,"byte_end":10253930,"line_start":301,"line_end":301,"column_start":5,"column_end":80}},{"value":"/ of TCP keepalive parameters after they have been set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10253935,"byte_end":10253992,"line_start":302,"line_end":302,"column_start":5,"column_end":62}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\",))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254235,"byte_end":10254399,"line_start":313,"line_end":319,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254670,"byte_end":10254683,"line_start":327,"line_end":327,"column_start":12,"column_end":25},"name":"get_localaddr","qualname":"<TcpSocket>::get_localaddr","value":"pub fn get_localaddr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of this socket","sig":null,"attributes":[{"value":"/ Returns the local address of this socket","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254530,"byte_end":10254574,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254579,"byte_end":10254582,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` result in windows if called before calling `bind`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254587,"byte_end":10254658,"line_start":326,"line_end":326,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257020,"byte_end":10257029,"line_start":417,"line_end":417,"column_start":12,"column_end":21},"name":"with_time","qualname":"<TcpKeepalive>::with_time","value":"pub fn with_time(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" on idle connections.","sig":null,"attributes":[{"value":"/ on idle connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256563,"byte_end":10256587,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256592,"byte_end":10256595,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This will set the value of `SO_KEEPALIVE` + `IPPROTO_TCP` on OpenBSD,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256600,"byte_end":10256673,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ NetBSD, and Haiku, `TCP_KEEPALIVE` on macOS and iOS, and `TCP_KEEPIDLE`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256678,"byte_end":10256753,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ on all other Unix operating systems. On Windows, this sets the value of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256758,"byte_end":10256833,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ the `tcp_keepalive` struct's `keepalivetime` field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256838,"byte_end":10256893,"line_start":413,"line_end":413,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256898,"byte_end":10256901,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256906,"byte_end":10256969,"line_start":415,"line_end":415,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256974,"byte_end":10257008,"line_start":416,"line_end":416,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257992,"byte_end":10258005,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"with_interval","qualname":"<TcpKeepalive>::with_interval","value":"pub fn with_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the time interval between TCP keepalive probes.\n This sets the value of `TCP_KEEPINTVL` on supported Unix operating\n systems. On Windows, this sets the value of the `tcp_keepalive` struct's\n `keepaliveinterval` field.","sig":null,"attributes":[{"value":"/ Sets the time interval between TCP keepalive probes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257147,"byte_end":10257203,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/ This sets the value of `TCP_KEEPINTVL` on supported Unix operating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257208,"byte_end":10257278,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"/ systems. On Windows, this sets the value of the `tcp_keepalive` struct's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257283,"byte_end":10257359,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ `keepaliveinterval` field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257364,"byte_end":10257394,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257399,"byte_end":10257402,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257407,"byte_end":10257470,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257475,"byte_end":10257509,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\", target_os =\n          \"windows\"))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10257786,"byte_end":10257980,"line_start":442,"line_end":449,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258822,"byte_end":10258834,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"with_retries","qualname":"<TcpKeepalive>::with_retries","value":"pub fn with_retries(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of TCP keepalive probes that will be sent before\n dropping a connection, if TCP keepalive is enabled on this socket.","sig":null,"attributes":[{"value":"/ Sets the maximum number of TCP keepalive probes that will be sent before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258135,"byte_end":10258211,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/ dropping a connection, if TCP keepalive is enabled on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258216,"byte_end":10258286,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258291,"byte_end":10258294,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This will set the value of `TCP_KEEPCNT` on Unix operating systems that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258299,"byte_end":10258374,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ support this option.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258379,"byte_end":10258403,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\",))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258646,"byte_end":10258810,"line_start":472,"line_end":478,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10259025,"byte_end":10259028,"line_start":487,"line_end":487,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpKeepalive>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new, empty set of TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new, empty set of TCP keepalive parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10258956,"byte_end":10259013,"line_start":486,"line_end":486,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260501,"byte_end":10260510,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1362}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259469,"byte_end":10259542,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259543,"byte_end":10259546,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259547,"byte_end":10259603,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259604,"byte_end":10259607,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259608,"byte_end":10259622,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259623,"byte_end":10259626,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259730,"byte_end":10259776,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259777,"byte_end":10259805,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259806,"byte_end":10259811,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259812,"byte_end":10259859,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259860,"byte_end":10259913,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259914,"byte_end":10259961,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10259962,"byte_end":10260007,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260008,"byte_end":10260036,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260037,"byte_end":10260065,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260066,"byte_end":10260069,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260070,"byte_end":10260135,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260136,"byte_end":10260139,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260140,"byte_end":10260172,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260173,"byte_end":10260221,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260222,"byte_end":10260225,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260226,"byte_end":10260264,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260265,"byte_end":10260338,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260339,"byte_end":10260342,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260343,"byte_end":10260405,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260406,"byte_end":10260409,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260410,"byte_end":10260456,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260457,"byte_end":10260473,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260474,"byte_end":10260481,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260482,"byte_end":10260489,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260680,"byte_end":10260687,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.\n","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260574,"byte_end":10260641,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260646,"byte_end":10260668,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261377,"byte_end":10261385,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260826,"byte_end":10260889,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260894,"byte_end":10260897,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260902,"byte_end":10260972,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260977,"byte_end":10261051,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261056,"byte_end":10261127,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261132,"byte_end":10261154,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261159,"byte_end":10261162,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261167,"byte_end":10261177,"line_start":64,"line_end":64,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261182,"byte_end":10261185,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261190,"byte_end":10261257,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261262,"byte_end":10261334,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261339,"byte_end":10261365,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261593,"byte_end":10261602,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261508,"byte_end":10261581,"line_start":75,"line_end":75,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261764,"byte_end":10261774,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261680,"byte_end":10261752,"line_start":80,"line_end":80,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262128,"byte_end":10262136,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261853,"byte_end":10261919,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261924,"byte_end":10261927,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10261932,"byte_end":10262004,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262009,"byte_end":10262078,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262083,"byte_end":10262116,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262878,"byte_end":10262889,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262223,"byte_end":10262285,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262290,"byte_end":10262293,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262298,"byte_end":10262367,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262372,"byte_end":10262445,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262450,"byte_end":10262523,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262528,"byte_end":10262603,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262608,"byte_end":10262626,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262631,"byte_end":10262634,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262639,"byte_end":10262650,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262655,"byte_end":10262658,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262663,"byte_end":10262739,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262744,"byte_end":10262811,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262816,"byte_end":10262866,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263424,"byte_end":10263431,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10262983,"byte_end":10263045,"line_start":111,"line_end":111,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263050,"byte_end":10263053,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263058,"byte_end":10263128,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263133,"byte_end":10263136,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263141,"byte_end":10263172,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263177,"byte_end":10263180,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263185,"byte_end":10263196,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263201,"byte_end":10263204,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263209,"byte_end":10263285,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263290,"byte_end":10263357,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263362,"byte_end":10263412,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263922,"byte_end":10263929,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263501,"byte_end":10263559,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263564,"byte_end":10263567,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263572,"byte_end":10263648,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263653,"byte_end":10263674,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263679,"byte_end":10263682,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263687,"byte_end":10263698,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263703,"byte_end":10263706,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263711,"byte_end":10263787,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263792,"byte_end":10263855,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10263860,"byte_end":10263910,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264435,"byte_end":10264438,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264010,"byte_end":10264068,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264073,"byte_end":10264076,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264081,"byte_end":10264147,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264152,"byte_end":10264155,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264160,"byte_end":10264171,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264176,"byte_end":10264179,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264184,"byte_end":10264260,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264265,"byte_end":10264328,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264333,"byte_end":10264383,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264388,"byte_end":10264391,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264396,"byte_end":10264423,"line_start":150,"line_end":150,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264756,"byte_end":10264766,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264503,"byte_end":10264561,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264566,"byte_end":10264569,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264574,"byte_end":10264648,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264653,"byte_end":10264729,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264734,"byte_end":10264744,"line_start":159,"line_end":159,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265204,"byte_end":10265208,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264852,"byte_end":10264922,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10264927,"byte_end":10264996,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265001,"byte_end":10265040,"line_start":166,"line_end":166,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265045,"byte_end":10265048,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265053,"byte_end":10265127,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265132,"byte_end":10265192,"line_start":169,"line_end":169,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1481},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272029,"byte_end":10272038,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1482}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269391,"byte_end":10269427,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269428,"byte_end":10269431,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269432,"byte_end":10269512,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269513,"byte_end":10269593,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269594,"byte_end":10269621,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269622,"byte_end":10269625,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269626,"byte_end":10269640,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269641,"byte_end":10269644,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269748,"byte_end":10269776,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269777,"byte_end":10269782,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269783,"byte_end":10269830,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269831,"byte_end":10269854,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269855,"byte_end":10269888,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269889,"byte_end":10269946,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269947,"byte_end":10269950,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269951,"byte_end":10269979,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10269980,"byte_end":10270025,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270026,"byte_end":10270054,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270055,"byte_end":10270058,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270059,"byte_end":10270094,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270095,"byte_end":10270130,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270131,"byte_end":10270134,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270135,"byte_end":10270230,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270231,"byte_end":10270245,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270246,"byte_end":10270315,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270316,"byte_end":10270385,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270386,"byte_end":10270389,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270390,"byte_end":10270486,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270487,"byte_end":10270507,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270508,"byte_end":10270564,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270565,"byte_end":10270568,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270569,"byte_end":10270667,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270668,"byte_end":10270685,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270686,"byte_end":10270718,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270719,"byte_end":10270722,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270723,"byte_end":10270817,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270818,"byte_end":10270896,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270897,"byte_end":10270975,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270976,"byte_end":10270979,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10270980,"byte_end":10271009,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271010,"byte_end":10271038,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271039,"byte_end":10271042,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271043,"byte_end":10271091,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271092,"byte_end":10271102,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271103,"byte_end":10271169,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271170,"byte_end":10271206,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271207,"byte_end":10271240,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271241,"byte_end":10271299,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271300,"byte_end":10271327,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271328,"byte_end":10271399,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271400,"byte_end":10271446,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271447,"byte_end":10271528,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271529,"byte_end":10271547,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271548,"byte_end":10271603,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271604,"byte_end":10271631,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271632,"byte_end":10271700,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271701,"byte_end":10271769,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271770,"byte_end":10271806,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271807,"byte_end":10271880,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271881,"byte_end":10271917,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271918,"byte_end":10271935,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271936,"byte_end":10271971,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271972,"byte_end":10271985,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271986,"byte_end":10271995,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10271996,"byte_end":10272001,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272002,"byte_end":10272009,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272010,"byte_end":10272017,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273012,"byte_end":10273016,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272102,"byte_end":10272150,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272155,"byte_end":10272158,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272163,"byte_end":10272177,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272182,"byte_end":10272185,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272301,"byte_end":10272329,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272334,"byte_end":10272339,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272344,"byte_end":10272391,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272396,"byte_end":10272424,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272429,"byte_end":10272432,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272437,"byte_end":10272479,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272484,"byte_end":10272548,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272553,"byte_end":10272590,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272595,"byte_end":10272617,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272622,"byte_end":10272707,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272712,"byte_end":10272768,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272773,"byte_end":10272782,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272787,"byte_end":10272793,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272798,"byte_end":10272801,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272806,"byte_end":10272893,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272898,"byte_end":10272956,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272961,"byte_end":10272976,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272981,"byte_end":10272988,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272993,"byte_end":10273000,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273467,"byte_end":10273475,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273127,"byte_end":10273190,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273195,"byte_end":10273198,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273203,"byte_end":10273273,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273278,"byte_end":10273352,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273357,"byte_end":10273428,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273433,"byte_end":10273455,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274429,"byte_end":10274439,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273598,"byte_end":10273663,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273668,"byte_end":10273671,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273676,"byte_end":10273690,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10273695,"byte_end":10273698,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274096,"byte_end":10274124,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274129,"byte_end":10274134,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274139,"byte_end":10274186,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274191,"byte_end":10274219,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274224,"byte_end":10274227,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274232,"byte_end":10274270,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274275,"byte_end":10274315,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274320,"byte_end":10274373,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274378,"byte_end":10274393,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274398,"byte_end":10274405,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274410,"byte_end":10274417,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275321,"byte_end":10275328,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274518,"byte_end":10274592,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274597,"byte_end":10274625,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274630,"byte_end":10274633,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274638,"byte_end":10274711,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274716,"byte_end":10274756,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274761,"byte_end":10274764,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274769,"byte_end":10274783,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274788,"byte_end":10274791,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274796,"byte_end":10274809,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274814,"byte_end":10274842,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274847,"byte_end":10274894,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274899,"byte_end":10274927,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274932,"byte_end":10274935,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10274940,"byte_end":10274998,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275003,"byte_end":10275006,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275011,"byte_end":10275081,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275086,"byte_end":10275133,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275138,"byte_end":10275141,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275146,"byte_end":10275220,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275225,"byte_end":10275255,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275260,"byte_end":10275265,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275270,"byte_end":10275285,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275290,"byte_end":10275297,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275302,"byte_end":10275309,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276629,"byte_end":10276638,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275463,"byte_end":10275537,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275542,"byte_end":10275593,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275598,"byte_end":10275601,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275606,"byte_end":10275617,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275622,"byte_end":10275625,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275630,"byte_end":10275705,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275710,"byte_end":10275788,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275793,"byte_end":10275841,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275846,"byte_end":10275913,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275918,"byte_end":10275986,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275991,"byte_end":10275994,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10275999,"byte_end":10276013,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276018,"byte_end":10276021,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276026,"byte_end":10276039,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276044,"byte_end":10276072,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276077,"byte_end":10276082,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276087,"byte_end":10276134,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276139,"byte_end":10276167,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276172,"byte_end":10276175,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276180,"byte_end":10276238,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276243,"byte_end":10276246,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276251,"byte_end":10276323,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276328,"byte_end":10276375,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276380,"byte_end":10276383,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276388,"byte_end":10276413,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276418,"byte_end":10276478,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276483,"byte_end":10276563,"line_start":218,"line_end":218,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276568,"byte_end":10276573,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276578,"byte_end":10276593,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276598,"byte_end":10276605,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276610,"byte_end":10276617,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277981,"byte_end":10277990,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276765,"byte_end":10276841,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276846,"byte_end":10276922,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276927,"byte_end":10276945,"line_start":229,"line_end":229,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276950,"byte_end":10276953,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276958,"byte_end":10276969,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276974,"byte_end":10276977,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10276982,"byte_end":10277057,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277062,"byte_end":10277140,"line_start":234,"line_end":234,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277145,"byte_end":10277193,"line_start":235,"line_end":235,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277198,"byte_end":10277265,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277270,"byte_end":10277338,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277343,"byte_end":10277346,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277351,"byte_end":10277365,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277370,"byte_end":10277373,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277378,"byte_end":10277391,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277396,"byte_end":10277424,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277429,"byte_end":10277434,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277439,"byte_end":10277486,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277491,"byte_end":10277519,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277524,"byte_end":10277527,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277532,"byte_end":10277590,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277595,"byte_end":10277598,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277603,"byte_end":10277675,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277680,"byte_end":10277727,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277732,"byte_end":10277735,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277740,"byte_end":10277765,"line_start":252,"line_end":252,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277770,"byte_end":10277830,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277835,"byte_end":10277915,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277920,"byte_end":10277925,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277930,"byte_end":10277945,"line_start":256,"line_end":256,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277950,"byte_end":10277957,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10277962,"byte_end":10277969,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278261,"byte_end":10278265,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278117,"byte_end":10278204,"line_start":263,"line_end":263,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278209,"byte_end":10278249,"line_start":264,"line_end":264,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278889,"byte_end":10278893,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278369,"byte_end":10278455,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278460,"byte_end":10278489,"line_start":270,"line_end":270,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278494,"byte_end":10278497,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278502,"byte_end":10278513,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278518,"byte_end":10278521,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278526,"byte_end":10278601,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278606,"byte_end":10278679,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278684,"byte_end":10278732,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278737,"byte_end":10278804,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10278809,"byte_end":10278877,"line_start":278,"line_end":278,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279531,"byte_end":10279535,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279001,"byte_end":10279077,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279082,"byte_end":10279131,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279136,"byte_end":10279139,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279144,"byte_end":10279155,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279160,"byte_end":10279163,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279168,"byte_end":10279243,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279248,"byte_end":10279321,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279326,"byte_end":10279374,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279379,"byte_end":10279446,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279451,"byte_end":10279519,"line_start":292,"line_end":292,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279827,"byte_end":10279834,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279643,"byte_end":10279715,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279720,"byte_end":10279796,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279801,"byte_end":10279815,"line_start":299,"line_end":299,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280688,"byte_end":10280701,"line_start":328,"line_end":328,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279924,"byte_end":10279988,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10279993,"byte_end":10279996,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280001,"byte_end":10280072,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280077,"byte_end":10280089,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280094,"byte_end":10280097,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280102,"byte_end":10280116,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280121,"byte_end":10280124,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280240,"byte_end":10280268,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280273,"byte_end":10280278,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280283,"byte_end":10280330,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280335,"byte_end":10280363,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280368,"byte_end":10280371,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280376,"byte_end":10280444,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280449,"byte_end":10280496,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280501,"byte_end":10280547,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280552,"byte_end":10280557,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280562,"byte_end":10280565,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280570,"byte_end":10280622,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280627,"byte_end":10280632,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280637,"byte_end":10280652,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280657,"byte_end":10280664,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280669,"byte_end":10280676,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281469,"byte_end":10281478,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280787,"byte_end":10280851,"line_start":332,"line_end":332,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280856,"byte_end":10280859,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280864,"byte_end":10280911,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280916,"byte_end":10280944,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280949,"byte_end":10280952,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280957,"byte_end":10280990,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10280995,"byte_end":10280998,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281003,"byte_end":10281017,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281022,"byte_end":10281025,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281141,"byte_end":10281169,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281174,"byte_end":10281179,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281184,"byte_end":10281231,"line_start":345,"line_end":345,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281236,"byte_end":10281264,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281269,"byte_end":10281272,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281277,"byte_end":10281345,"line_start":348,"line_end":348,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281350,"byte_end":10281403,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281408,"byte_end":10281413,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281418,"byte_end":10281433,"line_start":351,"line_end":351,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281438,"byte_end":10281445,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281450,"byte_end":10281457,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281782,"byte_end":10281803,"line_start":362,"line_end":362,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281550,"byte_end":10281619,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281624,"byte_end":10281627,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281632,"byte_end":10281706,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281711,"byte_end":10281770,"line_start":361,"line_end":361,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282133,"byte_end":10282150,"line_start":372,"line_end":372,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281897,"byte_end":10281966,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281971,"byte_end":10281974,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10281979,"byte_end":10282026,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282031,"byte_end":10282067,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282072,"byte_end":10282075,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282080,"byte_end":10282121,"line_start":371,"line_end":371,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282611,"byte_end":10282631,"line_start":383,"line_end":383,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282230,"byte_end":10282298,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282303,"byte_end":10282306,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282311,"byte_end":10282381,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282386,"byte_end":10282460,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282465,"byte_end":10282527,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282532,"byte_end":10282535,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282540,"byte_end":10282599,"line_start":382,"line_end":382,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282958,"byte_end":10282974,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282725,"byte_end":10282793,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282798,"byte_end":10282801,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282806,"byte_end":10282853,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282858,"byte_end":10282893,"line_start":390,"line_end":390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282898,"byte_end":10282901,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10282906,"byte_end":10282946,"line_start":392,"line_end":392,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283288,"byte_end":10283309,"line_start":401,"line_end":401,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283052,"byte_end":10283123,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283128,"byte_end":10283131,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283136,"byte_end":10283212,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283217,"byte_end":10283276,"line_start":400,"line_end":400,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283641,"byte_end":10283658,"line_start":411,"line_end":411,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283403,"byte_end":10283474,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283479,"byte_end":10283482,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283487,"byte_end":10283534,"line_start":407,"line_end":407,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283539,"byte_end":10283575,"line_start":408,"line_end":408,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283580,"byte_end":10283583,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283588,"byte_end":10283629,"line_start":410,"line_end":410,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284447,"byte_end":10284454,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283738,"byte_end":10283796,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283801,"byte_end":10283804,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283809,"byte_end":10283885,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283890,"byte_end":10283911,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283916,"byte_end":10283919,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283924,"byte_end":10283938,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10283943,"byte_end":10283946,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284062,"byte_end":10284090,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284095,"byte_end":10284100,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284105,"byte_end":10284152,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284157,"byte_end":10284185,"line_start":427,"line_end":427,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284190,"byte_end":10284193,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284198,"byte_end":10284256,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284261,"byte_end":10284289,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284294,"byte_end":10284323,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284328,"byte_end":10284333,"line_start":432,"line_end":432,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284338,"byte_end":10284341,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284346,"byte_end":10284381,"line_start":434,"line_end":434,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284386,"byte_end":10284391,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284396,"byte_end":10284411,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284416,"byte_end":10284423,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284428,"byte_end":10284435,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285201,"byte_end":10285204,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284535,"byte_end":10284593,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284598,"byte_end":10284601,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284606,"byte_end":10284672,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284677,"byte_end":10284680,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284685,"byte_end":10284712,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284717,"byte_end":10284720,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284725,"byte_end":10284739,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284744,"byte_end":10284747,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284863,"byte_end":10284891,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284896,"byte_end":10284901,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284906,"byte_end":10284953,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284958,"byte_end":10284986,"line_start":456,"line_end":456,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284991,"byte_end":10284994,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10284999,"byte_end":10285057,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285062,"byte_end":10285087,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285092,"byte_end":10285095,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285100,"byte_end":10285135,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285140,"byte_end":10285145,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285150,"byte_end":10285165,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285170,"byte_end":10285177,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285182,"byte_end":10285189,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285748,"byte_end":10285765,"line_start":478,"line_end":478,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285269,"byte_end":10285327,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285332,"byte_end":10285335,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285340,"byte_end":10285414,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285419,"byte_end":10285492,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285497,"byte_end":10285569,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285574,"byte_end":10285644,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285649,"byte_end":10285687,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285692,"byte_end":10285736,"line_start":477,"line_end":477,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286272,"byte_end":10286289,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285907,"byte_end":10285967,"line_start":482,"line_end":482,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285972,"byte_end":10285975,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10285980,"byte_end":10286054,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286059,"byte_end":10286132,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286137,"byte_end":10286211,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286216,"byte_end":10286260,"line_start":487,"line_end":487,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286692,"byte_end":10286710,"line_start":499,"line_end":499,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286425,"byte_end":10286484,"line_start":492,"line_end":492,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286489,"byte_end":10286492,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286497,"byte_end":10286544,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286549,"byte_end":10286581,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286586,"byte_end":10286589,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286594,"byte_end":10286631,"line_start":497,"line_end":497,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286636,"byte_end":10286680,"line_start":498,"line_end":498,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287122,"byte_end":10287140,"line_start":510,"line_end":510,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286853,"byte_end":10286914,"line_start":503,"line_end":503,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286919,"byte_end":10286922,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286927,"byte_end":10286974,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10286979,"byte_end":10287011,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287016,"byte_end":10287019,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287024,"byte_end":10287061,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287066,"byte_end":10287110,"line_start":509,"line_end":509,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287399,"byte_end":10287406,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287277,"byte_end":10287338,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287343,"byte_end":10287387,"line_start":515,"line_end":515,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287739,"byte_end":10287749,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287486,"byte_end":10287544,"line_start":520,"line_end":520,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287549,"byte_end":10287552,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287557,"byte_end":10287631,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287636,"byte_end":10287712,"line_start":523,"line_end":523,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287717,"byte_end":10287727,"line_start":524,"line_end":524,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1581},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290239,"byte_end":10290251,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1582}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290200,"byte_end":10290227,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290392,"byte_end":10290396,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290321,"byte_end":10290380,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290892,"byte_end":10290900,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290539,"byte_end":10290608,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290613,"byte_end":10290616,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290621,"byte_end":10290694,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290699,"byte_end":10290773,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; ; it is left up to the user to set it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290778,"byte_end":10290850,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290855,"byte_end":10290880,"line_start":26,"line_end":26,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291093,"byte_end":10291100,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291032,"byte_end":10291081,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291278,"byte_end":10291285,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291197,"byte_end":10291266,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291455,"byte_end":10291459,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291395,"byte_end":10291443,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291769,"byte_end":10291779,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291718,"byte_end":10291757,"line_start":53,"line_end":53,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292013,"byte_end":10292022,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291883,"byte_end":10291929,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291934,"byte_end":10291937,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10291942,"byte_end":10292001,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292283,"byte_end":10292292,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292125,"byte_end":10292159,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292164,"byte_end":10292167,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292172,"byte_end":10292241,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292246,"byte_end":10292271,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292566,"byte_end":10292570,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292458,"byte_end":10292492,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292497,"byte_end":10292500,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292505,"byte_end":10292554,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292809,"byte_end":10292816,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292678,"byte_end":10292732,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292737,"byte_end":10292740,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292745,"byte_end":10292797,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293241,"byte_end":10293245,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10292954,"byte_end":10293004,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293009,"byte_end":10293012,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293017,"byte_end":10293089,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293094,"byte_end":10293164,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293169,"byte_end":10293172,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293177,"byte_end":10293229,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293408,"byte_end":10293418,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293349,"byte_end":10293396,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293784,"byte_end":10293792,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293504,"byte_end":10293569,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293574,"byte_end":10293577,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293582,"byte_end":10293650,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293655,"byte_end":10293725,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293730,"byte_end":10293772,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1673},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295459,"byte_end":10295471,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1674}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295402,"byte_end":10295447,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295616,"byte_end":10295620,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295541,"byte_end":10295604,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296114,"byte_end":10296122,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295763,"byte_end":10295832,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295837,"byte_end":10295840,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295845,"byte_end":10295918,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295923,"byte_end":10295997,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296002,"byte_end":10296075,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296080,"byte_end":10296102,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296437,"byte_end":10296443,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296258,"byte_end":10296313,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296318,"byte_end":10296321,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296326,"byte_end":10296398,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296403,"byte_end":10296425,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296618,"byte_end":10296628,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296552,"byte_end":10296606,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296791,"byte_end":10296801,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296732,"byte_end":10296779,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1758},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298491,"byte_end":10298501,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1759}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298441,"byte_end":10298479,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298622,"byte_end":10298629,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.\n","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298567,"byte_end":10298610,"line_start":17,"line_end":17,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299324,"byte_end":10299332,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298769,"byte_end":10298834,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298839,"byte_end":10298842,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298847,"byte_end":10298918,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298923,"byte_end":10298997,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299002,"byte_end":10299073,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299078,"byte_end":10299100,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299105,"byte_end":10299108,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299113,"byte_end":10299123,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299128,"byte_end":10299131,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299136,"byte_end":10299204,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299209,"byte_end":10299281,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299286,"byte_end":10299312,"line_start":33,"line_end":33,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299596,"byte_end":10299600,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299458,"byte_end":10299507,"line_start":40,"line_end":40,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299512,"byte_end":10299515,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299520,"byte_end":10299584,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299882,"byte_end":10299892,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299802,"byte_end":10299870,"line_start":49,"line_end":49,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300075,"byte_end":10300084,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10299994,"byte_end":10300063,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300244,"byte_end":10300254,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300185,"byte_end":10300232,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300621,"byte_end":10300629,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300340,"byte_end":10300406,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300411,"byte_end":10300414,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300419,"byte_end":10300487,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300492,"byte_end":10300562,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300567,"byte_end":10300609,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1707,"byte_end":1711,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1600,"byte_end":1637,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1718,"byte_end":1743,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1757,"byte_end":1761,"line_start":76,"line_end":76,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1772,"byte_end":1786,"line_start":77,"line_end":77,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1795,"byte_end":1798,"line_start":78,"line_end":78,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1807,"byte_end":1854,"line_start":79,"line_end":79,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2174,"byte_end":2182,"line_start":95,"line_end":95,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2189,"byte_end":2219,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2224,"byte_end":2227,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2232,"byte_end":2290,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2295,"byte_end":2298,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2449,"byte_end":2452,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation, that `panic!`s the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2457,"byte_end":2532,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2537,"byte_end":2606,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2611,"byte_end":2659,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2664,"byte_end":2667,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2672,"byte_end":2729,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2734,"byte_end":2737,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2884,"byte_end":2887,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2892,"byte_end":2968,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":2973,"byte_end":3021,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3026,"byte_end":3029,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3180,"byte_end":3183,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3188,"byte_end":3260,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":264},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3272,"byte_end":3277,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3284,"byte_end":3312,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3317,"byte_end":3320,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3325,"byte_end":3366,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3371,"byte_end":3374,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3379,"byte_end":3436,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3441,"byte_end":3475,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3480,"byte_end":3508,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3513,"byte_end":3516,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3521,"byte_end":3596,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3601,"byte_end":3651,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3656,"byte_end":3659,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3664,"byte_end":3700,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3705,"byte_end":3708,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3713,"byte_end":3788,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3793,"byte_end":3869,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3874,"byte_end":3924,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3929,"byte_end":3932,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3937,"byte_end":3970,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":3975,"byte_end":4018,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4023,"byte_end":4026,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4144,"byte_end":4174,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4179,"byte_end":4219,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4224,"byte_end":4277,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4282,"byte_end":4310,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4315,"byte_end":4387,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4392,"byte_end":4420,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4425,"byte_end":4469,"line_start":150,"line_end":150,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4474,"byte_end":4501,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4506,"byte_end":4518,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4523,"byte_end":4530,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4535,"byte_end":4542,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4547,"byte_end":4550,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4555,"byte_end":4624,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4629,"byte_end":4699,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4704,"byte_end":4778,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4783,"byte_end":4809,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4814,"byte_end":4817,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4822,"byte_end":4873,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4878,"byte_end":4881,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4886,"byte_end":4920,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4925,"byte_end":4928,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":4933,"byte_end":5009,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5014,"byte_end":5088,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5093,"byte_end":5173,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5178,"byte_end":5253,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5258,"byte_end":5326,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5331,"byte_end":5343,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5348,"byte_end":5351,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5356,"byte_end":5432,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5437,"byte_end":5508,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5513,"byte_end":5516,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5521,"byte_end":5567,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5572,"byte_end":5575,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5739,"byte_end":5771,"line_start":179,"line_end":179,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5776,"byte_end":5815,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5820,"byte_end":5860,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5865,"byte_end":5895,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5900,"byte_end":5951,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":5956,"byte_end":6011,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6016,"byte_end":6067,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6072,"byte_end":6075,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6080,"byte_end":6157,"line_start":187,"line_end":187,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6162,"byte_end":6240,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6245,"byte_end":6261,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6266,"byte_end":6301,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6306,"byte_end":6379,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6384,"byte_end":6396,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6401,"byte_end":6408,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6413,"byte_end":6420,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6425,"byte_end":6428,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6433,"byte_end":6505,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6510,"byte_end":6549,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6554,"byte_end":6557,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6562,"byte_end":6619,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6624,"byte_end":6627,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6632,"byte_end":6665,"line_start":201,"line_end":201,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6670,"byte_end":6673,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6678,"byte_end":6748,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6753,"byte_end":6829,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6834,"byte_end":6909,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6914,"byte_end":6988,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":6993,"byte_end":7068,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7073,"byte_end":7082,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7087,"byte_end":7090,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7095,"byte_end":7169,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7174,"byte_end":7189,"line_start":211,"line_end":211,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7194,"byte_end":7197,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7202,"byte_end":7245,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7250,"byte_end":7297,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7302,"byte_end":7305,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7469,"byte_end":7487,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7492,"byte_end":7522,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7527,"byte_end":7559,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7564,"byte_end":7611,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7616,"byte_end":7651,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7656,"byte_end":7690,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7695,"byte_end":7745,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7750,"byte_end":7801,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7806,"byte_end":7859,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7864,"byte_end":7901,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7906,"byte_end":7981,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":7986,"byte_end":8014,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8019,"byte_end":8029,"line_start":230,"line_end":230,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8034,"byte_end":8102,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8107,"byte_end":8173,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8178,"byte_end":8181,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8186,"byte_end":8216,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8221,"byte_end":8257,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8262,"byte_end":8337,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8342,"byte_end":8395,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8400,"byte_end":8433,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8438,"byte_end":8470,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8475,"byte_end":8552,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8557,"byte_end":8604,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8609,"byte_end":8654,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8659,"byte_end":8713,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8718,"byte_end":8793,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8798,"byte_end":8843,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8848,"byte_end":8874,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8879,"byte_end":8956,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":8961,"byte_end":9032,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9037,"byte_end":9076,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9081,"byte_end":9147,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9152,"byte_end":9204,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9209,"byte_end":9230,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9235,"byte_end":9252,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9257,"byte_end":9293,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9298,"byte_end":9311,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9316,"byte_end":9325,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9330,"byte_end":9352,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9357,"byte_end":9362,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9367,"byte_end":9370,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9375,"byte_end":9420,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9425,"byte_end":9472,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9477,"byte_end":9482,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9487,"byte_end":9494,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":9499,"byte_end":9506,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":12397,"byte_end":12405,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15336,"byte_end":15344,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15487,"byte_end":15495,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15623,"byte_end":15631,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25371,"byte_end":25375,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29590,"byte_end":29594,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31042,"byte_end":31046,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31147,"byte_end":31151,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31275,"byte_end":31283,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":41321,"byte_end":41329,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":41482,"byte_end":41490,"line_start":640,"line_end":640,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10159596,"byte_end":10159604,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10162721,"byte_end":10162729,"line_start":110,"line_end":110,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10162857,"byte_end":10162865,"line_start":118,"line_end":118,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10162942,"byte_end":10162950,"line_start":124,"line_end":124,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169380,"byte_end":10169388,"line_start":88,"line_end":88,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/waker.rs","byte_start":10170603,"byte_end":10170608,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/net.rs","byte_start":10178763,"byte_end":10178778,"line_start":73,"line_end":73,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204503,"byte_end":10204513,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10205442,"byte_end":10205452,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10207235,"byte_end":10207245,"line_start":106,"line_end":106,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10207625,"byte_end":10207637,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/mod.rs","byte_start":10157641,"byte_end":10157654,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221234,"byte_end":10221240,"line_start":214,"line_end":214,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221468,"byte_end":10221474,"line_start":221,"line_end":221,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10222025,"byte_end":10222031,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10222921,"byte_end":10222927,"line_start":276,"line_end":276,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223138,"byte_end":10223144,"line_start":283,"line_end":283,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223306,"byte_end":10223312,"line_start":291,"line_end":291,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223409,"byte_end":10223415,"line_start":297,"line_end":297,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223677,"byte_end":10223685,"line_start":311,"line_end":311,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223915,"byte_end":10223923,"line_start":318,"line_end":318,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10224473,"byte_end":10224481,"line_start":342,"line_end":342,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225177,"byte_end":10225185,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225484,"byte_end":10225492,"line_start":375,"line_end":375,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225711,"byte_end":10225719,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225885,"byte_end":10225893,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225990,"byte_end":10225998,"line_start":396,"line_end":396,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52012,"byte_end":52017,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53121,"byte_end":53126,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":59776,"byte_end":59781,"line_start":193,"line_end":193,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":60490,"byte_end":60502,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62865,"byte_end":62871,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65987,"byte_end":65991,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":66467,"byte_end":66473,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70639,"byte_end":70642,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10228767,"byte_end":10228775,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10230075,"byte_end":10230083,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10230350,"byte_end":10230358,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10230487,"byte_end":10230495,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10232327,"byte_end":10232335,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10232640,"byte_end":10232650,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10234966,"byte_end":10234976,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237082,"byte_end":10237093,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240366,"byte_end":10240377,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240933,"byte_end":10240944,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10241077,"byte_end":10241088,"line_start":158,"line_end":158,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10241212,"byte_end":10241223,"line_start":165,"line_end":165,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10241333,"byte_end":10241344,"line_start":172,"line_end":172,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243637,"byte_end":10243646,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254784,"byte_end":10254793,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254897,"byte_end":10254906,"line_start":339,"line_end":339,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10255087,"byte_end":10255096,"line_start":349,"line_end":349,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10255192,"byte_end":10255201,"line_start":356,"line_end":356,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256467,"byte_end":10256479,"line_start":406,"line_end":406,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260558,"byte_end":10260567,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265307,"byte_end":10265316,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265928,"byte_end":10265937,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10266750,"byte_end":10266759,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267315,"byte_end":10267324,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267457,"byte_end":10267466,"line_start":254,"line_end":254,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267590,"byte_end":10267599,"line_start":261,"line_end":261,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267709,"byte_end":10267718,"line_start":268,"line_end":268,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272086,"byte_end":10272095,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287856,"byte_end":10287865,"line_start":530,"line_end":530,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288421,"byte_end":10288430,"line_start":554,"line_end":554,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288563,"byte_end":10288572,"line_start":561,"line_end":561,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288696,"byte_end":10288705,"line_start":568,"line_end":568,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288815,"byte_end":10288824,"line_start":575,"line_end":575,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290302,"byte_end":10290314,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293900,"byte_end":10293912,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294468,"byte_end":10294480,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294600,"byte_end":10294612,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294723,"byte_end":10294735,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294832,"byte_end":10294844,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295522,"byte_end":10295534,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296908,"byte_end":10296920,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297476,"byte_end":10297488,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297608,"byte_end":10297620,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297731,"byte_end":10297743,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297840,"byte_end":10297852,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298550,"byte_end":10298560,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300728,"byte_end":10300738,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10301351,"byte_end":10301361,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302175,"byte_end":10302185,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302741,"byte_end":10302751,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302871,"byte_end":10302881,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302992,"byte_end":10303002,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10303099,"byte_end":10303109,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1376,"byte_end":1381,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/lib.rs","byte_start":1446,"byte_end":1449,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1134}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":12397,"byte_end":12405,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15336,"byte_end":15344,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15487,"byte_end":15495,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":2976}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/interest.rs","byte_start":15623,"byte_end":15631,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":25371,"byte_end":25375,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":29590,"byte_end":29594,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31042,"byte_end":31046,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":78},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31147,"byte_end":31151,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":31275,"byte_end":31283,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":41321,"byte_end":41329,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/poll.rs","byte_start":41482,"byte_end":41490,"line_start":640,"line_end":640,"column_start":18,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10159596,"byte_end":10159604,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10162721,"byte_end":10162729,"line_start":110,"line_end":110,"column_start":10,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10162857,"byte_end":10162865,"line_start":118,"line_end":118,"column_start":18,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":491},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/selector/epoll.rs","byte_start":10162942,"byte_end":10162950,"line_start":124,"line_end":124,"column_start":15,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/sourcefd.rs","byte_start":10169380,"byte_end":10169388,"line_start":88,"line_end":88,"column_start":28,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":504},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/waker.rs","byte_start":10170603,"byte_end":10170608,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/net.rs","byte_start":10178763,"byte_end":10178778,"line_start":73,"line_end":73,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10204503,"byte_end":10204513,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10205442,"byte_end":10205452,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10207235,"byte_end":10207245,"line_start":106,"line_end":106,"column_start":21,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/uds/socketaddr.rs","byte_start":10207625,"byte_end":10207637,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":695},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/mod.rs","byte_start":10157641,"byte_end":10157654,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221234,"byte_end":10221240,"line_start":214,"line_end":214,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10221468,"byte_end":10221474,"line_start":221,"line_end":221,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10222025,"byte_end":10222031,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1003},"to":{"krate":1,"index":4310}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10222921,"byte_end":10222927,"line_start":276,"line_end":276,"column_start":27,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1003},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223138,"byte_end":10223144,"line_start":283,"line_end":283,"column_start":20,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1003},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223306,"byte_end":10223312,"line_start":291,"line_end":291,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1003},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223409,"byte_end":10223415,"line_start":297,"line_end":297,"column_start":20,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1003},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223677,"byte_end":10223685,"line_start":311,"line_end":311,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10223915,"byte_end":10223923,"line_start":318,"line_end":318,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1007},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10224473,"byte_end":10224481,"line_start":342,"line_end":342,"column_start":15,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1007},"to":{"krate":1,"index":4249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225177,"byte_end":10225185,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225484,"byte_end":10225492,"line_start":375,"line_end":375,"column_start":28,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225711,"byte_end":10225719,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1007},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225885,"byte_end":10225893,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1007},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/sys/unix/pipe.rs","byte_start":10225990,"byte_end":10225998,"line_start":396,"line_end":396,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1007},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/waker.rs","byte_start":52012,"byte_end":52017,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":53121,"byte_end":53126,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":59776,"byte_end":59781,"line_start":193,"line_end":193,"column_start":21,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1037},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/event.rs","byte_start":60490,"byte_end":60502,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":62865,"byte_end":62871,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":65987,"byte_end":65991,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/events.rs","byte_start":66467,"byte_end":66473,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/event/source.rs","byte_start":70639,"byte_end":70642,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10228767,"byte_end":10228775,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10230075,"byte_end":10230083,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10230350,"byte_end":10230358,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10230487,"byte_end":10230495,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10232327,"byte_end":10232335,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10232640,"byte_end":10232650,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/io_source.rs","byte_start":10234966,"byte_end":10234976,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10237082,"byte_end":10237093,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240366,"byte_end":10240377,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10240933,"byte_end":10240944,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10241077,"byte_end":10241088,"line_start":158,"line_end":158,"column_start":20,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10241212,"byte_end":10241223,"line_start":165,"line_end":165,"column_start":18,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/listener.rs","byte_start":10241333,"byte_end":10241344,"line_start":172,"line_end":172,"column_start":20,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10243637,"byte_end":10243646,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254784,"byte_end":10254793,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1827},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10254897,"byte_end":10254906,"line_start":339,"line_end":339,"column_start":20,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1827},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10255087,"byte_end":10255096,"line_start":349,"line_end":349,"column_start":18,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1827},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10255192,"byte_end":10255201,"line_start":356,"line_end":356,"column_start":20,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1827},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/socket.rs","byte_start":10256467,"byte_end":10256479,"line_start":406,"line_end":406,"column_start":6,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10260558,"byte_end":10260567,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265307,"byte_end":10265316,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":4249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10265928,"byte_end":10265937,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":4310}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10266750,"byte_end":10266759,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1361},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267315,"byte_end":10267324,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267457,"byte_end":10267466,"line_start":254,"line_end":254,"column_start":20,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267590,"byte_end":10267599,"line_start":261,"line_end":261,"column_start":18,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/tcp/stream.rs","byte_start":10267709,"byte_end":10267718,"line_start":268,"line_end":268,"column_start":20,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10272086,"byte_end":10272095,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10287856,"byte_end":10287865,"line_start":530,"line_end":530,"column_start":24,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1481},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288421,"byte_end":10288430,"line_start":554,"line_end":554,"column_start":21,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1481},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288563,"byte_end":10288572,"line_start":561,"line_end":561,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1481},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288696,"byte_end":10288705,"line_start":568,"line_end":568,"column_start":18,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1481},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/udp.rs","byte_start":10288815,"byte_end":10288824,"line_start":575,"line_end":575,"column_start":20,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1481},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10290302,"byte_end":10290314,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10293900,"byte_end":10293912,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1581},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294468,"byte_end":10294480,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1581},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294600,"byte_end":10294612,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1581},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294723,"byte_end":10294735,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1581},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/datagram.rs","byte_start":10294832,"byte_end":10294844,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1581},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10295522,"byte_end":10295534,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10296908,"byte_end":10296920,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1673},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297476,"byte_end":10297488,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297608,"byte_end":10297620,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1673},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297731,"byte_end":10297743,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1673},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/listener.rs","byte_start":10297840,"byte_end":10297852,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1673},"to":{"krate":1,"index":11247}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10298550,"byte_end":10298560,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10300728,"byte_end":10300738,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1758},"to":{"krate":1,"index":4249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10301351,"byte_end":10301361,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1758},"to":{"krate":1,"index":4310}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302175,"byte_end":10302185,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1758},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302741,"byte_end":10302751,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302871,"byte_end":10302881,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1758},"to":{"krate":1,"index":11249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10302992,"byte_end":10303002,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1758},"to":{"krate":1,"index":11245}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.11/src/net/uds/stream.rs","byte_start":10303099,"byte_end":10303109,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1758},"to":{"krate":1,"index":11247}}]}