{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tower","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"balance\"","--cfg","feature=\"buffer\"","--cfg","feature=\"default\"","--cfg","feature=\"discover\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"indexmap\"","--cfg","feature=\"limit\"","--cfg","feature=\"load\"","--cfg","feature=\"log\"","--cfg","feature=\"make\"","--cfg","feature=\"rand\"","--cfg","feature=\"ready-cache\"","--cfg","feature=\"slab\"","--cfg","feature=\"timeout\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-stream\"","--cfg","feature=\"tokio-util\"","--cfg","feature=\"tracing\"","--cfg","feature=\"util\"","-C","metadata=09664b7ca785557c","-C","extra-filename=-09664b7ca785557c","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","futures_core=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_core-0533940c6bc2bdcd.rmeta","--extern","futures_util=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_util-6cb348271837bdd1.rmeta","--extern","indexmap=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libindexmap-5f3577fec96c428a.rmeta","--extern","pin_project=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libpin_project-68e41ee6298d9238.rmeta","--extern","rand=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/librand-155a1ebf96a3c8dd.rmeta","--extern","slab=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libslab-89564bc7f9f7a05f.rmeta","--extern","tokio=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio-d36f104b99e70419.rmeta","--extern","tokio_stream=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio_stream-4926973430b8b53c.rmeta","--extern","tokio_util=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio_util-c09dadaa048f734f.rmeta","--extern","tower_layer=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtower_layer-d42eba05bb0c7045.rmeta","--extern","tower_service=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtower_service-bd72feea024ed7ac.rmeta","--extern","tracing=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtracing-3ef984091e6054bd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtower-09664b7ca785557c.rmeta"},"prelude":{"crate_id":{"name":"tower","disambiguator":[17267498895957206443,3005914208927154983]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","num":18,"id":{"name":"tower_layer","disambiguator":[15824127499846595142,4330794633531149294]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","num":19,"id":{"name":"futures_core","disambiguator":[29397662539448121,8477785109263410569]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","num":20,"id":{"name":"pin_project","disambiguator":[12015512633272142241,18323617397456043810]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","num":21,"id":{"name":"pin_project_internal","disambiguator":[1518389622909317578,4607443133736015950]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","num":22,"id":{"name":"tower_service","disambiguator":[15774902145330311563,879413234616624000]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":23,"id":{"name":"futures_util","disambiguator":[3280059893384521325,11598808553936333138]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":24,"id":{"name":"pin_utils","disambiguator":[14395563498781816293,16484404266226080499]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":25,"id":{"name":"proc_macro_hack","disambiguator":[11501105840794256935,10642840395116319496]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":26,"id":{"name":"futures_task","disambiguator":[16020005147022665285,9026085615796595227]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":27,"id":{"name":"futures_sink","disambiguator":[2922734123352180455,14403152685744851238]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[9145299615355368616,5447980798194890694]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":29,"id":{"name":"futures_channel","disambiguator":[17242227673017059874,10535311695956202953]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","num":30,"id":{"name":"slab","disambiguator":[13561909771579579308,2681944852510081505]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":31,"id":{"name":"futures_io","disambiguator":[15034522671843221786,2690313799458130393]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":32,"id":{"name":"futures_macro","disambiguator":[7164365384525528058,12984376660750215651]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":33,"id":{"name":"memchr","disambiguator":[13309440065246054461,9623703849673585728]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":34,"id":{"name":"rand","disambiguator":[3695316955384101630,758283365620379268]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":35,"id":{"name":"rand_core","disambiguator":[8139118517281542286,12191278135173016247]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":36,"id":{"name":"getrandom","disambiguator":[13811811233254902674,13880380393548880828]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":37,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":38,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":39,"id":{"name":"rand_chacha","disambiguator":[8826764019437297983,9530296518715267874]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":40,"id":{"name":"ppv_lite86","disambiguator":[14558544114212663290,14618348431403826979]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":41,"id":{"name":"tokio","disambiguator":[16353378429824476342,2060103248263720111]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":42,"id":{"name":"parking_lot","disambiguator":[14331116733237037633,1733547897482442134]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":43,"id":{"name":"instant","disambiguator":[11361008649439768419,13512573952781869826]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":44,"id":{"name":"lock_api","disambiguator":[18197204475178301771,10109649757336546226]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":45,"id":{"name":"scopeguard","disambiguator":[2181135905612754568,6053946559474066644]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":46,"id":{"name":"parking_lot_core","disambiguator":[12086112946249549060,1314504070364395696]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":47,"id":{"name":"smallvec","disambiguator":[291282355886527283,13566040600539321920]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":48,"id":{"name":"mio","disambiguator":[980902961067663816,14858026113145421146]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":49,"id":{"name":"log","disambiguator":[9999652943946548626,13641826928383836309]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":50,"id":{"name":"bytes","disambiguator":[16605158223807296615,2139309927205400556]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":51,"id":{"name":"once_cell","disambiguator":[15381452257217144295,7635182210418599630]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":52,"id":{"name":"tokio_macros","disambiguator":[17518586050439928397,5930942372196096673]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":53,"id":{"name":"num_cpus","disambiguator":[673716848283037980,13614879919095805843]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":54,"id":{"name":"signal_hook_registry","disambiguator":[3393182166626963142,14184042726220995224]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":55,"id":{"name":"tracing","disambiguator":[3761131477164898788,17988507508839296912]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":56,"id":{"name":"tracing_core","disambiguator":[12819274341033219246,1387062986284678051]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":57,"id":{"name":"lazy_static","disambiguator":[9131932799642439997,5737279247675587365]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","num":58,"id":{"name":"tracing_attributes","disambiguator":[12642393570820686670,5884730098351997577]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","num":59,"id":{"name":"tokio_util","disambiguator":[17488339846141952403,9164315025699559522]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","num":60,"id":{"name":"indexmap","disambiguator":[598627317489920631,17412820150691355810]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","num":61,"id":{"name":"hashbrown","disambiguator":[9464657979170591308,1424842189896820511]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":0,"byte_end":9102,"line_start":1,"line_end":230,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2957},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":15344,"byte_end":15360,"line_start":39,"line_end":39,"column_start":16,"column_end":32},"alias_span":null,"name":"MakeBalanceLayer","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":15377,"byte_end":15388,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"alias_span":null,"name":"MakeBalance","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":15390,"byte_end":15400,"line_start":40,"line_end":40,"column_start":29,"column_end":39},"alias_span":null,"name":"MakeFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":15420,"byte_end":15427,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"alias_span":null,"name":"Balance","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48463,"byte_end":48474,"line_start":46,"line_end":46,"column_start":22,"column_end":33},"alias_span":null,"name":"BufferLayer","value":"","parent":{"krate":0,"index":360}},{"kind":"Use","ref_id":{"krate":0,"index":3775},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48499,"byte_end":48505,"line_start":47,"line_end":47,"column_start":24,"column_end":30},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":360}},{"kind":"Use","ref_id":{"krate":0,"index":4229},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72362,"byte_end":72373,"line_start":39,"line_end":39,"column_start":21,"column_end":32},"alias_span":null,"name":"ServiceList","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":4329},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/mod.rs","byte_start":76070,"byte_end":76091,"line_start":7,"line_end":7,"column_start":23,"column_end":44},"alias_span":null,"name":"ConcurrencyLimitLayer","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":4335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/mod.rs","byte_start":76102,"byte_end":76118,"line_start":7,"line_end":7,"column_start":55,"column_end":71},"alias_span":null,"name":"ConcurrencyLimit","value":"","parent":{"krate":0,"index":717}},{"kind":"Use","ref_id":{"krate":0,"index":4343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/mod.rs","byte_start":81073,"byte_end":81087,"line_start":8,"line_end":8,"column_start":23,"column_end":37},"alias_span":null,"name":"RateLimitLayer","value":"","parent":{"krate":0,"index":823}},{"kind":"Use","ref_id":{"krate":0,"index":4349},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/mod.rs","byte_start":81095,"byte_end":81099,"line_start":8,"line_end":8,"column_start":45,"column_end":49},"alias_span":null,"name":"Rate","value":"","parent":{"krate":0,"index":823}},{"kind":"Use","ref_id":{"krate":0,"index":4357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/mod.rs","byte_start":81110,"byte_end":81119,"line_start":8,"line_end":8,"column_start":60,"column_end":69},"alias_span":null,"name":"RateLimit","value":"","parent":{"krate":0,"index":823}},{"kind":"Use","ref_id":{"krate":0,"index":4335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75854,"byte_end":75870,"line_start":7,"line_end":7,"column_start":19,"column_end":35},"alias_span":null,"name":"ConcurrencyLimit","value":"","parent":{"krate":0,"index":716}},{"kind":"Use","ref_id":{"krate":0,"index":4329},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75872,"byte_end":75893,"line_start":7,"line_end":7,"column_start":37,"column_end":58},"alias_span":null,"name":"ConcurrencyLimitLayer","value":"","parent":{"krate":0,"index":716}},{"kind":"Use","ref_id":{"krate":0,"index":4357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75907,"byte_end":75916,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"alias_span":null,"name":"RateLimit","value":"","parent":{"krate":0,"index":716}},{"kind":"Use","ref_id":{"krate":0,"index":4343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75918,"byte_end":75932,"line_start":8,"line_end":8,"column_start":23,"column_end":37},"alias_span":null,"name":"RateLimitLayer","value":"","parent":{"krate":0,"index":716}},{"kind":"Use","ref_id":{"krate":0,"index":4400},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88943,"byte_end":88961,"line_start":68,"line_end":68,"column_start":18,"column_end":36},"alias_span":null,"name":"CompleteOnResponse","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":4401},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88943,"byte_end":88961,"line_start":68,"line_end":68,"column_start":18,"column_end":36},"alias_span":null,"name":"CompleteOnResponse","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88963,"byte_end":88978,"line_start":68,"line_end":68,"column_start":38,"column_end":53},"alias_span":null,"name":"TrackCompletion","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":4479},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88995,"byte_end":89003,"line_start":69,"line_end":69,"column_start":15,"column_end":23},"alias_span":null,"name":"Constant","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":4534},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89020,"byte_end":89028,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"alias_span":null,"name":"PeakEwma","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":4710},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89052,"byte_end":89067,"line_start":71,"line_end":71,"column_start":23,"column_end":38},"alias_span":null,"name":"PendingRequests","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":4545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89128,"byte_end":89144,"line_start":75,"line_end":75,"column_start":27,"column_end":43},"alias_span":null,"name":"PeakEwmaDiscover","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":4729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89164,"byte_end":89187,"line_start":75,"line_end":75,"column_start":63,"column_end":86},"alias_span":null,"name":"PendingRequestsDiscover","value":"","parent":{"krate":0,"index":926}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":113939,"byte_end":113953,"line_start":6,"line_end":6,"column_start":32,"column_end":46},"alias_span":null,"name":"MakeConnection","value":"","parent":{"krate":0,"index":1238}},{"kind":"Use","ref_id":{"krate":0,"index":4811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":113991,"byte_end":113997,"line_start":7,"line_end":7,"column_start":37,"column_end":43},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":1238}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114028,"byte_end":114037,"line_start":8,"line_end":8,"column_start":30,"column_end":39},"alias_span":null,"name":"AsService","value":"","parent":{"krate":0,"index":1238}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114039,"byte_end":114050,"line_start":8,"line_end":8,"column_start":41,"column_end":52},"alias_span":null,"name":"IntoService","value":"","parent":{"krate":0,"index":1238}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114052,"byte_end":114063,"line_start":8,"line_end":8,"column_start":54,"column_end":65},"alias_span":null,"name":"MakeService","value":"","parent":{"krate":0,"index":1238}},{"kind":"Use","ref_id":{"krate":0,"index":4829},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114147,"byte_end":114159,"line_start":13,"line_end":13,"column_start":42,"column_end":54},"alias_span":null,"name":"SharedFuture","value":"","parent":{"krate":0,"index":1417}},{"kind":"Use","ref_id":{"krate":0,"index":4830},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114147,"byte_end":114159,"line_start":13,"line_end":13,"column_start":42,"column_end":54},"alias_span":null,"name":"SharedFuture","value":"","parent":{"krate":0,"index":1417}},{"kind":"Use","ref_id":{"krate":60,"index":21},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":126864,"byte_end":126874,"line_start":6,"line_end":6,"column_start":19,"column_end":29},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":1422}},{"kind":"Use","ref_id":{"krate":0,"index":4871},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/mod.rs","byte_start":126719,"byte_end":126729,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"ReadyCache","value":"","parent":{"krate":0,"index":1421}},{"kind":"Use","ref_id":{"krate":0,"index":5067},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143767,"byte_end":143779,"line_start":10,"line_end":10,"column_start":22,"column_end":34},"alias_span":null,"name":"TimeoutLayer","value":"","parent":{"krate":0,"index":1543}},{"kind":"Use","ref_id":{"krate":0,"index":5083},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147734,"byte_end":147741,"line_start":23,"line_end":23,"column_start":16,"column_end":23},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147743,"byte_end":147755,"line_start":23,"line_end":23,"column_start":25,"column_end":37},"alias_span":null,"name":"AndThenLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":1733},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147770,"byte_end":147778,"line_start":24,"line_end":24,"column_start":13,"column_end":21},"alias_span":null,"name":"BoxLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":1794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147780,"byte_end":147790,"line_start":24,"line_end":24,"column_start":23,"column_end":33},"alias_span":null,"name":"BoxService","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147792,"byte_end":147808,"line_start":24,"line_end":24,"column_start":35,"column_end":51},"alias_span":null,"name":"UnsyncBoxService","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147823,"byte_end":147829,"line_start":25,"line_end":25,"column_start":13,"column_end":19},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":2129},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147852,"byte_end":147866,"line_start":26,"line_end":26,"column_start":22,"column_end":36},"alias_span":null,"name":"future_service","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5412},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147868,"byte_end":147881,"line_start":26,"line_end":26,"column_start":38,"column_end":51},"alias_span":null,"name":"FutureService","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5433},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147898,"byte_end":147904,"line_start":27,"line_end":27,"column_start":15,"column_end":21},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5442},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147906,"byte_end":147917,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"MapErrLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5688},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147937,"byte_end":147946,"line_start":28,"line_end":28,"column_start":18,"column_end":27},"alias_span":null,"name":"MapFuture","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5697},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147948,"byte_end":147962,"line_start":28,"line_end":28,"column_start":29,"column_end":43},"alias_span":null,"name":"MapFutureLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147983,"byte_end":147993,"line_start":29,"line_end":29,"column_start":19,"column_end":29},"alias_span":null,"name":"MapRequest","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5521},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147995,"byte_end":148010,"line_start":29,"line_end":29,"column_start":31,"column_end":46},"alias_span":null,"name":"MapRequestLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5530},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148032,"byte_end":148043,"line_start":30,"line_end":30,"column_start":20,"column_end":31},"alias_span":null,"name":"MapResponse","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148045,"byte_end":148061,"line_start":30,"line_end":30,"column_start":33,"column_end":49},"alias_span":null,"name":"MapResponseLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5609},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148081,"byte_end":148090,"line_start":31,"line_end":31,"column_start":18,"column_end":27},"alias_span":null,"name":"MapResult","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5618},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148092,"byte_end":148106,"line_start":31,"line_end":31,"column_start":29,"column_end":43},"alias_span":null,"name":"MapResultLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5703},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148122,"byte_end":148129,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"alias_span":null,"name":"Oneshot","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5858},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148145,"byte_end":148153,"line_start":33,"line_end":33,"column_start":15,"column_end":23},"alias_span":null,"name":"Optional","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":2572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148167,"byte_end":148172,"line_start":34,"line_end":34,"column_start":13,"column_end":18},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148174,"byte_end":148182,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"alias_span":null,"name":"ReadyAnd","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":2551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148184,"byte_end":148196,"line_start":34,"line_end":34,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadyOneshot","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":2619},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148216,"byte_end":148226,"line_start":35,"line_end":35,"column_start":18,"column_end":28},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5864},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148228,"byte_end":148237,"line_start":35,"line_end":35,"column_start":30,"column_end":39},"alias_span":null,"name":"ServiceFn","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148251,"byte_end":148255,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5881},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148257,"byte_end":148266,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"alias_span":null,"name":"ThenLayer","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5248},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148298,"byte_end":148305,"line_start":39,"line_end":39,"column_start":26,"column_end":33},"alias_span":null,"name":"CallAll","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":5301},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148307,"byte_end":148323,"line_start":39,"line_end":39,"column_start":35,"column_end":51},"alias_span":null,"name":"CallAllUnordered","value":"","parent":{"krate":0,"index":1639}},{"kind":"Use","ref_id":{"krate":0,"index":2451},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148453,"byte_end":148458,"line_start":47,"line_end":47,"column_start":30,"column_end":35},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":2798}},{"kind":"Use","ref_id":{"krate":0,"index":5092},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148543,"byte_end":148556,"line_start":53,"line_end":53,"column_start":30,"column_end":43},"alias_span":null,"name":"AndThenFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5093},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148543,"byte_end":148556,"line_start":53,"line_end":53,"column_start":30,"column_end":43},"alias_span":null,"name":"AndThenFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5460},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148586,"byte_end":148598,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"alias_span":null,"name":"MapErrFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148586,"byte_end":148598,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"alias_span":null,"name":"MapErrFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148633,"byte_end":148650,"line_start":55,"line_end":55,"column_start":34,"column_end":51},"alias_span":null,"name":"MapResponseFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5558},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148633,"byte_end":148650,"line_start":55,"line_end":55,"column_start":34,"column_end":51},"alias_span":null,"name":"MapResponseFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5636},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148683,"byte_end":148698,"line_start":56,"line_end":56,"column_start":32,"column_end":47},"alias_span":null,"name":"MapResultFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5637},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148683,"byte_end":148698,"line_start":56,"line_end":56,"column_start":32,"column_end":47},"alias_span":null,"name":"MapResultFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":2464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148729,"byte_end":148735,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5901},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148774,"byte_end":148784,"line_start":58,"line_end":58,"column_start":26,"column_end":36},"alias_span":null,"name":"ThenFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":0,"index":5902},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148774,"byte_end":148784,"line_start":58,"line_end":58,"column_start":26,"column_end":36},"alias_span":null,"name":"ThenFuture","value":"","parent":{"krate":0,"index":2802}},{"kind":"Use","ref_id":{"krate":18,"index":25},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256627,"byte_end":256635,"line_start":5,"line_end":5,"column_start":23,"column_end":31},"alias_span":null,"name":"layer_fn","value":"","parent":{"krate":0,"index":2910}},{"kind":"Use","ref_id":{"krate":18,"index":71},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256637,"byte_end":256642,"line_start":5,"line_end":5,"column_start":33,"column_end":38},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":2910}},{"kind":"Use","ref_id":{"krate":18,"index":87},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256644,"byte_end":256651,"line_start":5,"line_end":5,"column_start":40,"column_end":47},"alias_span":null,"name":"LayerFn","value":"","parent":{"krate":0,"index":2910}},{"kind":"Use","ref_id":{"krate":18,"index":81},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256851,"byte_end":256859,"line_start":13,"line_end":13,"column_start":27,"column_end":35},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":2921}},{"kind":"Use","ref_id":{"krate":18,"index":95},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256861,"byte_end":256866,"line_start":13,"line_end":13,"column_start":37,"column_end":42},"alias_span":null,"name":"Stack","value":"","parent":{"krate":0,"index":2921}},{"kind":"Use","ref_id":{"krate":0,"index":2619},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8638,"byte_end":8648,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2821},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8650,"byte_end":8660,"line_start":211,"line_end":211,"column_start":34,"column_end":44},"alias_span":null,"name":"ServiceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5963},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8703,"byte_end":8717,"line_start":214,"line_end":214,"column_start":25,"column_end":39},"alias_span":null,"name":"ServiceBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8828,"byte_end":8839,"line_start":218,"line_end":218,"column_start":22,"column_end":33},"alias_span":null,"name":"MakeService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":71},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8877,"byte_end":8882,"line_start":220,"line_end":220,"column_start":22,"column_end":27},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":13},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8922,"byte_end":8929,"line_start":222,"line_end":222,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":0,"byte_end":9102,"line_start":1,"line_end":230,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":360},{"krate":0,"index":620},{"krate":0,"index":716},{"krate":0,"index":926},{"krate":0,"index":1238},{"krate":0,"index":1421},{"krate":0,"index":1543},{"krate":0,"index":1639},{"krate":0,"index":2859},{"krate":0,"index":2910},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2951}],"decl_id":null,"docs":" `async fn(Request) -> Result<Response, Error>`","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":55,"byte_end":161,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(broken_intra_doc_links)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":162,"byte_end":194,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"allow(elided_lifetimes_in_paths, clippy :: type_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":195,"byte_end":256,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/ `async fn(Request) -> Result<Response, Error>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":342,"byte_end":392,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":393,"byte_end":396,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":397,"byte_end":411,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":412,"byte_end":415,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tower is a library of modular and reusable components for building","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":416,"byte_end":486,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ robust networking clients and servers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":487,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":530,"byte_end":533,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tower provides a simple core abstraction, the [`Service`] trait, which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":534,"byte_end":608,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ represents an asynchronous function taking a request and returning either a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":609,"byte_end":688,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ response or an error. This abstraction can be used to model both clients and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":689,"byte_end":769,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ servers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":770,"byte_end":782,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":783,"byte_end":786,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Generic components, like [timeouts], [rate limiting], and [load balancing],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":787,"byte_end":866,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ can be modeled as [`Service`]s that wrap some inner service and apply","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":867,"byte_end":940,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ additional behavior before or after the inner service is called. This allows","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":941,"byte_end":1021,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ implementing these components in a protocol-agnostic, composable way. Typically,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1022,"byte_end":1106,"line_start":28,"line_end":28,"column_start":1,"column_end":85}},{"value":"/ such services are referred to as _middleware_.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1107,"byte_end":1157,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1158,"byte_end":1161,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ An additional abstraction, the [`Layer`] trait, is used to compose","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1162,"byte_end":1232,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ middleware with [`Service`]s. If a [`Service`] can be thought of as an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1233,"byte_end":1307,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ asynchronous function from a request type to a response type, a [`Layer`] is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1308,"byte_end":1388,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ a function taking a [`Service`] of one type and returning a [`Service`] of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1389,"byte_end":1469,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ different type. The [`ServiceBuilder`] type is used to add middleware to a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1470,"byte_end":1548,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ service by composing it with multiple [`Layer`]s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1549,"byte_end":1602,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1603,"byte_end":1606,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## The Tower Ecosystem","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1607,"byte_end":1633,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1634,"byte_end":1637,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Tower is made up of the following crates:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1638,"byte_end":1683,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1684,"byte_end":1687,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * [`tower`] (this crate)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1688,"byte_end":1716,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ * [`tower-service`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1717,"byte_end":1740,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ * [`tower-layer`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1741,"byte_end":1762,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ * [`tower-test`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1763,"byte_end":1783,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1784,"byte_end":1787,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Since the [`Service`] and [`Layer`] traits are important integration points","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1788,"byte_end":1867,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ for all libraries using Tower, they are kept as stable as possible, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1868,"byte_end":1943,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ breaking changes are made rarely. Therefore, they are defined in separate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":1944,"byte_end":2021,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ crates, [`tower-service`] and [`tower-layer`]. This crate contains","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2022,"byte_end":2092,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ re-exports of those core traits, implementations of commonly-used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2093,"byte_end":2162,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ middleware, and [utilities] for working with [`Service`]s and [`Layer`]s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2163,"byte_end":2240,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ Finally, the [`tower-test`] crate provides tools for testing programs using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2241,"byte_end":2320,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ Tower.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2321,"byte_end":2331,"line_start":54,"line_end":54,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2332,"byte_end":2335,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2336,"byte_end":2347,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2348,"byte_end":2351,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Tower provides an abstraction layer, and generic implementations of various","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2352,"byte_end":2431,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ middleware. This means that the `tower` crate on its own does *not* provide","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2432,"byte_end":2511,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ a working implementation of a network client or server. Instead, Tower's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2512,"byte_end":2588,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ [`Service` trait][`Service`] provides an integration point between","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2589,"byte_end":2659,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ application code, libraries providing middleware implementations, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2660,"byte_end":2733,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ libraries that implement servers and/or clients for various network","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2734,"byte_end":2805,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ protocols.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2806,"byte_end":2820,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2821,"byte_end":2824,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Depending on your particular use case, you might use Tower in several ways:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2825,"byte_end":2904,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2905,"byte_end":2908,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * **Implementing application logic** for a networked program. You might","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2909,"byte_end":2984,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/   use the [`Service`] trait to model your application's behavior, and use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":2985,"byte_end":3062,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/   the middleware [provided by this crate](#modules) and by other libraries","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3063,"byte_end":3141,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   to add functionality to clients and servers provided by one or more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3142,"byte_end":3215,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/   protocol implementations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3216,"byte_end":3247,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/ * **Implementing middleware** to add custom behavior to network clients and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3248,"byte_end":3327,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   servers in a reusable manner. This might be general-purpose middleware","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3328,"byte_end":3404,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/   (and if it is, please consider releasing your middleware as a library for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3405,"byte_end":3484,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/   other Tower users!) or application-specific behavior that needs to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3485,"byte_end":3560,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/   shared between multiple clients or servers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3561,"byte_end":3610,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ * **Implementing a network protocol**. Libraries that implement network","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3611,"byte_end":3686,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/   protocols (such as HTTP) can depend on `tower-service` to use the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3687,"byte_end":3758,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/   [`Service`] trait as an integration point between the protocol and user","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3759,"byte_end":3836,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/   code. For example, a client for some protocol might implement [`Service`],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3837,"byte_end":3917,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/   allowing users to add arbitrary Tower middleware to those clients.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3918,"byte_end":3990,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/   Similarly, a server might be created from a user-provided [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":3991,"byte_end":4067,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4068,"byte_end":4071,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   Additionally, when a network protocol requires functionality already","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4072,"byte_end":4146,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/   provided by existing Tower middleware, a protocol implementation might use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4147,"byte_end":4227,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/   Tower middleware internally, as well as as an integration point.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4228,"byte_end":4298,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4299,"byte_end":4302,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Library Support","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4303,"byte_end":4325,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4326,"byte_end":4329,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ A number of third-party libraries support Tower and the [`Service`] trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4330,"byte_end":4408,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ The following is an incomplete list of such libraries:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4409,"byte_end":4467,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4468,"byte_end":4471,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * [`hyper`]: A fast and correct low-level HTTP implementation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4472,"byte_end":4538,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"/ * [`tonic`]: A [gRPC-over-HTTP/2][grpc] implementation built on top of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4539,"byte_end":4613,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/   [`hyper`]. See [here][tonic-examples] for examples of using [`tonic`] with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4614,"byte_end":4694,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/   Tower.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4695,"byte_end":4707,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/ * [`warp`]: A lightweight, composable web framework. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4708,"byte_end":4768,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/   [here][warp-service] for details on using [`warp`] with Tower.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4769,"byte_end":4837,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ * [`tower-lsp`] and its fork, [`lspower`]: implementations of the [Language","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4838,"byte_end":4917,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   Server Protocol][lsp] based on Tower.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4918,"byte_end":4961,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4962,"byte_end":4965,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`hyper`]: https://crates.io/crates/hyper","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":4966,"byte_end":5011,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ [`tonic`]: https://crates.io/crates/tonic","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5012,"byte_end":5057,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ [tonic-examples]: https://github.com/hyperium/tonic/tree/master/examples/src/tower","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5058,"byte_end":5144,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/ [grpc]: https://grpc.io","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5145,"byte_end":5172,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/ [`warp`]: https://crates.io/crates/warp","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5173,"byte_end":5216,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [warp-service]: https://docs.rs/warp/0.2.5/warp/fn.service.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5217,"byte_end":5284,"line_start":108,"line_end":108,"column_start":1,"column_end":68}},{"value":"/ [`tower-lsp`]: https://crates.io/crates/tower-lsp","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5285,"byte_end":5338,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/ [`lspower`]: https://crates.io/crates/lspower","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5339,"byte_end":5388,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ [lsp]: https://microsoft.github.io/language-server-protocol/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5389,"byte_end":5453,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5454,"byte_end":5457,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a crate that supports Tower, we'd love to add","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5458,"byte_end":5535,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ your crate to this list! Please [open a PR] adding a brief description of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5536,"byte_end":5613,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ your library!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5614,"byte_end":5631,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5632,"byte_end":5635,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ## Getting Started","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5636,"byte_end":5658,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5659,"byte_end":5662,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The various middleware implementations provided by this crate are feature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5663,"byte_end":5740,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ flagged, so that users can only compile the parts of Tower they need. By","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5741,"byte_end":5817,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ default, all the optional middleware are disabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5818,"byte_end":5872,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5873,"byte_end":5876,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ To get started using all of Tower's optional middleware, add this to your","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5877,"byte_end":5954,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ `Cargo.toml`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5955,"byte_end":5972,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5973,"byte_end":5976,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5977,"byte_end":5988,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tower = { version = \"0.4\", features = [\"full\"] }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":5989,"byte_end":6041,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6042,"byte_end":6049,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6050,"byte_end":6053,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can only enable some features. For example, to enable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6054,"byte_end":6130,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ only the [`retry`] and [`timeout`][timeouts] middleware, write:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6131,"byte_end":6198,"line_start":131,"line_end":131,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6199,"byte_end":6202,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6203,"byte_end":6214,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"/ tower = { version = \"0.4\", features = [\"retry\", \"timeout\"] }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6215,"byte_end":6279,"line_start":134,"line_end":134,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6280,"byte_end":6287,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6288,"byte_end":6291,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ See [here](#modules) for a complete list of all middleware provided by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6292,"byte_end":6366,"line_start":137,"line_end":137,"column_start":1,"column_end":75}},{"value":"/ Tower.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6367,"byte_end":6377,"line_start":138,"line_end":138,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6378,"byte_end":6381,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6382,"byte_end":6413,"line_start":140,"line_end":140,"column_start":1,"column_end":32}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6414,"byte_end":6441,"line_start":141,"line_end":141,"column_start":1,"column_end":28}},{"value":"/ [timeouts]: crate::timeout","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6442,"byte_end":6472,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ [rate limiting]: crate::limit::rate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6473,"byte_end":6512,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [load balancing]: crate::balance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6513,"byte_end":6549,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/ [`ServiceBuilder`]: crate::ServiceBuilder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6550,"byte_end":6595,"line_start":145,"line_end":145,"column_start":1,"column_end":46}},{"value":"/ [utilities]: crate::ServiceExt","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6596,"byte_end":6630,"line_start":146,"line_end":146,"column_start":1,"column_end":35}},{"value":"/ [`tower`]: https://crates.io/crates/tower","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6631,"byte_end":6676,"line_start":147,"line_end":147,"column_start":1,"column_end":46}},{"value":"/ [`tower-service`]: https://crates.io/crates/tower-service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6677,"byte_end":6738,"line_start":148,"line_end":148,"column_start":1,"column_end":62}},{"value":"/ [`tower-layer`]: https://crates.io/crates/tower-layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6739,"byte_end":6796,"line_start":149,"line_end":149,"column_start":1,"column_end":58}},{"value":"/ [`tower-test`]: https://crates.io/crates/tower-test","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6797,"byte_end":6852,"line_start":150,"line_end":150,"column_start":1,"column_end":56}},{"value":"/ [`retry`]: crate::retry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6853,"byte_end":6880,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/ [open a PR]: https://github.com/tower-rs/tower/compare","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6881,"byte_end":6939,"line_start":152,"line_end":152,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balance","qualname":"::balance","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":14},{"krate":0,"index":245}],"decl_id":null,"docs":" Middleware that allows balancing load among multiple services.","sig":null,"attributes":[{"value":"cfg(feature = \"balance\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":6976,"byte_end":7003,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"/ Middleware that allows balancing load among multiple services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10124,"byte_end":10190,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10191,"byte_end":10194,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ In larger systems, multiple endpoints are often available for a given service. As load","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10195,"byte_end":10285,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/ increases, you want to ensure that that load is spread evenly across the available services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10286,"byte_end":10382,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ Otherwise, clients could see spikes in latency if their request goes to a particularly loaded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10383,"byte_end":10480,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ service, even when spare capacity is available to handle that request elsewhere.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10481,"byte_end":10565,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10566,"byte_end":10569,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module provides two pieces of middleware that helps with this type of load balancing:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10570,"byte_end":10664,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10665,"byte_end":10668,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ First, [`p2c`] implements the \"[Power of Two Random Choices]\" algorithm, a simple but robust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10669,"byte_end":10765,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ technique for spreading load across services with only inexact load measurements. Use this if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10766,"byte_end":10863,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ the set of available services is not within your control, and you simply want to spread load","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10864,"byte_end":10960,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ among that set of services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10961,"byte_end":10992,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10993,"byte_end":10996,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [Power of Two Random Choices]: http://www.eecs.harvard.edu/~michaelm/postscripts/handbook2001.pdf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":10997,"byte_end":11098,"line_start":15,"line_end":15,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11099,"byte_end":11102,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Second, [`pool`] implements a dynamically sized pool of services. It estimates the overall","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11103,"byte_end":11197,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ current load by tracking successful and unsuccessful calls to [`poll_ready`], and uses an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11198,"byte_end":11291,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ exponentially weighted moving average to add (using [`MakeService`]) or remove (by dropping)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11292,"byte_end":11388,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ services in response to increases or decreases in load. Use this if you are able to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11389,"byte_end":11476,"line_start":20,"line_end":20,"column_start":1,"column_end":88}},{"value":"/ dynamically add more service endpoints to the system to handle added load.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11477,"byte_end":11555,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11556,"byte_end":11559,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11560,"byte_end":11574,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11575,"byte_end":11578,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11579,"byte_end":11590,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11591,"byte_end":11621,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"load\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11622,"byte_end":11652,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ # fn warnings_are_errors() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11653,"byte_end":11685,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ use tower::balance::p2c::Balance;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11686,"byte_end":11723,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ use tower::load::Load;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11724,"byte_end":11750,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11751,"byte_end":11788,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ use futures_util::pin_mut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11789,"byte_end":11819,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/ # use futures_core::Stream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11820,"byte_end":11851,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ # use futures_util::StreamExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11852,"byte_end":11886,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11887,"byte_end":11890,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ async fn spread<Req, S: Service<Req> + Load>(svc1: S, svc2: S, reqs: impl Stream<Item = Req>)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11891,"byte_end":11988,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11989,"byte_end":11998,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/     S::Error: Into<tower::BoxError>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":11999,"byte_end":12039,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # // this bound is pretty unfortunate, and the compiler does _not_ help","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12040,"byte_end":12115,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/     S::Metric: std::fmt::Debug,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12116,"byte_end":12151,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12152,"byte_end":12157,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/     // Spread load evenly across the two services","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12158,"byte_end":12211,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/     let p2c = Balance::new(tower::discover::ServiceList::new(vec![svc1, svc2]));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12212,"byte_end":12296,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12297,"byte_end":12300,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     // Issue all the requests that come in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12301,"byte_end":12348,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     // Some will go to svc1, some will go to svc2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12349,"byte_end":12403,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/     pin_mut!(reqs);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12404,"byte_end":12427,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/     let mut responses = p2c.call_all(reqs);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12428,"byte_end":12475,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/     while let Some(rsp) = responses.next().await {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12476,"byte_end":12530,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/         // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12531,"byte_end":12549,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12550,"byte_end":12559,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12560,"byte_end":12565,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12566,"byte_end":12573,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12574,"byte_end":12581,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12582,"byte_end":12585,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: crate::MakeService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12586,"byte_end":12625,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12626,"byte_end":12672,"line_start":57,"line_end":57,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::balance::error","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":10},{"krate":0,"index":12}],"decl_id":null,"docs":" Error types for the [`tower::balance`] middleware.","sig":null,"attributes":[{"value":"/ Error types for the [`tower::balance`] middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12717,"byte_end":12771,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12772,"byte_end":12775,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tower::balance`]: crate::balance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12776,"byte_end":12814,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2952},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12912,"byte_end":12920,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"Discover","qualname":"::balance::error::Discover","value":"","parent":null,"children":[],"decl_id":null,"docs":" The balancer's endpoint discovery stream failed.\n","sig":null,"attributes":[{"value":"/ The balancer's endpoint discovery stream failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12831,"byte_end":12883,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"p2c","qualname":"::balance::p2c","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":46},{"krate":0,"index":102},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242}],"decl_id":null,"docs":" This module implements the \"[Power of Two Random Choices]\" load balancing algorithm.","sig":null,"attributes":[{"value":"/ This module implements the \"[Power of Two Random Choices]\" load balancing algorithm.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13254,"byte_end":13342,"line_start":1,"line_end":1,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13343,"byte_end":13346,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It is a simple but robust technique for spreading load across services with only inexact load","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13347,"byte_end":13444,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ measurements. As its name implies, whenever a request comes in, it samples two ready services","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13445,"byte_end":13542,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ at random, and issues the request to whichever service is less loaded. How loaded a service is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13543,"byte_end":13641,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ is determined by the return value of [`Load`](crate::load::Load).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13642,"byte_end":13711,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13712,"byte_end":13715,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ As described in the [Finagle Guide][finagle]:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13716,"byte_end":13765,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13766,"byte_end":13769,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ > The algorithm randomly picks two services from the set of ready endpoints and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13770,"byte_end":13853,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ > selects the least loaded of the two. By repeatedly using this strategy, we can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13854,"byte_end":13938,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/ > expect a manageable upper bound on the maximum load of any server.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":13939,"byte_end":14011,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14012,"byte_end":14017,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ > The maximum load variance between any two servers is bound by `ln(ln(n))` where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14018,"byte_end":14103,"line_start":14,"line_end":14,"column_start":1,"column_end":86}},{"value":"/ > `n` is the number of servers in the cluster.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14104,"byte_end":14154,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14155,"byte_end":14158,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The balance service and layer implementations rely on _service discovery_ to provide the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14159,"byte_end":14251,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ underlying set of services to balance requests across. This happens through the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14252,"byte_end":14335,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ [`Discover`](crate::discover::Discover) trait, which is essentially a [`Stream`] that indicates","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14336,"byte_end":14435,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ when services become available or go away. If you have a fixed set of services, consider using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14436,"byte_end":14534,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ [`ServiceList`](crate::discover::ServiceList).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14535,"byte_end":14585,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14586,"byte_end":14589,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Since the load balancer needs to perform _random_ choices, the constructors in this module","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14590,"byte_end":14684,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/ usually come in two forms: one that uses randomness provided by the operating system, and one","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14685,"byte_end":14782,"line_start":24,"line_end":24,"column_start":1,"column_end":98}},{"value":"/ that lets you specify the random seed to use. Usually the former is what you'll want, though","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14783,"byte_end":14879,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ the latter may come in handy for reproducability or to reduce reliance on the operating system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14880,"byte_end":14979,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14980,"byte_end":14983,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [Power of Two Random Choices]: http://www.eecs.harvard.edu/~michaelm/postscripts/handbook2001.pdf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":14984,"byte_end":15085,"line_start":28,"line_end":28,"column_start":1,"column_end":102}},{"value":"/ [finagle]: https://twitter.github.io/finagle/guide/Clients.html#power-of-two-choices-p2c-least-loaded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":15086,"byte_end":15191,"line_start":29,"line_end":29,"column_start":1,"column_end":106}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/mod.rs","byte_start":15192,"byte_end":15268,"line_start":30,"line_end":30,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2957},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16463,"byte_end":16479,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"MakeBalanceLayer","qualname":"::balance::p2c::layer::MakeBalanceLayer","value":"MakeBalanceLayer {  }","parent":null,"children":[{"krate":0,"index":2960}],"decl_id":null,"docs":" Construct load balancers ([`Balance`]) over dynamic service sets ([`Discover`]) produced by the\n \"inner\" service in response to requests coming from the \"outer\" service.","sig":null,"attributes":[{"value":"/ Construct load balancers ([`Balance`]) over dynamic service sets ([`Discover`]) produced by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15516,"byte_end":15615,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ \"inner\" service in response to requests coming from the \"outer\" service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15616,"byte_end":15692,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15693,"byte_end":15696,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This construction may seem a little odd at first glance. This is not a layer that takes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15697,"byte_end":15788,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ requests and produces responses in the traditional sense. Instead, it is more like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15789,"byte_end":15875,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/ [`MakeService`] in that it takes service _descriptors_ (see `Target` on [`MakeService`])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15876,"byte_end":15968,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ and produces _services_. Since [`Balance`] spreads requests across a _set_ of services,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":15969,"byte_end":16060,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ the inner service should produce a [`Discover`], not just a single","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16061,"byte_end":16131,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ [`Service`], given a service descriptor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16132,"byte_end":16176,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16177,"byte_end":16180,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](crate::balance) for details on load balancing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16181,"byte_end":16268,"line_start":15,"line_end":15,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16269,"byte_end":16272,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Balance`]: crate::balance::p2c::Balance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16273,"byte_end":16318,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ [`Discover`]: crate::discover::Discover","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16319,"byte_end":16362,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ [`MakeService`]: crate::MakeService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16363,"byte_end":16402,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16403,"byte_end":16434,"line_start":20,"line_end":20,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16638,"byte_end":16641,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<MakeBalanceLayer<D, Req>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build balancers using operating system entropy.\n","sig":null,"attributes":[{"value":"/ Build balancers using operating system entropy.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16575,"byte_end":16626,"line_start":27,"line_end":27,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2965},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18156,"byte_end":18167,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"MakeBalance","qualname":"::balance::p2c::make::MakeBalance","value":"MakeBalance {  }","parent":null,"children":[{"krate":0,"index":2968},{"krate":0,"index":2969}],"decl_id":null,"docs":" Constructs load balancers over dynamic service sets produced by a wrapped \"inner\" service.","sig":null,"attributes":[{"value":"/ Constructs load balancers over dynamic service sets produced by a wrapped \"inner\" service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17466,"byte_end":17560,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17561,"byte_end":17564,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This is effectively an implementation of [`MakeService`] except that it forwards the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17565,"byte_end":17661,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ descriptors (`Target`) to an inner service (`S`), and expects that service to produce a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17662,"byte_end":17753,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ service set in the form of a [`Discover`]. It then wraps the service set in a [`Balance`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17754,"byte_end":17847,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ before returning it as the \"made\" service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17848,"byte_end":17894,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17895,"byte_end":17898,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](crate::balance) for details on load balancing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17899,"byte_end":17986,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17987,"byte_end":17990,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: crate::MakeService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":17991,"byte_end":18030,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ [`Discover`]: crate::discover::Discover","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18031,"byte_end":18074,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ [`Balance`]: crate::balance::p2c::Balance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18075,"byte_end":18120,"line_start":25,"line_end":25,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18356,"byte_end":18366,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"MakeFuture","qualname":"::balance::p2c::make::MakeFuture","value":"MakeFuture {  }","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2981}],"decl_id":null,"docs":" A [`Balance`] in the making.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18313,"byte_end":18327,"line_start":35,"line_end":35,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3006},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18356,"byte_end":18366,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"__MakeFuture","qualname":"::balance::p2c::make::_::__MakeFuture","value":"__MakeFuture {  }","parent":null,"children":[{"krate":0,"index":3010},{"krate":0,"index":3011}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18313,"byte_end":18327,"line_start":35,"line_end":35,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18542,"byte_end":18545,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MakeBalance<S, Req>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build balancers using operating system entropy.\n","sig":null,"attributes":[{"value":"/ Build balancers using operating system entropy.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18479,"byte_end":18530,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":21135,"byte_end":21142,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Balance","qualname":"::balance::p2c::service::Balance","value":"Balance {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" Efficiently distributes requests across an arbitrary number of services.","sig":null,"attributes":[{"value":"/ Efficiently distributes requests across an arbitrary number of services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20468,"byte_end":20544,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20545,"byte_end":20548,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](..) for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20549,"byte_end":20606,"line_start":23,"line_end":23,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20607,"byte_end":20610,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Note that [`Balance`] requires that the [`Discover`] you use is [`Unpin`] in order to implement","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20611,"byte_end":20710,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ [`Service`]. This is because it needs to be accessed from [`Service::poll_ready`], which takes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20711,"byte_end":20809,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ `&mut self`. You can achieve this easily by wrapping your [`Discover`] in [`Box::pin`] before you","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20810,"byte_end":20911,"line_start":27,"line_end":27,"column_start":1,"column_end":102}},{"value":"/ construct the [`Balance`] instance. For more details, see [#319].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20912,"byte_end":20981,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20982,"byte_end":20985,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Box::pin`]: https://doc.rust-lang.org/std/boxed/struct.Box.html#method.pin","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":20986,"byte_end":21066,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ [#319]: https://github.com/tower-rs/tower/issues/319","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":21067,"byte_end":21123,"line_start":31,"line_end":31,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22387,"byte_end":22390,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<Balance<D, Req>>::new","value":"pub fn new(D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a load balancer that uses operating system entropy.\n","sig":null,"attributes":[{"value":"/ Constructs a load balancer that uses operating system entropy.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22309,"byte_end":22375,"line_start":88,"line_end":88,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22609,"byte_end":22617,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"from_rng","qualname":"<Balance<D, Req>>::from_rng","value":"pub fn from_rng<R: Rng>(D, R) -> Result<Self, rand::Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a load balancer seeded with the provided random number generator.\n","sig":null,"attributes":[{"value":"/ Constructs a load balancer seeded with the provided random number generator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22517,"byte_end":22597,"line_start":93,"line_end":93,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22991,"byte_end":22994,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"len","qualname":"<Balance<D, Req>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of endpoints currently tracked by the balancer.\n","sig":null,"attributes":[{"value":"/ Returns the number of endpoints currently tracked by the balancer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22909,"byte_end":22979,"line_start":106,"line_end":106,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":23113,"byte_end":23121,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Balance<D, Req>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the balancer is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the balancer is empty.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":23052,"byte_end":23101,"line_start":111,"line_end":111,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pool","qualname":"::balance::pool","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":3315},{"krate":0,"index":3331},{"krate":0,"index":3329},{"krate":0,"index":3328},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3333},{"krate":0,"index":3345},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":3570},{"krate":0,"index":3580},{"krate":0,"index":3578},{"krate":0,"index":3576},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":316},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":3659},{"krate":0,"index":3664},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":352}],"decl_id":null,"docs":" This module defines a load-balanced pool of services that adds new services when load is high.","sig":null,"attributes":[{"value":"/ This module defines a load-balanced pool of services that adds new services when load is high.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":30753,"byte_end":30851,"line_start":1,"line_end":1,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":30852,"byte_end":30855,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The pool uses `poll_ready` as a signal indicating whether additional services should be spawned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":30856,"byte_end":30955,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ to handle the current level of load. Specifically, every time `poll_ready` on the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":30956,"byte_end":31055,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ returns `Ready`, [`Pool`] consider that a 0, and every time it returns `Pending`, [`Pool`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31056,"byte_end":31150,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ considers it a 1. [`Pool`] then maintains an [exponential moving","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31151,"byte_end":31219,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ average](https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average) over those","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31220,"byte_end":31316,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ samples, which gives an estimate of how often the underlying service has been ready when it was","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31317,"byte_end":31416,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ needed \"recently\" (see [`Builder::urgency`]). If the service is loaded (see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31417,"byte_end":31496,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ [`Builder::loaded_above`]), a new service is created and added to the underlying [`Balance`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31497,"byte_end":31594,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ If the service is underutilized (see [`Builder::underutilized_below`]) and there are two or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31595,"byte_end":31690,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ more services, then the latest added service is removed. In either case, the load estimate is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31691,"byte_end":31788,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ reset to its initial value (see [`Builder::initial`] to prevent services from being rapidly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31789,"byte_end":31884,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ added or removed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31885,"byte_end":31906,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"deny(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":31907,"byte_end":31929,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":32676,"byte_end":32690,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"PoolDiscoverer","qualname":"::balance::pool::PoolDiscoverer","value":"PoolDiscoverer {  }","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":3343},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3344},{"krate":0,"index":3342}],"decl_id":null,"docs":" A wrapper around `MakeService` that discovers a new service when load is high, and removes a\n service when load is low. See [`Pool`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":32650,"byte_end":32664,"line_start":47,"line_end":47,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3384},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":32676,"byte_end":32690,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"__PoolDiscoverer","qualname":"::balance::pool::_::__PoolDiscoverer","value":"__PoolDiscoverer {  }","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":32650,"byte_end":32664,"line_start":47,"line_end":47,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37315,"byte_end":37322,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"Builder","qualname":"::balance::pool::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575}],"decl_id":null,"docs":" A [builder] that lets you configure how a [`Pool`] determines whether the underlying service is\n loaded or not. See the [module-level documentation](index.html) and the builder's methods for\n details.","sig":null,"attributes":[{"value":"/ A [builder] that lets you configure how a [`Pool`] determines whether the underlying service is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":36918,"byte_end":37017,"line_start":170,"line_end":170,"column_start":1,"column_end":100}},{"value":"/ loaded or not. See the [module-level documentation](index.html) and the builder's methods for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37018,"byte_end":37115,"line_start":171,"line_end":171,"column_start":1,"column_end":98}},{"value":"/ details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37116,"byte_end":37128,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37129,"byte_end":37132,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/  [builder]: https://rust-lang-nursery.github.io/api-guidelines/type-safety.html#builders-enable-construction-of-complex-values-c-builder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37133,"byte_end":37273,"line_start":174,"line_end":174,"column_start":1,"column_end":141}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37811,"byte_end":37814,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder with default values for all load settings.","sig":null,"attributes":[{"value":"/ Create a new builder with default values for all load settings.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37646,"byte_end":37713,"line_start":197,"line_end":197,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37718,"byte_end":37721,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ If you just want to use the defaults, you can just use [`Pool::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37726,"byte_end":37799,"line_start":199,"line_end":199,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38221,"byte_end":38240,"line_start":209,"line_end":209,"column_start":12,"column_end":31},"name":"underutilized_below","qualname":"<Builder>::underutilized_below","value":"pub fn underutilized_below(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When the estimated load (see the [module-level docs](index.html)) drops below this\n threshold, and there are at least two services active, a service is removed.","sig":null,"attributes":[{"value":"/ When the estimated load (see the [module-level docs](index.html)) drops below this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37862,"byte_end":37948,"line_start":204,"line_end":204,"column_start":5,"column_end":91}},{"value":"/ threshold, and there are at least two services active, a service is removed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37953,"byte_end":38033,"line_start":205,"line_end":205,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38038,"byte_end":38041,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The default value is 0.01. That is, when one in every 100 `poll_ready` calls return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38046,"byte_end":38133,"line_start":207,"line_end":207,"column_start":5,"column_end":92}},{"value":"/ `Pending`, then the underlying service is considered underutilized.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38138,"byte_end":38209,"line_start":208,"line_end":208,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38748,"byte_end":38760,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"loaded_above","qualname":"<Builder>::loaded_above","value":"pub fn loaded_above(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When the estimated load (see the [module-level docs](index.html)) exceeds this\n threshold, and no service is currently in the process of being added, a new service is\n scheduled to be added to the underlying [`Balance`].","sig":null,"attributes":[{"value":"/ When the estimated load (see the [module-level docs](index.html)) exceeds this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38325,"byte_end":38407,"line_start":214,"line_end":214,"column_start":5,"column_end":87}},{"value":"/ threshold, and no service is currently in the process of being added, a new service is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38412,"byte_end":38502,"line_start":215,"line_end":215,"column_start":5,"column_end":95}},{"value":"/ scheduled to be added to the underlying [`Balance`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38507,"byte_end":38563,"line_start":216,"line_end":216,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38568,"byte_end":38571,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The default value is 0.5. That is, when every other call to `poll_ready` returns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38576,"byte_end":38660,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/ `Pending`, then the underlying service is considered highly loaded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38665,"byte_end":38736,"line_start":219,"line_end":219,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39069,"byte_end":39076,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"initial","qualname":"<Builder>::initial","value":"pub fn initial(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" The initial estimated load average.","sig":null,"attributes":[{"value":"/ The initial estimated load average.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38848,"byte_end":38887,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38892,"byte_end":38895,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This is also the value that the estimated load will be reset to whenever a service is added","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":38900,"byte_end":38995,"line_start":227,"line_end":227,"column_start":5,"column_end":100}},{"value":"/ or removed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39000,"byte_end":39015,"line_start":228,"line_end":228,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39020,"byte_end":39023,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The default value is 0.1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39028,"byte_end":39057,"line_start":230,"line_end":230,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39964,"byte_end":39971,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"urgency","qualname":"<Builder>::urgency","value":"pub fn urgency(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" How aggressively the estimated load average is updated.","sig":null,"attributes":[{"value":"/ How aggressively the estimated load average is updated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39164,"byte_end":39223,"line_start":236,"line_end":236,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39228,"byte_end":39231,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This is the α parameter of the formula for the [exponential moving","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39236,"byte_end":39307,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ average](https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average), and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39312,"byte_end":39402,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ dictates how quickly new samples of the current load affect the estimated load. If the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39407,"byte_end":39497,"line_start":240,"line_end":240,"column_start":5,"column_end":95}},{"value":"/ value is closer to 1, newer samples affect the load average a lot (when α is 1, the load","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39502,"byte_end":39595,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ average is immediately set to the current load). If the value is closer to 0, newer samples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39600,"byte_end":39695,"line_start":242,"line_end":242,"column_start":5,"column_end":100}},{"value":"/ affect the load average very little at a time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39700,"byte_end":39750,"line_start":243,"line_end":243,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39755,"byte_end":39758,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The given value is clamped to `[0,1]`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39763,"byte_end":39805,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39810,"byte_end":39813,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The default value is 0.05, meaning, in very approximate terms, that each new load sample","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39818,"byte_end":39910,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ affects the estimated load by 5%.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":39915,"byte_end":39952,"line_start":248,"line_end":248,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40354,"byte_end":40366,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"max_services","qualname":"<Builder>::max_services","value":"pub fn max_services(&mut Self, Option<usize>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of backing `Service` instances to maintain.","sig":null,"attributes":[{"value":"/ The maximum number of backing `Service` instances to maintain.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40080,"byte_end":40146,"line_start":254,"line_end":254,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40151,"byte_end":40154,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ When the limit is reached, the load estimate is clamped to the high load threshhold, and no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40159,"byte_end":40254,"line_start":256,"line_end":256,"column_start":5,"column_end":100}},{"value":"/ new service is spawned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40259,"byte_end":40286,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40291,"byte_end":40294,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ No maximum limit is imposed by default.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40299,"byte_end":40342,"line_start":259,"line_end":259,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40501,"byte_end":40506,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build<MS, Target, Request>(&Self, MS, Target)\n-> Pool<MS, Target, Request> where MS: MakeService<Target, Request>,\nMS::Service: Load, <MS::Service as Load>::Metric: std::fmt::Debug,\nMS::MakeError: Into<crate::BoxError>, MS::Error: Into<crate::BoxError>,\nTarget: Clone","parent":null,"children":[],"decl_id":null,"docs":" See [`Pool::new`].\n","sig":null,"attributes":[{"value":"/ See [`Pool::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":40467,"byte_end":40489,"line_start":265,"line_end":265,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":41437,"byte_end":41441,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"Pool","qualname":"::balance::pool::Pool","value":"Pool {  }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":" A dynamically sized, load-balanced pool of `Service` instances.\n","sig":null,"attributes":[{"value":"/ A dynamically sized, load-balanced pool of `Service` instances.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":41358,"byte_end":41425,"line_start":299,"line_end":299,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42976,"byte_end":42979,"line_start":346,"line_end":346,"column_start":12,"column_end":15},"name":"new","qualname":"<Pool<MS, Target, Request>>::new","value":"pub fn new(MS, Target) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new dynamically sized `Pool`.","sig":null,"attributes":[{"value":"/ Construct a new dynamically sized `Pool`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42633,"byte_end":42678,"line_start":340,"line_end":340,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42683,"byte_end":42686,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If many calls to `poll_ready` return `Pending`, `new_service` is used to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42691,"byte_end":42767,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ construct another `Service` that is then added to the load-balanced pool.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42772,"byte_end":42849,"line_start":343,"line_end":343,"column_start":5,"column_end":82}},{"value":"/ If many calls to `poll_ready` succeed, the most recently added `Service`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42854,"byte_end":42930,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ is dropped from the pool.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42935,"byte_end":42964,"line_start":345,"line_end":345,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3659},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46134,"byte_end":46151,"line_start":428,"line_end":428,"column_start":12,"column_end":29},"name":"DropNotifyService","qualname":"::balance::pool::DropNotifyService","value":"DropNotifyService {  }","parent":null,"children":[{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":388},{"krate":0,"index":426},{"krate":0,"index":463},{"krate":0,"index":478},{"krate":0,"index":544},{"krate":0,"index":614},{"krate":0,"index":617}],"decl_id":null,"docs":" Middleware that provides a buffered mpsc channel to a service.","sig":null,"attributes":[{"value":"cfg(feature = \"buffer\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7072,"byte_end":7098,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ Middleware that provides a buffered mpsc channel to a service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":46921,"byte_end":46987,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":46988,"byte_end":46991,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Sometimes you want to give out multiple handles to a single service, and allow each handle to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":46992,"byte_end":47089,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ enqueue requests. That is, you want a [`Service`] to be [`Clone`]. This module allows you to do","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47090,"byte_end":47189,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ that by placing the service behind a multi-producer, single-consumer buffering channel. Clients","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47190,"byte_end":47289,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ enqueue requests by sending on the channel from any of the handles ([`Buffer`]), and the single","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47290,"byte_end":47389,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ service running elsewhere (usually spawned) receives and services the requests one by one. Each","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47390,"byte_end":47489,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ request is enqueued alongside a response channel that allows the service to report the result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47490,"byte_end":47587,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ of the request back to the caller.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47588,"byte_end":47626,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47627,"byte_end":47630,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47631,"byte_end":47645,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47646,"byte_end":47649,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47650,"byte_end":47661,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47662,"byte_end":47692,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/ use tower::buffer::Buffer;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47693,"byte_end":47723,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47724,"byte_end":47754,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47755,"byte_end":47792,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47793,"byte_end":47823,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ async fn mass_produce<S: Service<usize>>(svc: S)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47824,"byte_end":47876,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47877,"byte_end":47886,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"/   S: 'static + Send,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47887,"byte_end":47911,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/   S::Error: Send + Sync + std::error::Error,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47912,"byte_end":47960,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/   S::Future: Send","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47961,"byte_end":47982,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47983,"byte_end":47988,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/     let svc = Buffer::new(svc, 10 /* buffer length */);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":47989,"byte_end":48048,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48049,"byte_end":48073,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/         let mut svc = svc.clone();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48074,"byte_end":48112,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48113,"byte_end":48150,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/             for i in 0usize.. {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48151,"byte_end":48186,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/                 svc.ready().await.expect(\"service crashed\").call(i).await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48187,"byte_end":48265,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48266,"byte_end":48283,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48284,"byte_end":48299,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48300,"byte_end":48309,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48310,"byte_end":48315,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48316,"byte_end":48323,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48324,"byte_end":48327,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48328,"byte_end":48359,"line_start":37,"line_end":37,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::buffer::error","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":3667},{"krate":0,"index":3669},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387}],"decl_id":null,"docs":" Error types for the `Buffer` middleware.\n","sig":null,"attributes":[{"value":"/ Error types for the `Buffer` middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48508,"byte_end":48552,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3667},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48768,"byte_end":48780,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"ServiceError","qualname":"::buffer::error::ServiceError","value":"ServiceError {  }","parent":null,"children":[{"krate":0,"index":3668}],"decl_id":null,"docs":" An error produced by a [`Service`] wrapped by a [`Buffer`]","sig":null,"attributes":[{"value":"/ An error produced by a [`Service`] wrapped by a [`Buffer`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48603,"byte_end":48665,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48666,"byte_end":48669,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48670,"byte_end":48701,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/ [`Buffer`]: crate::buffer::Buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48702,"byte_end":48739,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48893,"byte_end":48899,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Closed","qualname":"::buffer::error::Closed","value":"Closed {  }","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" An error produced when the a buffer's worker closes unexpectedly.\n","sig":null,"attributes":[{"value":"/ An error produced when the a buffer's worker closes unexpectedly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48812,"byte_end":48881,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":388},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::buffer::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3724},{"krate":0,"index":3736},{"krate":0,"index":3761},{"krate":0,"index":416},{"krate":0,"index":420}],"decl_id":null,"docs":" Future types for the [`Buffer`] middleware.","sig":null,"attributes":[{"value":"/ Future types for the [`Buffer`] middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50077,"byte_end":50124,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50125,"byte_end":50128,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`Buffer`]: crate::buffer::Buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50129,"byte_end":50166,"line_start":3,"line_end":3,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3671},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50474,"byte_end":50488,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::buffer::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3673}],"decl_id":null,"docs":" Future that completes when the buffered service eventually services the submitted request.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50431,"byte_end":50445,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3691},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50474,"byte_end":50488,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::buffer::future::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3694},{"krate":0,"index":3695}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50431,"byte_end":50445,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52345,"byte_end":52356,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"BufferLayer","qualname":"::buffer::layer::BufferLayer","value":"BufferLayer {  }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" Adds an mpsc buffer in front of an inner service.","sig":null,"attributes":[{"value":"/ Adds an mpsc buffer in front of an inner service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52085,"byte_end":52138,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52139,"byte_end":52142,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The default Tokio executor is used to run the given service,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52143,"byte_end":52207,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ which means that this layer can only be used on the Tokio runtime.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52208,"byte_end":52278,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52279,"byte_end":52282,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See the module documentation for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52283,"byte_end":52333,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53487,"byte_end":53490,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferLayer<Request>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`BufferLayer`] with the provided `bound`.","sig":null,"attributes":[{"value":"/ Creates a new [`BufferLayer`] with the provided `bound`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52464,"byte_end":52524,"line_start":18,"line_end":18,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52529,"byte_end":52532,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ `bound` gives the maximal number of requests that can be queued for the service before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52537,"byte_end":52627,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ backpressure is applied to callers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52632,"byte_end":52671,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52676,"byte_end":52679,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # A note on choosing a `bound`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52684,"byte_end":52718,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52723,"byte_end":52726,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ When [`Buffer`]'s implementation of [`poll_ready`] returns [`Poll::Ready`], it reserves a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52731,"byte_end":52824,"line_start":25,"line_end":25,"column_start":5,"column_end":98}},{"value":"/ slot in the channel for the forthcoming [`call`]. However, if this call doesn't arrive,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52829,"byte_end":52920,"line_start":26,"line_end":26,"column_start":5,"column_end":96}},{"value":"/ this reserved slot may be held up for a long time. As a result, it's advisable to set","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52925,"byte_end":53014,"line_start":27,"line_end":27,"column_start":5,"column_end":94}},{"value":"/ `bound` to be at least the maximum number of concurrent requests the [`Buffer`] will see.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53019,"byte_end":53112,"line_start":28,"line_end":28,"column_start":5,"column_end":98}},{"value":"/ If you do not, all the slots in the buffer may be held up by futures that have just called","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53117,"byte_end":53211,"line_start":29,"line_end":29,"column_start":5,"column_end":99}},{"value":"/ [`poll_ready`] but will not issue a [`call`], which prevents other senders from issuing new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53216,"byte_end":53311,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53316,"byte_end":53329,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53334,"byte_end":53337,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53342,"byte_end":53385,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53390,"byte_end":53424,"line_start":34,"line_end":34,"column_start":5,"column_end":39}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53429,"byte_end":53475,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3775},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":55330,"byte_end":55336,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::service::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781}],"decl_id":null,"docs":" Adds an mpsc buffer in front of an inner service.","sig":null,"attributes":[{"value":"/ Adds an mpsc buffer in front of an inner service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":55193,"byte_end":55246,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":55247,"byte_end":55250,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See the module documentation for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":55251,"byte_end":55301,"line_start":16,"line_end":16,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57685,"byte_end":57688,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer<T, Request>>::new","value":"pub fn new(T, usize) -> Self where T: Send + 'static, T::Future: Send,\nT::Error: Send + Sync, Request: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Buffer`] wrapping `service`.","sig":null,"attributes":[{"value":"/ Creates a new [`Buffer`] wrapping `service`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56517,"byte_end":56565,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56570,"byte_end":56573,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ `bound` gives the maximal number of requests that can be queued for the service before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56578,"byte_end":56668,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ backpressure is applied to callers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56673,"byte_end":56712,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56717,"byte_end":56720,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The default Tokio executor is used to run the given service, which means that this method","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56725,"byte_end":56818,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/ must be called while on the Tokio runtime.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56823,"byte_end":56869,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56874,"byte_end":56877,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # A note on choosing a `bound`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56882,"byte_end":56916,"line_start":55,"line_end":55,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56921,"byte_end":56924,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ When [`Buffer`]'s implementation of [`poll_ready`] returns [`Poll::Ready`], it reserves a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56929,"byte_end":57022,"line_start":57,"line_end":57,"column_start":5,"column_end":98}},{"value":"/ slot in the channel for the forthcoming [`call`]. However, if this call doesn't arrive,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57027,"byte_end":57118,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ this reserved slot may be held up for a long time. As a result, it's advisable to set","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57123,"byte_end":57212,"line_start":59,"line_end":59,"column_start":5,"column_end":94}},{"value":"/ `bound` to be at least the maximum number of concurrent requests the [`Buffer`] will see.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57217,"byte_end":57310,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ If you do not, all the slots in the buffer may be held up by futures that have just called","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57315,"byte_end":57409,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ [`poll_ready`] but will not issue a [`call`], which prevents other senders from issuing new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57414,"byte_end":57509,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57514,"byte_end":57527,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57532,"byte_end":57535,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57540,"byte_end":57583,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57588,"byte_end":57622,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57627,"byte_end":57673,"line_start":67,"line_end":67,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58302,"byte_end":58306,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"pair","qualname":"<Buffer<T, Request>>::pair","value":"pub fn pair(T, usize) -> (Buffer<T, Request>, Worker<T, Request>) where\nT: Send + 'static, T::Error: Send + Sync, Request: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Buffer`] wrapping `service`, but returns the background worker.","sig":null,"attributes":[{"value":"/ Creates a new [`Buffer`] wrapping `service`, but returns the background worker.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":57972,"byte_end":58055,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58060,"byte_end":58063,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is useful if you do not want to spawn directly onto the tokio runtime","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58068,"byte_end":58146,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ but instead want to use your own executor. This will return the [`Buffer`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58151,"byte_end":58233,"line_start":83,"line_end":83,"column_start":5,"column_end":87}},{"value":"/ the background `Worker` that you can then spawn.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58238,"byte_end":58290,"line_start":84,"line_end":84,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3812},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62356,"byte_end":62362,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Worker","qualname":"::buffer::worker::Worker","value":"Worker {  }","parent":null,"children":[{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821}],"decl_id":null,"docs":" Task that handles processing the buffer. This type should not be used\n directly, instead `Buffer` requires an `Executor` that can accept this task.","sig":null,"attributes":[{"value":"pin(__private(PinnedDrop))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62301,"byte_end":62327,"line_start":23,"line_end":23,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3855},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62356,"byte_end":62362,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"__Worker","qualname":"::buffer::worker::_::__Worker","value":"__Worker {  }","parent":null,"children":[{"krate":0,"index":3859}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62301,"byte_end":62327,"line_start":23,"line_end":23,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":620},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"discover","qualname":"::discover","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":632},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":702},{"krate":0,"index":707},{"krate":0,"index":4270},{"krate":0,"index":4280}],"decl_id":null,"docs":" Service discovery","sig":null,"attributes":[{"value":"cfg(feature = \"discover\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7165,"byte_end":7193,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"/ Service discovery","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":70821,"byte_end":70842,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":70843,"byte_end":70846,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides the [`Change`] enum, which indicates the arrival or departure of a service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":70847,"byte_end":70946,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ from a collection of similar services. Most implementations should use the [`Discover`] trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":70947,"byte_end":71044,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ in their bounds to indicate that they can handle services coming and going. [`Discover`] itself","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71045,"byte_end":71144,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ is primarily a convenience wrapper around [`TryStream<Ok = Change>`][`TryStream`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71145,"byte_end":71231,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71232,"byte_end":71235,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Every discovered service is assigned an identifier that is distinct among the currently active","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71236,"byte_end":71334,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ services. If that service later goes away, a [`Change::Remove`] is yielded with that service's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71335,"byte_end":71433,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ identifier. From that point forward, the identifier may be re-used.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71434,"byte_end":71505,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71506,"byte_end":71509,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71510,"byte_end":71524,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71525,"byte_end":71528,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71529,"byte_end":71540,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use futures_util::{future::poll_fn, pin_mut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71541,"byte_end":71590,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ use tower::discover::{Change, Discover};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71591,"byte_end":71635,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ async fn services_monitor<D: Discover>(services: D) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71636,"byte_end":71693,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/     pin_mut!(services);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71694,"byte_end":71721,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/     while let Some(Ok(change)) = poll_fn(|cx| services.as_mut().poll_discover(cx)).await {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71722,"byte_end":71816,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/         match change {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71817,"byte_end":71843,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/             Change::Insert(key, svc) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71844,"byte_end":71889,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/                 // a new service with identifier `key` was discovered","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71890,"byte_end":71963,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/                 # let _ = (key, svc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":71964,"byte_end":72005,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72006,"byte_end":72023,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/             Change::Remove(key) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72024,"byte_end":72064,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/                 // the service with identifier `key` has gone away","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72065,"byte_end":72135,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/                 # let _ = (key);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72136,"byte_end":72172,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72173,"byte_end":72190,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72191,"byte_end":72204,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72205,"byte_end":72214,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72215,"byte_end":72220,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72221,"byte_end":72228,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72229,"byte_end":72232,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`TryStream`]: https://docs.rs/futures/latest/futures/stream/trait.TryStream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72233,"byte_end":72318,"line_start":34,"line_end":34,"column_start":1,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":4226},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/error.rs","byte_start":74110,"byte_end":74115,"line_start":4,"line_end":4,"column_start":10,"column_end":15},"name":"Never","qualname":"::discover::error::Never","value":"pub enum Never { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4229},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74741,"byte_end":74752,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"ServiceList","qualname":"::discover::list::ServiceList","value":"ServiceList {  }","parent":null,"children":[{"krate":0,"index":4231}],"decl_id":null,"docs":" Static service discovery based on a predetermined list of services.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74698,"byte_end":74712,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4249},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74741,"byte_end":74752,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"__ServiceList","qualname":"::discover::list::_::__ServiceList","value":"__ServiceList {  }","parent":null,"children":[{"krate":0,"index":4252}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74698,"byte_end":74712,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74926,"byte_end":74929,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<ServiceList<T>>::new","value":"pub fn new<Request>(T) -> ServiceList<T> where U: Service<Request>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74892,"byte_end":74914,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":697},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72750,"byte_end":72758,"line_start":55,"line_end":55,"column_start":11,"column_end":19},"name":"Discover","qualname":"::discover::Discover","value":"Discover: Sealed<Change<(), ()>>","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"decl_id":null,"docs":" A dynamically changing set of related services.","sig":null,"attributes":[{"value":"/ A dynamically changing set of related services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72488,"byte_end":72539,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72540,"byte_end":72543,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ As new services arrive and old services are retired,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72544,"byte_end":72600,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/ [`Change`]s are returned which provide unique identifiers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72601,"byte_end":72662,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"/ for the services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72663,"byte_end":72684,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72685,"byte_end":72688,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ See the module documentation for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72689,"byte_end":72739,"line_start":54,"line_end":54,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":698},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72952,"byte_end":72955,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"Key","qualname":"::discover::Discover::Key","value":"type Key: Eq;","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" A unique identifier for each active service.","sig":null,"attributes":[{"value":"/ A unique identifier for each active service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72789,"byte_end":72837,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72842,"byte_end":72845,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ An identifier can be re-used once a [`Change::Remove`] has been yielded for its service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72850,"byte_end":72942,"line_start":58,"line_end":58,"column_start":5,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":699},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73077,"byte_end":73084,"line_start":64,"line_end":64,"column_start":10,"column_end":17},"name":"Service","qualname":"::discover::Discover::Service","value":"type Service;","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" The type of [`Service`] yielded by this [`Discover`].","sig":null,"attributes":[{"value":"/ The type of [`Service`] yielded by this [`Discover`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72966,"byte_end":73023,"line_start":61,"line_end":61,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73028,"byte_end":73031,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73036,"byte_end":73067,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":700},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73136,"byte_end":73141,"line_start":67,"line_end":67,"column_start":10,"column_end":15},"name":"Error","qualname":"::discover::Discover::Error","value":"type Error;","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Error produced during discovery\n","sig":null,"attributes":[{"value":"/ Error produced during discovery","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73091,"byte_end":73126,"line_start":66,"line_end":66,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73197,"byte_end":73210,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"poll_discover","qualname":"::discover::Discover::poll_discover","value":"pub fn poll_discover(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Change<Self::Key, Self::Service>, Self::Error>>>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Yields the next discovery change set.\n","sig":null,"attributes":[{"value":"/ Yields the next discovery change set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73148,"byte_end":73189,"line_start":69,"line_end":69,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73966,"byte_end":73972,"line_start":104,"line_end":104,"column_start":5,"column_end":11},"name":"Insert","qualname":"::discover::Change::Insert","value":"Change::Insert(K, V)","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" A new service identified by key `K` was identified.\n","sig":null,"attributes":[{"value":"/ A new service identified by key `K` was identified.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73906,"byte_end":73961,"line_start":103,"line_end":103,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4277},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":74039,"byte_end":74045,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"Remove","qualname":"::discover::Change::Remove","value":"Change::Remove(K)","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" The service identified by key `K` disappeared.\n","sig":null,"attributes":[{"value":"/ The service identified by key `K` disappeared.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73984,"byte_end":74034,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":4270},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73887,"byte_end":73893,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"Change","qualname":"::discover::Change","value":"pub enum Change<K, V> { Insert(K, V), Remove(K), }","parent":null,"children":[{"krate":0,"index":4273},{"krate":0,"index":4277}],"decl_id":null,"docs":" A change in the service set.\n","sig":null,"attributes":[{"value":"/ A change in the service set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73828,"byte_end":73860,"line_start":100,"line_end":100,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":716},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"limit","qualname":"::limit","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":823},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":923}],"decl_id":null,"docs":" Tower middleware for limiting requests.\n","sig":null,"attributes":[{"value":"cfg(feature = \"limit\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7447,"byte_end":7472,"line_start":170,"line_end":170,"column_start":1,"column_end":26}},{"value":"/ Tower middleware for limiting requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75739,"byte_end":75782,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":717},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"concurrency","qualname":"::limit::concurrency","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/mod.rs","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":751},{"krate":0,"index":764},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":820}],"decl_id":null,"docs":" Limit the max number of requests being concurrently processed.\n","sig":null,"attributes":[{"value":"/ Limit the max number of requests being concurrently processed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/mod.rs","byte_start":75939,"byte_end":76005,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":718},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::limit::concurrency::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":4284},{"krate":0,"index":4288},{"krate":0,"index":4326},{"krate":0,"index":742},{"krate":0,"index":745}],"decl_id":null,"docs":" [`Future`] types","sig":null,"attributes":[{"value":"/ [`Future`] types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76122,"byte_end":76142,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76143,"byte_end":76146,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76147,"byte_end":76182,"line_start":3,"line_end":3,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4284},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76506,"byte_end":76520,"line_start":18,"line_end":18,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::limit::concurrency::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4287},{"krate":0,"index":4286}],"decl_id":null,"docs":" Future for the [`ConcurrencyLimit`] service.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76463,"byte_end":76477,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4307},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76506,"byte_end":76520,"line_start":18,"line_end":18,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::limit::concurrency::future::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4310},{"krate":0,"index":4311}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76463,"byte_end":76477,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4329},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77282,"byte_end":77303,"line_start":7,"line_end":7,"column_start":12,"column_end":33},"name":"ConcurrencyLimitLayer","qualname":"::limit::concurrency::layer::ConcurrencyLimitLayer","value":"ConcurrencyLimitLayer {  }","parent":null,"children":[{"krate":0,"index":4330}],"decl_id":null,"docs":" Enforces a limit on the concurrent number of requests the underlying\n service can handle.\n","sig":null,"attributes":[{"value":"/ Enforces a limit on the concurrent number of requests the underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77150,"byte_end":77222,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ service can handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77223,"byte_end":77246,"line_start":5,"line_end":5,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77411,"byte_end":77414,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<ConcurrencyLimitLayer>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new concurrency limit layer.\n","sig":null,"attributes":[{"value":"/ Create a new concurrency limit layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77358,"byte_end":77399,"line_start":12,"line_end":12,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78039,"byte_end":78055,"line_start":15,"line_end":15,"column_start":12,"column_end":28},"name":"ConcurrencyLimit","qualname":"::limit::concurrency::service::ConcurrencyLimit","value":"ConcurrencyLimit {  }","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339}],"decl_id":null,"docs":" Enforces a limit on the concurrent number of requests the underlying\n service can handle.\n","sig":null,"attributes":[{"value":"/ Enforces a limit on the concurrent number of requests the underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":77914,"byte_end":77986,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ service can handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":77987,"byte_end":78010,"line_start":13,"line_end":13,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78460,"byte_end":78463,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<ConcurrencyLimit<T>>::new","value":"pub fn new(T, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new concurrency limiter.\n","sig":null,"attributes":[{"value":"/ Create a new concurrency limiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78411,"byte_end":78448,"line_start":27,"line_end":27,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78715,"byte_end":78722,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ConcurrencyLimit<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78663,"byte_end":78703,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78829,"byte_end":78836,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ConcurrencyLimit<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78769,"byte_end":78817,"line_start":41,"line_end":41,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78954,"byte_end":78964,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ConcurrencyLimit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner service\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78895,"byte_end":78942,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":823},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rate","qualname":"::limit::rate","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/mod.rs","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":844},{"krate":0,"index":852},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908}],"decl_id":null,"docs":" Limit the rate at which requests are processed.\n","sig":null,"attributes":[{"value":"/ Limit the rate at which requests are processed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/mod.rs","byte_start":80928,"byte_end":80979,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81351,"byte_end":81365,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"RateLimitLayer","qualname":"::limit::rate::layer::RateLimitLayer","value":"RateLimitLayer {  }","parent":null,"children":[{"krate":0,"index":4344}],"decl_id":null,"docs":" Enforces a rate limit on the number of requests the underlying\n service can handle over a period of time.\n","sig":null,"attributes":[{"value":"/ Enforces a rate limit on the number of requests the underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81203,"byte_end":81269,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/ service can handle over a period of time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81270,"byte_end":81315,"line_start":6,"line_end":6,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81457,"byte_end":81460,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<RateLimitLayer>::new","value":"pub fn new(u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new rate limit layer.\n","sig":null,"attributes":[{"value":"/ Create new rate limit layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81413,"byte_end":81445,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4349},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81859,"byte_end":81863,"line_start":5,"line_end":5,"column_start":12,"column_end":16},"name":"Rate","qualname":"::limit::rate::rate::Rate","value":"Rate {  }","parent":null,"children":[{"krate":0,"index":4350},{"krate":0,"index":4351}],"decl_id":null,"docs":" A rate of requests per time period.\n","sig":null,"attributes":[{"value":"/ A rate of requests per time period.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81778,"byte_end":81817,"line_start":3,"line_end":3,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":82038,"byte_end":82041,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Rate>::new","value":"pub fn new(u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new rate.","sig":null,"attributes":[{"value":"/ Create a new rate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81918,"byte_end":81940,"line_start":11,"line_end":11,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81945,"byte_end":81948,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81953,"byte_end":81965,"line_start":13,"line_end":13,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81970,"byte_end":81973,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This function panics if `num` or `per` is 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81978,"byte_end":82026,"line_start":15,"line_end":15,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82639,"byte_end":82648,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"RateLimit","qualname":"::limit::rate::service::RateLimit","value":"RateLimit {  }","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362}],"decl_id":null,"docs":" Enforces a rate limit on the number of requests the underlying\n service can handle over a period of time.\n","sig":null,"attributes":[{"value":"/ Enforces a rate limit on the number of requests the underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82498,"byte_end":82564,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ service can handle over a period of time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82565,"byte_end":82610,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82924,"byte_end":82927,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<RateLimit<T>>::new","value":"pub fn new(T, Rate) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new rate limiter\n","sig":null,"attributes":[{"value":"/ Create a new rate limiter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82883,"byte_end":82912,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83523,"byte_end":83530,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<RateLimit<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83471,"byte_end":83511,"line_start":48,"line_end":48,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83637,"byte_end":83644,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RateLimit<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83577,"byte_end":83625,"line_start":53,"line_end":53,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83762,"byte_end":83772,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RateLimit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner service\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83703,"byte_end":83750,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":926},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"load","qualname":"::load","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":971},{"krate":0,"index":1029},{"krate":0,"index":1132},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235}],"decl_id":null,"docs":" Service load measurement","sig":null,"attributes":[{"value":"cfg(feature = \"load\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7537,"byte_end":7561,"line_start":173,"line_end":173,"column_start":1,"column_end":25}},{"value":"/ Service load measurement","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":85987,"byte_end":86015,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86016,"byte_end":86019,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides the [`Load`] trait, which allows measuring how loaded a service is.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86020,"byte_end":86112,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ It also provides several wrapper types that measure load in different ways:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86113,"byte_end":86192,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86193,"byte_end":86196,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [`Constant`] — Always returns the same constant load value for a service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86197,"byte_end":86278,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ - [`PendingRequests`] — Measures load by tracking the number of in-flight requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86279,"byte_end":86368,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/ - [`PeakEwma`] — Measures load using a moving average of the peak latency for the service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86369,"byte_end":86465,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86466,"byte_end":86469,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ In general, you will want to use one of these when using the types in [`tower::balance`] which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86470,"byte_end":86568,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ balance services depending on their load. Which load metric to use depends on your exact","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86569,"byte_end":86661,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ use-case, but the ones above should get you quite far!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86662,"byte_end":86720,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86721,"byte_end":86724,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When the `discover` feature is enabled, wrapper types for [`Discover`] that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86725,"byte_end":86804,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ wrap the discovered services with the given load estimator are also provided.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86805,"byte_end":86886,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86887,"byte_end":86890,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # When does a request complete?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86891,"byte_end":86926,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86927,"byte_end":86930,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For many applications, the request life-cycle is relatively simple: when a service responds to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":86931,"byte_end":87029,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ a request, that request is done, and the system can forget about it. However, for some","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87030,"byte_end":87120,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ applications, the service may respond to the initial request while other parts of the system","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87121,"byte_end":87217,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/ are still acting on that request. In such an application, the system load must take these","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87218,"byte_end":87311,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/ requests into account as well, or risk the system underestimating its own load.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87312,"byte_end":87395,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87396,"byte_end":87399,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ To support these use-cases, the load estimators in this module are parameterized by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87400,"byte_end":87491,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/ [`TrackCompletion`] trait, with [`CompleteOnResponse`] as the default type. The behavior of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87492,"byte_end":87587,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/ [`CompleteOnResponse`] is what you would normally expect for a request-response cycle: when the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87588,"byte_end":87687,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ response is produced, the request is considered \"finished\", and load goes down. This can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87688,"byte_end":87783,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ overriden by your own user-defined type to track more complex request completion semantics. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87784,"byte_end":87883,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/ the documentation for [`completion`] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87884,"byte_end":87942,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87943,"byte_end":87946,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87947,"byte_end":87961,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87962,"byte_end":87965,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87966,"byte_end":87977,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":87978,"byte_end":88008,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ use tower::util::ServiceExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88009,"byte_end":88041,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88042,"byte_end":88072,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use tower::{load::Load, Service};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88073,"byte_end":88110,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88111,"byte_end":88141,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ async fn simple_balance<S1, S2, R>(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88142,"byte_end":88181,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     svc1: &mut S1,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88182,"byte_end":88204,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/     svc2: &mut S2,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88205,"byte_end":88227,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/     request: R","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88228,"byte_end":88246,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ ) -> Result<S1::Response, S1::Error>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88247,"byte_end":88287,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88288,"byte_end":88297,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/     S1: Load + Service<R>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88298,"byte_end":88328,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/     S2: Load<Metric = S1::Metric> + Service<R, Response = S1::Response, Error = S1::Error>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88329,"byte_end":88423,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88424,"byte_end":88429,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/     if svc1.load() < svc2.load() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88430,"byte_end":88468,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/         svc1.ready().await?.call(request).await","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88469,"byte_end":88520,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/     } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88521,"byte_end":88537,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/         svc2.ready().await?.call(request).await","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88538,"byte_end":88589,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88590,"byte_end":88599,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88600,"byte_end":88605,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88606,"byte_end":88613,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88614,"byte_end":88617,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`tower::balance`]: crate::balance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88618,"byte_end":88656,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/ [`Discover`]: crate::discover::Discover","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88657,"byte_end":88700,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/ [`CompleteOnResponse`]: crate::load::completion::CompleteOnResponse","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88701,"byte_end":88772,"line_start":59,"line_end":59,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":927},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"completion","qualname":"::load::completion","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":4400},{"krate":0,"index":4407},{"krate":0,"index":4406},{"krate":0,"index":4404},{"krate":0,"index":4402},{"krate":0,"index":4409},{"krate":0,"index":4416},{"krate":0,"index":4474},{"krate":0,"index":953},{"krate":0,"index":958},{"krate":0,"index":966}],"decl_id":null,"docs":" Application-specific request completion semantics.\n","sig":null,"attributes":[{"value":"/ Application-specific request completion semantics.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":89655,"byte_end":89709,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":948},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91269,"byte_end":91284,"line_start":33,"line_end":33,"column_start":11,"column_end":26},"name":"TrackCompletion","qualname":"::load::completion::TrackCompletion","value":"TrackCompletion<H, V>: Clone","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":" Attaches `H`-typed completion tracker to `V` typed values.","sig":null,"attributes":[{"value":"/ Attaches `H`-typed completion tracker to `V` typed values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":89842,"byte_end":89904,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":89905,"byte_end":89908,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Handles (of type `H`) are intended to be RAII guards that primarily implement [`Drop`] and update","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":89909,"byte_end":90010,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/ load metric state as they are dropped. This trait allows implementors to \"forward\" the handle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90011,"byte_end":90108,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ to later parts of the request-handling pipeline, so that the handle is only dropped when the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90109,"byte_end":90205,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ request has truly completed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90206,"byte_end":90238,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90239,"byte_end":90242,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This utility allows load metrics to have a protocol-agnostic means to track streams past their","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90243,"byte_end":90341,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ initial response future. For example, if `V` represents an HTTP response type, an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90342,"byte_end":90427,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/ implementation could add `H`-typed handles to each response's extensions to detect when all the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90428,"byte_end":90527,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ response's extensions have been dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90528,"byte_end":90572,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90573,"byte_end":90576,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A base `impl<H, V> TrackCompletion<H, V> for CompleteOnResponse` is provided to drop the handle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90577,"byte_end":90676,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ once the response future is resolved. This is appropriate when a response is discrete and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90677,"byte_end":90770,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/ cannot comprise multiple messages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90771,"byte_end":90809,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90810,"byte_end":90813,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ In many cases, the `Output` type is simply `V`. However, [`TrackCompletion`] may alter the type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90814,"byte_end":90913,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ in order to instrument it appropriately. For example, an HTTP [`TrackCompletion`] may modify","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":90914,"byte_end":91010,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/ the body type: so a [`TrackCompletion`] that takes values of type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91011,"byte_end":91080,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ [`http::Response<A>`][response] may output values of type [`http::Response<B>`][response].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91081,"byte_end":91175,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91176,"byte_end":91179,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [response]: https://docs.rs/http/latest/http/response/struct.Response.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91180,"byte_end":91258,"line_start":32,"line_end":32,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":951},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91346,"byte_end":91352,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Output","qualname":"::load::completion::TrackCompletion::Output","value":"type Output;","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" The instrumented value type.\n","sig":null,"attributes":[{"value":"/ The instrumented value type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91304,"byte_end":91336,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91420,"byte_end":91436,"line_start":38,"line_end":38,"column_start":8,"column_end":24},"name":"track_completion","qualname":"::load::completion::TrackCompletion::track_completion","value":"pub fn track_completion(&Self, H, V) -> Self::Output","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" Attaches a `H`-typed handle to a `V`-typed value.\n","sig":null,"attributes":[{"value":"/ Attaches a `H`-typed handle to a `V`-typed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91359,"byte_end":91412,"line_start":37,"line_end":37,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4400},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91673,"byte_end":91691,"line_start":45,"line_end":45,"column_start":12,"column_end":30},"name":"CompleteOnResponse","qualname":"::load::completion::CompleteOnResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`TrackCompletion`] implementation that considers the request completed when the response\n future is resolved.\n","sig":null,"attributes":[{"value":"/ A [`TrackCompletion`] implementation that considers the request completed when the response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91485,"byte_end":91580,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ future is resolved.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91581,"byte_end":91604,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"non_exhaustive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91644,"byte_end":91661,"line_start":44,"line_end":44,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4409},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91823,"byte_end":91844,"line_start":50,"line_end":50,"column_start":12,"column_end":33},"name":"TrackCompletionFuture","qualname":"::load::completion::TrackCompletionFuture","value":"TrackCompletionFuture {  }","parent":null,"children":[{"krate":0,"index":4415},{"krate":0,"index":4413},{"krate":0,"index":4414}],"decl_id":null,"docs":" Attaches a `C`-typed completion tracker to the result of an `F`-typed [`Future`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91780,"byte_end":91794,"line_start":48,"line_end":48,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4445},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91823,"byte_end":91844,"line_start":50,"line_end":50,"column_start":12,"column_end":33},"name":"__TrackCompletionFuture","qualname":"::load::completion::_::__TrackCompletionFuture","value":"__TrackCompletionFuture {  }","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91780,"byte_end":91794,"line_start":48,"line_end":48,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":92101,"byte_end":92104,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<TrackCompletionFuture<F, C, H>>::new","value":"pub fn new(C, H, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future, propagating the tracker into its value if successful.\n","sig":null,"attributes":[{"value":"/ Wraps a future, propagating the tracker into its value if successful.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":92016,"byte_end":92089,"line_start":60,"line_end":60,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4479},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93491,"byte_end":93499,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Constant","qualname":"::load::constant::Constant","value":"Constant {  }","parent":null,"children":[{"krate":0,"index":4482},{"krate":0,"index":4483}],"decl_id":null,"docs":" Wraps a type so that it implements [`Load`] and returns a constant load metric.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93448,"byte_end":93462,"line_start":18,"line_end":18,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93491,"byte_end":93499,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"__Constant","qualname":"::load::constant::_::__Constant","value":"__Constant {  }","parent":null,"children":[{"krate":0,"index":4511}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93448,"byte_end":93462,"line_start":18,"line_end":18,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93686,"byte_end":93689,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Constant<T, M>>::new","value":"pub fn new(T, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a `T`-typed service with a constant `M`-typed load metric.\n","sig":null,"attributes":[{"value":"/ Wraps a `T`-typed service with a constant `M`-typed load metric.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93606,"byte_end":93674,"line_start":28,"line_end":28,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":1029},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"peak_ewma","qualname":"::load::peak_ewma","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":4534},{"krate":0,"index":4541},{"krate":0,"index":4545},{"krate":0,"index":4552},{"krate":0,"index":4603},{"krate":0,"index":4607},{"krate":0,"index":4620},{"krate":0,"index":4618},{"krate":0,"index":4616},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4610},{"krate":0,"index":4621},{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1096},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1114},{"krate":0,"index":1119},{"krate":0,"index":1124},{"krate":0,"index":1128},{"krate":0,"index":1130}],"decl_id":null,"docs":" A `Load` implementation that measures load using the PeakEWMA response latency.\n","sig":null,"attributes":[{"value":"/ A `Load` implementation that measures load using the PeakEWMA response latency.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":95118,"byte_end":95201,"line_start":1,"line_end":1,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4534},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96840,"byte_end":96848,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"PeakEwma","qualname":"::load::peak_ewma::PeakEwma","value":"PeakEwma {  }","parent":null,"children":[{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540}],"decl_id":null,"docs":" Measures the load of the underlying service using Peak-EWMA load measurement.","sig":null,"attributes":[{"value":"/ Measures the load of the underlying service using Peak-EWMA load measurement.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":95712,"byte_end":95793,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":95794,"byte_end":95797,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`PeakEwma`] implements [`Load`] with the [`Cost`] metric that estimates the amount of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":95798,"byte_end":95888,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/ pending work to an endpoint. Work is calculated by multiplying the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":95889,"byte_end":95959,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ exponentially-weighted moving average (EWMA) of response latencies by the number of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":95960,"byte_end":96047,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ pending requests. The Peak-EWMA algorithm is designed to be especially sensitive to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96048,"byte_end":96135,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/ worst-case latencies. Over time, the peak latency value decays towards the moving","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96136,"byte_end":96221,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ average of latencies to the endpoint.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96222,"byte_end":96263,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96264,"byte_end":96267,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ When no latency information has been measured for an endpoint, an arbitrary default","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96268,"byte_end":96355,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/ RTT of 1 second is used to prevent the endpoint from being overloaded before a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96356,"byte_end":96438,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/ meaningful baseline can be established..","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96439,"byte_end":96483,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96484,"byte_end":96487,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96488,"byte_end":96499,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96500,"byte_end":96503,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is derived from [Finagle][finagle], which is distributed under the Apache V2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96504,"byte_end":96589,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ license. Copyright 2017, Twitter Inc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96590,"byte_end":96631,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96632,"byte_end":96635,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [finagle]:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96636,"byte_end":96650,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ https://github.com/twitter/finagle/blob/9cc08d15216497bb03a1cafda96b7266cfbbcff1/finagle-core/src/main/scala/com/twitter/finagle/loadbalancer/PeakEwma.scala","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":96651,"byte_end":96811,"line_start":42,"line_end":42,"column_start":1,"column_end":161}}]},{"kind":"Struct","id":{"krate":0,"index":4545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97171,"byte_end":97187,"line_start":56,"line_end":56,"column_start":12,"column_end":28},"name":"PeakEwmaDiscover","qualname":"::load::peak_ewma::PeakEwmaDiscover","value":"PeakEwmaDiscover {  }","parent":null,"children":[{"krate":0,"index":4551},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550}],"decl_id":null,"docs":" Wraps a `D`-typed stream of discovered services with `PeakEwma`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"discover\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97079,"byte_end":97107,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97047,"byte_end":97061,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4579},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97171,"byte_end":97187,"line_start":56,"line_end":56,"column_start":12,"column_end":28},"name":"__PeakEwmaDiscover","qualname":"::load::peak_ewma::_::__PeakEwmaDiscover","value":"__PeakEwmaDiscover {  }","parent":null,"children":[{"krate":0,"index":4583},{"krate":0,"index":4584}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97047,"byte_end":97061,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4607},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97604,"byte_end":97608,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"Cost","qualname":"::load::peak_ewma::Cost","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the relative cost of communicating with a service.","sig":null,"attributes":[{"value":"/ Represents the relative cost of communicating with a service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97313,"byte_end":97378,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97379,"byte_end":97382,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The underlying value estimates the amount of pending work to a service: the Peak-EWMA","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97383,"byte_end":97472,"line_start":66,"line_end":66,"column_start":1,"column_end":90}},{"value":"/ latency estimate multiplied by the number of pending requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97473,"byte_end":97539,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4621},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97714,"byte_end":97720,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"Handle","qualname":"::load::peak_ewma::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4624}],"decl_id":null,"docs":" Tracks an in-flight request and updates the RTT-estimate on Drop.\n","sig":null,"attributes":[{"value":"/ Tracks an in-flight request and updates the RTT-estimate on Drop.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":97616,"byte_end":97685,"line_start":71,"line_end":71,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":98177,"byte_end":98180,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<PeakEwma<S, C>>::new","value":"pub fn new(S, Duration, f64, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps an `S`-typed service so that its load is tracked by the EWMA of its peak latency.\n","sig":null,"attributes":[{"value":"/ Wraps an `S`-typed service so that its load is tracked by the EWMA of its peak latency.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":98074,"byte_end":98165,"line_start":91,"line_end":91,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100464,"byte_end":100467,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<PeakEwmaDiscover<D, C>>::new","value":"pub fn new<Request>(D, Duration, Duration, C) -> Self where D: Discover,\nD::Service: Service<Request>,\nC: TrackCompletion<Handle, <D::Service as Service<Request>>::Response>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a `D`-typed [`Discover`] so that services have a [`PeakEwma`] load metric.","sig":null,"attributes":[{"value":"/ Wraps a `D`-typed [`Discover`] so that services have a [`PeakEwma`] load metric.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100150,"byte_end":100234,"line_start":164,"line_end":164,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100239,"byte_end":100242,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The provided `default_rtt` is used as the default RTT estimate for newly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100247,"byte_end":100323,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ added services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100328,"byte_end":100347,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100352,"byte_end":100355,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ They `decay` value determines over what time period a RTT estimate should","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100360,"byte_end":100437,"line_start":169,"line_end":169,"column_start":5,"column_end":82}},{"value":"/ decay.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100442,"byte_end":100452,"line_start":170,"line_end":170,"column_start":5,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pending_requests","qualname":"::load::pending_requests","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":4710},{"krate":0,"index":4716},{"krate":0,"index":4720},{"krate":0,"index":4727},{"krate":0,"index":4725},{"krate":0,"index":4723},{"krate":0,"index":4729},{"krate":0,"index":4734},{"krate":0,"index":4781},{"krate":0,"index":4785},{"krate":0,"index":4804},{"krate":0,"index":4803},{"krate":0,"index":4801},{"krate":0,"index":4799},{"krate":0,"index":4797},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4791},{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4806},{"krate":0,"index":4809},{"krate":0,"index":1179},{"krate":0,"index":1184},{"krate":0,"index":1189},{"krate":0,"index":1198},{"krate":0,"index":1203},{"krate":0,"index":1209}],"decl_id":null,"docs":" A [`Load`] implementation that measures load using the number of in-flight requests.\n","sig":null,"attributes":[{"value":"/ A [`Load`] implementation that measures load using the number of in-flight requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":107864,"byte_end":107952,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":4710},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108503,"byte_end":108518,"line_start":20,"line_end":20,"column_start":12,"column_end":27},"name":"PendingRequests","qualname":"::load::pending_requests::PendingRequests","value":"PendingRequests {  }","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715}],"decl_id":null,"docs":" Measures the load of the underlying service using the number of currently-pending requests.\n","sig":null,"attributes":[{"value":"/ Measures the load of the underlying service using the number of currently-pending requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108379,"byte_end":108474,"line_start":18,"line_end":18,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":4729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108968,"byte_end":108991,"line_start":35,"line_end":35,"column_start":12,"column_end":35},"name":"PendingRequestsDiscover","qualname":"::load::pending_requests::PendingRequestsDiscover","value":"PendingRequestsDiscover {  }","parent":null,"children":[{"krate":0,"index":4733},{"krate":0,"index":4732}],"decl_id":null,"docs":" Wraps a `D`-typed stream of discovered services with [`PendingRequests`].\n","sig":null,"attributes":[{"value":"cfg(feature = \"discover\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108876,"byte_end":108904,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108844,"byte_end":108858,"line_start":31,"line_end":31,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4757},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108968,"byte_end":108991,"line_start":35,"line_end":35,"column_start":12,"column_end":35},"name":"__PendingRequestsDiscover","qualname":"::load::pending_requests::_::__PendingRequestsDiscover","value":"__PendingRequestsDiscover {  }","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4762}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":108844,"byte_end":108858,"line_start":31,"line_end":31,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4785},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109229,"byte_end":109234,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"Count","qualname":"::load::pending_requests::Count","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the number of currently-pending requests to a given service.\n","sig":null,"attributes":[{"value":"/ Represents the number of currently-pending requests to a given service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109071,"byte_end":109146,"line_start":41,"line_end":41,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4806},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109324,"byte_end":109330,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"Handle","qualname":"::load::pending_requests::Handle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Tracks an in-flight request by reference count.\n","sig":null,"attributes":[{"value":"/ Tracks an in-flight request by reference count.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109244,"byte_end":109295,"line_start":45,"line_end":45,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109524,"byte_end":109527,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<PendingRequests<S, C>>::new","value":"pub fn new(S, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps an `S`-typed service so that its load is tracked by the number of pending requests.\n","sig":null,"attributes":[{"value":"/ Wraps an `S`-typed service so that its load is tracked by the number of pending requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109419,"byte_end":109512,"line_start":52,"line_end":52,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":110799,"byte_end":110802,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<PendingRequestsDiscover<D, C>>::new","value":"pub fn new<Request>(D, C) -> Self where D: Discover,\nD::Service: Service<Request>,\nC: TrackCompletion<Handle, <D::Service as Service<Request>>::Response>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a [`Discover`], wrapping all of its services with [`PendingRequests`].\n","sig":null,"attributes":[{"value":"/ Wraps a [`Discover`], wrapping all of its services with [`PendingRequests`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":110707,"byte_end":110787,"line_start":101,"line_end":101,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":1235},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89337,"byte_end":89341,"line_start":80,"line_end":80,"column_start":11,"column_end":15},"name":"Load","qualname":"::load::Load","value":"Load","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"decl_id":null,"docs":" Types that implement this trait can give an estimate of how loaded they are.","sig":null,"attributes":[{"value":"/ Types that implement this trait can give an estimate of how loaded they are.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89191,"byte_end":89271,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89272,"byte_end":89275,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ See the module documentation for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89276,"byte_end":89326,"line_start":79,"line_end":79,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1236},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89550,"byte_end":89556,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"name":"Metric","qualname":"::load::Load::Metric","value":"type Metric: PartialOrd;","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":" A comparable load metric.","sig":null,"attributes":[{"value":"/ A comparable load metric.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89348,"byte_end":89377,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89382,"byte_end":89385,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Lesser values indicate that the service is less loaded, and should be preferred for new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89390,"byte_end":89481,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/ requests over another service with a higher value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89486,"byte_end":89540,"line_start":84,"line_end":84,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89623,"byte_end":89627,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"load","qualname":"::load::Load::load","value":"pub fn load(&Self) -> Self::Metric","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":" Estimate the service's current load.\n","sig":null,"attributes":[{"value":"/ Estimate the service's current load.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":89575,"byte_end":89615,"line_start":87,"line_end":87,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":1238},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"make","qualname":"::make","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1281},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417}],"decl_id":null,"docs":" Trait aliases for Services that produce specific types of Responses.\n","sig":null,"attributes":[{"value":"cfg(feature = \"make\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7727,"byte_end":7751,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/ Trait aliases for Services that produce specific types of Responses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":113794,"byte_end":113866,"line_start":1,"line_end":1,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1263},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114619,"byte_end":114633,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"MakeConnection","qualname":"::make::make_connection::MakeConnection","value":"MakeConnection<Target>: Sealed<(Target,)>","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"decl_id":null,"docs":" The [`MakeConnection`] trait is used to create transports.","sig":null,"attributes":[{"value":"/ The [`MakeConnection`] trait is used to create transports.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114317,"byte_end":114379,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114380,"byte_end":114383,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The goal of this service is to allow composable methods for creating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114384,"byte_end":114456,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ `AsyncRead + AsyncWrite` transports. This could mean creating a TLS","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114457,"byte_end":114528,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ based connection or using some other method to authenticate the connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114529,"byte_end":114608,"line_start":11,"line_end":11,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1265},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114719,"byte_end":114729,"line_start":14,"line_end":14,"column_start":10,"column_end":20},"name":"Connection","qualname":"::make::make_connection::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" The transport provided by this service\n","sig":null,"attributes":[{"value":"/ The transport provided by this service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114667,"byte_end":114709,"line_start":13,"line_end":13,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1266},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114815,"byte_end":114820,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::make::make_connection::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Errors produced by the connecting service\n","sig":null,"attributes":[{"value":"/ Errors produced by the connecting service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114760,"byte_end":114805,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1267},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114890,"byte_end":114896,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::make::make_connection::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" The future that eventually produces the transport\n","sig":null,"attributes":[{"value":"/ The future that eventually produces the transport","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114827,"byte_end":114880,"line_start":19,"line_end":19,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115042,"byte_end":115052,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::make::make_connection::MakeConnection::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when it is able to make more connections.\n","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when it is able to make more connections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114959,"byte_end":115034,"line_start":22,"line_end":22,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115182,"byte_end":115197,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"make_connection","qualname":"::make::make_connection::MakeConnection::make_connection","value":"pub fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" Connect and return a transport asynchronously\n","sig":null,"attributes":[{"value":"/ Connect and return a transport asynchronously","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115125,"byte_end":115174,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124732,"byte_end":124738,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Shared","qualname":"::make::make_service::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":4813}],"decl_id":null,"docs":" A [`MakeService`] that produces services by cloning an inner service.","sig":null,"attributes":[{"value":"/ A [`MakeService`] that produces services by cloning an inner service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":122875,"byte_end":122948,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":122949,"byte_end":122952,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: super::MakeService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":122953,"byte_end":122992,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":122993,"byte_end":122996,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":122997,"byte_end":123010,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123011,"byte_end":123014,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123015,"byte_end":123022,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123023,"byte_end":123060,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123061,"byte_end":123085,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ # use std::convert::Infallible;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123086,"byte_end":123121,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ use tower::make::{MakeService, Shared};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123122,"byte_end":123165,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ use tower::buffer::Buffer;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123166,"byte_end":123196,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123197,"byte_end":123220,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/ use futures::future::{Ready, ready};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123221,"byte_end":123261,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123262,"byte_end":123265,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // An example connection type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123266,"byte_end":123299,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ struct Connection {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123300,"byte_end":123324,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123325,"byte_end":123328,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // An example request type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123329,"byte_end":123359,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ struct Request {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123360,"byte_end":123381,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123382,"byte_end":123385,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // An example response type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123386,"byte_end":123417,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ struct Response {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123418,"byte_end":123440,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123441,"byte_end":123444,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Some service that doesn't implement `Clone`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123445,"byte_end":123495,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ struct MyService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123496,"byte_end":123517,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123518,"byte_end":123521,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ impl Service<Request> for MyService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123522,"byte_end":123563,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/     type Response = Response;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123564,"byte_end":123597,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     type Error = Infallible;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123598,"byte_end":123630,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/     type Future = Ready<Result<Response, Infallible>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123631,"byte_end":123689,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123690,"byte_end":123693,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123694,"byte_end":123784,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123785,"byte_end":123816,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123817,"byte_end":123826,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123827,"byte_end":123830,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123831,"byte_end":123889,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/         ready(Ok(Response {}))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123890,"byte_end":123924,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123925,"byte_end":123934,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123935,"byte_end":123940,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123941,"byte_end":123944,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Example function that runs a service by accepting new connections and using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":123945,"byte_end":124027,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/ // `Make` to create new services that might be bound to the connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124028,"byte_end":124103,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ //","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124104,"byte_end":124110,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/ // This is similar to what you might find in hyper.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124111,"byte_end":124166,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/ async fn serve_make_service<Make>(make: Make)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124167,"byte_end":124216,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/ where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124217,"byte_end":124226,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/     Make: MakeService<Connection, Request>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124227,"byte_end":124273,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124274,"byte_end":124279,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124280,"byte_end":124294,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124295,"byte_end":124300,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124301,"byte_end":124304,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124305,"byte_end":124318,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ // Our service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124319,"byte_end":124337,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ let svc = MyService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124338,"byte_end":124362,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124363,"byte_end":124366,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Make it `Clone` by putting a channel in front","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124367,"byte_end":124419,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ let buffered = Buffer::new(svc, 1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124420,"byte_end":124462,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124463,"byte_end":124466,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Convert it into a `MakeService`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124467,"byte_end":124505,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ let make = Shared::new(buffered);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124506,"byte_end":124543,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124544,"byte_end":124547,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Run the service and just ignore the `Connection`s as `MyService` doesn't need them","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124548,"byte_end":124637,"line_start":67,"line_end":67,"column_start":1,"column_end":90}},{"value":"/ serve_make_service(make).await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124638,"byte_end":124673,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ # };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124674,"byte_end":124682,"line_start":69,"line_end":69,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124683,"byte_end":124690,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124842,"byte_end":124845,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<S>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Shared`] from a service.\n","sig":null,"attributes":[{"value":"/ Create a new [`Shared`] from a service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124787,"byte_end":124830,"line_start":77,"line_end":77,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4829},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":125388,"byte_end":125400,"line_start":102,"line_end":102,"column_start":14,"column_end":26},"name":"SharedFuture","qualname":"::make::make_service::shared::SharedFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response future from [`Shared`] services.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4852},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":125388,"byte_end":125400,"line_start":102,"line_end":102,"column_start":14,"column_end":26},"name":"__SharedFuture","qualname":"::make::make_service::shared::_::__SharedFuture","value":"__SharedFuture {  }","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1329},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116509,"byte_end":116520,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MakeService","qualname":"::make::make_service::MakeService","value":"MakeService<Target, Request>: Sealed<(Target, Request)>","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"decl_id":null,"docs":" Creates new [`Service`] values.","sig":null,"attributes":[{"value":"/ Creates new [`Service`] values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116037,"byte_end":116072,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116073,"byte_end":116076,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Acts as a service factory. This is useful for cases where new [`Service`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116077,"byte_end":116154,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ values must be produced. One case is a TCP server listener. The listener","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116155,"byte_end":116231,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ accepts new TCP streams, obtains a new [`Service`] value using the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116232,"byte_end":116302,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ [`MakeService`] trait, and uses that new [`Service`] value to process inbound","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116303,"byte_end":116384,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ requests on that new TCP stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116385,"byte_end":116421,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116422,"byte_end":116425,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is essentially a trait alias for a [`Service`] of [`Service`]s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116426,"byte_end":116498,"line_start":20,"line_end":20,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1332},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116615,"byte_end":116623,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"Response","qualname":"::make::make_service::MakeService::Response","value":"type Response;","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Responses given by the service\n","sig":null,"attributes":[{"value":"/ Responses given by the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116571,"byte_end":116605,"line_start":22,"line_end":22,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1333},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116674,"byte_end":116679,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"name":"Error","qualname":"::make::make_service::MakeService::Error","value":"type Error;","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Errors produced by the service\n","sig":null,"attributes":[{"value":"/ Errors produced by the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116630,"byte_end":116664,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116745,"byte_end":116752,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"Service","qualname":"::make::make_service::MakeService::Service","value":"type Service: Service<Request, Response = Self::Response, Error = Self::Error>;","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The [`Service`] value created by this factory\n","sig":null,"attributes":[{"value":"/ The [`Service`] value created by this factory","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116686,"byte_end":116735,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116880,"byte_end":116889,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::make::make_service::MakeService::MakeError","value":"type MakeError;","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Errors produced while building a service.\n","sig":null,"attributes":[{"value":"/ Errors produced while building a service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116825,"byte_end":116870,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1336},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116949,"byte_end":116955,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Future","qualname":"::make::make_service::MakeService::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The future of the [`Service`] instance.\n","sig":null,"attributes":[{"value":"/ The future of the [`Service`] instance.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116896,"byte_end":116939,"line_start":34,"line_end":34,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117429,"byte_end":117439,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::make::make_service::MakeService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Returns [`Poll::Ready`] when the factory is able to create more services.","sig":null,"attributes":[{"value":"/ Returns [`Poll::Ready`] when the factory is able to create more services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117019,"byte_end":117096,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117101,"byte_end":117104,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If the service is at capacity, then [`Poll::Pending`] is returned and the task","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117109,"byte_end":117191,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ is notified when the service becomes ready again. This function is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117196,"byte_end":117266,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ expected to be called while on a task.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117271,"byte_end":117313,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117318,"byte_end":117321,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117326,"byte_end":117369,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/ [`Poll::Pending`]: std::task::Poll::Pending","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117374,"byte_end":117421,"line_start":44,"line_end":44,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117581,"byte_end":117593,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"make_service","qualname":"::make::make_service::MakeService::make_service","value":"pub fn make_service(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Create and return a new service value asynchronously.\n","sig":null,"attributes":[{"value":"/ Create and return a new service value asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117516,"byte_end":117573,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118506,"byte_end":118518,"line_start":79,"line_end":79,"column_start":8,"column_end":20},"name":"into_service","qualname":"::make::make_service::MakeService::into_service","value":"pub fn into_service(Self) -> IntoService<Self, Request> where Self: Sized","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Consume this [`MakeService`] and convert it into a [`Service`].","sig":null,"attributes":[{"value":"/ Consume this [`MakeService`] and convert it into a [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117643,"byte_end":117710,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117715,"byte_end":117718,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117723,"byte_end":117736,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117741,"byte_end":117748,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117753,"byte_end":117786,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/ use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117791,"byte_end":117814,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/ use tower::make::MakeService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117819,"byte_end":117852,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/ use tower::service_fn;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117857,"byte_end":117883,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117888,"byte_end":117891,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117896,"byte_end":117913,"line_start":59,"line_end":59,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117918,"byte_end":117931,"line_start":60,"line_end":60,"column_start":5,"column_end":18}},{"value":"/ // A `MakeService`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117936,"byte_end":117958,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/ let make_service = service_fn(|make_req: ()| async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":117963,"byte_end":118019,"line_start":62,"line_end":62,"column_start":5,"column_end":61}},{"value":"/     Ok::<_, Infallible>(service_fn(|req: String| async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118024,"byte_end":118084,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/         Ok::<_, Infallible>(req)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118089,"byte_end":118125,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/     }))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118130,"byte_end":118141,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118146,"byte_end":118153,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118158,"byte_end":118161,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ // Convert the `MakeService` into a `Service`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118166,"byte_end":118215,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ let mut svc = make_service.into_service();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118220,"byte_end":118266,"line_start":69,"line_end":69,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118271,"byte_end":118274,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // Make a new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118279,"byte_end":118304,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/ let mut new_svc = svc.call(()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118309,"byte_end":118359,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118364,"byte_end":118367,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ // Call the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118372,"byte_end":118395,"line_start":74,"line_end":74,"column_start":5,"column_end":28}},{"value":"/ let res = new_svc.call(\"foo\".to_string()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118400,"byte_end":118461,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ # };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118466,"byte_end":118474,"line_start":76,"line_end":76,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118479,"byte_end":118486,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118491,"byte_end":118498,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119724,"byte_end":119734,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"as_service","qualname":"::make::make_service::MakeService::as_service","value":"pub fn as_service(&mut Self) -> AsService<, Self, Request> where Self: Sized","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Convert this [`MakeService`] into a [`Service`] without consuming the original [`MakeService`].","sig":null,"attributes":[{"value":"/ Convert this [`MakeService`] into a [`Service`] without consuming the original [`MakeService`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118693,"byte_end":118792,"line_start":89,"line_end":89,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118797,"byte_end":118800,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118805,"byte_end":118818,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118823,"byte_end":118830,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118835,"byte_end":118868,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/ use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118873,"byte_end":118896,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/ use tower::make::MakeService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118901,"byte_end":118934,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ use tower::service_fn;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118939,"byte_end":118965,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118970,"byte_end":118973,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":118978,"byte_end":118995,"line_start":98,"line_end":98,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119000,"byte_end":119013,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ // A `MakeService`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119018,"byte_end":119040,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/ let mut make_service = service_fn(|make_req: ()| async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119045,"byte_end":119105,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/     Ok::<_, Infallible>(service_fn(|req: String| async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119110,"byte_end":119170,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/         Ok::<_, Infallible>(req)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119175,"byte_end":119211,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/     }))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119216,"byte_end":119227,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119232,"byte_end":119239,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119244,"byte_end":119247,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Convert the `MakeService` into a `Service`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119252,"byte_end":119301,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ let mut svc = make_service.as_service();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119306,"byte_end":119350,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119355,"byte_end":119358,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // Make a new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119363,"byte_end":119388,"line_start":110,"line_end":110,"column_start":5,"column_end":30}},{"value":"/ let mut new_svc = svc.call(()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119393,"byte_end":119443,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119448,"byte_end":119451,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Call the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119456,"byte_end":119479,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/ let res = new_svc.call(\"foo\".to_string()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119484,"byte_end":119545,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119550,"byte_end":119553,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // The original `MakeService` is still accessible","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119558,"byte_end":119611,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"/ let new_svc = make_service.make_service(()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119616,"byte_end":119679,"line_start":117,"line_end":117,"column_start":5,"column_end":68}},{"value":"/ # };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119684,"byte_end":119692,"line_start":118,"line_end":118,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119697,"byte_end":119704,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119709,"byte_end":119716,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1358},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120747,"byte_end":120758,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"IntoService","qualname":"::make::make_service::IntoService","value":"IntoService {  }","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362}],"decl_id":null,"docs":" Service returned by [`MakeService::into_service`][into].","sig":null,"attributes":[{"value":"/ Service returned by [`MakeService::into_service`][into].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120564,"byte_end":120624,"line_start":159,"line_end":159,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120625,"byte_end":120628,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ See the documentation on [`into_service`][into] for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120629,"byte_end":120693,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120694,"byte_end":120697,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [into]: MakeService::into_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120698,"byte_end":120735,"line_start":163,"line_end":163,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1381},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121949,"byte_end":121958,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"AsService","qualname":"::make::make_service::AsService","value":"AsService {  }","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"decl_id":null,"docs":" Service returned by [`MakeService::as_service`][as].","sig":null,"attributes":[{"value":"/ Service returned by [`MakeService::as_service`][as].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121778,"byte_end":121834,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121835,"byte_end":121838,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ See the documentation on [`as_service`][as] for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121839,"byte_end":121899,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121900,"byte_end":121903,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [as]: MakeService::as_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121904,"byte_end":121937,"line_start":216,"line_end":216,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1417},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114075,"byte_end":114081,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"future","qualname":"::make::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/mod.rs","byte_start":114088,"byte_end":114104,"line_start":11,"line_end":11,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":1421},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ready_cache","qualname":"::ready_cache","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/mod.rs","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1525},{"krate":0,"index":1540}],"decl_id":null,"docs":" A cache of services\n","sig":null,"attributes":[{"value":"cfg(feature = \"ready-cache\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7814,"byte_end":7845,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ A cache of services","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/mod.rs","byte_start":126642,"byte_end":126665,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":1422},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cache","qualname":"::ready_cache::cache","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":4871},{"krate":0,"index":4878},{"krate":0,"index":1467},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":4883},{"krate":0,"index":4893},{"krate":0,"index":4897},{"krate":0,"index":4905},{"krate":0,"index":1474},{"krate":0,"index":1479},{"krate":0,"index":1502},{"krate":0,"index":1515},{"krate":0,"index":1519}],"decl_id":null,"docs":" A cache of services.\n","sig":null,"attributes":[{"value":"/ A cache of services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":126732,"byte_end":126756,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4871},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":129356,"byte_end":129366,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"ReadyCache","qualname":"::ready_cache::cache::ReadyCache","value":"ReadyCache {  }","parent":null,"children":[{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877}],"decl_id":null,"docs":" Drives readiness over a set of services.","sig":null,"attributes":[{"value":"/ Drives readiness over a set of services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127081,"byte_end":127125,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127126,"byte_end":127129,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The cache maintains two internal data structures:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127130,"byte_end":127183,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127184,"byte_end":127187,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * a set of _pending_ services that have not yet become ready; and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127188,"byte_end":127257,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ * a set of _ready_ services that have previously polled ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127258,"byte_end":127324,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127325,"byte_end":127328,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As each `S` typed [`Service`] is added to the cache via [`ReadyCache::push`], it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127329,"byte_end":127413,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ is added to the _pending set_. As [`ReadyCache::poll_pending`] is invoked,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127414,"byte_end":127492,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ pending services are polled and added to the _ready set_.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127493,"byte_end":127554,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127555,"byte_end":127558,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`ReadyCache::call_ready`] (or [`ReadyCache::call_ready_index`]) dispatches a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127559,"byte_end":127640,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ request to the specified service, but panics if the specified service is not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127641,"byte_end":127721,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ in the ready set. The `ReadyCache::check_*` functions can be used to ensure","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127722,"byte_end":127801,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ that a service is ready before dispatching a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127802,"byte_end":127859,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127860,"byte_end":127863,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The ready set can hold services for an abitrarily long time. During this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127864,"byte_end":127940,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ time, the runtime may process events that invalidate that ready state (for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":127941,"byte_end":128019,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ instance, if a keepalive detects a lost connection). In such cases, callers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128020,"byte_end":128099,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ should use [`ReadyCache::check_ready`] (or [`ReadyCache::check_ready_index`])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128100,"byte_end":128181,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ immediately before dispatching a request to ensure that the service has not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128182,"byte_end":128261,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ become unavailable.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128262,"byte_end":128285,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128286,"byte_end":128289,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Once `ReadyCache::call_ready*` is invoked, the service is placed back into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128290,"byte_end":128368,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ the _pending_ set to be driven to readiness again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128369,"byte_end":128423,"line_start":40,"line_end":40,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128424,"byte_end":128427,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When `ReadyCache::check_ready*` returns `false`, it indicates that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128428,"byte_end":128502,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ specified service is _not_ ready. If an error is returned, this indicats that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128503,"byte_end":128584,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/ the server failed and has been removed from the cache entirely.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128585,"byte_end":128652,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128653,"byte_end":128656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`ReadyCache::evict`] can be used to remove a service from the cache (by key),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128657,"byte_end":128739,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/ though the service may not be dropped (if it is currently pending) until","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128740,"byte_end":128816,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ [`ReadyCache::poll_pending`] is invoked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128817,"byte_end":128861,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128862,"byte_end":128865,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Note that the by-index accessors are provided to support use cases (like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128866,"byte_end":128942,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ power-of-two-choices load balancing) where the caller does not care to keep","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":128943,"byte_end":129022,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ track of each service's key. Instead, it needs only to access _some_ ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":129023,"byte_end":129101,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ service. In such a case, it should be noted that calls to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":129102,"byte_end":129163,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"/ [`ReadyCache::poll_pending`] and [`ReadyCache::evict`] may perturb the order of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":129164,"byte_end":129247,"line_start":54,"line_end":54,"column_start":1,"column_end":84}},{"value":"/ the ready set, so any cached indexes should be discarded after such a call.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":129248,"byte_end":129327,"line_start":55,"line_end":55,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131096,"byte_end":131099,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"len","qualname":"<ReadyCache<K, S, Req>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of services in the cache.\n","sig":null,"attributes":[{"value":"/ Returns the total number of services in the cache.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131030,"byte_end":131084,"line_start":119,"line_end":119,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131250,"byte_end":131258,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ReadyCache<K, S, Req>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not there are any services in the cache.\n","sig":null,"attributes":[{"value":"/ Returns whether or not there are any services in the cache.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131175,"byte_end":131238,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131408,"byte_end":131417,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"ready_len","qualname":"<ReadyCache<K, S, Req>>::ready_len","value":"pub fn ready_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of services in the ready set.\n","sig":null,"attributes":[{"value":"/ Returns the number of services in the ready set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131344,"byte_end":131396,"line_start":129,"line_end":129,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131538,"byte_end":131549,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"pending_len","qualname":"<ReadyCache<K, S, Req>>::pending_len","value":"pub fn pending_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of services in the unready set.\n","sig":null,"attributes":[{"value":"/ Returns the number of services in the unready set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131472,"byte_end":131526,"line_start":134,"line_end":134,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131675,"byte_end":131691,"line_start":140,"line_end":140,"column_start":12,"column_end":28},"name":"pending_contains","qualname":"<ReadyCache<K, S, Req>>::pending_contains","value":"pub fn pending_contains<Q: Hash + Equivalent<K>>(&Self, &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the given key is in the unready set.\n","sig":null,"attributes":[{"value":"/ Returns true iff the given key is in the unready set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131606,"byte_end":131663,"line_start":139,"line_end":139,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131877,"byte_end":131886,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"get_ready","qualname":"<ReadyCache<K, S, Req>>::get_ready","value":"pub fn get_ready<Q: Hash + Equivalent<K>>(&Self, &Q)\n-> Option<(usize, &K, &S)>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a reference to a service in the ready set by key.\n","sig":null,"attributes":[{"value":"/ Obtains a reference to a service in the ready set by key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":131804,"byte_end":131865,"line_start":144,"line_end":144,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132112,"byte_end":132125,"line_start":150,"line_end":150,"column_start":12,"column_end":25},"name":"get_ready_mut","qualname":"<ReadyCache<K, S, Req>>::get_ready_mut","value":"pub fn get_ready_mut<Q: Hash + Equivalent<K>>(&mut Self, &Q)\n-> Option<(usize, &K, &mut S)>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a mutable reference to a service in the ready set by key.\n","sig":null,"attributes":[{"value":"/ Obtains a mutable reference to a service in the ready set by key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132031,"byte_end":132100,"line_start":149,"line_end":149,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132410,"byte_end":132425,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"get_ready_index","qualname":"<ReadyCache<K, S, Req>>::get_ready_index","value":"pub fn get_ready_index(&Self, usize) -> Option<(&K, &S)>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a reference to a service in the ready set by index.\n","sig":null,"attributes":[{"value":"/ Obtains a reference to a service in the ready set by index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132335,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132619,"byte_end":132638,"line_start":165,"line_end":165,"column_start":12,"column_end":31},"name":"get_ready_index_mut","qualname":"<ReadyCache<K, S, Req>>::get_ready_index_mut","value":"pub fn get_ready_index_mut(&mut Self, usize) -> Option<(&mut K, &mut S)>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a mutable reference to a service in the ready set by index.\n","sig":null,"attributes":[{"value":"/ Obtains a mutable reference to a service in the ready set by index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132536,"byte_end":132607,"line_start":164,"line_end":164,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133108,"byte_end":133113,"line_start":176,"line_end":176,"column_start":12,"column_end":17},"name":"evict","qualname":"<ReadyCache<K, S, Req>>::evict","value":"pub fn evict<Q: Hash + Equivalent<K>>(&mut Self, &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Evicts an item from the cache.","sig":null,"attributes":[{"value":"/ Evicts an item from the cache.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132769,"byte_end":132803,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132808,"byte_end":132811,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Returns true if a service was marked for eviction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132816,"byte_end":132870,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132875,"byte_end":132878,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Services are dropped from the ready set immediately. Services in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132883,"byte_end":132955,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ pending set are marked for cancellation, but [`ReadyCache::poll_pending`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":132960,"byte_end":133037,"line_start":174,"line_end":174,"column_start":5,"column_end":82}},{"value":"/ must be called to cause the service to be dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133042,"byte_end":133096,"line_start":175,"line_end":175,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134214,"byte_end":134218,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"push","qualname":"<ReadyCache<K, S, Req>>::push","value":"pub fn push(&mut Self, K, S)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a new service onto the pending set.","sig":null,"attributes":[{"value":"/ Pushes a new service onto the pending set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133683,"byte_end":133729,"line_start":198,"line_end":198,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133734,"byte_end":133737,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The service will be promoted to the ready set as [`poll_pending`] is invoked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133742,"byte_end":133823,"line_start":200,"line_end":200,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133828,"byte_end":133831,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Note that this does **not** remove services from the ready set. Once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133836,"byte_end":133912,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ old service is used, it will be dropped instead of being added back to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133917,"byte_end":133991,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ the pending set; OR, when the new service becomes ready, it will replace","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133996,"byte_end":134072,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ the prior service in the ready set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134077,"byte_end":134116,"line_start":205,"line_end":205,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134121,"byte_end":134124,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`poll_pending`]: crate::ready_cache::cache::ReadyCache::poll_pending","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134129,"byte_end":134202,"line_start":207,"line_end":207,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135629,"byte_end":135641,"line_start":240,"line_end":240,"column_start":12,"column_end":24},"name":"poll_pending","qualname":"<ReadyCache<K, S, Req>>::poll_pending","value":"pub fn poll_pending(&mut Self, &mut Context)\n-> Poll<Result<(), error::Failed<K>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls services pending readiness, adding ready services to the ready set.","sig":null,"attributes":[{"value":"/ Polls services pending readiness, adding ready services to the ready set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134840,"byte_end":134917,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134922,"byte_end":134925,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Returns [`Poll::Ready`] when there are no remaining unready services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":134930,"byte_end":135003,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ [`poll_pending`] should be called again after [`push`] or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135008,"byte_end":135069,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/ [`call_ready_index`] are invoked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135074,"byte_end":135111,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135116,"byte_end":135119,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Failures indicate that an individual pending service failed to become","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135124,"byte_end":135197,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ ready (and has been removed from the cache). In such a case,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135202,"byte_end":135266,"line_start":233,"line_end":233,"column_start":5,"column_end":69}},{"value":"/ [`poll_pending`] should typically be called again to continue driving","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135271,"byte_end":135344,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ pending services to readiness.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135349,"byte_end":135383,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135388,"byte_end":135391,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`poll_pending`]: crate::ready_cache::cache::ReadyCache::poll_pending","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135396,"byte_end":135469,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ [`push`]: crate::ready_cache::cache::ReadyCache::push","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135474,"byte_end":135531,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/ [`call_ready_index`]: crate::ready_cache::cache::ReadyCache::call_ready_index","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":135536,"byte_end":135617,"line_start":239,"line_end":239,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138607,"byte_end":138618,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"check_ready","qualname":"<ReadyCache<K, S, Req>>::check_ready","value":"pub fn check_ready<Q: Hash + Equivalent<K>>(&mut Self, &mut Context, &Q)\n-> Result<bool, error::Failed<K>>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the referenced endpoint is ready.","sig":null,"attributes":[{"value":"/ Checks whether the referenced endpoint is ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138413,"byte_end":138465,"line_start":289,"line_end":289,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138470,"byte_end":138473,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Returns true if the endpoint is ready and false if it is not. An error is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138478,"byte_end":138555,"line_start":291,"line_end":291,"column_start":5,"column_end":82}},{"value":"/ returned if the endpoint fails.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138560,"byte_end":138595,"line_start":292,"line_end":292,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":139198,"byte_end":139215,"line_start":310,"line_end":310,"column_start":12,"column_end":29},"name":"check_ready_index","qualname":"<ReadyCache<K, S, Req>>::check_ready_index","value":"pub fn check_ready_index(&mut Self, &mut Context, usize)\n-> Result<bool, error::Failed<K>>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the referenced endpoint is ready.","sig":null,"attributes":[{"value":"/ Checks whether the referenced endpoint is ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138920,"byte_end":138972,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138977,"byte_end":138980,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the service is no longer ready, it is moved back into the pending set","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":138985,"byte_end":139061,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ and `false` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":139066,"byte_end":139094,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":139099,"byte_end":139102,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If the service errors, it is removed and dropped and the error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":139107,"byte_end":139186,"line_start":309,"line_end":309,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140569,"byte_end":140579,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"call_ready","qualname":"<ReadyCache<K, S, Req>>::call_ready","value":"pub fn call_ready<Q: Hash + Equivalent<K>>(&mut Self, &Q, Req) -> S::Future","parent":null,"children":[],"decl_id":null,"docs":" Calls a ready service by key.","sig":null,"attributes":[{"value":"/ Calls a ready service by key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140434,"byte_end":140467,"line_start":347,"line_end":347,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140472,"byte_end":140475,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140480,"byte_end":140492,"line_start":349,"line_end":349,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140497,"byte_end":140500,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If the specified key does not exist in the ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140505,"byte_end":140557,"line_start":351,"line_end":351,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140965,"byte_end":140981,"line_start":365,"line_end":365,"column_start":12,"column_end":28},"name":"call_ready_index","qualname":"<ReadyCache<K, S, Req>>::call_ready_index","value":"pub fn call_ready_index(&mut Self, usize, Req) -> S::Future","parent":null,"children":[],"decl_id":null,"docs":" Calls a ready service by index.","sig":null,"attributes":[{"value":"/ Calls a ready service by index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140837,"byte_end":140872,"line_start":360,"line_end":360,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140877,"byte_end":140880,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140885,"byte_end":140897,"line_start":362,"line_end":362,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140902,"byte_end":140905,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If the specified index is out of range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":140910,"byte_end":140953,"line_start":364,"line_end":364,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1525},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::ready_cache::error","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537}],"decl_id":null,"docs":" Errors\n","sig":null,"attributes":[{"value":"/ Errors","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":142828,"byte_end":142838,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":142939,"byte_end":142945,"line_start":5,"line_end":5,"column_start":12,"column_end":18},"name":"Failed","qualname":"::ready_cache::error::Failed","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error indicating that the service with a `K`-typed key failed with an\n error.\n","sig":null,"attributes":[{"value":"/ An error indicating that the service with a `K`-typed key failed with an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":142840,"byte_end":142916,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":142917,"byte_end":142927,"line_start":4,"line_end":4,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1529},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":142949,"byte_end":142954,"line_start":5,"line_end":5,"column_start":22,"column_end":27},"name":"0","qualname":"::ready_cache::error::Failed::0","value":"K","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1530},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":142956,"byte_end":142975,"line_start":5,"line_end":5,"column_start":29,"column_end":48},"name":"1","qualname":"::ready_cache::error::Failed::1","value":"std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timeout","qualname":"::timeout","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1557},{"krate":0,"index":1590},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":5073},{"krate":0,"index":5080},{"krate":0,"index":5077},{"krate":0,"index":1625},{"krate":0,"index":1631}],"decl_id":null,"docs":" Middleware that applies a timeout to requests.","sig":null,"attributes":[{"value":"cfg(feature = \"timeout\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8312,"byte_end":8339,"line_start":198,"line_end":198,"column_start":1,"column_end":28}},{"value":"/ Middleware that applies a timeout to requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143545,"byte_end":143595,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143596,"byte_end":143599,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ If the response does not complete within the specified timeout, the response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143600,"byte_end":143680,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ will be aborted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143681,"byte_end":143701,"line_start":4,"line_end":4,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":1544},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::timeout::error","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":5014},{"krate":0,"index":5019},{"krate":0,"index":5017},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556}],"decl_id":null,"docs":" Error types\n","sig":null,"attributes":[{"value":"/ Error types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145256,"byte_end":145271,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":5014},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145359,"byte_end":145366,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::timeout::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" The timeout elapsed.\n","sig":null,"attributes":[{"value":"/ The timeout elapsed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145297,"byte_end":145321,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145448,"byte_end":145451,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<Elapsed>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new elapsed error\n","sig":null,"attributes":[{"value":"/ Construct a new elapsed error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145403,"byte_end":145436,"line_start":10,"line_end":10,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::timeout::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":5021},{"krate":0,"index":5025},{"krate":0,"index":5064},{"krate":0,"index":1581},{"krate":0,"index":1584}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":145666,"byte_end":145682,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":5021},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":145961,"byte_end":145975,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::timeout::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":5023},{"krate":0,"index":5024}],"decl_id":null,"docs":" [`Timeout`] response future","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":145918,"byte_end":145932,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5044},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":145961,"byte_end":145975,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::timeout::future::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":145918,"byte_end":145932,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5067},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147027,"byte_end":147039,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TimeoutLayer","qualname":"::timeout::layer::TimeoutLayer","value":"TimeoutLayer {  }","parent":null,"children":[{"krate":0,"index":5068}],"decl_id":null,"docs":" Applies a timeout to requests via the supplied inner service.\n","sig":null,"attributes":[{"value":"/ Applies a timeout to requests via the supplied inner service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":146926,"byte_end":146991,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147140,"byte_end":147143,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<TimeoutLayer>::new","value":"pub fn new(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a timeout from a duration\n","sig":null,"attributes":[{"value":"/ Create a timeout from a duration","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147092,"byte_end":147128,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5073},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143972,"byte_end":143979,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":5075},{"krate":0,"index":5076}],"decl_id":null,"docs":" Applies a timeout to requests.\n","sig":null,"attributes":[{"value":"/ Applies a timeout to requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143902,"byte_end":143936,"line_start":17,"line_end":17,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144120,"byte_end":144123,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Timeout<T>>::new","value":"pub fn new(T, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Timeout`]\n","sig":null,"attributes":[{"value":"/ Creates a new [`Timeout`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144079,"byte_end":144108,"line_start":27,"line_end":27,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144261,"byte_end":144268,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144209,"byte_end":144249,"line_start":32,"line_end":32,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144375,"byte_end":144382,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144315,"byte_end":144363,"line_start":37,"line_end":37,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144500,"byte_end":144510,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner service\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144441,"byte_end":144488,"line_start":42,"line_end":42,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1639},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1711},{"krate":0,"index":1908},{"krate":0,"index":2056},{"krate":0,"index":2108},{"krate":0,"index":2156},{"krate":0,"index":2207},{"krate":0,"index":2251},{"krate":0,"index":2302},{"krate":0,"index":2354},{"krate":0,"index":2410},{"krate":0,"index":2450},{"krate":0,"index":2523},{"krate":0,"index":2602},{"krate":0,"index":2635},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2802},{"krate":0,"index":2821},{"krate":0,"index":2854},{"krate":0,"index":2857}],"decl_id":null,"docs":" Various utility types and functions that are generally used with Tower.\n","sig":null,"attributes":[{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8408,"byte_end":8432,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/ Various utility types and functions that are generally used with Tower.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":147387,"byte_end":147462,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5083},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180399,"byte_end":180406,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::util::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5086},{"krate":0,"index":5087}],"decl_id":null,"docs":" Service returned by the [`and_then`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`and_then`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180262,"byte_end":180314,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180315,"byte_end":180318,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`and_then`]: crate::util::ServiceExt::and_then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180319,"byte_end":180370,"line_start":12,"line_end":12,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5092},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180879,"byte_end":180892,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"AndThenFuture","qualname":"::util::and_then::AndThenFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response future from [`AndThen`] services.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180840,"byte_end":180867,"line_start":34,"line_end":34,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5125},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180879,"byte_end":180892,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"__AndThenFuture","qualname":"::util::and_then::_::__AndThenFuture","value":"__AndThenFuture {  }","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5131}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180840,"byte_end":180867,"line_start":34,"line_end":34,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181753,"byte_end":181765,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"AndThenLayer","qualname":"::util::and_then::AndThenLayer","value":"AndThenLayer {  }","parent":null,"children":[{"krate":0,"index":5156}],"decl_id":null,"docs":" A [`Layer`] that produces a [`AndThen`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`AndThen`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181627,"byte_end":181679,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181680,"byte_end":181683,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181684,"byte_end":181717,"line_start":61,"line_end":61,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181863,"byte_end":181866,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<AndThen<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AndThen` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `AndThen` service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181815,"byte_end":181851,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182142,"byte_end":182147,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"layer","qualname":"<AndThen<S, F>>::layer","value":"pub fn layer(F) -> AndThenLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`AndThen`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`AndThen`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181933,"byte_end":181996,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182001,"byte_end":182004,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`AndThenLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182009,"byte_end":182084,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182089,"byte_end":182092,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182097,"byte_end":182130,"line_start":77,"line_end":77,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182892,"byte_end":182895,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<AndThenLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`AndThenLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`AndThenLayer`] layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182839,"byte_end":182880,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1733},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186326,"byte_end":186334,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"BoxLayer","qualname":"::util::boxed::layer::BoxLayer","value":"BoxLayer {  }","parent":null,"children":[{"krate":0,"index":1738}],"decl_id":null,"docs":" A boxed [`Layer`] trait object.","sig":null,"attributes":[{"value":"/ A boxed [`Layer`] trait object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":184725,"byte_end":184760,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":184761,"byte_end":184764,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`BoxLayer`] turns a layer into a trait object, allowing both the [`Layer`] itself","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":184765,"byte_end":184851,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ and the output [`Service`] to be dynamic, while having consistent types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":184852,"byte_end":184928,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":184929,"byte_end":184932,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This [`Layer`] produces [`BoxService`] instances erasing the type of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":184933,"byte_end":185009,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`Service`] produced by the wrapped [`Layer`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185010,"byte_end":185060,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185061,"byte_end":185064,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185065,"byte_end":185078,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185079,"byte_end":185082,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `BoxLayer` can, for example, be useful to create layers dynamically that otherwise wouldn't have","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185083,"byte_end":185183,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/ the same types. In this example, we include a [`Timeout`] layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185184,"byte_end":185251,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ only if an environment variable is set. We can use `BoxLayer`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185252,"byte_end":185317,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ to return a consistent type regardless of runtime configuration:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185318,"byte_end":185386,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185387,"byte_end":185390,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185391,"byte_end":185398,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185399,"byte_end":185427,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxLayer};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185428,"byte_end":185495,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185496,"byte_end":185499,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn common_layer<S, T>() -> BoxLayer<S, T, S::Response, BoxError>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185500,"byte_end":185568,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185569,"byte_end":185578,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/     S: Service<T> + Send + 'static,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185579,"byte_end":185618,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/     S::Future: Send + 'static,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185619,"byte_end":185653,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/     S::Error: Into<BoxError> + 'static,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185654,"byte_end":185697,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185698,"byte_end":185703,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/     let builder = ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185704,"byte_end":185747,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/         .concurrency_limit(100);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185748,"byte_end":185784,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185785,"byte_end":185788,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     if std::env::var(\"SET_TIMEOUT\").is_ok() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185789,"byte_end":185838,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/         let layer = builder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185839,"byte_end":185870,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/             .timeout(Duration::from_secs(30))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185871,"byte_end":185920,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/             .into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185921,"byte_end":185951,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185952,"byte_end":185955,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/         BoxLayer::new(layer)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185956,"byte_end":185988,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":185989,"byte_end":186005,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/         let layer = builder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186006,"byte_end":186037,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/             .map_err(Into::into)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186038,"byte_end":186074,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/             .into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186075,"byte_end":186105,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186106,"byte_end":186109,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/         BoxLayer::new(layer)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186110,"byte_end":186142,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186143,"byte_end":186152,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186153,"byte_end":186158,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186159,"byte_end":186166,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186167,"byte_end":186170,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186171,"byte_end":186204,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`Service`]: tower_service::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186205,"byte_end":186244,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/ [`BoxService`]: super::BoxService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186245,"byte_end":186282,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ [`Timeout`]: crate::timeout","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186283,"byte_end":186314,"line_start":53,"line_end":53,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186527,"byte_end":186530,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxLayer<In, T, U, E>>::new","value":"pub fn new<L>(L) -> Self where L: Layer<In> + Send + Sync + 'static,\nL::Service: Service<T, Response = U, Error = U> + Send + 'static,\n<L::Service as Service<T>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`BoxLayer`].\n","sig":null,"attributes":[{"value":"/ Create a new [`BoxLayer`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186485,"byte_end":186515,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187948,"byte_end":187958,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"BoxService","qualname":"::util::boxed::sync::BoxService","value":"BoxService {  }","parent":null,"children":[{"krate":0,"index":1798}],"decl_id":null,"docs":" A boxed `Service + Send` trait object.","sig":null,"attributes":[{"value":"/ A boxed `Service + Send` trait object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187644,"byte_end":187686,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187687,"byte_end":187690,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`BoxService`] turns a service into a trait object, allowing the response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187691,"byte_end":187768,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ future type to be dynamic. This type requires both the service and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187769,"byte_end":187843,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ response future to be [`Send`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187844,"byte_end":187879,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187880,"byte_end":187883,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ See module level documentation for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":187884,"byte_end":187936,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188411,"byte_end":188414,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> + Send +\n'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188377,"byte_end":188399,"line_start":34,"line_end":34,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188781,"byte_end":188786,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"layer","qualname":"<BoxService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxService`]\n middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxService`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188639,"byte_end":188709,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188714,"byte_end":188729,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188734,"byte_end":188737,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188742,"byte_end":188769,"line_start":47,"line_end":47,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190261,"byte_end":190277,"line_start":12,"line_end":12,"column_start":12,"column_end":28},"name":"UnsyncBoxService","qualname":"::util::boxed::unsync::UnsyncBoxService","value":"UnsyncBoxService {  }","parent":null,"children":[{"krate":0,"index":1864}],"decl_id":null,"docs":" A boxed [`Service`] trait object.\n","sig":null,"attributes":[{"value":"/ A boxed [`Service`] trait object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190212,"byte_end":190249,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190747,"byte_end":190750,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsyncBoxService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> +\n'static, S::Future: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190713,"byte_end":190735,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191114,"byte_end":191119,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"layer","qualname":"<UnsyncBoxService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + 'static, S::Future: 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in an [`UnsyncBoxService`] middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in an [`UnsyncBoxService`] middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190973,"byte_end":191062,"line_start":38,"line_end":38,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191067,"byte_end":191070,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191075,"byte_end":191102,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5248},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199338,"byte_end":199345,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"CallAll","qualname":"::util::call_all::ordered::CallAll","value":"CallAll {  }","parent":null,"children":[{"krate":0,"index":5251}],"decl_id":null,"docs":" This is a [`Stream`] of responses resulting from calling the wrapped [`Service`] for each\n request received on the wrapped [`Stream`].","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199295,"byte_end":199309,"line_start":86,"line_end":86,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199338,"byte_end":199345,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"__CallAll","qualname":"::util::call_all::ordered::_::__CallAll","value":"__CallAll {  }","parent":null,"children":[{"krate":0,"index":5277},{"krate":0,"index":5278}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199295,"byte_end":199309,"line_start":86,"line_end":86,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199935,"byte_end":199938,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<CallAll<Svc, S>>::new","value":"pub fn new(Svc, S) -> CallAll<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`CallAll`] combinator.","sig":null,"attributes":[{"value":"/ Create new [`CallAll`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199605,"byte_end":199643,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199648,"byte_end":199651,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Each request yielded by `stream` is passed to `svc`, and the resulting responses are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199656,"byte_end":199744,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ yielded in the same order by the implementation of [`Stream`] for [`CallAll`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199749,"byte_end":199831,"line_start":106,"line_end":106,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199836,"byte_end":199839,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199844,"byte_end":199923,"line_start":108,"line_end":108,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200310,"byte_end":200320,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CallAll<Svc, S>>::into_inner","value":"pub fn into_inner(Self) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200105,"byte_end":200141,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200146,"byte_end":200149,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200154,"byte_end":200166,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200171,"byte_end":200174,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200179,"byte_end":200229,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200234,"byte_end":200237,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAll::take_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200242,"byte_end":200298,"line_start":121,"line_end":121,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200676,"byte_end":200688,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"take_service","qualname":"<CallAll<Svc, S>>::take_service","value":"pub fn take_service(Pin<&mut Self>) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200379,"byte_end":200415,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200420,"byte_end":200423,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This [`CallAll`] can no longer be used after this function has been called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200428,"byte_end":200507,"line_start":128,"line_end":128,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200512,"byte_end":200515,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200520,"byte_end":200532,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200537,"byte_end":200540,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200545,"byte_end":200595,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200600,"byte_end":200603,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAll::take_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200608,"byte_end":200664,"line_start":134,"line_end":134,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":201057,"byte_end":201066,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"unordered","qualname":"<CallAll<Svc, S>>::unordered","value":"pub fn unordered(Self) -> super::CallAllUnordered<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Return responses as they are ready, regardless of the initial order.","sig":null,"attributes":[{"value":"/ Return responses as they are ready, regardless of the initial order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200775,"byte_end":200847,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200852,"byte_end":200855,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the stream is polled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200860,"byte_end":200921,"line_start":141,"line_end":141,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200926,"byte_end":200929,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200934,"byte_end":200946,"line_start":143,"line_end":143,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200951,"byte_end":200954,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Panics if [`poll`] was called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200959,"byte_end":200993,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":200998,"byte_end":201001,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: std::future::Future::poll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":201006,"byte_end":201045,"line_start":147,"line_end":147,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5301},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202578,"byte_end":202594,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"CallAllUnordered","qualname":"::util::call_all::unordered::CallAllUnordered","value":"CallAllUnordered {  }","parent":null,"children":[{"krate":0,"index":5304}],"decl_id":null,"docs":" A stream of responses received from the inner service in received order.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202535,"byte_end":202549,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5326},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202578,"byte_end":202594,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"__CallAllUnordered","qualname":"::util::call_all::unordered::_::__CallAllUnordered","value":"__CallAllUnordered {  }","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202535,"byte_end":202549,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203016,"byte_end":203019,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<CallAllUnordered<Svc, S>>::new","value":"pub fn new(Svc, S) -> CallAllUnordered<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`CallAllUnordered`] combinator.","sig":null,"attributes":[{"value":"/ Create new [`CallAllUnordered`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202865,"byte_end":202912,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202917,"byte_end":202920,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202925,"byte_end":203004,"line_start":42,"line_end":42,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203420,"byte_end":203430,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CallAllUnordered<Svc, S>>::into_inner","value":"pub fn into_inner(Self) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203206,"byte_end":203242,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203247,"byte_end":203250,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203255,"byte_end":203267,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203272,"byte_end":203275,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203280,"byte_end":203330,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203335,"byte_end":203338,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAllUnordered::take_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203343,"byte_end":203408,"line_start":55,"line_end":55,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203802,"byte_end":203814,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"take_service","qualname":"<CallAllUnordered<Svc, S>>::take_service","value":"pub fn take_service(Pin<&mut Self>) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped `Service`.","sig":null,"attributes":[{"value":"/ Extract the wrapped `Service`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203489,"byte_end":203523,"line_start":60,"line_end":60,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203528,"byte_end":203531,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This [`CallAllUnordered`] can no longer be used after this function has been called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203536,"byte_end":203624,"line_start":62,"line_end":62,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203629,"byte_end":203632,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203637,"byte_end":203649,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203654,"byte_end":203657,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203662,"byte_end":203712,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203717,"byte_end":203720,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAllUnordered::take_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203725,"byte_end":203790,"line_start":68,"line_end":68,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205278,"byte_end":205279,"line_start":24,"line_end":24,"column_start":5,"column_end":6},"name":"A","qualname":"::util::either::Either::A","value":"Either::A(A)","parent":{"krate":0,"index":5354},"children":[],"decl_id":null,"docs":" One type of backing [`Service`].\n","sig":null,"attributes":[{"value":"/ One type of backing [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205237,"byte_end":205273,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5359},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205342,"byte_end":205343,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"B","qualname":"::util::either::Either::B","value":"Either::B(B)","parent":{"krate":0,"index":5354},"children":[],"decl_id":null,"docs":" The other type of backing [`Service`].\n","sig":null,"attributes":[{"value":"/ The other type of backing [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205295,"byte_end":205337,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":5354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205218,"byte_end":205224,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Either","qualname":"::util::either::Either","value":"pub enum Either<A, B> { A(A), B(B), }","parent":null,"children":[{"krate":0,"index":5357},{"krate":0,"index":5359}],"decl_id":null,"docs":" Combine two different service types into a single type.","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205148,"byte_end":205184,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5379},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205218,"byte_end":205224,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"__Either","qualname":"::util::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205148,"byte_end":205184,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":2129},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208843,"byte_end":208857,"line_start":48,"line_end":48,"column_start":8,"column_end":22},"name":"future_service","qualname":"::util::future_service::future_service","value":"pub fn future_service<F, S, R, E>(F) -> FutureService<F, S> where\nF: Future<Output = Result<S, E>> + Unpin, S: Service<R, Error = E>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FutureService`] for the given future.","sig":null,"attributes":[{"value":"/ Returns a new [`FutureService`] for the given future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207289,"byte_end":207346,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207347,"byte_end":207350,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A [`FutureService`] allows you to treat a future that resolves to a service as a service. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207351,"byte_end":207449,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ can be useful for services that are created asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207450,"byte_end":207513,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207514,"byte_end":207517,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207518,"byte_end":207531,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207532,"byte_end":207539,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use tower::{service_fn, Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207540,"byte_end":207589,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ use tower::util::future_service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207590,"byte_end":207626,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207627,"byte_end":207660,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207661,"byte_end":207664,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207665,"byte_end":207682,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ # async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207683,"byte_end":207696,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ // A future which outputs a type implementing `Service`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207697,"byte_end":207757,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/ let future_of_a_service = async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207758,"byte_end":207795,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/     let svc = service_fn(|_req: ()| async { Ok::<_, Infallible>(\"ok\") });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207796,"byte_end":207873,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/     Ok::<_, Infallible>(svc)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207874,"byte_end":207906,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207907,"byte_end":207913,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207914,"byte_end":207917,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `FutureService`, allowing it to be used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207918,"byte_end":207987,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ // as a service without awaiting the future's completion:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":207988,"byte_end":208049,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/ let mut svc = future_service(Box::pin(future_of_a_service));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208050,"byte_end":208114,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208115,"byte_end":208118,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Now, when we wait for the service to become ready, it will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208119,"byte_end":208184,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ // drive the future to completion internally.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208185,"byte_end":208234,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ let svc = svc.ready().await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208235,"byte_end":208276,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let res = svc.call(()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208277,"byte_end":208319,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ # };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208320,"byte_end":208328,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208329,"byte_end":208336,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208337,"byte_end":208344,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208345,"byte_end":208348,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Regarding the [`Unpin`] bound","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208349,"byte_end":208384,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208385,"byte_end":208388,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`Unpin`] bound on `F` is necessary because the future will be polled in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208389,"byte_end":208469,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ [`Service::poll_ready`] which doesn't have a pinned receiver (it takes `&mut self` and not `self:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208470,"byte_end":208571,"line_start":43,"line_end":43,"column_start":1,"column_end":102}},{"value":"/ Pin<&mut Self>`). So we cannot put the future into a `Pin` without requiring `Unpin`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208572,"byte_end":208661,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208662,"byte_end":208665,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This will most likely come up if you're calling `future_service` with an async block. In that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208666,"byte_end":208763,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ case you can use `Box::pin(async { ... })` as shown in the example.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":208764,"byte_end":208835,"line_start":47,"line_end":47,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":5412},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209184,"byte_end":209197,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"FutureService","qualname":"::util::future_service::FutureService","value":"FutureService {  }","parent":null,"children":[{"krate":0,"index":5415}],"decl_id":null,"docs":" A type that implements [`Service`] for a [`Future`] that produces a [`Service`].","sig":null,"attributes":[{"value":"/ A type that implements [`Service`] for a [`Future`] that produces a [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209022,"byte_end":209106,"line_start":56,"line_end":56,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209107,"byte_end":209110,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ See [`future_service`] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209111,"byte_end":209155,"line_start":58,"line_end":58,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210983,"byte_end":210986,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureService<F, S>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FutureService`] for the given future.","sig":null,"attributes":[{"value":"/ Returns a new [`FutureService`] for the given future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209270,"byte_end":209327,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209332,"byte_end":209335,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ A [`FutureService`] allows you to treat a future that resolves to a service as a service. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209340,"byte_end":209438,"line_start":67,"line_end":67,"column_start":5,"column_end":103}},{"value":"/ can be useful for services that are created asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209443,"byte_end":209506,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209511,"byte_end":209514,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209519,"byte_end":209532,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209537,"byte_end":209544,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use tower::{service_fn, Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209549,"byte_end":209598,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/ use tower::util::FutureService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209603,"byte_end":209638,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209643,"byte_end":209676,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209681,"byte_end":209684,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209689,"byte_end":209706,"line_start":76,"line_end":76,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209711,"byte_end":209724,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ // A future which outputs a type implementing `Service`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209729,"byte_end":209789,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_service = async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209794,"byte_end":209831,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/     let svc = service_fn(|_req: ()| async { Ok::<_, Infallible>(\"ok\") });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209836,"byte_end":209913,"line_start":80,"line_end":80,"column_start":5,"column_end":82}},{"value":"/     Ok::<_, Infallible>(svc)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209918,"byte_end":209950,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209955,"byte_end":209961,"line_start":82,"line_end":82,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209966,"byte_end":209969,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Wrap the future with a `FutureService`, allowing it to be used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209974,"byte_end":210043,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ // as a service without awaiting the future's completion:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210048,"byte_end":210109,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ let mut svc = FutureService::new(Box::pin(future_of_a_service));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210114,"byte_end":210182,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210187,"byte_end":210190,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ // Now, when we wait for the service to become ready, it will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210195,"byte_end":210260,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/ // drive the future to completion internally.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210265,"byte_end":210314,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/ let svc = svc.ready().await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210319,"byte_end":210360,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ let res = svc.call(()).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210365,"byte_end":210407,"line_start":91,"line_end":91,"column_start":5,"column_end":47}},{"value":"/ # };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210412,"byte_end":210420,"line_start":92,"line_end":92,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210425,"byte_end":210432,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210437,"byte_end":210444,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210449,"byte_end":210452,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Regarding the [`Unpin`] bound","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210457,"byte_end":210492,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210497,"byte_end":210500,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The [`Unpin`] bound on `F` is necessary because the future will be polled in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210505,"byte_end":210585,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"/ [`Service::poll_ready`] which doesn't have a pinned receiver (it takes `&mut self` and not `self:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210590,"byte_end":210691,"line_start":99,"line_end":99,"column_start":5,"column_end":106}},{"value":"/ Pin<&mut Self>`). So we cannot put the future into a `Pin` without requiring `Unpin`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210696,"byte_end":210785,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210790,"byte_end":210793,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will most likely come up if you're calling `future_service` with an async block. In that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210798,"byte_end":210895,"line_start":102,"line_end":102,"column_start":5,"column_end":102}},{"value":"/ case you can use `Box::pin(async { ... })` as shown in the example.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":210900,"byte_end":210971,"line_start":103,"line_end":103,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5433},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214294,"byte_end":214300,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::util::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5437}],"decl_id":null,"docs":" Service returned by the [`map_err`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_err`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214160,"byte_end":214211,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214212,"byte_end":214215,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_err`]: crate::util::ServiceExt::map_err","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214216,"byte_end":214265,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5442},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214767,"byte_end":214778,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"MapErrLayer","qualname":"::util::map_err::MapErrLayer","value":"MapErrLayer {  }","parent":null,"children":[{"krate":0,"index":5444}],"decl_id":null,"docs":" A [`Layer`] that produces [`MapErr`] services.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces [`MapErr`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214643,"byte_end":214693,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214694,"byte_end":214697,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214698,"byte_end":214731,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5460},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214925,"byte_end":214937,"line_start":40,"line_end":40,"column_start":14,"column_end":26},"name":"MapErrFuture","qualname":"::util::map_err::MapErrFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response future from [`MapErr`] services.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214925,"byte_end":214937,"line_start":40,"line_end":40,"column_start":14,"column_end":26},"name":"__MapErrFuture","qualname":"::util::map_err::_::__MapErrFuture","value":"__MapErrFuture {  }","parent":null,"children":[{"krate":0,"index":5492},{"krate":0,"index":5493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215050,"byte_end":215053,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapErr<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapErr`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapErr`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215001,"byte_end":215038,"line_start":44,"line_end":44,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215326,"byte_end":215331,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapErr<S, F>>::layer","value":"pub fn layer(F) -> MapErrLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapErr`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapErr`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215119,"byte_end":215181,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215186,"byte_end":215189,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapErrLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215194,"byte_end":215268,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215273,"byte_end":215276,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215281,"byte_end":215314,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":216026,"byte_end":216029,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MapErrLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapErrLayer`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapErrLayer`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215980,"byte_end":216014,"line_start":80,"line_end":80,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216554,"byte_end":216564,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"MapRequest","qualname":"::util::map_request::MapRequest","value":"MapRequest {  }","parent":null,"children":[{"krate":0,"index":5515},{"krate":0,"index":5516}],"decl_id":null,"docs":" Service returned by the [`MapRequest`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`MapRequest`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216410,"byte_end":216464,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216465,"byte_end":216468,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`MapRequest`]: crate::util::ServiceExt::map_request","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216469,"byte_end":216525,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217002,"byte_end":217005,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<MapRequest<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapRequest`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapRequest`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216949,"byte_end":216990,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217290,"byte_end":217295,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapRequest<S, F>>::layer","value":"pub fn layer(F) -> MapRequestLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapRequest`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapRequest`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217075,"byte_end":217141,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217146,"byte_end":217149,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapRequestLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217154,"byte_end":217232,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217237,"byte_end":217240,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217245,"byte_end":217278,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217942,"byte_end":217957,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"MapRequestLayer","qualname":"::util::map_request::MapRequestLayer","value":"MapRequestLayer {  }","parent":null,"children":[{"krate":0,"index":5523}],"decl_id":null,"docs":" A [`Layer`] that produces [`MapRequest`] services.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces [`MapRequest`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217814,"byte_end":217868,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217869,"byte_end":217872,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217873,"byte_end":217906,"line_start":65,"line_end":65,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":218059,"byte_end":218062,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<MapRequestLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapRequestLayer`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapRequestLayer`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":218009,"byte_end":218047,"line_start":72,"line_end":72,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5530},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":218657,"byte_end":218668,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"MapResponse","qualname":"::util::map_response::MapResponse","value":"MapResponse {  }","parent":null,"children":[{"krate":0,"index":5533},{"krate":0,"index":5534}],"decl_id":null,"docs":" Service returned by the [`map_response`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_response`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":218508,"byte_end":218564,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":218565,"byte_end":218568,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_response`]: crate::util::ServiceExt::map_response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":218569,"byte_end":218628,"line_start":9,"line_end":9,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219151,"byte_end":219167,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"MapResponseLayer","qualname":"::util::map_response::MapResponseLayer","value":"MapResponseLayer {  }","parent":null,"children":[{"krate":0,"index":5541}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapResponse`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapResponse`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219021,"byte_end":219077,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219078,"byte_end":219081,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219082,"byte_end":219115,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219329,"byte_end":219346,"line_start":40,"line_end":40,"column_start":14,"column_end":31},"name":"MapResponseFuture","qualname":"::util::map_response::MapResponseFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response future from [`MapResponse`] services.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5585},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219329,"byte_end":219346,"line_start":40,"line_end":40,"column_start":14,"column_end":31},"name":"__MapResponseFuture","qualname":"::util::map_response::_::__MapResponseFuture","value":"__MapResponseFuture {  }","parent":null,"children":[{"krate":0,"index":5589},{"krate":0,"index":5590}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219458,"byte_end":219461,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResponse<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MapResponse` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `MapResponse` service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219406,"byte_end":219446,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219749,"byte_end":219754,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapResponse<S, F>>::layer","value":"pub fn layer(F) -> MapResponseLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapResponse`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapResponse`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219532,"byte_end":219599,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219604,"byte_end":219607,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapResponseLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219612,"byte_end":219691,"line_start":51,"line_end":51,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219696,"byte_end":219699,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219704,"byte_end":219737,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":220474,"byte_end":220477,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResponseLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResponseLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResponseLayer`] layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":220417,"byte_end":220462,"line_start":80,"line_end":80,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5609},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221065,"byte_end":221074,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"MapResult","qualname":"::util::map_result::MapResult","value":"MapResult {  }","parent":null,"children":[{"krate":0,"index":5612},{"krate":0,"index":5613}],"decl_id":null,"docs":" Service returned by the [`map_result`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_result`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":220922,"byte_end":220976,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":220977,"byte_end":220980,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_result`]: crate::util::ServiceExt::map_result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":220981,"byte_end":221036,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":5618},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221551,"byte_end":221565,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"MapResultLayer","qualname":"::util::map_result::MapResultLayer","value":"MapResultLayer {  }","parent":null,"children":[{"krate":0,"index":5620}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapResult`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapResult`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221423,"byte_end":221477,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221478,"byte_end":221481,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221482,"byte_end":221515,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5636},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221721,"byte_end":221736,"line_start":40,"line_end":40,"column_start":14,"column_end":29},"name":"MapResultFuture","qualname":"::util::map_result::MapResultFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response future from [`MapResult`] services.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221721,"byte_end":221736,"line_start":40,"line_end":40,"column_start":14,"column_end":29},"name":"__MapResultFuture","qualname":"::util::map_result::_::__MapResultFuture","value":"__MapResultFuture {  }","parent":null,"children":[{"krate":0,"index":5668},{"krate":0,"index":5669}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221844,"byte_end":221847,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResult<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResult`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResult`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221792,"byte_end":221832,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222129,"byte_end":222134,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapResult<S, F>>::layer","value":"pub fn layer(F) -> MapResultLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapResult`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapResult`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221916,"byte_end":221981,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221986,"byte_end":221989,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapResultLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221994,"byte_end":222071,"line_start":51,"line_end":51,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222076,"byte_end":222079,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222084,"byte_end":222117,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222921,"byte_end":222924,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResultLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResultLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResultLayer`] layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222866,"byte_end":222909,"line_start":81,"line_end":81,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5688},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223488,"byte_end":223497,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"MapFuture","qualname":"::util::map_future::MapFuture","value":"MapFuture {  }","parent":null,"children":[{"krate":0,"index":5691},{"krate":0,"index":5692}],"decl_id":null,"docs":" [`Service`] returned by the [`map_future`] combinator.","sig":null,"attributes":[{"value":"/ [`Service`] returned by the [`map_future`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223341,"byte_end":223399,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223400,"byte_end":223403,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map_future`]: crate::util::ServiceExt::map_future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223404,"byte_end":223459,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223618,"byte_end":223621,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MapFuture<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapFuture`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapFuture`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223566,"byte_end":223606,"line_start":19,"line_end":19,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223898,"byte_end":223903,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapFuture<S, F>>::layer","value":"pub fn layer(F) -> MapFutureLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapFuture`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapFuture`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223685,"byte_end":223750,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223755,"byte_end":223758,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapFutureLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223763,"byte_end":223840,"line_start":26,"line_end":26,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223845,"byte_end":223848,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223853,"byte_end":223886,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224027,"byte_end":224034,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapFuture<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223975,"byte_end":224015,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224141,"byte_end":224148,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapFuture<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224081,"byte_end":224129,"line_start":38,"line_end":38,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224266,"byte_end":224276,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapFuture<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner service\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224207,"byte_end":224254,"line_start":43,"line_end":43,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5697},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225241,"byte_end":225255,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"MapFutureLayer","qualname":"::util::map_future::MapFutureLayer","value":"MapFutureLayer {  }","parent":null,"children":[{"krate":0,"index":5699}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapFuture`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapFuture`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225120,"byte_end":225174,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225175,"byte_end":225178,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225179,"byte_end":225212,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225361,"byte_end":225364,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<MapFutureLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapFutureLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapFutureLayer`] layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225306,"byte_end":225349,"line_start":90,"line_end":90,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5703},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":226264,"byte_end":226271,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Oneshot","qualname":"::util::oneshot::Oneshot","value":"Oneshot {  }","parent":null,"children":[{"krate":0,"index":5706}],"decl_id":null,"docs":" A [`Future`] consuming a [`Service`] and request, waiting until the [`Service`]\n is ready, and then calling [`Service::call`] with the request, and\n waiting for that [`Future`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":226221,"byte_end":226235,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":226264,"byte_end":226271,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"__Oneshot","qualname":"::util::oneshot::_::__Oneshot","value":"__Oneshot {  }","parent":null,"children":[{"krate":0,"index":5732},{"krate":0,"index":5733}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":226221,"byte_end":226235,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":227175,"byte_end":227178,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Oneshot<S, Req>>::new","value":"pub fn new(S, Req) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":227141,"byte_end":227163,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":2451},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::util::optional::error","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2463}],"decl_id":null,"docs":" Error types for [`Optional`].\n","sig":null,"attributes":[{"value":"/ Error types for [`Optional`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228285,"byte_end":228318,"line_start":5,"line_end":5,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":229957,"byte_end":229961,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"None","qualname":"::util::optional::error::None","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned if the inner [`Service`] has not been set.","sig":null,"attributes":[{"value":"/ Error returned if the inner [`Service`] has not been set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":229831,"byte_end":229892,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":229893,"byte_end":229896,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":229897,"byte_end":229928,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::util::optional::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2485},{"krate":0,"index":5816},{"krate":0,"index":5819},{"krate":0,"index":5855},{"krate":0,"index":2488},{"krate":0,"index":2491}],"decl_id":null,"docs":" Future types for [`Optional`].\n","sig":null,"attributes":[{"value":"/ Future types for [`Optional`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228334,"byte_end":228368,"line_start":7,"line_end":7,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5816},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230480,"byte_end":230494,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::util::optional::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":5818}],"decl_id":null,"docs":" Response future returned by [`Optional`].","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230437,"byte_end":230451,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5836},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230480,"byte_end":230494,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::util::optional::future::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":5839},{"krate":0,"index":5840}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230437,"byte_end":230451,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5858},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228716,"byte_end":228724,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Optional","qualname":"::util::optional::Optional","value":"Optional {  }","parent":null,"children":[{"krate":0,"index":5860}],"decl_id":null,"docs":" Optionally forwards requests to an inner service.","sig":null,"attributes":[{"value":"/ Optionally forwards requests to an inner service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228481,"byte_end":228534,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228535,"byte_end":228538,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the inner service is [`None`], [`optional::None`] is returned as the response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228539,"byte_end":228624,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228625,"byte_end":228628,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`optional::None`]: crate::util::error::optional::None","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228629,"byte_end":228687,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228823,"byte_end":228826,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Optional<T>>::new","value":"pub fn new<Request>(Option<T>) -> Optional<T> where T: Service<Request>,\nT::Error: Into<crate::BoxError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Optional`].\n","sig":null,"attributes":[{"value":"/ Create a new [`Optional`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228781,"byte_end":228811,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231552,"byte_end":231564,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"name":"ReadyOneshot","qualname":"::util::ready::ReadyOneshot","value":"ReadyOneshot {  }","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555}],"decl_id":null,"docs":" A [`Future`] that yields the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A [`Future`] that yields the service when it is ready to accept a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231305,"byte_end":231383,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231384,"byte_end":231387,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`ReadyOneshot`] values are produced by [`ServiceExt::ready_oneshot`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231388,"byte_end":231462,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231463,"byte_end":231466,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready_oneshot`]: crate::util::ServiceExt::ready_oneshot","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231467,"byte_end":231540,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231876,"byte_end":231879,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadyOneshot<T, Request>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231842,"byte_end":231864,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232922,"byte_end":232927,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Ready","qualname":"::util::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that yields a mutable reference to the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A future that yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232687,"byte_end":232784,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232785,"byte_end":232788,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Ready`] values are produced by [`ServiceExt::ready`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232789,"byte_end":232848,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232849,"byte_end":232852,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready`]: crate::util::ServiceExt::ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232853,"byte_end":232910,"line_start":69,"line_end":69,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":2578},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233305,"byte_end":233313,"line_start":78,"line_end":78,"column_start":10,"column_end":18},"name":"ReadyAnd","qualname":"::util::ready::ReadyAnd","value":"Ready","parent":null,"children":[],"decl_id":null,"docs":" A future that yields a mutable reference to the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A future that yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232980,"byte_end":233077,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233078,"byte_end":233081,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`ReadyAnd`] values are produced by [`ServiceExt::ready_and`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233082,"byte_end":233148,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233149,"byte_end":233152,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready_and`]: crate::util::ServiceExt::ready_and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233153,"byte_end":233218,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"deprecated(since = \"0.4.6\", note = \"Please use the Ready future instead\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233219,"byte_end":233295,"line_start":77,"line_end":77,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233611,"byte_end":233614,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Ready>::new","value":"pub fn new(&'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233577,"byte_end":233599,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2619},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235289,"byte_end":235299,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::util::service_fn::service_fn","value":"pub fn service_fn<T>(T) -> ServiceFn<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`ServiceFn`] with the given closure.","sig":null,"attributes":[{"value":"/ Returns a new [`ServiceFn`] with the given closure.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234270,"byte_end":234325,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234326,"byte_end":234329,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This lets you build a [`Service`] from an async function that returns a [`Result`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234330,"byte_end":234417,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234418,"byte_end":234421,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234422,"byte_end":234435,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234436,"byte_end":234439,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234440,"byte_end":234447,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use tower::{service_fn, Service, ServiceExt, BoxError};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234448,"byte_end":234507,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ # struct Request;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234508,"byte_end":234529,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ # impl Request {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234530,"byte_end":234550,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234551,"byte_end":234586,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234587,"byte_end":234594,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # struct Response(&'static str);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234595,"byte_end":234631,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ # impl Response {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234632,"byte_end":234653,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/ #     fn new(body: &'static str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234654,"byte_end":234700,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ #         Self(body)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234701,"byte_end":234725,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/ #     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234726,"byte_end":234737,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ #     fn into_body(self) -> &'static str { self.0 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234738,"byte_end":234793,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234794,"byte_end":234801,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234802,"byte_end":234805,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234806,"byte_end":234826,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> Result<(), BoxError> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234827,"byte_end":234874,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ async fn handle(request: Request) -> Result<Response, BoxError> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234875,"byte_end":234944,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/     let response = Response::new(\"Hello, World!\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":234945,"byte_end":234999,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/     Ok(response)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235000,"byte_end":235020,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235021,"byte_end":235026,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235027,"byte_end":235030,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut service = service_fn(handle);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235031,"byte_end":235072,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235073,"byte_end":235076,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let response = service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235077,"byte_end":235103,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/     .ready_and()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235104,"byte_end":235124,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235125,"byte_end":235140,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/     .call(Request::new())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235141,"byte_end":235170,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/     .await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235171,"byte_end":235187,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235188,"byte_end":235191,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"Hello, World!\", response.into_body());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235192,"byte_end":235246,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235247,"byte_end":235252,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235253,"byte_end":235265,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235266,"byte_end":235273,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235274,"byte_end":235281,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5864},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235473,"byte_end":235482,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::util::service_fn::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":5866}],"decl_id":null,"docs":" A [`Service`] implemented by a closure.","sig":null,"attributes":[{"value":"/ A [`Service`] implemented by a closure.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235350,"byte_end":235393,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235394,"byte_end":235397,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ See [`service_fn`] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235398,"byte_end":235438,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236422,"byte_end":236426,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Then","qualname":"::util::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5875},{"krate":0,"index":5876}],"decl_id":null,"docs":" [`Service`] returned by the [`then`] combinator.","sig":null,"attributes":[{"value":"/ [`Service`] returned by the [`then`] combinator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236293,"byte_end":236345,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236346,"byte_end":236349,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`then`]: crate::util::ServiceExt::then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236350,"byte_end":236393,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5881},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236888,"byte_end":236897,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"ThenLayer","qualname":"::util::then::ThenLayer","value":"ThenLayer {  }","parent":null,"children":[{"krate":0,"index":5883}],"decl_id":null,"docs":" A [`Layer`] that produces a [`Then`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`Then`] service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236765,"byte_end":236814,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236815,"byte_end":236818,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236819,"byte_end":236852,"line_start":33,"line_end":33,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236989,"byte_end":236992,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Then<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Then` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `Then` service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236944,"byte_end":236977,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237259,"byte_end":237264,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"layer","qualname":"<Then<S, F>>::layer","value":"pub fn layer(F) -> ThenLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`Then`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`Then`] services.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237056,"byte_end":237116,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237121,"byte_end":237124,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`ThenLayer::new`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237129,"byte_end":237201,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237206,"byte_end":237209,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237214,"byte_end":237247,"line_start":49,"line_end":49,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5901},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237444,"byte_end":237454,"line_start":59,"line_end":59,"column_start":14,"column_end":24},"name":"ThenFuture","qualname":"::util::then::ThenFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Response future from [`Then`] services.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5934},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237444,"byte_end":237454,"line_start":59,"line_end":59,"column_start":14,"column_end":24},"name":"__ThenFuture","qualname":"::util::then::_::__ThenFuture","value":"__ThenFuture {  }","parent":null,"children":[{"krate":0,"index":5939},{"krate":0,"index":5940}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/macros.rs","byte_start":9332,"byte_end":9359,"line_start":9,"line_end":9,"column_start":9,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":238232,"byte_end":238235,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<ThenLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ThenLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`ThenLayer`] layer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":238182,"byte_end":238220,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2798},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148395,"byte_end":148400,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"error","qualname":"::util::error","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":2799}],"decl_id":null,"docs":" Error types\n","sig":null,"attributes":[{"value":"/ Error types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148407,"byte_end":148422,"line_start":45,"line_end":45,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":2802},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148483,"byte_end":148489,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"name":"future","qualname":"::util::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2819}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148496,"byte_end":148512,"line_start":51,"line_end":51,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":2821},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148888,"byte_end":148898,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"ServiceExt","qualname":"::util::ServiceExt","value":"ServiceExt<Request>: tower_service::Service<Request>","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2841},{"krate":0,"index":2844},{"krate":0,"index":2849}],"decl_id":null,"docs":" An extension trait for `Service`s that provides a variety of convenient\n adapters\n","sig":null,"attributes":[{"value":"/ An extension trait for `Service`s that provides a variety of convenient","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148789,"byte_end":148864,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ adapters","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148865,"byte_end":148877,"line_start":62,"line_end":62,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149038,"byte_end":149043,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"ready","qualname":"::util::ServiceExt::ready","value":"pub fn ready(&mut Self) -> Ready<, Self, Request> where Self: Sized","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Yields a mutable reference to the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148947,"byte_end":149030,"line_start":64,"line_end":64,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149389,"byte_end":149398,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"ready_and","qualname":"::util::ServiceExt::ready_and","value":"pub fn ready_and(&mut Self) -> ReadyAnd<, Self, Request> where Self: Sized","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Yields a mutable reference to the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149156,"byte_end":149239,"line_start":72,"line_end":72,"column_start":5,"column_end":88}},{"value":"deprecated(since = \"0.4.6\", note =\n             \"please use the `ServiceExt::ready` method instead\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149244,"byte_end":149356,"line_start":73,"line_end":76,"column_start":5,"column_end":7}},{"value":"allow(deprecated)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149361,"byte_end":149381,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149585,"byte_end":149598,"line_start":86,"line_end":86,"column_start":8,"column_end":21},"name":"ready_oneshot","qualname":"::util::ServiceExt::ready_oneshot","value":"pub fn ready_oneshot(Self) -> ReadyOneshot<Self, Request> where Self: Sized","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Yields the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields the service when it is ready to accept a request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149517,"byte_end":149577,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149804,"byte_end":149811,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"oneshot","qualname":"::util::ServiceExt::oneshot","value":"pub fn oneshot(Self, Request) -> Oneshot<Self, Request> where Self: Sized","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Consume this `Service`, calling with the providing request once it is ready.\n","sig":null,"attributes":[{"value":"/ Consume this `Service`, calling with the providing request once it is ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149716,"byte_end":149796,"line_start":93,"line_end":93,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150403,"byte_end":150411,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_all","qualname":"::util::ServiceExt::call_all","value":"pub fn call_all<S>(Self, S) -> CallAll<Self, S> where Self: Sized,\nSelf::Error: Into<crate::BoxError>, S: futures_core::Stream<Item = Request>","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Process all requests from the given [`Stream`], and produce a [`Stream`] of their responses.","sig":null,"attributes":[{"value":"/ Process all requests from the given [`Stream`], and produce a [`Stream`] of their responses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":149938,"byte_end":150034,"line_start":101,"line_end":101,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150039,"byte_end":150042,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is essentially [`Stream<Item = Request>`][stream] + `Self` => [`Stream<Item =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150047,"byte_end":150133,"line_start":103,"line_end":103,"column_start":5,"column_end":91}},{"value":"/ Response>`][stream]. See the documentation for [`CallAll`] for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150138,"byte_end":150204,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/ details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150209,"byte_end":150221,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150226,"byte_end":150229,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150234,"byte_end":150313,"line_start":107,"line_end":107,"column_start":5,"column_end":84}},{"value":"/ [stream]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150318,"byte_end":150395,"line_start":108,"line_end":108,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152686,"byte_end":152694,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"and_then","qualname":"::util::ServiceExt::and_then","value":"pub fn and_then<F>(Self, F) -> AndThen<Self, F> where Self: Sized, F: Clone","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Executes a new future after this service's future resolves. This does\n not alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Executes a new future after this service's future resolves. This does","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150624,"byte_end":150697,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ not alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150702,"byte_end":150759,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150764,"byte_end":150767,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150772,"byte_end":150846,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ into a different type. You can use this method to chain along a computation once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150851,"byte_end":150939,"line_start":122,"line_end":122,"column_start":5,"column_end":93}},{"value":"/ service's response has been resolved.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150944,"byte_end":150985,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150990,"byte_end":150993,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":150998,"byte_end":151040,"line_start":125,"line_end":125,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151045,"byte_end":151091,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151096,"byte_end":151099,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151104,"byte_end":151117,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151122,"byte_end":151129,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151134,"byte_end":151171,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151176,"byte_end":151215,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151220,"byte_end":151225,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151230,"byte_end":151259,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151264,"byte_end":151292,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151297,"byte_end":151336,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService  ","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151341,"byte_end":151370,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151375,"byte_end":151384,"line_start":137,"line_end":137,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151389,"byte_end":151396,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151401,"byte_end":151406,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151411,"byte_end":151432,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151437,"byte_end":151462,"line_start":141,"line_end":141,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151467,"byte_end":151487,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151492,"byte_end":151499,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151504,"byte_end":151509,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151514,"byte_end":151559,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151564,"byte_end":151595,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151600,"byte_end":151624,"line_start":147,"line_end":147,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, u8>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151629,"byte_end":151699,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151704,"byte_end":151709,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151714,"byte_end":151803,"line_start":150,"line_end":150,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151808,"byte_end":151839,"line_start":151,"line_end":151,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151844,"byte_end":151853,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151858,"byte_end":151863,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151868,"byte_end":151926,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":151931,"byte_end":152015,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152020,"byte_end":152029,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152034,"byte_end":152041,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152046,"byte_end":152051,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ # async fn avatar_lookup(name: String) -> Result<Vec<u8>, u8> { Ok(vec![]) }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152056,"byte_end":152136,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152141,"byte_end":152146,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152151,"byte_end":152168,"line_start":161,"line_end":161,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152173,"byte_end":152189,"line_start":162,"line_end":162,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Record, _>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152194,"byte_end":152238,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152243,"byte_end":152300,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152305,"byte_end":152308,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Map the response into a new response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152313,"byte_end":152356,"line_start":166,"line_end":166,"column_start":5,"column_end":48}},{"value":"/ let mut new_service = service.and_then(|record: Record| async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152361,"byte_end":152433,"line_start":167,"line_end":167,"column_start":5,"column_end":77}},{"value":"/     let name = record.name;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152438,"byte_end":152469,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/     avatar_lookup(name).await","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152474,"byte_end":152507,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152512,"byte_end":152519,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152524,"byte_end":152527,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152532,"byte_end":152559,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152564,"byte_end":152580,"line_start":173,"line_end":173,"column_start":5,"column_end":21}},{"value":"/ let avatar = new_service.call(id).await.unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152585,"byte_end":152638,"line_start":174,"line_end":174,"column_start":5,"column_end":58}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152643,"byte_end":152654,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152659,"byte_end":152666,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152671,"byte_end":152678,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154836,"byte_end":154848,"line_start":247,"line_end":247,"column_start":8,"column_end":20},"name":"map_response","qualname":"::util::ServiceExt::map_response","value":"pub fn map_response<F, Response>(Self, F) -> MapResponse<Self, F> where\nSelf: Sized, F: FnOnce(Self::Response) -> Response + Clone","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Maps this service's response value to a different value. This does not\n alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Maps this service's response value to a different value. This does not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152826,"byte_end":152900,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152905,"byte_end":152958,"line_start":187,"line_end":187,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152963,"byte_end":152966,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":152971,"byte_end":153045,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153050,"byte_end":153113,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153118,"byte_end":153191,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ service's response has been resolved.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153196,"byte_end":153237,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153242,"byte_end":153245,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153250,"byte_end":153292,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153297,"byte_end":153343,"line_start":195,"line_end":195,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153348,"byte_end":153351,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153356,"byte_end":153369,"line_start":197,"line_end":197,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153374,"byte_end":153381,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153386,"byte_end":153423,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153428,"byte_end":153467,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153472,"byte_end":153477,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153482,"byte_end":153511,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153516,"byte_end":153544,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153549,"byte_end":153588,"line_start":204,"line_end":204,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153593,"byte_end":153620,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153625,"byte_end":153634,"line_start":206,"line_end":206,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153639,"byte_end":153646,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153651,"byte_end":153656,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153661,"byte_end":153682,"line_start":209,"line_end":209,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153687,"byte_end":153712,"line_start":210,"line_end":210,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153717,"byte_end":153737,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153742,"byte_end":153749,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153754,"byte_end":153759,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153764,"byte_end":153809,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153814,"byte_end":153845,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153850,"byte_end":153874,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, u8>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153879,"byte_end":153949,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153954,"byte_end":153959,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":153964,"byte_end":154053,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154058,"byte_end":154089,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154094,"byte_end":154103,"line_start":221,"line_end":221,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154108,"byte_end":154113,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154118,"byte_end":154176,"line_start":223,"line_end":223,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154181,"byte_end":154265,"line_start":224,"line_end":224,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154270,"byte_end":154279,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154284,"byte_end":154291,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154296,"byte_end":154301,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154306,"byte_end":154323,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154328,"byte_end":154344,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Record, _>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154349,"byte_end":154393,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154398,"byte_end":154455,"line_start":231,"line_end":231,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154460,"byte_end":154463,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ // Map the response into a new response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154468,"byte_end":154511,"line_start":233,"line_end":233,"column_start":5,"column_end":48}},{"value":"/ let mut new_service = service.map_response(|record| record.name);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154516,"byte_end":154585,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154590,"byte_end":154593,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154598,"byte_end":154625,"line_start":236,"line_end":236,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154630,"byte_end":154646,"line_start":237,"line_end":237,"column_start":5,"column_end":21}},{"value":"/ let name = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154651,"byte_end":154677,"line_start":238,"line_end":238,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154682,"byte_end":154698,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154703,"byte_end":154718,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154723,"byte_end":154740,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154745,"byte_end":154761,"line_start":242,"line_end":242,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), u8>(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154766,"byte_end":154788,"line_start":243,"line_end":243,"column_start":5,"column_end":27}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154793,"byte_end":154804,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154809,"byte_end":154816,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":154821,"byte_end":154828,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156908,"byte_end":156915,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"map_err","qualname":"::util::ServiceExt::map_err","value":"pub fn map_err<F, Error>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Error + Clone","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Maps this service's error value to a different value. This does not\n alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Maps this service's error value to a different value. This does not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155035,"byte_end":155106,"line_start":255,"line_end":255,"column_start":5,"column_end":76}},{"value":"/ alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155111,"byte_end":155164,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155169,"byte_end":155172,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`] type of the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155177,"byte_end":155248,"line_start":258,"line_end":258,"column_start":5,"column_end":76}},{"value":"/ into a different type. It is similar to the [`Result::map_err`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155253,"byte_end":155328,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155333,"byte_end":155336,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155341,"byte_end":155377,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155382,"byte_end":155428,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155433,"byte_end":155436,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155441,"byte_end":155454,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155459,"byte_end":155466,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155471,"byte_end":155508,"line_start":266,"line_end":266,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155513,"byte_end":155552,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155557,"byte_end":155562,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155567,"byte_end":155596,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155601,"byte_end":155629,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155634,"byte_end":155673,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155678,"byte_end":155705,"line_start":272,"line_end":272,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155710,"byte_end":155719,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155724,"byte_end":155731,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155736,"byte_end":155741,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ # struct Error {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155746,"byte_end":155766,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ #   pub code: u32,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155771,"byte_end":155793,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/ #   pub message: String","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155798,"byte_end":155825,"line_start":278,"line_end":278,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155830,"byte_end":155837,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155842,"byte_end":155847,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155852,"byte_end":155897,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/ #   type Response = String;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155902,"byte_end":155933,"line_start":282,"line_end":282,"column_start":5,"column_end":36}},{"value":"/ #   type Error = Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155938,"byte_end":155965,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, Error>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":155970,"byte_end":156043,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156048,"byte_end":156053,"line_start":285,"line_end":285,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156058,"byte_end":156147,"line_start":286,"line_end":286,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156152,"byte_end":156183,"line_start":287,"line_end":287,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156188,"byte_end":156197,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156202,"byte_end":156207,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156212,"byte_end":156270,"line_start":290,"line_end":290,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156275,"byte_end":156333,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156338,"byte_end":156347,"line_start":292,"line_end":292,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156352,"byte_end":156359,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156364,"byte_end":156369,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156374,"byte_end":156391,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156396,"byte_end":156411,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/ // A service returning Result<_, Error>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156416,"byte_end":156459,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156464,"byte_end":156521,"line_start":298,"line_end":298,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156526,"byte_end":156529,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ // Map the error to a new error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156534,"byte_end":156569,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/ let mut new_service = service.map_err(|err| err.code);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156574,"byte_end":156632,"line_start":301,"line_end":301,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156637,"byte_end":156640,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156645,"byte_end":156672,"line_start":303,"line_end":303,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156677,"byte_end":156693,"line_start":304,"line_end":304,"column_start":5,"column_end":21}},{"value":"/ let code = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156698,"byte_end":156724,"line_start":305,"line_end":305,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156729,"byte_end":156745,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156750,"byte_end":156765,"line_start":307,"line_end":307,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156770,"byte_end":156787,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/     .await","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156792,"byte_end":156806,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/     .unwrap_err();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156811,"byte_end":156833,"line_start":310,"line_end":310,"column_start":5,"column_end":27}},{"value":"/ # Ok::<(), u32>(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156838,"byte_end":156861,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/ #   };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156866,"byte_end":156876,"line_start":312,"line_end":312,"column_start":5,"column_end":15}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156881,"byte_end":156888,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":156893,"byte_end":156900,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164949,"byte_end":164959,"line_start":544,"line_end":544,"column_start":8,"column_end":18},"name":"map_result","qualname":"::util::ServiceExt::map_result","value":"pub fn map_result<F, Response, Error>(Self, F) -> MapResult<Self, F> where\nSelf: Sized, Error: From<Self::Error>,\nF: FnOnce(Result<Self::Response, Self::Error>) -> Result<Response, Error> +\nClone","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Maps this service's result type (`Result<Self::Response, Self::Error>`)\n to a different value, regardless of whether the future succeeds or\n fails.","sig":null,"attributes":[{"value":"/ Maps this service's result type (`Result<Self::Response, Self::Error>`)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157083,"byte_end":157158,"line_start":323,"line_end":323,"column_start":5,"column_end":80}},{"value":"/ to a different value, regardless of whether the future succeeds or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157163,"byte_end":157233,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ fails.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157238,"byte_end":157248,"line_start":325,"line_end":325,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157253,"byte_end":157256,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`map_response`] and [`map_err`] combinators,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157261,"byte_end":157333,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ except that the *same* function is invoked when the service's future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157338,"byte_end":157410,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ completes, whether it completes successfully or fails. This function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157415,"byte_end":157487,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ takes the [`Result`] returned by the service's future, and returns a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157492,"byte_end":157564,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ [`Result`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157569,"byte_end":157584,"line_start":331,"line_end":331,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157589,"byte_end":157592,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Like the standard library's [`Result::and_then`], this method can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157597,"byte_end":157669,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/ used to implement control flow based on `Result` values. For example, it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157674,"byte_end":157750,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ may be used to implement error recovery, by turning some [`Err`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157755,"byte_end":157823,"line_start":335,"line_end":335,"column_start":5,"column_end":73}},{"value":"/ responses from the service into [`Ok`] responses. Similarly, some","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157828,"byte_end":157897,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ successful responses from the service could be rejected, by returning an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157902,"byte_end":157978,"line_start":337,"line_end":337,"column_start":5,"column_end":81}},{"value":"/ [`Err`] conditionally, depending on the value inside the [`Ok`.] Finally,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":157983,"byte_end":158060,"line_start":338,"line_end":338,"column_start":5,"column_end":82}},{"value":"/ this method can also be used to implement behaviors that must run when a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158065,"byte_end":158141,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ service's future completes, regardless of whether it succeeded or failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158146,"byte_end":158223,"line_start":340,"line_end":340,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158228,"byte_end":158231,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158236,"byte_end":158310,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ into a different type. It can also be used to change the [`Error`] type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158315,"byte_end":158390,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ of the service. However, because the [`map_result`] function is not applied","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158395,"byte_end":158474,"line_start":344,"line_end":344,"column_start":5,"column_end":84}},{"value":"/ to the errors returned by the service's [`poll_ready`] method, it must","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158479,"byte_end":158553,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ be possible to convert the service's [`Error`] type into the error type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158558,"byte_end":158633,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ returned by the [`map_result`] function. This is trivial when the function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158638,"byte_end":158716,"line_start":347,"line_end":347,"column_start":5,"column_end":83}},{"value":"/ returns the same error type as the service, but in other cases, it can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158721,"byte_end":158795,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ be useful to use [`BoxError`] to erase differing error types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158800,"byte_end":158865,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158870,"byte_end":158873,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158878,"byte_end":158892,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158897,"byte_end":158900,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Recovering from certain errors:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158905,"byte_end":158940,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158945,"byte_end":158948,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158953,"byte_end":158960,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":158965,"byte_end":159002,"line_start":356,"line_end":356,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159007,"byte_end":159046,"line_start":357,"line_end":357,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159051,"byte_end":159056,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159061,"byte_end":159090,"line_start":359,"line_end":359,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159095,"byte_end":159123,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159128,"byte_end":159167,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159172,"byte_end":159199,"line_start":362,"line_end":362,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159204,"byte_end":159213,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159218,"byte_end":159225,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159230,"byte_end":159235,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159240,"byte_end":159261,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159266,"byte_end":159291,"line_start":367,"line_end":367,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159296,"byte_end":159316,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159321,"byte_end":159328,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159333,"byte_end":159355,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/ # enum DbError {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159360,"byte_end":159380,"line_start":371,"line_end":371,"column_start":5,"column_end":25}},{"value":"/ #   Parse(std::num::ParseIntError),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159385,"byte_end":159424,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/ #   NoRecordsFound,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159429,"byte_end":159452,"line_start":373,"line_end":373,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159457,"byte_end":159464,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159469,"byte_end":159474,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159479,"byte_end":159524,"line_start":376,"line_end":376,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Vec<Record>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159529,"byte_end":159565,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159570,"byte_end":159599,"line_start":378,"line_end":378,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Vec<Record>, DbError>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159604,"byte_end":159684,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159689,"byte_end":159694,"line_start":380,"line_end":380,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159699,"byte_end":159788,"line_start":381,"line_end":381,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159793,"byte_end":159824,"line_start":382,"line_end":382,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159829,"byte_end":159838,"line_start":383,"line_end":383,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159843,"byte_end":159848,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159853,"byte_end":159911,"line_start":385,"line_end":385,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(vec![Record { name: \"Jack\".into(), age: 32 }]))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":159916,"byte_end":160006,"line_start":386,"line_end":386,"column_start":5,"column_end":95}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160011,"byte_end":160020,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160025,"byte_end":160032,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160037,"byte_end":160042,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160047,"byte_end":160064,"line_start":390,"line_end":390,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160069,"byte_end":160085,"line_start":391,"line_end":391,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Vec<Record>, DbError>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160090,"byte_end":160145,"line_start":392,"line_end":392,"column_start":5,"column_end":60}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160150,"byte_end":160207,"line_start":393,"line_end":393,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160212,"byte_end":160215,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // If the database returns no records for the query, we just want an empty `Vec`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160220,"byte_end":160305,"line_start":395,"line_end":395,"column_start":5,"column_end":90}},{"value":"/ let mut new_service = service.map_result(|result| match result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160310,"byte_end":160378,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/     // If the error indicates that no records matched the query, return an empty","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160383,"byte_end":160467,"line_start":397,"line_end":397,"column_start":5,"column_end":89}},{"value":"/     // `Vec` instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160472,"byte_end":160497,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/     Err(DbError::NoRecordsFound) => Ok(Vec::new()),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160502,"byte_end":160557,"line_start":399,"line_end":399,"column_start":5,"column_end":60}},{"value":"/     // Propagate all other responses (`Ok` and `Err`) unchanged","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160562,"byte_end":160629,"line_start":400,"line_end":400,"column_start":5,"column_end":72}},{"value":"/     x => x,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160634,"byte_end":160649,"line_start":401,"line_end":401,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160654,"byte_end":160661,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160666,"byte_end":160669,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160674,"byte_end":160701,"line_start":404,"line_end":404,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160706,"byte_end":160722,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/ let name = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160727,"byte_end":160753,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160758,"byte_end":160774,"line_start":407,"line_end":407,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160779,"byte_end":160794,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160799,"byte_end":160816,"line_start":409,"line_end":409,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160821,"byte_end":160837,"line_start":410,"line_end":410,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), DbError>(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160842,"byte_end":160869,"line_start":411,"line_end":411,"column_start":5,"column_end":32}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160874,"byte_end":160885,"line_start":412,"line_end":412,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160890,"byte_end":160897,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160902,"byte_end":160909,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160914,"byte_end":160917,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Rejecting some `Ok` responses:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160922,"byte_end":160956,"line_start":416,"line_end":416,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160961,"byte_end":160964,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160969,"byte_end":160976,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":160981,"byte_end":161018,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161023,"byte_end":161062,"line_start":420,"line_end":420,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161067,"byte_end":161072,"line_start":421,"line_end":421,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161077,"byte_end":161106,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161111,"byte_end":161139,"line_start":423,"line_end":423,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161144,"byte_end":161183,"line_start":424,"line_end":424,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161188,"byte_end":161215,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161220,"byte_end":161229,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161234,"byte_end":161241,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161246,"byte_end":161251,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161256,"byte_end":161277,"line_start":429,"line_end":429,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161282,"byte_end":161307,"line_start":430,"line_end":430,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161312,"byte_end":161332,"line_start":431,"line_end":431,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161337,"byte_end":161344,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ # type DbError = String;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161349,"byte_end":161377,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/ # type AppError = String;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161382,"byte_end":161411,"line_start":434,"line_end":434,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161416,"byte_end":161421,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161426,"byte_end":161471,"line_start":436,"line_end":436,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161476,"byte_end":161507,"line_start":437,"line_end":437,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161512,"byte_end":161541,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161546,"byte_end":161621,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161626,"byte_end":161631,"line_start":440,"line_end":440,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161636,"byte_end":161725,"line_start":441,"line_end":441,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161730,"byte_end":161761,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161766,"byte_end":161775,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161780,"byte_end":161785,"line_start":444,"line_end":444,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161790,"byte_end":161848,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161853,"byte_end":161937,"line_start":446,"line_end":446,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161942,"byte_end":161951,"line_start":447,"line_end":447,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161956,"byte_end":161963,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161968,"byte_end":161973,"line_start":449,"line_end":449,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":161978,"byte_end":161995,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162000,"byte_end":162016,"line_start":451,"line_end":451,"column_start":5,"column_end":21}},{"value":"/ use tower::BoxError;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162021,"byte_end":162045,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162050,"byte_end":162053,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162058,"byte_end":162108,"line_start":454,"line_end":454,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162113,"byte_end":162170,"line_start":455,"line_end":455,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162175,"byte_end":162178,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ // If the user is zero years old, return an error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162183,"byte_end":162237,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/ let mut new_service = service.map_result(|result| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162242,"byte_end":162297,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/    let record = result?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162302,"byte_end":162330,"line_start":459,"line_end":459,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162335,"byte_end":162338,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/    if record.age == 0 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162343,"byte_end":162370,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/         // Users must have been born to use our app!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162375,"byte_end":162431,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/         let app_error = AppError::from(\"users cannot be 0 years old!\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162436,"byte_end":162511,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162516,"byte_end":162519,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/         // Box the error to erase its type (as it can be an `AppError`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162524,"byte_end":162598,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/         // *or* the inner service's `DbError`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162603,"byte_end":162654,"line_start":466,"line_end":466,"column_start":5,"column_end":56}},{"value":"/         return Err(BoxError::from(app_error));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162659,"byte_end":162709,"line_start":467,"line_end":467,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162714,"byte_end":162723,"line_start":468,"line_end":468,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162728,"byte_end":162731,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, return the record.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162736,"byte_end":162776,"line_start":470,"line_end":470,"column_start":5,"column_end":45}},{"value":"/     Ok(record)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162781,"byte_end":162799,"line_start":471,"line_end":471,"column_start":5,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162804,"byte_end":162811,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162816,"byte_end":162819,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162824,"byte_end":162851,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162856,"byte_end":162872,"line_start":475,"line_end":475,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162877,"byte_end":162905,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162910,"byte_end":162926,"line_start":477,"line_end":477,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162931,"byte_end":162946,"line_start":478,"line_end":478,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162951,"byte_end":162968,"line_start":479,"line_end":479,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162973,"byte_end":162989,"line_start":480,"line_end":480,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), BoxError>(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":162994,"byte_end":163022,"line_start":481,"line_end":481,"column_start":5,"column_end":33}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163027,"byte_end":163038,"line_start":482,"line_end":482,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163043,"byte_end":163050,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163055,"byte_end":163062,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163067,"byte_end":163070,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Performing an action that must be run for both successes and failures:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163075,"byte_end":163149,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163154,"byte_end":163157,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163162,"byte_end":163169,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163174,"byte_end":163206,"line_start":489,"line_end":489,"column_start":5,"column_end":37}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163211,"byte_end":163248,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163253,"byte_end":163292,"line_start":491,"line_end":491,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163297,"byte_end":163302,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163307,"byte_end":163336,"line_start":493,"line_end":493,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163341,"byte_end":163369,"line_start":494,"line_end":494,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163374,"byte_end":163413,"line_start":495,"line_end":495,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163418,"byte_end":163445,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163450,"byte_end":163459,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163464,"byte_end":163471,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163476,"byte_end":163481,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163486,"byte_end":163531,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/ #   type Response = String;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163536,"byte_end":163567,"line_start":501,"line_end":501,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163572,"byte_end":163596,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, u8>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163601,"byte_end":163671,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163676,"byte_end":163681,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163686,"byte_end":163775,"line_start":505,"line_end":505,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163780,"byte_end":163811,"line_start":506,"line_end":506,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163816,"byte_end":163825,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163830,"byte_end":163835,"line_start":508,"line_end":508,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163840,"byte_end":163898,"line_start":509,"line_end":509,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163903,"byte_end":163961,"line_start":510,"line_end":510,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163966,"byte_end":163975,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163980,"byte_end":163987,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":163992,"byte_end":163997,"line_start":513,"line_end":513,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164002,"byte_end":164019,"line_start":514,"line_end":514,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164024,"byte_end":164039,"line_start":515,"line_end":515,"column_start":5,"column_end":20}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164044,"byte_end":164094,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164099,"byte_end":164156,"line_start":517,"line_end":517,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164161,"byte_end":164164,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ // Print a message whenever a query completes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164169,"byte_end":164219,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/ let mut new_service = service.map_result(|result| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164224,"byte_end":164279,"line_start":520,"line_end":520,"column_start":5,"column_end":60}},{"value":"/     println!(\"query completed; success={}\", result.is_ok());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164284,"byte_end":164348,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/     result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164353,"byte_end":164367,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164372,"byte_end":164379,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164384,"byte_end":164387,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164392,"byte_end":164419,"line_start":525,"line_end":525,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164424,"byte_end":164440,"line_start":526,"line_end":526,"column_start":5,"column_end":21}},{"value":"/ let response = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164445,"byte_end":164475,"line_start":527,"line_end":527,"column_start":5,"column_end":35}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164480,"byte_end":164496,"line_start":528,"line_end":528,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164501,"byte_end":164516,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164521,"byte_end":164538,"line_start":530,"line_end":530,"column_start":5,"column_end":22}},{"value":"/     .await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164543,"byte_end":164558,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/ # response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164563,"byte_end":164577,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164582,"byte_end":164593,"line_start":533,"line_end":533,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164598,"byte_end":164605,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164610,"byte_end":164617,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164622,"byte_end":164625,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`map_response`]: ServiceExt::map_response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164630,"byte_end":164676,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/ [`map_err`]: ServiceExt::map_err","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164681,"byte_end":164717,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/ [`map_result`]: ServiceExt::map_result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164722,"byte_end":164764,"line_start":539,"line_end":539,"column_start":5,"column_end":47}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164769,"byte_end":164805,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164810,"byte_end":164852,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164857,"byte_end":164903,"line_start":542,"line_end":542,"column_start":5,"column_end":51}},{"value":"/ [`BoxError`]: crate::BoxError","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":164908,"byte_end":164941,"line_start":543,"line_end":543,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166813,"byte_end":166824,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"map_request","qualname":"::util::ServiceExt::map_request","value":"pub fn map_request<F, NewRequest>(Self, F) -> MapRequest<Self, F> where\nSelf: Sized, F: FnMut(NewRequest) -> Request + Clone","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the service.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165219,"byte_end":165269,"line_start":553,"line_end":553,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165274,"byte_end":165277,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new service that passes each value through the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165282,"byte_end":165356,"line_start":555,"line_end":555,"column_start":5,"column_end":79}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165361,"byte_end":165412,"line_start":556,"line_end":556,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165417,"byte_end":165420,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165425,"byte_end":165438,"line_start":558,"line_end":558,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165443,"byte_end":165450,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165455,"byte_end":165487,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165492,"byte_end":165529,"line_start":561,"line_end":561,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165534,"byte_end":165573,"line_start":562,"line_end":562,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165578,"byte_end":165583,"line_start":563,"line_end":563,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165588,"byte_end":165617,"line_start":564,"line_end":564,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165622,"byte_end":165650,"line_start":565,"line_end":565,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165655,"byte_end":165694,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165699,"byte_end":165726,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165731,"byte_end":165740,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165745,"byte_end":165752,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165757,"byte_end":165762,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/ # impl Service<String> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165767,"byte_end":165815,"line_start":571,"line_end":571,"column_start":5,"column_end":53}},{"value":"/ #   type Response = String;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165820,"byte_end":165851,"line_start":572,"line_end":572,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165856,"byte_end":165880,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, u8>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165885,"byte_end":165955,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165960,"byte_end":165965,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":165970,"byte_end":166059,"line_start":576,"line_end":576,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166064,"byte_end":166095,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166100,"byte_end":166109,"line_start":578,"line_end":578,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166114,"byte_end":166119,"line_start":579,"line_end":579,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: String) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166124,"byte_end":166185,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166190,"byte_end":166248,"line_start":581,"line_end":581,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166253,"byte_end":166262,"line_start":582,"line_end":582,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166267,"byte_end":166274,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166279,"byte_end":166284,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166289,"byte_end":166306,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166311,"byte_end":166326,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/ // A service taking a String as a request","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166331,"byte_end":166376,"line_start":587,"line_end":587,"column_start":5,"column_end":50}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166381,"byte_end":166438,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166443,"byte_end":166446,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ // Map the request to a new request","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166451,"byte_end":166490,"line_start":590,"line_end":590,"column_start":5,"column_end":44}},{"value":"/ let mut new_service = service.map_request(|id: u32| id.to_string());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166495,"byte_end":166567,"line_start":591,"line_end":591,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166572,"byte_end":166575,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166580,"byte_end":166607,"line_start":593,"line_end":593,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166612,"byte_end":166628,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/ let response = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166633,"byte_end":166663,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166668,"byte_end":166684,"line_start":596,"line_end":596,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166689,"byte_end":166704,"line_start":597,"line_end":597,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166709,"byte_end":166726,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/     .await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166731,"byte_end":166746,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/ # response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166751,"byte_end":166765,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166770,"byte_end":166781,"line_start":601,"line_end":601,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166786,"byte_end":166793,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":166798,"byte_end":166805,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176471,"byte_end":176475,"line_start":871,"line_end":871,"column_start":8,"column_end":12},"name":"then","qualname":"::util::ServiceExt::then","value":"pub fn then<F, Response, Error, Fut>(Self, F) -> Then<Self, F> where\nSelf: Sized, Error: From<Self::Error>,\nF: FnOnce(Result<Self::Response, Self::Error>) -> Fut + Clone,\nFut: Future<Output = Result<Response, Error>>","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Composes an asynchronous function *after* this service.","sig":null,"attributes":[{"value":"/ Composes an asynchronous function *after* this service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172357,"byte_end":172416,"line_start":773,"line_end":773,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172421,"byte_end":172424,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This takes a function or closure returning a future, and returns a new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172429,"byte_end":172503,"line_start":775,"line_end":775,"column_start":5,"column_end":79}},{"value":"/ `Service` that chains that function after this service's [`Future`]. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172508,"byte_end":172584,"line_start":776,"line_end":776,"column_start":5,"column_end":81}},{"value":"/ new `Service`'s future will consist of this service's future, followed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172589,"byte_end":172663,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ by the future returned by calling the chained function with the future's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172668,"byte_end":172744,"line_start":778,"line_end":778,"column_start":5,"column_end":81}},{"value":"/ [`Output`] type. The chained function is called regardless of whether","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172749,"byte_end":172822,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ this service's future completes with a successful response or with an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172827,"byte_end":172900,"line_start":780,"line_end":780,"column_start":5,"column_end":78}},{"value":"/ error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172905,"byte_end":172915,"line_start":781,"line_end":781,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172920,"byte_end":172923,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method can be thought of as an equivalent to the [`futures`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":172928,"byte_end":172996,"line_start":783,"line_end":783,"column_start":5,"column_end":73}},{"value":"/ crate]'s [`FutureExt::then`] combinator, but acting on `Service`s that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173001,"byte_end":173075,"line_start":784,"line_end":784,"column_start":5,"column_end":79}},{"value":"/ _return_ futures, rather than on an individual future. Similarly to that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173080,"byte_end":173156,"line_start":785,"line_end":785,"column_start":5,"column_end":81}},{"value":"/ combinator, [`ServiceExt::then`] can be used to implement asynchronous","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173161,"byte_end":173235,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ error recovery, by calling some asynchronous function with errors","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173240,"byte_end":173309,"line_start":787,"line_end":787,"column_start":5,"column_end":74}},{"value":"/ returned by this service. Alternatively, it may also be used to call a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173314,"byte_end":173388,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ fallible async function with the successful response of this service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173393,"byte_end":173466,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173471,"byte_end":173474,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173479,"byte_end":173553,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ into a different type. It can also be used to change the [`Error`] type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173558,"byte_end":173633,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ of the service. However, because the `then` function is not applied","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173638,"byte_end":173709,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ to the errors returned by the service's [`poll_ready`] method, it must","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173714,"byte_end":173788,"line_start":794,"line_end":794,"column_start":5,"column_end":79}},{"value":"/ be possible to convert the service's [`Error`] type into the error type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173793,"byte_end":173868,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ returned by the `then` future. This is trivial when the function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173873,"byte_end":173941,"line_start":796,"line_end":796,"column_start":5,"column_end":73}},{"value":"/ returns the same error type as the service, but in other cases, it can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":173946,"byte_end":174020,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/ be useful to use [`BoxError`] to erase differing error types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174025,"byte_end":174090,"line_start":798,"line_end":798,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174095,"byte_end":174098,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174103,"byte_end":174117,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174122,"byte_end":174125,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174130,"byte_end":174137,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174142,"byte_end":174179,"line_start":803,"line_end":803,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174184,"byte_end":174223,"line_start":804,"line_end":804,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174228,"byte_end":174233,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174238,"byte_end":174267,"line_start":806,"line_end":806,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174272,"byte_end":174300,"line_start":807,"line_end":807,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174305,"byte_end":174344,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174349,"byte_end":174376,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174381,"byte_end":174390,"line_start":810,"line_end":810,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174395,"byte_end":174402,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174407,"byte_end":174412,"line_start":812,"line_end":812,"column_start":5,"column_end":10}},{"value":"/ # type Record = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174417,"byte_end":174440,"line_start":813,"line_end":813,"column_start":5,"column_end":28}},{"value":"/ # type DbError = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174445,"byte_end":174469,"line_start":814,"line_end":814,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174474,"byte_end":174479,"line_start":815,"line_end":815,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174484,"byte_end":174529,"line_start":816,"line_end":816,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174534,"byte_end":174565,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174570,"byte_end":174599,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174604,"byte_end":174679,"line_start":819,"line_end":819,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174684,"byte_end":174689,"line_start":820,"line_end":820,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174694,"byte_end":174783,"line_start":821,"line_end":821,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174788,"byte_end":174819,"line_start":822,"line_end":822,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174824,"byte_end":174833,"line_start":823,"line_end":823,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174838,"byte_end":174843,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174848,"byte_end":174906,"line_start":825,"line_end":825,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174911,"byte_end":174958,"line_start":826,"line_end":826,"column_start":5,"column_end":52}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174963,"byte_end":174972,"line_start":827,"line_end":827,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174977,"byte_end":174984,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174989,"byte_end":174994,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":174999,"byte_end":175016,"line_start":830,"line_end":830,"column_start":5,"column_end":22}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175021,"byte_end":175071,"line_start":831,"line_end":831,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175076,"byte_end":175133,"line_start":832,"line_end":832,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175138,"byte_end":175141,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ // An async function that attempts to recover from errors returned by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175146,"byte_end":175223,"line_start":834,"line_end":834,"column_start":5,"column_end":82}},{"value":"/ // database.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175228,"byte_end":175244,"line_start":835,"line_end":835,"column_start":5,"column_end":21}},{"value":"/ async fn recover_from_error(error: DbError) -> Result<Record, DbError> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175249,"byte_end":175325,"line_start":836,"line_end":836,"column_start":5,"column_end":81}},{"value":"/     // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175330,"byte_end":175344,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/     # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175349,"byte_end":175365,"line_start":838,"line_end":838,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175370,"byte_end":175375,"line_start":839,"line_end":839,"column_start":5,"column_end":10}},{"value":"/ #    async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175380,"byte_end":175396,"line_start":840,"line_end":840,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175401,"byte_end":175404,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ // If the database service returns an error, attempt to recover by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175409,"byte_end":175479,"line_start":842,"line_end":842,"column_start":5,"column_end":75}},{"value":"/ // calling `recover_from_error`. Otherwise, return the successful response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175484,"byte_end":175563,"line_start":843,"line_end":843,"column_start":5,"column_end":84}},{"value":"/ let mut new_service = service.then(|result| async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175568,"byte_end":175628,"line_start":844,"line_end":844,"column_start":5,"column_end":65}},{"value":"/     match result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175633,"byte_end":175655,"line_start":845,"line_end":845,"column_start":5,"column_end":27}},{"value":"/         Ok(record) => Ok(record),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175660,"byte_end":175697,"line_start":846,"line_end":846,"column_start":5,"column_end":42}},{"value":"/         Err(e) => recover_from_error(e).await,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175702,"byte_end":175752,"line_start":847,"line_end":847,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175757,"byte_end":175766,"line_start":848,"line_end":848,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175771,"byte_end":175778,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175783,"byte_end":175786,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175791,"byte_end":175818,"line_start":851,"line_end":851,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175823,"byte_end":175839,"line_start":852,"line_end":852,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175844,"byte_end":175872,"line_start":853,"line_end":853,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175877,"byte_end":175893,"line_start":854,"line_end":854,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175898,"byte_end":175913,"line_start":855,"line_end":855,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175918,"byte_end":175935,"line_start":856,"line_end":856,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175940,"byte_end":175956,"line_start":857,"line_end":857,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), DbError>(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175961,"byte_end":175988,"line_start":858,"line_end":858,"column_start":5,"column_end":32}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":175993,"byte_end":176004,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176009,"byte_end":176016,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176021,"byte_end":176028,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176033,"byte_end":176036,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ [`Future`]: crate::Service::Future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176041,"byte_end":176079,"line_start":863,"line_end":863,"column_start":5,"column_end":43}},{"value":"/ [`Output`]: std::future::Future::Output","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176084,"byte_end":176127,"line_start":864,"line_end":864,"column_start":5,"column_end":48}},{"value":"/ [`futures` crate]: https://docs.rs/futures","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176132,"byte_end":176178,"line_start":865,"line_end":865,"column_start":5,"column_end":51}},{"value":"/ [`FutureExt::then`]: https://docs.rs/futures/latest/futures/future/trait.FutureExt.html#method.then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176183,"byte_end":176286,"line_start":866,"line_end":866,"column_start":5,"column_end":108}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176291,"byte_end":176327,"line_start":867,"line_end":867,"column_start":5,"column_end":41}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176332,"byte_end":176374,"line_start":868,"line_end":868,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176379,"byte_end":176425,"line_start":869,"line_end":869,"column_start":5,"column_end":51}},{"value":"/ [`BoxError`]: crate::BoxError","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176430,"byte_end":176463,"line_start":870,"line_end":870,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178848,"byte_end":178858,"line_start":945,"line_end":945,"column_start":8,"column_end":18},"name":"map_future","qualname":"::util::ServiceExt::map_future","value":"pub fn map_future<F, Fut, Response, Error>(Self, F) -> MapFuture<Self, F>\nwhere Self: Sized, F: FnMut(Self::Future) -> Fut, Error: From<Self::Error>,\nFut: Future<Output = Result<Response, Error>>","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" Composes a function that transforms futures produced by the service.","sig":null,"attributes":[{"value":"/ Composes a function that transforms futures produced by the service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176765,"byte_end":176837,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176842,"byte_end":176845,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ This takes a function or closure returning a future computed from the future returned by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176850,"byte_end":176942,"line_start":883,"line_end":883,"column_start":5,"column_end":97}},{"value":"/ the service's [`call`] method, as opposed to the responses produced by the future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":176947,"byte_end":177033,"line_start":884,"line_end":884,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177038,"byte_end":177041,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177046,"byte_end":177060,"line_start":886,"line_end":886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177065,"byte_end":177068,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177073,"byte_end":177080,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177085,"byte_end":177122,"line_start":889,"line_end":889,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt, BoxError};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177127,"byte_end":177176,"line_start":890,"line_end":890,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177181,"byte_end":177186,"line_start":891,"line_end":891,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177191,"byte_end":177220,"line_start":892,"line_end":892,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177225,"byte_end":177253,"line_start":893,"line_end":893,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177258,"byte_end":177297,"line_start":894,"line_end":894,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177302,"byte_end":177329,"line_start":895,"line_end":895,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177334,"byte_end":177343,"line_start":896,"line_end":896,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177348,"byte_end":177355,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177360,"byte_end":177365,"line_start":898,"line_end":898,"column_start":5,"column_end":10}},{"value":"/ # type Record = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177370,"byte_end":177393,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ # type DbError = crate::BoxError;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177398,"byte_end":177435,"line_start":900,"line_end":900,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177440,"byte_end":177445,"line_start":901,"line_end":901,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177450,"byte_end":177495,"line_start":902,"line_end":902,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177500,"byte_end":177531,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177536,"byte_end":177565,"line_start":904,"line_end":904,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177570,"byte_end":177645,"line_start":905,"line_end":905,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177650,"byte_end":177655,"line_start":906,"line_end":906,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177660,"byte_end":177749,"line_start":907,"line_end":907,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177754,"byte_end":177785,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177790,"byte_end":177799,"line_start":909,"line_end":909,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177804,"byte_end":177809,"line_start":910,"line_end":910,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177814,"byte_end":177872,"line_start":911,"line_end":911,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177877,"byte_end":177924,"line_start":912,"line_end":912,"column_start":5,"column_end":52}},{"value":"/ #   }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177929,"byte_end":177938,"line_start":913,"line_end":913,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177943,"byte_end":177950,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177955,"byte_end":177960,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177965,"byte_end":177982,"line_start":916,"line_end":916,"column_start":5,"column_end":22}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":177987,"byte_end":178015,"line_start":917,"line_end":917,"column_start":5,"column_end":33}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178020,"byte_end":178049,"line_start":918,"line_end":918,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178054,"byte_end":178057,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178062,"byte_end":178112,"line_start":920,"line_end":920,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178117,"byte_end":178174,"line_start":921,"line_end":921,"column_start":5,"column_end":62}},{"value":"/ #    async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178179,"byte_end":178195,"line_start":922,"line_end":922,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178200,"byte_end":178203,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ let mut new_service = service.map_future(|future| async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178208,"byte_end":178274,"line_start":924,"line_end":924,"column_start":5,"column_end":71}},{"value":"/     let res = timeout(Duration::from_secs(1), future).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178279,"byte_end":178344,"line_start":925,"line_end":925,"column_start":5,"column_end":70}},{"value":"/     Ok::<_, BoxError>(res)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178349,"byte_end":178379,"line_start":926,"line_end":926,"column_start":5,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178384,"byte_end":178391,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178396,"byte_end":178399,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178404,"byte_end":178431,"line_start":929,"line_end":929,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178436,"byte_end":178452,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178457,"byte_end":178485,"line_start":931,"line_end":931,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178490,"byte_end":178506,"line_start":932,"line_end":932,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178511,"byte_end":178526,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178531,"byte_end":178548,"line_start":934,"line_end":934,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178553,"byte_end":178569,"line_start":935,"line_end":935,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), BoxError>(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178574,"byte_end":178602,"line_start":936,"line_end":936,"column_start":5,"column_end":33}},{"value":"/ #    };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178607,"byte_end":178618,"line_start":937,"line_end":937,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178623,"byte_end":178630,"line_start":938,"line_end":938,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178635,"byte_end":178642,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178647,"byte_end":178650,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Note that normally you wouldn't implement timeouts like this and instead use [`Timeout`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178655,"byte_end":178748,"line_start":941,"line_end":941,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178753,"byte_end":178756,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178761,"byte_end":178795,"line_start":943,"line_end":943,"column_start":5,"column_end":39}},{"value":"/ [`Timeout`]: crate::timeout::Timeout","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":178800,"byte_end":178840,"line_start":944,"line_end":944,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":2857},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179874,"byte_end":179886,"line_start":978,"line_end":978,"column_start":8,"column_end":20},"name":"option_layer","qualname":"::util::option_layer","value":"pub fn option_layer<L>(Option<L>) -> Either<L, Identity>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Option<Layer>` into a [`Layer`].","sig":null,"attributes":[{"value":"/ Convert an `Option<Layer>` into a [`Layer`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179220,"byte_end":179268,"line_start":958,"line_end":958,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179269,"byte_end":179272,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179273,"byte_end":179280,"line_start":960,"line_end":960,"column_start":1,"column_end":8}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179281,"byte_end":179311,"line_start":961,"line_end":961,"column_start":1,"column_end":31}},{"value":"/ # use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179312,"byte_end":179337,"line_start":962,"line_end":962,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179338,"byte_end":179379,"line_start":963,"line_end":963,"column_start":1,"column_end":42}},{"value":"/ use tower::util::option_layer;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179380,"byte_end":179414,"line_start":964,"line_end":964,"column_start":1,"column_end":35}},{"value":"/ # use tower::timeout::TimeoutLayer;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179415,"byte_end":179454,"line_start":965,"line_end":965,"column_start":1,"column_end":40}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179455,"byte_end":179564,"line_start":966,"line_end":966,"column_start":1,"column_end":110}},{"value":"/ # let timeout = Some(Duration::new(10, 0));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179565,"byte_end":179612,"line_start":967,"line_end":967,"column_start":1,"column_end":48}},{"value":"/ // Layer to apply a timeout if configured","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179613,"byte_end":179658,"line_start":968,"line_end":968,"column_start":1,"column_end":46}},{"value":"/ let maybe_timeout = option_layer(timeout.map(TimeoutLayer::new));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179659,"byte_end":179728,"line_start":969,"line_end":969,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179729,"byte_end":179732,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179733,"byte_end":179758,"line_start":971,"line_end":971,"column_start":1,"column_end":26}},{"value":"/     .layer(maybe_timeout)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179759,"byte_end":179788,"line_start":972,"line_end":972,"column_start":1,"column_end":30}},{"value":"/     .service(svc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179789,"byte_end":179811,"line_start":973,"line_end":973,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179812,"byte_end":179819,"line_start":974,"line_end":974,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179820,"byte_end":179827,"line_start":975,"line_end":975,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179828,"byte_end":179831,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179832,"byte_end":179866,"line_start":977,"line_end":977,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":2859},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::builder","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":5963},{"krate":0,"index":5966},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2907}],"decl_id":null,"docs":" Builder types to compose layers and services\n","sig":null,"attributes":[{"value":"/ Builder types to compose layers and services","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238509,"byte_end":238557,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5963},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242013,"byte_end":242027,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"ServiceBuilder","qualname":"::builder::ServiceBuilder","value":"ServiceBuilder {  }","parent":null,"children":[{"krate":0,"index":5965}],"decl_id":null,"docs":" Declaratively construct [`Service`] values.","sig":null,"attributes":[{"value":"/ Declaratively construct [`Service`] values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238618,"byte_end":238665,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238666,"byte_end":238669,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`ServiceBuilder`] provides a [builder-like interface][builder] for composing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238670,"byte_end":238751,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ layers to be applied to a [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238752,"byte_end":238794,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238795,"byte_end":238798,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238799,"byte_end":238812,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238813,"byte_end":238816,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] is a trait representing an asynchronous function of a request","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238817,"byte_end":238896,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ to a response. It is similar to `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238897,"byte_end":238980,"line_start":15,"line_end":15,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238981,"byte_end":238984,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] is typically bound to a single transport, such as a TCP","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":238985,"byte_end":239058,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ connection.  It defines how _all_ inbound or outbound requests are handled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239059,"byte_end":239137,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ by that connection.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239138,"byte_end":239161,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239162,"byte_end":239165,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [builder]: https://doc.rust-lang.org/1.0.0/style/ownership/builders.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239166,"byte_end":239242,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239243,"byte_end":239246,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239247,"byte_end":239258,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239259,"byte_end":239262,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The order in which layers are added impacts how requests are handled. Layers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239263,"byte_end":239343,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ that are added first will be called with the request first. The argument to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239344,"byte_end":239423,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ `service` will be last to see the request.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239424,"byte_end":239470,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239471,"byte_end":239474,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239475,"byte_end":239482,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # // this (and other) doctest is ignored because we don't have a way","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239483,"byte_end":239555,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ # // to say that it should only be run with cfg(feature = \"...\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239556,"byte_end":239624,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ # use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239625,"byte_end":239650,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239651,"byte_end":239692,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239693,"byte_end":239749,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239750,"byte_end":239859,"line_start":35,"line_end":35,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239860,"byte_end":239885,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"/     .buffer(100)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239886,"byte_end":239906,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/     .concurrency_limit(10)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239907,"byte_end":239937,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/     .service(svc)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239938,"byte_end":239959,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/ # ;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239960,"byte_end":239967,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239968,"byte_end":239975,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239976,"byte_end":239983,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239984,"byte_end":239987,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ In the above example, the buffer layer receives the request first followed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":239988,"byte_end":240066,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ by `concurrency_limit`. `buffer` enables up to 100 request to be in-flight","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240067,"byte_end":240145,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ **on top of** the requests that have already been forwarded to the next","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240146,"byte_end":240221,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ layer. Combined with `concurrency_limit`, this allows up to 110 requests to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240222,"byte_end":240304,"line_start":47,"line_end":47,"column_start":1,"column_end":83}},{"value":"/ in-flight.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240305,"byte_end":240319,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240320,"byte_end":240323,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240324,"byte_end":240331,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240332,"byte_end":240357,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240358,"byte_end":240399,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240400,"byte_end":240456,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240457,"byte_end":240566,"line_start":54,"line_end":54,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240567,"byte_end":240592,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"/     .concurrency_limit(10)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240593,"byte_end":240623,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/     .buffer(100)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240624,"byte_end":240644,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/     .service(svc)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240645,"byte_end":240666,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/ # ;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240667,"byte_end":240674,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240675,"byte_end":240682,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240683,"byte_end":240690,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240691,"byte_end":240694,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The above example is similar, but the order of layers is reversed. Now,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240695,"byte_end":240770,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ `concurrency_limit` applies first and only allows 10 requests to be in-flight","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240771,"byte_end":240852,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ total.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240853,"byte_end":240863,"line_start":65,"line_end":65,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240864,"byte_end":240867,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240868,"byte_end":240882,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240883,"byte_end":240886,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] stack with a single layer:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240887,"byte_end":240931,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240932,"byte_end":240935,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240936,"byte_end":240943,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240944,"byte_end":240969,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":240970,"byte_end":241011,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(feature = \"limit\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241012,"byte_end":241043,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/ # use tower::limit::concurrency::ConcurrencyLimitLayer;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241044,"byte_end":241103,"line_start":75,"line_end":75,"column_start":1,"column_end":60}},{"value":"/ # #[cfg(feature = \"limit\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241104,"byte_end":241135,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241136,"byte_end":241245,"line_start":77,"line_end":77,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241246,"byte_end":241271,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"/     .concurrency_limit(5)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241272,"byte_end":241301,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/     .service(svc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241302,"byte_end":241324,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ # ;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241325,"byte_end":241332,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241333,"byte_end":241340,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241341,"byte_end":241348,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241349,"byte_end":241352,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] stack with _multiple_ layers that contain rate limiting,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241353,"byte_end":241427,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ in-flight request limits, and a channel-backed, clonable [`Service`]:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241428,"byte_end":241501,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241502,"byte_end":241505,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241506,"byte_end":241513,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241514,"byte_end":241539,"line_start":89,"line_end":89,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241540,"byte_end":241581,"line_start":90,"line_end":90,"column_start":1,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241582,"byte_end":241612,"line_start":91,"line_end":91,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241613,"byte_end":241669,"line_start":92,"line_end":92,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241670,"byte_end":241779,"line_start":93,"line_end":93,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241780,"byte_end":241805,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/     .buffer(5)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241806,"byte_end":241824,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/     .concurrency_limit(5)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241825,"byte_end":241854,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241855,"byte_end":241901,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/     .service(svc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241902,"byte_end":241924,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/ # ;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241925,"byte_end":241932,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241933,"byte_end":241940,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241941,"byte_end":241948,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241949,"byte_end":241952,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":241953,"byte_end":241984,"line_start":103,"line_end":103,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242234,"byte_end":242237,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<ServiceBuilder<Identity>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`ServiceBuilder`].\n","sig":null,"attributes":[{"value":"/ Create a new [`ServiceBuilder`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242186,"byte_end":242222,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242629,"byte_end":242634,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"layer","qualname":"<ServiceBuilder<L>>::layer","value":"pub fn layer<T>(Self, T) -> ServiceBuilder<Stack<T, L>>","parent":null,"children":[],"decl_id":null,"docs":" Add a new layer `T` into the [`ServiceBuilder`].","sig":null,"attributes":[{"value":"/ Add a new layer `T` into the [`ServiceBuilder`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242362,"byte_end":242414,"line_start":125,"line_end":125,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242419,"byte_end":242422,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with the service provided by a user-defined","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242427,"byte_end":242503,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ [`Layer`]. The provided layer must implement the [`Layer`] trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242508,"byte_end":242577,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242582,"byte_end":242585,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242590,"byte_end":242617,"line_start":130,"line_end":130,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243471,"byte_end":243483,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"option_layer","qualname":"<ServiceBuilder<L>>::option_layer","value":"pub fn option_layer<T>(Self, Option<T>)\n-> ServiceBuilder<Stack<crate::util::Either<T, Identity>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally add a new layer `T` into the [`ServiceBuilder`].","sig":null,"attributes":[{"value":"/ Optionally add a new layer `T` into the [`ServiceBuilder`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242783,"byte_end":242846,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242851,"byte_end":242854,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242859,"byte_end":242866,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242871,"byte_end":242901,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"/ # use tower::Service;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242906,"byte_end":242931,"line_start":141,"line_end":141,"column_start":5,"column_end":30}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242936,"byte_end":242977,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ # use tower::timeout::TimeoutLayer;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242982,"byte_end":243021,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243026,"byte_end":243135,"line_start":144,"line_end":144,"column_start":5,"column_end":114}},{"value":"/ # let timeout = Some(Duration::new(10, 0));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243140,"byte_end":243187,"line_start":145,"line_end":145,"column_start":5,"column_end":52}},{"value":"/ // Apply a timeout if configured","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243192,"byte_end":243228,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243233,"byte_end":243258,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/     .option_layer(timeout.map(TimeoutLayer::new))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243263,"byte_end":243316,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/     .service(svc)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243321,"byte_end":243342,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/ # ;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243347,"byte_end":243354,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243359,"byte_end":243366,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243371,"byte_end":243378,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243383,"byte_end":243407,"line_start":153,"line_end":153,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243893,"byte_end":243901,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"layer_fn","qualname":"<ServiceBuilder<L>>::layer_fn","value":"pub fn layer_fn<F>(Self, F)\n-> ServiceBuilder<Stack<crate::layer::LayerFn<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Layer`] built from a function that accepts a service and returns another service.","sig":null,"attributes":[{"value":"/ Add a [`Layer`] built from a function that accepts a service and returns another service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243662,"byte_end":243755,"line_start":162,"line_end":162,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243760,"byte_end":243763,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`layer_fn`] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243768,"byte_end":243828,"line_start":164,"line_end":164,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243833,"byte_end":243836,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`layer_fn`]: crate::layer::layer_fn","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":243841,"byte_end":243881,"line_start":166,"line_end":166,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244327,"byte_end":244333,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"buffer","qualname":"<ServiceBuilder<L>>::buffer","value":"pub fn buffer<Request>(Self, usize)\n-> ServiceBuilder<Stack<crate::buffer::BufferLayer<Request>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Buffer requests when when the next layer is not ready.","sig":null,"attributes":[{"value":"/ Buffer requests when when the next layer is not ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244030,"byte_end":244088,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244093,"byte_end":244096,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`Buffer`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244101,"byte_end":244168,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244173,"byte_end":244188,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244193,"byte_end":244196,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`Buffer`]: crate::buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244201,"byte_end":244230,"line_start":176,"line_end":176,"column_start":5,"column_end":34}},{"value":"cfg(feature = \"buffer\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244235,"byte_end":244261,"line_start":177,"line_end":177,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":245018,"byte_end":245035,"line_start":198,"line_end":198,"column_start":12,"column_end":29},"name":"concurrency_limit","qualname":"<ServiceBuilder<L>>::concurrency_limit","value":"pub fn concurrency_limit(Self, usize)\n-> ServiceBuilder<Stack<crate::limit::ConcurrencyLimitLayer, L>>","parent":null,"children":[],"decl_id":null,"docs":" Limit the max number of in-flight requests.","sig":null,"attributes":[{"value":"/ Limit the max number of in-flight requests.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244523,"byte_end":244570,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244575,"byte_end":244578,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ A request is in-flight from the time the request is received until the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244583,"byte_end":244657,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ response future completes. This includes the time spent in the next","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244662,"byte_end":244733,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ layers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244738,"byte_end":244749,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244754,"byte_end":244757,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244762,"byte_end":244818,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"/ [`ConcurrencyLimit`] middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244823,"byte_end":244859,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244864,"byte_end":244867,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`ConcurrencyLimit`]: crate::limit::concurrency","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244872,"byte_end":244923,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"cfg(feature = \"limit\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":244928,"byte_end":244953,"line_start":196,"line_end":196,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246418,"byte_end":246428,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"rate_limit","qualname":"<ServiceBuilder<L>>::rate_limit","value":"pub fn rate_limit(Self, u64, std::time::Duration)\n-> ServiceBuilder<Stack<crate::limit::RateLimitLayer, L>>","parent":null,"children":[],"decl_id":null,"docs":" Limit requests to at most `num` per the given duration.","sig":null,"attributes":[{"value":"/ Limit requests to at most `num` per the given duration.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246111,"byte_end":246170,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246175,"byte_end":246178,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`RateLimit`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246183,"byte_end":246253,"line_start":228,"line_end":228,"column_start":5,"column_end":75}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246258,"byte_end":246273,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246278,"byte_end":246281,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`RateLimit`]: crate::limit::rate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246286,"byte_end":246323,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"limit\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":246328,"byte_end":246353,"line_start":232,"line_end":232,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247712,"byte_end":247719,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"timeout","qualname":"<ServiceBuilder<L>>::timeout","value":"pub fn timeout(Self, std::time::Duration)\n-> ServiceBuilder<Stack<crate::timeout::TimeoutLayer, L>>","parent":null,"children":[],"decl_id":null,"docs":" Fail requests that take longer than `timeout`.","sig":null,"attributes":[{"value":"/ Fail requests that take longer than `timeout`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247274,"byte_end":247324,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247329,"byte_end":247332,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If the next layer takes more than `timeout` to respond to a request,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247337,"byte_end":247409,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ processing is terminated and an error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247414,"byte_end":247468,"line_start":261,"line_end":261,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247473,"byte_end":247476,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`timeout`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247481,"byte_end":247549,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247554,"byte_end":247569,"line_start":264,"line_end":264,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247574,"byte_end":247577,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ [`timeout`]: crate::timeout","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247582,"byte_end":247613,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"cfg(feature = \"timeout\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":247618,"byte_end":247645,"line_start":267,"line_end":267,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251158,"byte_end":251169,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"map_request","qualname":"<ServiceBuilder<L>>::map_request","value":"pub fn map_request<F, R1, R2>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapRequestLayer<F>, L>> where\nF: FnMut(R1) -> R2 + Clone","parent":null,"children":[],"decl_id":null,"docs":" Map one request type to another.","sig":null,"attributes":[{"value":"/ Map one request type to another.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249179,"byte_end":249215,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249220,"byte_end":249223,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapRequest`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249228,"byte_end":249299,"line_start":314,"line_end":314,"column_start":5,"column_end":76}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249304,"byte_end":249319,"line_start":315,"line_end":315,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249324,"byte_end":249327,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249332,"byte_end":249346,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249351,"byte_end":249354,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Changing the type of a request:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249359,"byte_end":249394,"line_start":319,"line_end":319,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249399,"byte_end":249402,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249407,"byte_end":249418,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249423,"byte_end":249453,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249458,"byte_end":249484,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249489,"byte_end":249492,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249497,"byte_end":249517,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), ()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249522,"byte_end":249563,"line_start":326,"line_end":326,"column_start":5,"column_end":46}},{"value":"/ // Suppose we have some `Service` whose request type is `String`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249568,"byte_end":249637,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ let string_svc = tower::service_fn(|request: String| async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249642,"byte_end":249711,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/     println!(\"request: {}\", request);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249716,"byte_end":249757,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249762,"byte_end":249776,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249781,"byte_end":249788,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249793,"byte_end":249796,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // ...but we want to call that service with a `usize`. What do we do?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249801,"byte_end":249874,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249879,"byte_end":249882,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let usize_svc = ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249887,"byte_end":249928,"line_start":335,"line_end":335,"column_start":5,"column_end":46}},{"value":"/      // Add a middlware that converts the request type to a `String`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":249933,"byte_end":250006,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/     .map_request(|request: usize| format!(\"{}\", request))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250011,"byte_end":250072,"line_start":337,"line_end":337,"column_start":5,"column_end":66}},{"value":"/     // ...and wrap the string service with that middleware:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250077,"byte_end":250140,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/     .service(string_svc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250145,"byte_end":250174,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250179,"byte_end":250182,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ // Now, we can call that service with a `usize`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250187,"byte_end":250239,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ usize_svc.oneshot(42).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250244,"byte_end":250277,"line_start":342,"line_end":342,"column_start":5,"column_end":38}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250282,"byte_end":250294,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250299,"byte_end":250306,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250311,"byte_end":250318,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250323,"byte_end":250326,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Modifying the request value:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250331,"byte_end":250363,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250368,"byte_end":250371,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250376,"byte_end":250387,"line_start":349,"line_end":349,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250392,"byte_end":250422,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250427,"byte_end":250453,"line_start":351,"line_end":351,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250458,"byte_end":250461,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250466,"byte_end":250486,"line_start":353,"line_end":353,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), ()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250491,"byte_end":250532,"line_start":354,"line_end":354,"column_start":5,"column_end":46}},{"value":"/ // A service that takes a number and returns it:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250537,"byte_end":250589,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/ let svc = tower::service_fn(|request: usize| async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250594,"byte_end":250655,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/    Ok(request)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250660,"byte_end":250678,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250683,"byte_end":250690,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250695,"byte_end":250698,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let svc = ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250703,"byte_end":250738,"line_start":360,"line_end":360,"column_start":5,"column_end":40}},{"value":"/      // Add a middleware that adds 1 to each request","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250743,"byte_end":250799,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/     .map_request(|request: usize| request + 1)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250804,"byte_end":250854,"line_start":362,"line_end":362,"column_start":5,"column_end":55}},{"value":"/     .service(svc);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250859,"byte_end":250881,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250886,"byte_end":250889,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let response = svc.oneshot(1).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250894,"byte_end":250935,"line_start":365,"line_end":365,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(response, 2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250940,"byte_end":250968,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250973,"byte_end":250985,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":250990,"byte_end":250997,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251002,"byte_end":251009,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251014,"byte_end":251017,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [`MapRequest`]: crate::util::MapRequest","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251022,"byte_end":251065,"line_start":371,"line_end":371,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251070,"byte_end":251094,"line_start":372,"line_end":372,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251852,"byte_end":251864,"line_start":395,"line_end":395,"column_start":12,"column_end":24},"name":"map_response","qualname":"<ServiceBuilder<L>>::map_response","value":"pub fn map_response<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapResponseLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Map one response type to another.","sig":null,"attributes":[{"value":"/ Map one response type to another.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251397,"byte_end":251434,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251439,"byte_end":251442,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapResponse`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251447,"byte_end":251519,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251524,"byte_end":251539,"line_start":387,"line_end":387,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251544,"byte_end":251547,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_response` combinator] for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251552,"byte_end":251626,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251631,"byte_end":251634,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [`MapResponse`]: crate::util::MapResponse","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251639,"byte_end":251684,"line_start":391,"line_end":391,"column_start":5,"column_end":50}},{"value":"/ [`map_response` combinator]: crate::util::ServiceExt::map_response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251689,"byte_end":251759,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":251764,"byte_end":251788,"line_start":393,"line_end":393,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252458,"byte_end":252465,"line_start":413,"line_end":413,"column_start":12,"column_end":19},"name":"map_err","qualname":"<ServiceBuilder<L>>::map_err","value":"pub fn map_err<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapErrLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Map one error type to another.","sig":null,"attributes":[{"value":"/ Map one error type to another.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252036,"byte_end":252070,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252075,"byte_end":252078,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapErr`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252083,"byte_end":252150,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252155,"byte_end":252170,"line_start":405,"line_end":405,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252175,"byte_end":252178,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_err` combinator] for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252183,"byte_end":252252,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252257,"byte_end":252260,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [`MapErr`]: crate::util::MapErr","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252265,"byte_end":252300,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"/ [`map_err` combinator]: crate::util::ServiceExt::map_err","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252305,"byte_end":252365,"line_start":410,"line_end":410,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252370,"byte_end":252394,"line_start":411,"line_end":411,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253078,"byte_end":253088,"line_start":427,"line_end":427,"column_start":12,"column_end":22},"name":"map_future","qualname":"<ServiceBuilder<L>>::map_future","value":"pub fn map_future<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapFutureLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Composes a function that transforms futures produced by the service.","sig":null,"attributes":[{"value":"/ Composes a function that transforms futures produced by the service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252604,"byte_end":252676,"line_start":417,"line_end":417,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252681,"byte_end":252684,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapFutureLayer`] middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252689,"byte_end":252776,"line_start":419,"line_end":419,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252781,"byte_end":252784,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_future`] combinator for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252789,"byte_end":252861,"line_start":421,"line_end":421,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252866,"byte_end":252869,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`MapFutureLayer`]: crate::util::MapFutureLayer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252874,"byte_end":252925,"line_start":423,"line_end":423,"column_start":5,"column_end":56}},{"value":"/ [`map_future`]: crate::util::ServiceExt::map_future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252930,"byte_end":252985,"line_start":424,"line_end":424,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":252990,"byte_end":253014,"line_start":425,"line_end":425,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254139,"byte_end":254143,"line_start":451,"line_end":451,"column_start":12,"column_end":16},"name":"then","qualname":"<ServiceBuilder<L>>::then","value":"pub fn then<F>(Self, F) -> ServiceBuilder<Stack<crate::util::ThenLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Apply a function after the service, regardless of whether the future\n succeeds or fails.","sig":null,"attributes":[{"value":"/ Apply a function after the service, regardless of whether the future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253233,"byte_end":253305,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ succeeds or fails.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253310,"byte_end":253332,"line_start":432,"line_end":432,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253337,"byte_end":253340,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`Then`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253345,"byte_end":253410,"line_start":434,"line_end":434,"column_start":5,"column_end":70}},{"value":"/ middleware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253415,"byte_end":253430,"line_start":435,"line_end":435,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253435,"byte_end":253438,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`map_response`] and [`map_err`] functions,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253443,"byte_end":253513,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/ except that the *same* function is invoked when the service's future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253518,"byte_end":253590,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ completes, whether it completes successfully or fails. This function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253595,"byte_end":253667,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ takes the [`Result`] returned by the service's future, and returns a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253672,"byte_end":253744,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/ [`Result`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253749,"byte_end":253764,"line_start":441,"line_end":441,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253769,"byte_end":253772,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`then` combinator] for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253777,"byte_end":253843,"line_start":443,"line_end":443,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253848,"byte_end":253851,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ [`Then`]: crate::util::Then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253856,"byte_end":253887,"line_start":445,"line_end":445,"column_start":5,"column_end":36}},{"value":"/ [`then` combinator]: crate::util::ServiceExt::then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253892,"byte_end":253946,"line_start":446,"line_end":446,"column_start":5,"column_end":59}},{"value":"/ [`map_response`]: ServiceBuilder::map_response","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":253951,"byte_end":254001,"line_start":447,"line_end":447,"column_start":5,"column_end":55}},{"value":"/ [`map_err`]: ServiceBuilder::map_err","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254006,"byte_end":254046,"line_start":448,"line_end":448,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254051,"byte_end":254075,"line_start":449,"line_end":449,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254340,"byte_end":254350,"line_start":456,"line_end":456,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ServiceBuilder<L>>::into_inner","value":"pub fn into_inner(Self) -> L","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Layer` implementation.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `Layer` implementation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254278,"byte_end":254328,"line_start":455,"line_end":455,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254614,"byte_end":254621,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"service","qualname":"<ServiceBuilder<L>>::service","value":"pub fn service<S>(&Self, S) -> L::Service where L: Layer<S>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the service `S` with the middleware provided by this\n [`ServiceBuilder`]'s [`Layer`]'s, returning a new [`Service`].","sig":null,"attributes":[{"value":"/ Wrap the service `S` with the middleware provided by this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254394,"byte_end":254455,"line_start":460,"line_end":460,"column_start":5,"column_end":66}},{"value":"/ [`ServiceBuilder`]'s [`Layer`]'s, returning a new [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254460,"byte_end":254526,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254531,"byte_end":254534,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254539,"byte_end":254566,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254571,"byte_end":254602,"line_start":464,"line_end":464,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":256167,"byte_end":256177,"line_start":517,"line_end":517,"column_start":12,"column_end":22},"name":"service_fn","qualname":"<ServiceBuilder<L>>::service_fn","value":"pub fn service_fn<F>(Self, F) -> L::Service where\nL: Layer<crate::util::ServiceFn<F>>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the async function `F` with the middleware provided by this [`ServiceBuilder`]'s\n [`Layer`]s, returning a new [`Service`].","sig":null,"attributes":[{"value":"/ Wrap the async function `F` with the middleware provided by this [`ServiceBuilder`]'s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254740,"byte_end":254829,"line_start":472,"line_end":472,"column_start":5,"column_end":94}},{"value":"/ [`Layer`]s, returning a new [`Service`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254834,"byte_end":254878,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254883,"byte_end":254886,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method which is equivalent to calling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254891,"byte_end":254954,"line_start":475,"line_end":475,"column_start":5,"column_end":68}},{"value":"/ [`ServiceBuilder::service`] with a [`service_fn`], like this:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":254959,"byte_end":255024,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255029,"byte_end":255032,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255037,"byte_end":255048,"line_start":478,"line_end":478,"column_start":5,"column_end":16}},{"value":"/ # use tower::{ServiceBuilder, service_fn};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255053,"byte_end":255099,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ # async fn handler_fn(_: ()) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255104,"byte_end":255165,"line_start":480,"line_end":480,"column_start":5,"column_end":66}},{"value":"/ # let _ = {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255170,"byte_end":255185,"line_start":481,"line_end":481,"column_start":5,"column_end":20}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255190,"byte_end":255215,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255220,"byte_end":255234,"line_start":483,"line_end":483,"column_start":5,"column_end":19}},{"value":"/     .service(service_fn(handler_fn))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255239,"byte_end":255279,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/ # };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255284,"byte_end":255292,"line_start":485,"line_end":485,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255297,"byte_end":255304,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255309,"byte_end":255312,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255317,"byte_end":255330,"line_start":488,"line_end":488,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255335,"byte_end":255338,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255343,"byte_end":255354,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255359,"byte_end":255387,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/ use tower::{ServiceBuilder, ServiceExt, BoxError, service_fn};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255392,"byte_end":255458,"line_start":492,"line_end":492,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255463,"byte_end":255466,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255471,"byte_end":255491,"line_start":494,"line_end":494,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), BoxError> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255496,"byte_end":255543,"line_start":495,"line_end":495,"column_start":5,"column_end":52}},{"value":"/ async fn handle(request: &'static str) -> Result<&'static str, BoxError> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255548,"byte_end":255626,"line_start":496,"line_end":496,"column_start":5,"column_end":83}},{"value":"/    Ok(request)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255631,"byte_end":255649,"line_start":497,"line_end":497,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255654,"byte_end":255659,"line_start":498,"line_end":498,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255664,"byte_end":255667,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let svc = ServiceBuilder::new()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255672,"byte_end":255707,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/     .buffer(1024)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255712,"byte_end":255733,"line_start":501,"line_end":501,"column_start":5,"column_end":26}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255738,"byte_end":255779,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/     .service_fn(handle);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255784,"byte_end":255812,"line_start":503,"line_end":503,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255817,"byte_end":255820,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let response = svc.oneshot(\"foo\").await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255825,"byte_end":255870,"line_start":505,"line_end":505,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255875,"byte_end":255878,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response, \"foo\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255883,"byte_end":255915,"line_start":507,"line_end":507,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255920,"byte_end":255932,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255937,"byte_end":255944,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255949,"byte_end":255956,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255961,"byte_end":255964,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":255969,"byte_end":255996,"line_start":512,"line_end":512,"column_start":5,"column_end":32}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":256001,"byte_end":256032,"line_start":513,"line_end":513,"column_start":5,"column_end":36}},{"value":"/ [`service_fn`]: crate::service_fn","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":256037,"byte_end":256074,"line_start":514,"line_end":514,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":256079,"byte_end":256103,"line_start":515,"line_end":515,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":2910},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layer","qualname":"::layer","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921}],"decl_id":null,"docs":" A collection of [`Layer`] based tower services","sig":null,"attributes":[{"value":"/ A collection of [`Layer`] based tower services","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256521,"byte_end":256571,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256572,"byte_end":256575,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256576,"byte_end":256603,"line_start":3,"line_end":3,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2921},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256818,"byte_end":256822,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"util","qualname":"::layer::util","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2926}],"decl_id":null,"docs":" Utilities for combining layers","sig":null,"attributes":[{"value":"/ Utilities for combining layers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256655,"byte_end":256689,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256690,"byte_end":256693,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Identity`]: crate::layer::util::Identity","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256694,"byte_end":256740,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256741,"byte_end":256768,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/ [`Stack`]: crate::layer::util::Stack","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/layer.rs","byte_start":256769,"byte_end":256809,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":2949},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8985,"byte_end":8991,"line_start":226,"line_end":226,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2951},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":9050,"byte_end":9058,"line_start":230,"line_end":230,"column_start":10,"column_end":18},"name":"BoxError","qualname":"::BoxError","value":"Box<dyn std::error::Error + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" Alias for a type-erased error type.\n","sig":null,"attributes":[{"value":"/ Alias for a type-erased error type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":9001,"byte_end":9040,"line_start":229,"line_end":229,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12973,"byte_end":12981,"line_start":11,"line_end":11,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":13142,"byte_end":13150,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16544,"byte_end":16560,"line_start":26,"line_end":26,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16747,"byte_end":16763,"line_start":35,"line_end":35,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16856,"byte_end":16872,"line_start":41,"line_end":41,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":17058,"byte_end":17074,"line_start":49,"line_end":49,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18453,"byte_end":18464,"line_start":43,"line_end":43,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18717,"byte_end":18728,"line_start":53,"line_end":53,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":19433,"byte_end":19443,"line_start":77,"line_end":77,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":21385,"byte_end":21392,"line_start":47,"line_end":47,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22152,"byte_end":22159,"line_start":81,"line_end":81,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":23194,"byte_end":23201,"line_start":117,"line_end":117,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":27030,"byte_end":27037,"line_start":223,"line_end":223,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":29921,"byte_end":29935,"line_start":291,"line_end":291,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":33072,"byte_end":33086,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":33627,"byte_end":33641,"line_start":81,"line_end":81,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37431,"byte_end":37438,"line_start":184,"line_end":184,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37632,"byte_end":37639,"line_start":196,"line_end":196,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":41852,"byte_end":41856,"line_start":313,"line_end":313,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42383,"byte_end":42387,"line_start":331,"line_end":331,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":43185,"byte_end":43189,"line_start":353,"line_end":353,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46265,"byte_end":46282,"line_start":434,"line_end":434,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46400,"byte_end":46417,"line_start":440,"line_end":440,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46584,"byte_end":46601,"line_start":447,"line_end":447,"column_start":59,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48956,"byte_end":48968,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49328,"byte_end":49340,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49503,"byte_end":49515,"line_start":42,"line_end":42,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49657,"byte_end":49663,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49755,"byte_end":49761,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49899,"byte_end":49905,"line_start":62,"line_end":62,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":50066,"byte_end":50072,"line_start":68,"line_end":68,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50721,"byte_end":50735,"line_start":30,"line_end":30,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":51056,"byte_end":51070,"line_start":44,"line_end":44,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52437,"byte_end":52448,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53634,"byte_end":53645,"line_start":44,"line_end":44,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53976,"byte_end":53987,"line_start":58,"line_end":58,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":54192,"byte_end":54203,"line_start":66,"line_end":66,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":54358,"byte_end":54369,"line_start":75,"line_end":75,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56424,"byte_end":56430,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58990,"byte_end":58996,"line_start":108,"line_end":108,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":61199,"byte_end":61205,"line_start":169,"line_end":169,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62356,"byte_end":62362,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62823,"byte_end":62829,"line_start":45,"line_end":45,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":67195,"byte_end":67201,"line_start":157,"line_end":157,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":70235,"byte_end":70241,"line_start":229,"line_end":229,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4221}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":70419,"byte_end":70425,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":70705,"byte_end":70711,"line_start":250,"line_end":250,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/error.rs","byte_start":74142,"byte_end":74147,"line_start":6,"line_end":6,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/error.rs","byte_start":74256,"byte_end":74261,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74834,"byte_end":74845,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":75131,"byte_end":75142,"line_start":39,"line_end":39,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73405,"byte_end":73406,"line_start":76,"line_end":76,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73515,"byte_end":73516,"line_start":83,"line_end":83,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76669,"byte_end":76683,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76851,"byte_end":76865,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77330,"byte_end":77351,"line_start":11,"line_end":11,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77505,"byte_end":77526,"line_start":18,"line_end":18,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78385,"byte_end":78401,"line_start":26,"line_end":26,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":79044,"byte_end":79060,"line_start":52,"line_end":52,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":80246,"byte_end":80262,"line_start":91,"line_end":91,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":80773,"byte_end":80789,"line_start":106,"line_end":106,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81392,"byte_end":81406,"line_start":12,"line_end":12,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81598,"byte_end":81612,"line_start":20,"line_end":20,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81907,"byte_end":81911,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82864,"byte_end":82873,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83852,"byte_end":83861,"line_start":64,"line_end":64,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":85839,"byte_end":85848,"line_start":123,"line_end":123,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91979,"byte_end":92000,"line_start":59,"line_end":59,"column_start":15,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":92312,"byte_end":92333,"line_start":70,"line_end":70,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":92824,"byte_end":92842,"line_start":87,"line_end":87,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93585,"byte_end":93593,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93796,"byte_end":93804,"line_start":34,"line_end":34,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93929,"byte_end":93937,"line_start":42,"line_end":42,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":94508,"byte_end":94516,"line_start":63,"line_end":63,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":98053,"byte_end":98061,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":98678,"byte_end":98686,"line_start":110,"line_end":110,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":99252,"byte_end":99260,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":99862,"byte_end":99870,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100121,"byte_end":100137,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100964,"byte_end":100980,"line_start":188,"line_end":188,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":101827,"byte_end":101838,"line_start":217,"line_end":217,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":104144,"byte_end":104150,"line_start":286,"line_end":286,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109391,"byte_end":109406,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109787,"byte_end":109802,"line_start":66,"line_end":66,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":110025,"byte_end":110040,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":110671,"byte_end":110694,"line_start":100,"line_end":100,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":111134,"byte_end":111157,"line_start":116,"line_end":116,"column_start":23,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":111844,"byte_end":111852,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115283,"byte_end":115284,"line_start":29,"line_end":29,"column_start":39,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115357,"byte_end":115358,"line_start":31,"line_end":31,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124771,"byte_end":124777,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124928,"byte_end":124934,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119966,"byte_end":119967,"line_start":132,"line_end":132,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120103,"byte_end":120104,"line_start":139,"line_end":139,"column_start":62,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120851,"byte_end":120862,"line_start":169,"line_end":169,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121064,"byte_end":121075,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121334,"byte_end":121345,"line_start":192,"line_end":192,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":122068,"byte_end":122077,"line_start":222,"line_end":222,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":122338,"byte_end":122347,"line_start":233,"line_end":233,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":130096,"byte_end":130106,"line_start":76,"line_end":76,"column_start":38,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":130693,"byte_end":130703,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":130978,"byte_end":130988,"line_start":115,"line_end":115,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133510,"byte_end":133520,"line_start":191,"line_end":191,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":141560,"byte_end":141567,"line_start":386,"line_end":386,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":141610,"byte_end":141617,"line_start":388,"line_end":388,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":143043,"byte_end":143049,"line_start":9,"line_end":9,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":143273,"byte_end":143279,"line_start":18,"line_end":18,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":143432,"byte_end":143438,"line_start":24,"line_end":24,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145389,"byte_end":145396,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145515,"byte_end":145522,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145654,"byte_end":145661,"line_start":22,"line_end":22,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":146049,"byte_end":146063,"line_start":24,"line_end":24,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":146205,"byte_end":146219,"line_start":30,"line_end":30,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147073,"byte_end":147085,"line_start":11,"line_end":11,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147236,"byte_end":147248,"line_start":18,"line_end":18,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144062,"byte_end":144069,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144590,"byte_end":144597,"line_start":48,"line_end":48,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180468,"byte_end":180475,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181045,"byte_end":181058,"line_start":39,"line_end":39,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181294,"byte_end":181307,"line_start":47,"line_end":47,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181795,"byte_end":181802,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182257,"byte_end":182264,"line_start":83,"line_end":83,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182817,"byte_end":182829,"line_start":103,"line_end":103,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182972,"byte_end":182984,"line_start":110,"line_end":110,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186457,"byte_end":186465,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186998,"byte_end":187006,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":187182,"byte_end":187190,"line_start":85,"line_end":85,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":187347,"byte_end":187355,"line_start":93,"line_end":93,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188351,"byte_end":188361,"line_start":33,"line_end":33,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":189000,"byte_end":189010,"line_start":57,"line_end":57,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":189345,"byte_end":189355,"line_start":71,"line_end":71,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":189586,"byte_end":189591,"line_start":82,"line_end":82,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190681,"byte_end":190697,"line_start":27,"line_end":27,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191319,"byte_end":191335,"line_start":50,"line_end":50,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191682,"byte_end":191698,"line_start":64,"line_end":64,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191935,"byte_end":191946,"line_start":75,"line_end":75,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/common.rs","byte_start":193396,"byte_end":193403,"line_start":29,"line_end":29,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/common.rs","byte_start":194366,"byte_end":194373,"line_start":65,"line_end":65,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199496,"byte_end":199503,"line_start":97,"line_end":97,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":201174,"byte_end":201181,"line_start":153,"line_end":153,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":201516,"byte_end":201530,"line_start":166,"line_end":166,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202747,"byte_end":202763,"line_start":34,"line_end":34,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203923,"byte_end":203939,"line_start":74,"line_end":74,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":204274,"byte_end":204290,"line_start":87,"line_end":87,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205399,"byte_end":205405,"line_start":29,"line_end":29,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":206296,"byte_end":206302,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":206849,"byte_end":206855,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209244,"byte_end":209257,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":211110,"byte_end":211123,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":211450,"byte_end":211455,"line_start":128,"line_end":128,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":211893,"byte_end":211906,"line_start":143,"line_end":143,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214362,"byte_end":214368,"line_start":16,"line_end":16,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214982,"byte_end":214988,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215441,"byte_end":215447,"line_start":59,"line_end":59,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215959,"byte_end":215970,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":216105,"byte_end":216116,"line_start":86,"line_end":86,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216626,"byte_end":216636,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216926,"byte_end":216936,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217400,"byte_end":217410,"line_start":43,"line_end":43,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217984,"byte_end":217999,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":218142,"byte_end":218157,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":218730,"byte_end":218741,"line_start":16,"line_end":16,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219382,"byte_end":219393,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219877,"byte_end":219888,"line_start":59,"line_end":59,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":220391,"byte_end":220407,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":220558,"byte_end":220574,"line_start":86,"line_end":86,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221136,"byte_end":221145,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221770,"byte_end":221779,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222260,"byte_end":222269,"line_start":59,"line_end":59,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222842,"byte_end":222856,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":223003,"byte_end":223017,"line_start":87,"line_end":87,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223544,"byte_end":223553,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224358,"byte_end":224367,"line_start":49,"line_end":49,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224833,"byte_end":224842,"line_start":69,"line_end":69,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225282,"byte_end":225296,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225433,"byte_end":225447,"line_start":96,"line_end":96,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225637,"byte_end":225651,"line_start":107,"line_end":107,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":226508,"byte_end":226513,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":227092,"byte_end":227099,"line_start":47,"line_end":47,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":227320,"byte_end":227327,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":229973,"byte_end":229977,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":230062,"byte_end":230066,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":230189,"byte_end":230193,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230544,"byte_end":230558,"line_start":20,"line_end":20,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230694,"byte_end":230708,"line_start":26,"line_end":26,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228763,"byte_end":228771,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":229029,"byte_end":229037,"line_start":35,"line_end":35,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231734,"byte_end":231746,"line_start":22,"line_end":22,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231780,"byte_end":231792,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232027,"byte_end":232039,"line_start":37,"line_end":37,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232465,"byte_end":232477,"line_start":54,"line_end":54,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233471,"byte_end":233476,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233518,"byte_end":233523,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233727,"byte_end":233732,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233998,"byte_end":234003,"line_start":104,"line_end":104,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235524,"byte_end":235533,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235789,"byte_end":235798,"line_start":66,"line_end":66,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236488,"byte_end":236492,"line_start":19,"line_end":19,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236927,"byte_end":236931,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237559,"byte_end":237563,"line_start":62,"line_end":62,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":238163,"byte_end":238172,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":238309,"byte_end":238318,"line_start":91,"line_end":91,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179173,"byte_end":179174,"line_start":956,"line_end":956,"column_start":50,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242067,"byte_end":242081,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242155,"byte_end":242169,"line_start":115,"line_end":115,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242338,"byte_end":242352,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":256361,"byte_end":256375,"line_start":525,"line_end":525,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7063,"byte_end":7070,"line_start":157,"line_end":157,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12682,"byte_end":12687,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12697,"byte_end":12700,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/mod.rs","byte_start":12710,"byte_end":12714,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":245}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7157,"byte_end":7163,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48369,"byte_end":48374,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":361}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/mod.rs","byte_start":48384,"byte_end":48390,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":388}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7254,"byte_end":7262,"line_start":163,"line_end":163,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":620}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7530,"byte_end":7535,"line_start":172,"line_end":172,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":716}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75792,"byte_end":75803,"line_start":3,"line_end":3,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":717}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/mod.rs","byte_start":76015,"byte_end":76021,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":718}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/mod.rs","byte_start":75813,"byte_end":75817,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":823}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7618,"byte_end":7622,"line_start":175,"line_end":175,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":926}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88838,"byte_end":88848,"line_start":62,"line_end":62,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":927}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88872,"byte_end":88881,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1029}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/mod.rs","byte_start":88891,"byte_end":88907,"line_start":65,"line_end":65,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":1132}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7808,"byte_end":7812,"line_start":182,"line_end":182,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1238}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":7909,"byte_end":7920,"line_start":185,"line_end":185,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1421}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/mod.rs","byte_start":126675,"byte_end":126680,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1422}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/mod.rs","byte_start":126690,"byte_end":126695,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1525}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8399,"byte_end":8406,"line_start":200,"line_end":200,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1543}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143711,"byte_end":143716,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1544}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":143726,"byte_end":143732,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1557}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8489,"byte_end":8493,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1639}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228327,"byte_end":228332,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2451}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228377,"byte_end":228383,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2464}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8504,"byte_end":8511,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2859}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/lib.rs","byte_start":8521,"byte_end":8526,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2910}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":12973,"byte_end":12981,"line_start":11,"line_end":11,"column_start":23,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2952},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/error.rs","byte_start":13142,"byte_end":13150,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2952},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16544,"byte_end":16560,"line_start":26,"line_end":26,"column_start":14,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16747,"byte_end":16763,"line_start":35,"line_end":35,"column_start":26,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":16856,"byte_end":16872,"line_start":41,"line_end":41,"column_start":27,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2957},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/layer.rs","byte_start":17058,"byte_end":17074,"line_start":49,"line_end":49,"column_start":29,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18453,"byte_end":18464,"line_start":43,"line_end":43,"column_start":14,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":18717,"byte_end":18728,"line_start":53,"line_end":53,"column_start":42,"column_end":53},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2965},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/make.rs","byte_start":19433,"byte_end":19443,"line_start":77,"line_end":77,"column_start":31,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2978},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":21385,"byte_end":21392,"line_start":47,"line_end":47,"column_start":39,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":22152,"byte_end":22159,"line_start":81,"line_end":81,"column_start":14,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":23194,"byte_end":23201,"line_start":117,"line_end":117,"column_start":14,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":27030,"byte_end":27037,"line_start":223,"line_end":223,"column_start":31,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":182},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/p2c/service.rs","byte_start":29921,"byte_end":29935,"line_start":291,"line_end":291,"column_start":42,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3034},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":33072,"byte_end":33086,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":33627,"byte_end":33641,"line_start":81,"line_end":81,"column_start":38,"column_end":52},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3333},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37431,"byte_end":37438,"line_start":184,"line_end":184,"column_start":18,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3570},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":37632,"byte_end":37639,"line_start":196,"line_end":196,"column_start":6,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":41852,"byte_end":41856,"line_start":313,"line_end":313,"column_start":42,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":42383,"byte_end":42387,"line_start":331,"line_end":331,"column_start":27,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":43185,"byte_end":43189,"line_start":353,"line_end":353,"column_start":40,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":316},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46265,"byte_end":46282,"line_start":434,"line_end":434,"column_start":20,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3659},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46400,"byte_end":46417,"line_start":440,"line_end":440,"column_start":26,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3659},"to":{"krate":0,"index":1235}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/balance/pool/mod.rs","byte_start":46584,"byte_end":46601,"line_start":447,"line_end":447,"column_start":59,"column_end":76},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3659},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":48956,"byte_end":48968,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49328,"byte_end":49340,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3667},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49503,"byte_end":49515,"line_start":42,"line_end":42,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3667},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49657,"byte_end":49663,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49755,"byte_end":49761,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":49899,"byte_end":49905,"line_start":62,"line_end":62,"column_start":23,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/error.rs","byte_start":50066,"byte_end":50072,"line_start":68,"line_end":68,"column_start":28,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":372},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":50721,"byte_end":50735,"line_start":30,"line_end":30,"column_start":9,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/future.rs","byte_start":51056,"byte_end":51070,"line_start":44,"line_end":44,"column_start":26,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":52437,"byte_end":52448,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53634,"byte_end":53645,"line_start":44,"line_end":44,"column_start":31,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":443},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":53976,"byte_end":53987,"line_start":58,"line_end":58,"column_start":30,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":54192,"byte_end":54203,"line_start":66,"line_end":66,"column_start":25,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/layer.rs","byte_start":54358,"byte_end":54369,"line_start":75,"line_end":75,"column_start":24,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":56424,"byte_end":56430,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":58990,"byte_end":58996,"line_start":108,"line_end":108,"column_start":39,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3775},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/service.rs","byte_start":61199,"byte_end":61205,"line_start":169,"line_end":169,"column_start":28,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62356,"byte_end":62362,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3812},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":62823,"byte_end":62829,"line_start":45,"line_end":45,"column_start":18,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":67195,"byte_end":67201,"line_start":157,"line_end":157,"column_start":29,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3812},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":70235,"byte_end":70241,"line_start":229,"line_end":229,"column_start":33,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3812},"to":{"krate":20,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":70419,"byte_end":70425,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/buffer/worker.rs","byte_start":70705,"byte_end":70711,"line_start":250,"line_end":250,"column_start":16,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3876},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/error.rs","byte_start":74142,"byte_end":74147,"line_start":6,"line_end":6,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4226},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/error.rs","byte_start":74256,"byte_end":74261,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4226},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":74834,"byte_end":74845,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/list.rs","byte_start":75131,"byte_end":75142,"line_start":39,"line_end":39,"column_start":23,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4229},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":72760,"byte_end":72766,"line_start":55,"line_end":55,"column_start":21,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":2949},"to":{"krate":0,"index":697}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73405,"byte_end":73406,"line_start":76,"line_end":76,"column_start":53,"column_end":54},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":706},"to":{"krate":0,"index":2949}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/discover/mod.rs","byte_start":73515,"byte_end":73516,"line_start":83,"line_end":83,"column_start":39,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":711},"to":{"krate":0,"index":697}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76669,"byte_end":76683,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/future.rs","byte_start":76851,"byte_end":76865,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4284},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77330,"byte_end":77351,"line_start":11,"line_end":11,"column_start":6,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/layer.rs","byte_start":77505,"byte_end":77526,"line_start":18,"line_end":18,"column_start":22,"column_end":43},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4329},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":78385,"byte_end":78401,"line_start":26,"line_end":26,"column_start":9,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":79044,"byte_end":79060,"line_start":52,"line_end":52,"column_start":39,"column_end":55},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4335},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":80246,"byte_end":80262,"line_start":91,"line_end":91,"column_start":26,"column_end":42},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/concurrency/service.rs","byte_start":80773,"byte_end":80789,"line_start":106,"line_end":106,"column_start":31,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4335},"to":{"krate":0,"index":1235}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81392,"byte_end":81406,"line_start":12,"line_end":12,"column_start":6,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/layer.rs","byte_start":81598,"byte_end":81612,"line_start":20,"line_end":20,"column_start":22,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4343},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/rate.rs","byte_start":81907,"byte_end":81911,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":82864,"byte_end":82873,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":83852,"byte_end":83861,"line_start":64,"line_end":64,"column_start":39,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4357},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/limit/rate/service.rs","byte_start":85839,"byte_end":85848,"line_start":123,"line_end":123,"column_start":31,"column_end":40},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4357},"to":{"krate":0,"index":1235}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91292,"byte_end":91297,"line_start":33,"line_end":33,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2447},"to":{"krate":0,"index":948}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":91979,"byte_end":92000,"line_start":59,"line_end":59,"column_start":15,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":92312,"byte_end":92333,"line_start":70,"line_end":70,"column_start":32,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4409},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/completion.rs","byte_start":92824,"byte_end":92842,"line_start":87,"line_end":87,"column_start":38,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4400},"to":{"krate":0,"index":948}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93585,"byte_end":93593,"line_start":27,"line_end":27,"column_start":18,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93796,"byte_end":93804,"line_start":34,"line_end":34,"column_start":40,"column_end":48},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4479},"to":{"krate":0,"index":1235}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":93929,"byte_end":93937,"line_start":42,"line_end":42,"column_start":42,"column_end":50},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4479},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/constant.rs","byte_start":94508,"byte_end":94516,"line_start":63,"line_end":63,"column_start":47,"column_end":55},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4479},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":98053,"byte_end":98061,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":98678,"byte_end":98686,"line_start":110,"line_end":110,"column_start":42,"column_end":50},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4534},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":99252,"byte_end":99260,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4534},"to":{"krate":0,"index":1235}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":99862,"byte_end":99870,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100121,"byte_end":100137,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":100964,"byte_end":100980,"line_start":188,"line_end":188,"column_start":23,"column_end":39},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4545},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":101827,"byte_end":101838,"line_start":217,"line_end":217,"column_start":6,"column_end":17},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/peak_ewma.rs","byte_start":104144,"byte_end":104150,"line_start":286,"line_end":286,"column_start":15,"column_end":21},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4621},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109391,"byte_end":109406,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":109787,"byte_end":109802,"line_start":66,"line_end":66,"column_start":21,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4710},"to":{"krate":0,"index":1235}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":110025,"byte_end":110040,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4710},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":110671,"byte_end":110694,"line_start":100,"line_end":100,"column_start":12,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":111134,"byte_end":111157,"line_start":116,"line_end":116,"column_start":23,"column_end":46},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4729},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/load/pending_requests.rs","byte_start":111844,"byte_end":111852,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":114643,"byte_end":114649,"line_start":12,"line_end":12,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2949},"to":{"krate":0,"index":1263}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115283,"byte_end":115284,"line_start":29,"line_end":29,"column_start":39,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":2949}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_connection.rs","byte_start":115357,"byte_end":115358,"line_start":31,"line_end":31,"column_start":44,"column_end":45},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":1263}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124771,"byte_end":124777,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service/shared.rs","byte_start":124928,"byte_end":124934,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4811},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":116539,"byte_end":116545,"line_start":21,"line_end":21,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":2949},"to":{"krate":0,"index":1329}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":119966,"byte_end":119967,"line_start":132,"line_end":132,"column_start":59,"column_end":60},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":2949}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120103,"byte_end":120104,"line_start":139,"line_end":139,"column_start":62,"column_end":63},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1347},"to":{"krate":0,"index":1329}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":120851,"byte_end":120862,"line_start":169,"line_end":169,"column_start":28,"column_end":39},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121064,"byte_end":121075,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":121334,"byte_end":121345,"line_start":192,"line_end":192,"column_start":49,"column_end":60},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1358},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":122068,"byte_end":122077,"line_start":222,"line_end":222,"column_start":33,"column_end":42},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1381},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/make/make_service.rs","byte_start":122338,"byte_end":122347,"line_start":233,"line_end":233,"column_start":49,"column_end":58},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1381},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":130096,"byte_end":130106,"line_start":76,"line_end":76,"column_start":38,"column_end":48},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4871},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":130693,"byte_end":130703,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4871},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":130978,"byte_end":130988,"line_start":115,"line_end":115,"column_start":17,"column_end":27},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":133510,"byte_end":133520,"line_start":191,"line_end":191,"column_start":17,"column_end":27},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":141560,"byte_end":141567,"line_start":386,"line_end":386,"column_start":27,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/cache.rs","byte_start":141610,"byte_end":141617,"line_start":388,"line_end":388,"column_start":28,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":143043,"byte_end":143049,"line_start":9,"line_end":9,"column_start":46,"column_end":52},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":143273,"byte_end":143279,"line_start":18,"line_end":18,"column_start":31,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/ready_cache/error.rs","byte_start":143432,"byte_end":143438,"line_start":24,"line_end":24,"column_start":48,"column_end":54},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1526},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145389,"byte_end":145396,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145515,"byte_end":145522,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5014},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/error.rs","byte_start":145654,"byte_end":145661,"line_start":22,"line_end":22,"column_start":23,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5014},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":146049,"byte_end":146063,"line_start":24,"line_end":24,"column_start":9,"column_end":23},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/future.rs","byte_start":146205,"byte_end":146219,"line_start":30,"line_end":30,"column_start":26,"column_end":40},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5021},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147073,"byte_end":147085,"line_start":11,"line_end":11,"column_start":6,"column_end":18},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/layer.rs","byte_start":147236,"byte_end":147248,"line_start":18,"line_end":18,"column_start":22,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5067},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144062,"byte_end":144069,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/timeout/mod.rs","byte_start":144590,"byte_end":144597,"line_start":48,"line_end":48,"column_start":39,"column_end":46},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5073},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":180468,"byte_end":180475,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181045,"byte_end":181058,"line_start":39,"line_end":39,"column_start":48,"column_end":61},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5092},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181294,"byte_end":181307,"line_start":47,"line_end":47,"column_start":39,"column_end":52},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5092},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":181795,"byte_end":181802,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182257,"byte_end":182264,"line_start":83,"line_end":83,"column_start":47,"column_end":54},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5083},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182817,"byte_end":182829,"line_start":103,"line_end":103,"column_start":9,"column_end":21},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/and_then.rs","byte_start":182972,"byte_end":182984,"line_start":110,"line_end":110,"column_start":25,"column_end":37},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5154},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186457,"byte_end":186465,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":186998,"byte_end":187006,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1733},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":187182,"byte_end":187190,"line_start":85,"line_end":85,"column_start":29,"column_end":37},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/layer.rs","byte_start":187347,"byte_end":187355,"line_start":93,"line_end":93,"column_start":34,"column_end":42},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":188351,"byte_end":188361,"line_start":33,"line_end":33,"column_start":15,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":189000,"byte_end":189010,"line_start":57,"line_end":57,"column_start":30,"column_end":40},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1794},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":189345,"byte_end":189355,"line_start":71,"line_end":71,"column_start":30,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1794},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/sync.rs","byte_start":189586,"byte_end":189591,"line_start":82,"line_end":82,"column_start":39,"column_end":44},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5163},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":190681,"byte_end":190697,"line_start":27,"line_end":27,"column_start":15,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191319,"byte_end":191335,"line_start":50,"line_end":50,"column_start":30,"column_end":46},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1860},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191682,"byte_end":191698,"line_start":64,"line_end":64,"column_start":30,"column_end":46},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1860},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/boxed/unsync.rs","byte_start":191935,"byte_end":191946,"line_start":75,"line_end":75,"column_start":39,"column_end":50},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5169},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/common.rs","byte_start":193396,"byte_end":193403,"line_start":29,"line_end":29,"column_start":17,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/common.rs","byte_start":194366,"byte_end":194373,"line_start":65,"line_end":65,"column_start":28,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5175},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":199496,"byte_end":199503,"line_start":97,"line_end":97,"column_start":14,"column_end":21},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":201174,"byte_end":201181,"line_start":153,"line_end":153,"column_start":25,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5248},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/ordered.rs","byte_start":201516,"byte_end":201530,"line_start":166,"line_end":166,"column_start":38,"column_end":52},"kind":{"Impl":{"id":218}},"from":{"krate":23,"index":14562},"to":{"krate":0,"index":1937}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":202747,"byte_end":202763,"line_start":34,"line_end":34,"column_start":14,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":203923,"byte_end":203939,"line_start":74,"line_end":74,"column_start":25,"column_end":41},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5301},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/call_all/unordered.rs","byte_start":204274,"byte_end":204290,"line_start":87,"line_end":87,"column_start":38,"column_end":54},"kind":{"Impl":{"id":226}},"from":{"krate":23,"index":14893},"to":{"krate":0,"index":1937}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":205399,"byte_end":205405,"line_start":29,"line_end":29,"column_start":42,"column_end":48},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5354},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":206296,"byte_end":206302,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5354},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/either.rs","byte_start":206849,"byte_end":206855,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5354},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":209244,"byte_end":209257,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":211110,"byte_end":211123,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5412},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":211450,"byte_end":211455,"line_start":128,"line_end":128,"column_start":27,"column_end":32},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5420},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/future_service.rs","byte_start":211893,"byte_end":211906,"line_start":143,"line_end":143,"column_start":33,"column_end":46},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5412},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214362,"byte_end":214368,"line_start":16,"line_end":16,"column_start":27,"column_end":33},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5433},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":214982,"byte_end":214988,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215441,"byte_end":215447,"line_start":59,"line_end":59,"column_start":49,"column_end":55},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5433},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":215959,"byte_end":215970,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_err.rs","byte_start":216105,"byte_end":216116,"line_start":86,"line_end":86,"column_start":25,"column_end":36},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5442},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216626,"byte_end":216636,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5512},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":216926,"byte_end":216936,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217400,"byte_end":217410,"line_start":43,"line_end":43,"column_start":36,"column_end":46},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5512},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":217984,"byte_end":217999,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_request.rs","byte_start":218142,"byte_end":218157,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5521},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":218730,"byte_end":218741,"line_start":16,"line_end":16,"column_start":27,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5530},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219382,"byte_end":219393,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":219877,"byte_end":219888,"line_start":59,"line_end":59,"column_start":52,"column_end":63},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5530},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":220391,"byte_end":220407,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_response.rs","byte_start":220558,"byte_end":220574,"line_start":86,"line_end":86,"column_start":25,"column_end":41},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5539},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221136,"byte_end":221145,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5609},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":221770,"byte_end":221779,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222260,"byte_end":222269,"line_start":59,"line_end":59,"column_start":59,"column_end":68},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5609},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":222842,"byte_end":222856,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_result.rs","byte_start":223003,"byte_end":223017,"line_start":87,"line_end":87,"column_start":25,"column_end":39},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5618},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":223544,"byte_end":223553,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224358,"byte_end":224367,"line_start":49,"line_end":49,"column_start":41,"column_end":50},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5688},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":224833,"byte_end":224842,"line_start":69,"line_end":69,"column_start":27,"column_end":36},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5688},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225282,"byte_end":225296,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225433,"byte_end":225447,"line_start":96,"line_end":96,"column_start":25,"column_end":39},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5697},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/map_future.rs","byte_start":225637,"byte_end":225651,"line_start":107,"line_end":107,"column_start":24,"column_end":38},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5697},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":226508,"byte_end":226513,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5756},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":227092,"byte_end":227099,"line_start":47,"line_end":47,"column_start":14,"column_end":21},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/oneshot.rs","byte_start":227320,"byte_end":227327,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5703},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":229973,"byte_end":229977,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":230062,"byte_end":230066,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/error.rs","byte_start":230189,"byte_end":230193,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5811},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230544,"byte_end":230558,"line_start":20,"line_end":20,"column_start":9,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/future.rs","byte_start":230694,"byte_end":230708,"line_start":26,"line_end":26,"column_start":26,"column_end":40},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5816},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":228763,"byte_end":228771,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/optional/mod.rs","byte_start":229029,"byte_end":229037,"line_start":35,"line_end":35,"column_start":39,"column_end":47},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5858},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231734,"byte_end":231746,"line_start":22,"line_end":22,"column_start":28,"column_end":40},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":231780,"byte_end":231792,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232027,"byte_end":232039,"line_start":37,"line_end":37,"column_start":29,"column_end":41},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":232465,"byte_end":232477,"line_start":54,"line_end":54,"column_start":33,"column_end":45},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233471,"byte_end":233476,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2572},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233518,"byte_end":233523,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233727,"byte_end":233732,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2572},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/ready.rs","byte_start":233998,"byte_end":234003,"line_start":104,"line_end":104,"column_start":37,"column_end":42},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2572},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235524,"byte_end":235533,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5864},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/service_fn.rs","byte_start":235789,"byte_end":235798,"line_start":66,"line_end":66,"column_start":48,"column_end":57},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5864},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236488,"byte_end":236492,"line_start":19,"line_end":19,"column_start":27,"column_end":31},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5872},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":236927,"byte_end":236931,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":237559,"byte_end":237563,"line_start":62,"line_end":62,"column_start":64,"column_end":68},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5872},"to":{"krate":22,"index":13}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":238163,"byte_end":238172,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/then.rs","byte_start":238309,"byte_end":238318,"line_start":91,"line_end":91,"column_start":25,"column_end":34},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5881},"to":{"krate":18,"index":71}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":148924,"byte_end":148931,"line_start":63,"line_end":63,"column_start":47,"column_end":54},"kind":"SuperTrait","from":{"krate":22,"index":13},"to":{"krate":0,"index":2821}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/util/mod.rs","byte_start":179173,"byte_end":179174,"line_start":956,"line_end":956,"column_start":50,"column_end":51},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2855},"to":{"krate":0,"index":2821}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242067,"byte_end":242081,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5963},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242155,"byte_end":242169,"line_start":115,"line_end":115,"column_start":6,"column_end":20},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":242338,"byte_end":242352,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.6/src/builder/mod.rs","byte_start":256361,"byte_end":256375,"line_start":525,"line_end":525,"column_start":36,"column_end":50},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5963},"to":{"krate":2,"index":8701}}]}