{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","local_waker","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f6e756f7c9edd300","-C","extra-filename=-f6e756f7c9edd300","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/liblocal_waker-f6e756f7c9edd300.rmeta"},"prelude":{"crate_id":{"name":"local_waker","disambiguator":[1009068109266653168,9357443213729482506]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":0,"byte_end":2355,"line_start":1,"line_end":71,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":0,"byte_end":2355,"line_start":1,"line_end":71,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":17},{"krate":0,"index":22}],"decl_id":null,"docs":" A synchronization primitive for thread-local task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for thread-local task wakeup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See docs for [`LocalWaker`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":66,"byte_end":98,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":100,"byte_end":110,"line_start":5,"line_end":5,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1148,"byte_end":1158,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"LocalWaker","qualname":"::LocalWaker","value":"LocalWaker {  }","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task wakeup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":176,"byte_end":224,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":225,"byte_end":228,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Sometimes the task interested in a given event will change over time. A `LocalWaker` can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":229,"byte_end":321,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ coordinate concurrent notifications with the consumer, potentially \"updating\" the underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":322,"byte_end":418,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ task to wake up. This is useful in scenarios where a computation completes in another task and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":419,"byte_end":517,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ wants to notify the consumer, but the consumer is in the process of being migrated to a new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":518,"byte_end":613,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ logical task.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":614,"byte_end":631,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":632,"byte_end":635,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Consumers should call [`register`] before checking the result of a computation and producers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":636,"byte_end":732,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ should call [`wake`] after producing the computation (this differs from the usual `thread::park`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":733,"byte_end":833,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ pattern). It is also permitted for [`wake`] to be called _before_ [`register`]. This results in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":834,"byte_end":933,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ a no-op.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":934,"byte_end":946,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":947,"byte_end":950,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A single `LocalWaker` may be reused for any number of calls to [`register`] or [`wake`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":951,"byte_end":1043,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1044,"byte_end":1047,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`register`]: LocalWaker::register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1048,"byte_end":1086,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ [`wake`]: LocalWaker::wake","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1087,"byte_end":1117,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1357,"byte_end":1360,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalWaker>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `LocalWaker`.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty `LocalWaker`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1307,"byte_end":1345,"line_start":34,"line_end":34,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1561,"byte_end":1569,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"register","qualname":"<LocalWaker>::register","value":"pub fn register(&Self, &Waker) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[{"value":"/ Registers the waker to be notified on calls to `wake`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1414,"byte_end":1472,"line_start":39,"line_end":39,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1477,"byte_end":1480,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if waker was registered before.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1485,"byte_end":1535,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1540,"byte_end":1549,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1871,"byte_end":1875,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"wake","qualname":"<LocalWaker>::wake","value":"pub fn wake(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[{"value":"/ Calls `wake` on the last `Waker` passed to `register`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1708,"byte_end":1766,"line_start":48,"line_end":48,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1779,"byte_end":1845,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1850,"byte_end":1859,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":2154,"byte_end":2158,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"take","qualname":"<LocalWaker>::take","value":"pub fn take(&Self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[{"value":"/ Returns the last `Waker` passed to `register`, so that the user can wake it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1975,"byte_end":2055,"line_start":58,"line_end":58,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":2060,"byte_end":2063,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If a waker has not been registered, this returns `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":2068,"byte_end":2128,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":2133,"byte_end":2142,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1290,"byte_end":1300,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":2240,"byte_end":2250,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":1290,"byte_end":1300,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.1/src/lib.rs","byte_start":2240,"byte_end":2250,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":8701}}]}