{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","subtle_encoding","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"base64\"","--cfg","feature=\"default\"","--cfg","feature=\"hex\"","--cfg","feature=\"std\"","--cfg","feature=\"zeroize\"","-C","metadata=f2509d95e776c650","-C","extra-filename=-f2509d95e776c650","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","zeroize=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libzeroize-9efa0d1fc54d6e36.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsubtle_encoding-f2509d95e776c650.rmeta"},"prelude":{"crate_id":{"name":"subtle_encoding","disambiguator":[8170847375218655467,6335703780560360690]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","num":18,"id":{"name":"zeroize","disambiguator":[744669072465224746,17473627246014046881]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","num":19,"id":{"name":"zeroize_derive","disambiguator":[18017864088066273931,9406744853062868551]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":0,"byte_end":1244,"line_start":1,"line_end":45,"column_start":1,"column_end":47}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1077,"byte_end":1083,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"alias_span":null,"name":"Base64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1110,"byte_end":1118,"line_start":41,"line_end":41,"column_start":26,"column_end":34},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1142,"byte_end":1147,"line_start":42,"line_end":42,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1193,"byte_end":1196,"line_start":44,"line_end":44,"column_start":21,"column_end":24},"alias_span":null,"name":"Hex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1224,"byte_end":1232,"line_start":45,"line_end":45,"column_start":27,"column_end":35},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1234,"byte_end":1242,"line_start":45,"line_end":45,"column_start":37,"column_end":45},"alias_span":null,"name":"IDENTITY","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":0,"byte_end":1244,"line_start":1,"line_end":45,"column_start":1,"column_end":47},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":25},{"krate":0,"index":58},{"krate":0,"index":117},{"krate":0,"index":151},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":185}],"decl_id":null,"docs":" Encoders and decoders for common data encodings (base64, hex) which avoid\n branching or performing table lookups based on their inputs\n (a.k.a. \"constant time-ish\").","sig":null,"attributes":[{"value":"/ Encoders and decoders for common data encodings (base64, hex) which avoid","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ branching or performing table lookups based on their inputs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":78,"byte_end":141,"line_start":2,"line_end":2,"column_start":1,"column_end":64}},{"value":"/ (a.k.a. \"constant time-ish\").","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":142,"byte_end":175,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":176,"byte_end":179,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Supported Encodings","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":180,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":207,"byte_end":210,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - [hex]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":211,"byte_end":222,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ - [base64]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":223,"byte_end":237,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ - [bech32] (WARNING: preview! Not constant time yet)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":238,"byte_end":294,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":295,"byte_end":298,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [hex]: https://docs.rs/subtle-encoding/latest/subtle_encoding/hex/index.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":299,"byte_end":379,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [base64]: https://docs.rs/subtle-encoding/latest/subtle_encoding/base64/index.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":380,"byte_end":466,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ [bech32]: https://docs.rs/subtle-encoding/latest/subtle_encoding/bech32/index.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":467,"byte_end":553,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":555,"byte_end":565,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":631,"byte_end":654,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":655,"byte_end":718,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1550,"byte_end":1565,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"ChecksumInvalid","qualname":"::error::Error::ChecksumInvalid","value":"Error::ChecksumInvalid","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Checksum fdoes not match expected value\n","sig":null,"attributes":[{"value":"/ Checksum fdoes not match expected value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1502,"byte_end":1545,"line_start":12,"line_end":12,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1610,"byte_end":1625,"line_start":16,"line_end":16,"column_start":5,"column_end":20},"name":"EncodingInvalid","qualname":"::error::Error::EncodingInvalid","value":"Error::EncodingInvalid","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Data is not encoded correctly\n","sig":null,"attributes":[{"value":"/ Data is not encoded correctly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1572,"byte_end":1605,"line_start":15,"line_end":15,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1671,"byte_end":1678,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::Error::IoError","value":"Error::IoError","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Error performing I/O operation\n","sig":null,"attributes":[{"value":"/ Error performing I/O operation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1632,"byte_end":1666,"line_start":18,"line_end":18,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1739,"byte_end":1752,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"LengthInvalid","qualname":"::error::Error::LengthInvalid","value":"Error::LengthInvalid","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Input or output buffer is an incorrect length\n","sig":null,"attributes":[{"value":"/ Input or output buffer is an incorrect length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1685,"byte_end":1734,"line_start":21,"line_end":21,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":197},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1791,"byte_end":1805,"line_start":25,"line_end":25,"column_start":5,"column_end":19},"name":"PaddingInvalid","qualname":"::error::Error::PaddingInvalid","value":"Error::PaddingInvalid","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Padding missing/invalid\n","sig":null,"attributes":[{"value":"/ Padding missing/invalid","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1759,"byte_end":1786,"line_start":24,"line_end":24,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1890,"byte_end":1908,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"TrailingWhitespace","qualname":"::error::Error::TrailingWhitespace","value":"Error::TrailingWhitespace","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Trailing whitespace detected\n","sig":null,"attributes":[{"value":"/ Trailing whitespace detected","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1812,"byte_end":1844,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1490,"byte_end":1495,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ChecksumInvalid,\n    EncodingInvalid,\n    IoError,\n    LengthInvalid,\n    PaddingInvalid,\n    TrailingWhitespace,\n}","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199}],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1427,"byte_end":1441,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base64","qualname":"::base64","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":211},{"krate":0,"index":231},{"krate":0,"index":229},{"krate":0,"index":227},{"krate":0,"index":225},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":219},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":214},{"krate":0,"index":212},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" Base64 encoding with (almost) data-independent constant time(-ish) operation.","sig":null,"attributes":[{"value":"cfg(feature = \"base64\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":859,"byte_end":885,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ Base64 encoding with (almost) data-independent constant time(-ish) operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3080,"byte_end":3161,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3162,"byte_end":3165,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Adapted from this C++ implementation:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3166,"byte_end":3207,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3208,"byte_end":3211,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ <https://github.com/Sc00bz/ConstTimeEncoding/blob/master/base64.cpp>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3212,"byte_end":3284,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3285,"byte_end":3288,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3289,"byte_end":3358,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ Derived code is dual licensed MIT + Apache 2 (with permission)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3359,"byte_end":3425,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3762,"byte_end":3768,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Base64","qualname":"::base64::Base64","value":"Base64 {  }","parent":null,"children":[],"decl_id":null,"docs":" Base64 `Encoding` (traditional non-URL-safe RFC 4648 version)","sig":null,"attributes":[{"value":"/ Base64 `Encoding` (traditional non-URL-safe RFC 4648 version)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3549,"byte_end":3614,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3615,"byte_end":3618,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Character set: `[A-Z]`, `[a-z]`, `[0-9]`, `+`, `/`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3619,"byte_end":3673,"line_start":20,"line_end":20,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3820,"byte_end":3827,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"encoder","qualname":"::base64::encoder","value":"pub fn encoder() -> Base64","parent":null,"children":[],"decl_id":null,"docs":" Return a `Base64` encoder\n","sig":null,"attributes":[{"value":"/ Return a `Base64` encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3773,"byte_end":3802,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3803,"byte_end":3812,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3959,"byte_end":3965,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"encode","qualname":"::base64::encode","value":"pub fn encode<B: AsRef<[u8]>>(B) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given data as Base64, returning a `Vec<u8>`\n","sig":null,"attributes":[{"value":"/ Encode the given data as Base64, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3867,"byte_end":3925,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":3926,"byte_end":3951,"line_start":31,"line_end":31,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":4130,"byte_end":4136,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"decode","qualname":"::base64::decode","value":"pub fn decode<B: AsRef<[u8]>>(B) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given data from Base64, returning a `Vec<u8>`\n","sig":null,"attributes":[{"value":"/ Decode the given data from Base64, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":4036,"byte_end":4096,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":4097,"byte_end":4122,"line_start":37,"line_end":37,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encoding","qualname":"::encoding","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" The `Encoding` trait: common operations across all encoders\n","sig":null,"attributes":[{"value":"/ The `Encoding` trait: common operations across all encoders","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":11578,"byte_end":11641,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":93},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12054,"byte_end":12063,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"FILE_MODE","qualname":"::encoding::FILE_MODE","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Mode to use for newly created files\n","sig":null,"attributes":[{"value":"/ Mode to use for newly created files","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":11958,"byte_end":11997,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"cfg(unix)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12031,"byte_end":12043,"line_start":20,"line_end":20,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12147,"byte_end":12155,"line_start":24,"line_end":24,"column_start":11,"column_end":19},"name":"Encoding","qualname":"::encoding::Encoding","value":"Encoding: Send + Sync","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115}],"decl_id":null,"docs":" All encoding types in this crate implement this trait\n","sig":null,"attributes":[{"value":"/ All encoding types in this crate implement this trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12079,"byte_end":12136,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12381,"byte_end":12396,"line_start":29,"line_end":29,"column_start":8,"column_end":23},"name":"encode_to_slice","qualname":"::encoding::Encoding::encode_to_slice","value":"pub fn encode_to_slice(&Self, &[u8], &mut [u8]) -> Result<usize, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Encode the given slice into the destination buffer.","sig":null,"attributes":[{"value":"/ Encode the given slice into the destination buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12175,"byte_end":12230,"line_start":25,"line_end":25,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12235,"byte_end":12238,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the encoded output, or `Error` if the destination","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12243,"byte_end":12316,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ buffer was too small to hold the encoded output.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12321,"byte_end":12373,"line_start":28,"line_end":28,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12528,"byte_end":12539,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::encoding::Encoding::encoded_len","value":"pub fn encoded_len(&Self, &[u8]) -> usize","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Calculate the length of the given data after encoding.\n","sig":null,"attributes":[{"value":"/ Calculate the length of the given data after encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12462,"byte_end":12520,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12664,"byte_end":12670,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoding::Encoding::encode","value":"pub fn encode<B: AsRef<[u8]>>(&Self, B) -> Vec<u8>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Encode the given buffer, returning a `Vec<u8>`\n","sig":null,"attributes":[{"value":"/ Encode the given buffer, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12576,"byte_end":12626,"line_start":34,"line_end":34,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12631,"byte_end":12656,"line_start":35,"line_end":35,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13226,"byte_end":13242,"line_start":51,"line_end":51,"column_start":8,"column_end":24},"name":"encode_to_string","qualname":"::encoding::Encoding::encode_to_string","value":"pub fn encode_to_string<B: AsRef<[u8]>>(&Self, B) -> Result<String, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Encode the given slice to a `String` with this `Encoding`.","sig":null,"attributes":[{"value":"/ Encode the given slice to a `String` with this `Encoding`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13011,"byte_end":13073,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13078,"byte_end":13081,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error` in the event this encoding does not produce a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13086,"byte_end":13154,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ well-formed UTF-8 string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13159,"byte_end":13188,"line_start":49,"line_end":49,"column_start":5,"column_end":34}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13193,"byte_end":13218,"line_start":50,"line_end":50,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13562,"byte_end":13578,"line_start":58,"line_end":58,"column_start":8,"column_end":24},"name":"encode_to_writer","qualname":"::encoding::Encoding::encode_to_writer","value":"pub fn encode_to_writer<B, W>(&Self, B, &mut W) -> Result<usize, Error> where\nB: AsRef<[u8]>, W: Write","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Encode the given slice with this `Encoding`, writing the result to the\n supplied `io::Write` type, returning the number of bytes written or a `Error`.\n","sig":null,"attributes":[{"value":"/ Encode the given slice with this `Encoding`, writing the result to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13365,"byte_end":13439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ supplied `io::Write` type, returning the number of bytes written or a `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13444,"byte_end":13526,"line_start":56,"line_end":56,"column_start":5,"column_end":87}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13531,"byte_end":13554,"line_start":57,"line_end":57,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":14214,"byte_end":14228,"line_start":76,"line_end":76,"column_start":8,"column_end":22},"name":"encode_to_file","qualname":"::encoding::Encoding::encode_to_file","value":"pub fn encode_to_file<B, P>(&Self, B, P) -> Result<File, Error> where\nB: AsRef<[u8]>, P: AsRef<Path>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Encode `self` and write it to a file at the given path, returning the\n resulting `File` or a `Error`.","sig":null,"attributes":[{"value":"/ Encode `self` and write it to a file at the given path, returning the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13879,"byte_end":13952,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ resulting `File` or a `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13957,"byte_end":13991,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":13996,"byte_end":13999,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ If the file does not exist, it will be created with a mode of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":14004,"byte_end":14069,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ `FILE_MODE` (i.e. `600`). If the file does exist, it will be erased","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":14074,"byte_end":14145,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ and replaced.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":14150,"byte_end":14167,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"cfg(all(unix, feature = \"std\"))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":14172,"byte_end":14206,"line_start":75,"line_end":75,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15191,"byte_end":15206,"line_start":108,"line_end":108,"column_start":8,"column_end":23},"name":"decode_to_slice","qualname":"::encoding::Encoding::decode_to_slice","value":"pub fn decode_to_slice(&Self, &[u8], &mut [u8]) -> Result<usize, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Decode hexadecimal (upper or lower case) with branchless / secret-independent logic\n","sig":null,"attributes":[{"value":"/ Decode hexadecimal (upper or lower case) with branchless / secret-independent logic","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15096,"byte_end":15183,"line_start":107,"line_end":107,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15338,"byte_end":15349,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"decoded_len","qualname":"::encoding::Encoding::decoded_len","value":"pub fn decoded_len(&Self, &[u8]) -> Result<usize, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Calculate the length of the given data after decoding.\n","sig":null,"attributes":[{"value":"/ Calculate the length of the given data after decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15272,"byte_end":15330,"line_start":110,"line_end":110,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15497,"byte_end":15503,"line_start":115,"line_end":115,"column_start":8,"column_end":14},"name":"decode","qualname":"::encoding::Encoding::decode","value":"pub fn decode<B: AsRef<[u8]>>(&Self, B) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Decode the given buffer, returning a `Vec<u8>`\n","sig":null,"attributes":[{"value":"/ Decode the given buffer, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15409,"byte_end":15459,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15464,"byte_end":15489,"line_start":114,"line_end":114,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16026,"byte_end":16041,"line_start":128,"line_end":128,"column_start":8,"column_end":23},"name":"decode_from_str","qualname":"::encoding::Encoding::decode_from_str","value":"pub fn decode_from_str<S: AsRef<str>>(&Self, S) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Decode the given string-alike type with this `Encoding`, returning the\n decoded value or a `Error`.\n","sig":null,"attributes":[{"value":"/ Decode the given string-alike type with this `Encoding`, returning the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15880,"byte_end":15954,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ decoded value or a `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15959,"byte_end":15990,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":15995,"byte_end":16018,"line_start":127,"line_end":127,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16327,"byte_end":16345,"line_start":135,"line_end":135,"column_start":8,"column_end":26},"name":"decode_from_reader","qualname":"::encoding::Encoding::decode_from_reader","value":"pub fn decode_from_reader<R: Read>(&Self, &mut R) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Decode the data read from the given `io::Read` type with this\n `Encoding`, returning the decoded value or a `Error`.\n","sig":null,"attributes":[{"value":"/ Decode the data read from the given `io::Read` type with this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16164,"byte_end":16229,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/ `Encoding`, returning the decoded value or a `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16234,"byte_end":16291,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16296,"byte_end":16319,"line_start":134,"line_end":134,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16757,"byte_end":16773,"line_start":146,"line_end":146,"column_start":8,"column_end":24},"name":"decode_from_file","qualname":"::encoding::Encoding::decode_from_file","value":"pub fn decode_from_file<P: AsRef<Path>>(&Self, P) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Read a file at the given path, decoding the data it contains using\n the provided `Encoding`, returning the decoded value or a `Error`.\n","sig":null,"attributes":[{"value":"/ Read a file at the given path, decoding the data it contains using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16576,"byte_end":16646,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ the provided `Encoding`, returning the decoded value or a `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16651,"byte_end":16721,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":16726,"byte_end":16749,"line_start":145,"line_end":145,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hex","qualname":"::hex","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":232},{"krate":0,"index":254},{"krate":0,"index":252},{"krate":0,"index":250},{"krate":0,"index":248},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":242},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":236},{"krate":0,"index":234},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":255},{"krate":0,"index":277},{"krate":0,"index":275},{"krate":0,"index":273},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":267},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":262},{"krate":0,"index":260},{"krate":0,"index":146},{"krate":0,"index":149}],"decl_id":null,"docs":" Hex encoding/decoding with data-independent constant time(-ish) operation.","sig":null,"attributes":[{"value":"cfg(feature = \"hex\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":971,"byte_end":994,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ Hex encoding/decoding with data-independent constant time(-ish) operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18351,"byte_end":18429,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18430,"byte_end":18433,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Adapted from this C++ implementation:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18434,"byte_end":18475,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18476,"byte_end":18479,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ <https://github.com/Sc00bz/ConstTimeEncoding/blob/master/hex.cpp>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18480,"byte_end":18549,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18550,"byte_end":18553,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18554,"byte_end":18623,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ Derived code is dual licensed MIT + Apache 2.0 (with permission from @Sc00bz)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18624,"byte_end":18705,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18706,"byte_end":18709,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18710,"byte_end":18722,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18723,"byte_end":18726,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The main API acts as a drop-in replacement for the `hex` crate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18727,"byte_end":18793,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18794,"byte_end":18797,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18798,"byte_end":18814,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18815,"byte_end":18818,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Use the [hex::encode] method:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18819,"byte_end":18852,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18853,"byte_end":18856,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18857,"byte_end":18864,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use subtle_encoding::hex;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18865,"byte_end":18894,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18895,"byte_end":18898,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let encoded = hex::encode([0, 1, 2, 3, 4, 5]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18899,"byte_end":18949,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18950,"byte_end":18953,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Prints the hex encoded version: \"000102030405\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":18954,"byte_end":19007,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ println!(\"hex encoded: {}\", String::from_utf8(encoded).unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19008,"byte_end":19077,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19078,"byte_end":19085,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19086,"byte_end":19089,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ By default hex is encoded in lower-case. To encode upper-case hex, use the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19090,"byte_end":19168,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ [hex::encode_upper] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19169,"byte_end":19200,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19201,"byte_end":19204,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ### Decoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19205,"byte_end":19221,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19222,"byte_end":19225,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Use the [hex::decode] method, or [hex::decode_upper] for upper-case hex.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19226,"byte_end":19302,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19303,"byte_end":19306,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [hex::encode]: https://docs.rs/subtle-encoding/latest/subtle_encoding/hex/fn.encode.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19307,"byte_end":19399,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ [hex::encode_upper]: https://docs.rs/subtle-encoding/latest/subtle_encoding/hex/fn.encode_upper.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19400,"byte_end":19504,"line_start":35,"line_end":35,"column_start":1,"column_end":105}},{"value":"/ [hex::decode]: https://docs.rs/subtle-encoding/latest/subtle_encoding/hex/fn.decode.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19505,"byte_end":19597,"line_start":36,"line_end":36,"column_start":1,"column_end":93}},{"value":"/ [hex::decode_upper]: https://docs.rs/subtle-encoding/latest/subtle_encoding/hex/fn.decode_upper.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19598,"byte_end":19702,"line_start":37,"line_end":37,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19912,"byte_end":19918,"line_start":48,"line_end":48,"column_start":8,"column_end":14},"name":"encode","qualname":"::hex::encode","value":"pub fn encode<B: AsRef<[u8]>>(B) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given data as lower-case hexadecimal, returning a `Vec<u8>`\n","sig":null,"attributes":[{"value":"/ Encode the given data as lower-case hexadecimal, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19804,"byte_end":19878,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19879,"byte_end":19904,"line_start":47,"line_end":47,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20158,"byte_end":20164,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"decode","qualname":"::hex::decode","value":"pub fn decode<B: AsRef<[u8]>>(B) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given data from lower-case hexadecimal, returning a `Vec<u8>`\n of the decoded data on success, or an `Error`.\n","sig":null,"attributes":[{"value":"/ Decode the given data from lower-case hexadecimal, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":19997,"byte_end":20073,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ of the decoded data on success, or an `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20074,"byte_end":20124,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20125,"byte_end":20150,"line_start":54,"line_end":54,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20382,"byte_end":20394,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"encode_upper","qualname":"::hex::encode_upper","value":"pub fn encode_upper<B: AsRef<[u8]>>(B) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given data as upper-case hexadecimal, returning a `Vec<u8>`\n","sig":null,"attributes":[{"value":"/ Encode the given data as upper-case hexadecimal, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20274,"byte_end":20348,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20349,"byte_end":20374,"line_start":60,"line_end":60,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20634,"byte_end":20646,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"decode_upper","qualname":"::hex::decode_upper","value":"pub fn decode_upper<B: AsRef<[u8]>>(B) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given data from upper-case hexadecimal, returning a `Vec<u8>`\n of the decoded data on success, or an `Error`.\n","sig":null,"attributes":[{"value":"/ Decode the given data from upper-case hexadecimal, returning a `Vec<u8>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20473,"byte_end":20549,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ of the decoded data on success, or an `Error`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20550,"byte_end":20600,"line_start":66,"line_end":66,"column_start":1,"column_end":51}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20601,"byte_end":20626,"line_start":67,"line_end":67,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20887,"byte_end":20890,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"Hex","qualname":"::hex::Hex","value":"Hex {  }","parent":null,"children":[{"krate":0,"index":233}],"decl_id":null,"docs":" Hexadecimal `Encoding` (a.k.a. Base16)\n","sig":null,"attributes":[{"value":"/ Hexadecimal `Encoding` (a.k.a. Base16)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20756,"byte_end":20798,"line_start":72,"line_end":72,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20994,"byte_end":21004,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"lower_case","qualname":"<Hex>::lower_case","value":"pub fn lower_case() -> Hex","parent":null,"children":[],"decl_id":null,"docs":" Lower case hex: 0-9 a-f\n","sig":null,"attributes":[{"value":"/ Lower case hex: 0-9 a-f","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20955,"byte_end":20982,"line_start":80,"line_end":80,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":21100,"byte_end":21110,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"upper_case","qualname":"<Hex>::upper_case","value":"pub fn upper_case() -> Hex","parent":null,"children":[],"decl_id":null,"docs":" Upper case hex: 0-9 A-F\n","sig":null,"attributes":[{"value":"/ Upper case hex: 0-9 A-F","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":21061,"byte_end":21088,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identity","qualname":"::identity","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":278},{"krate":0,"index":298},{"krate":0,"index":296},{"krate":0,"index":294},{"krate":0,"index":292},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":286},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":281},{"krate":0,"index":279},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" Identity `Encoding`: output is identical to input\n","sig":null,"attributes":[{"value":"/ Identity `Encoding`: output is identical to input","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":26778,"byte_end":26831,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":27063,"byte_end":27071,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Identity","qualname":"::identity::Identity","value":"Identity {  }","parent":null,"children":[],"decl_id":null,"docs":" `Encoding` which does not transform data and returns the original input.\n","sig":null,"attributes":[{"value":"/ `Encoding` which does not transform data and returns the original input.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":26898,"byte_end":26974,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":27167,"byte_end":27175,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"IDENTITY","qualname":"::identity::IDENTITY","value":"&Identity","parent":null,"children":[],"decl_id":null,"docs":" Constant `Identity` encoding that can be used in lieu of calling `default()`\n","sig":null,"attributes":[{"value":"/ Constant `Identity` encoding that can be used in lieu of calling `default()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":27076,"byte_end":27156,"line_start":12,"line_end":12,"column_start":1,"column_end":81}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1935,"byte_end":1940,"line_start":32,"line_end":32,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":2484,"byte_end":2489,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":2753,"byte_end":2758,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":2938,"byte_end":2943,"line_start":68,"line_end":68,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":4256,"byte_end":4262,"line_start":42,"line_end":42,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20945,"byte_end":20948,"line_start":79,"line_end":79,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":21183,"byte_end":21186,"line_start":91,"line_end":91,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":22912,"byte_end":22916,"line_start":152,"line_end":152,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":24466,"byte_end":24470,"line_start":203,"line_end":203,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":27222,"byte_end":27230,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":894,"byte_end":900,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":961,"byte_end":969,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1003,"byte_end":1006,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":117}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/lib.rs","byte_start":1016,"byte_end":1024,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":151}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":1935,"byte_end":1940,"line_start":32,"line_end":32,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":2484,"byte_end":2489,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":188},"to":{"krate":5,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":2753,"byte_end":2758,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/error.rs","byte_start":2938,"byte_end":2943,"line_start":68,"line_end":68,"column_start":30,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/base64.rs","byte_start":4256,"byte_end":4262,"line_start":42,"line_end":42,"column_start":19,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12157,"byte_end":12161,"line_start":24,"line_end":24,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2822},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/encoding.rs","byte_start":12164,"byte_end":12168,"line_start":24,"line_end":24,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2834},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":20945,"byte_end":20948,"line_start":79,"line_end":79,"column_start":6,"column_end":9},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":21183,"byte_end":21186,"line_start":91,"line_end":91,"column_start":19,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":232},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":22912,"byte_end":22916,"line_start":152,"line_end":152,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/hex.rs","byte_start":24466,"byte_end":24470,"line_start":203,"line_end":203,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-encoding-0.5.1/src/identity.rs","byte_start":27222,"byte_end":27230,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":278},"to":{"krate":0,"index":94}}]}