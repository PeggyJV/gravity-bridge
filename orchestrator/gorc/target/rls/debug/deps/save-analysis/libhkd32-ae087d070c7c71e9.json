{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hkd32","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bip39\"","--cfg","feature=\"mnemonic\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pbkdf2\"","-C","metadata=ae087d070c7c71e9","-C","extra-filename=-ae087d070c7c71e9","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","hmac=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libhmac-d470cf24dc521e75.rmeta","--extern","once_cell=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libonce_cell-bf2d87d7b77d759d.rmeta","--extern","pbkdf2=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libpbkdf2-8875972d13e8c32d.rmeta","--extern","rand_core=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/librand_core-7aef63c7b7031ab2.rmeta","--extern","sha2=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsha2-7620add3dbbab556.rmeta","--extern","zeroize=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libzeroize-9efa0d1fc54d6e36.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libhkd32-ae087d070c7c71e9.rmeta"},"prelude":{"crate_id":{"name":"hkd32","disambiguator":[16346688243348044347,9135525614749754850]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":5,"id":{"name":"once_cell","disambiguator":[15381452257217144295,7635182210418599630]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":6,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":7,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":8,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":9,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":10,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":13,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":14,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":15,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":17,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":19,"id":{"name":"rand_core","disambiguator":[8139118517281542286,12191278135173016247]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":20,"id":{"name":"getrandom","disambiguator":[13811811233254902674,13880380393548880828]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":21,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":22,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":23,"id":{"name":"sha2","disambiguator":[9483505918612507167,7189243545371883239]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":24,"id":{"name":"block_buffer","disambiguator":[8859152241126613282,1637078903675025126]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":25,"id":{"name":"generic_array","disambiguator":[11660036351344994564,3930594429372963592]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":26,"id":{"name":"typenum","disambiguator":[15996057349867460478,6617918932531464244]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":27,"id":{"name":"block_padding","disambiguator":[16767438399836447221,8907242898135851367]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":28,"id":{"name":"digest","disambiguator":[15437924665489029698,8650536242085247057]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":29,"id":{"name":"opaque_debug","disambiguator":[17739550807650243323,14013658468401020324]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":30,"id":{"name":"cpuid_bool","disambiguator":[3264299262030168264,3357855747673141255]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","num":31,"id":{"name":"zeroize","disambiguator":[744669072465224746,17473627246014046881]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","num":32,"id":{"name":"zeroize_derive","disambiguator":[18017864088066273931,9406744853062868551]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":33,"id":{"name":"hmac","disambiguator":[15294886789366223087,6131833804343143221]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":34,"id":{"name":"crypto_mac","disambiguator":[6494323612098482869,693981281286547434]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":35,"id":{"name":"subtle","disambiguator":[16473552840971905471,13383263026665092334]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":36,"id":{"name":"pbkdf2","disambiguator":[13281890218039939027,9460762969815177360]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":37,"id":{"name":"password_hash","disambiguator":[2457512509526958121,6642540692331226433]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","num":38,"id":{"name":"base64ct","disambiguator":[559631286589222384,4087918704850658821]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":0,"byte_end":2164,"line_start":1,"line_end":74,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2515,"byte_end":2523,"line_start":15,"line_end":15,"column_start":26,"column_end":34},"alias_span":null,"name":"Language","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2533,"byte_end":2539,"line_start":15,"line_end":15,"column_start":44,"column_end":50},"alias_span":null,"name":"Phrase","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2589,"byte_end":2593,"line_start":18,"line_end":18,"column_start":21,"column_end":25},"alias_span":null,"name":"Seed","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2589,"byte_end":2593,"line_start":18,"line_end":18,"column_start":21,"column_end":25},"alias_span":null,"name":"Seed","value":"","parent":{"krate":0,"index":5}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1788,"byte_end":1789,"line_start":59,"line_end":59,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"KeyMaterial","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1797,"byte_end":1798,"line_start":59,"line_end":59,"column_start":39,"column_end":40},"alias_span":null,"name":"*","value":"Path","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1851,"byte_end":1858,"line_start":62,"line_end":62,"column_start":24,"column_end":31},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":0,"byte_end":2164,"line_start":1,"line_end":74,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":237},{"krate":0,"index":300},{"krate":0,"index":368},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":556},{"krate":0,"index":562},{"krate":0,"index":560},{"krate":0,"index":558}],"decl_id":null,"docs":" HMAC-based Hierarchical Key Derivation: deterministically derive a\n hierarchy of symmetric keys from initial keying material through\n repeated applications of the Hash-based Message Authentication Code\n (HMAC) construction.","sig":null,"attributes":[{"value":"/ HMAC-based Hierarchical Key Derivation: deterministically derive a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ hierarchy of symmetric keys from initial keying material through","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":71,"byte_end":139,"line_start":2,"line_end":2,"column_start":1,"column_end":69}},{"value":"/ repeated applications of the Hash-based Message Authentication Code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":140,"byte_end":211,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ (HMAC) construction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":212,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":237,"byte_end":240,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This library implements a fully symmetric construction inspired by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":241,"byte_end":311,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ [BIP-0032: Hierarchical Deterministic Wallets][bip32].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":312,"byte_end":370,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":371,"byte_end":374,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":375,"byte_end":386,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":387,"byte_end":390,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ To derive a key using HKD32, you'll need the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":391,"byte_end":450,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":451,"byte_end":454,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - [`KeyMaterial`]: a 32-byte (256-bit) uniformly random value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":455,"byte_end":520,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ - [`Path`] or [`PathBuf`]: path to the child key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":521,"byte_end":573,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":574,"byte_end":577,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Derivation paths can be raw bytestrings but also support a Unix path-like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":578,"byte_end":655,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ syntax which can be parsed using the `String::parse` method:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":656,"byte_end":720,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":721,"byte_end":724,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":725,"byte_end":736,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ let path = \"/foo/bar/baz\".parse::<hkd32::PathBuf>().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":737,"byte_end":802,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":803,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":811,"byte_end":814,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":815,"byte_end":828,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":829,"byte_end":832,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":833,"byte_end":844,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":845,"byte_end":870,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":871,"byte_end":874,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Parent key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":875,"byte_end":892,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ let input_key_material = hkd32::KeyMaterial::random(&mut OsRng);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":893,"byte_end":961,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":962,"byte_end":965,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // Path to the child key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":966,"byte_end":994,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ let derivation_path = \"/foo/bar/baz\".parse::<hkd32::PathBuf>().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":995,"byte_end":1071,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Derive subkey from the parent key. Call `as_bytes()` on this to obtain","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1076,"byte_end":1153,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ // a byte slice containing the derived key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1154,"byte_end":1201,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ let output_key_material = input_key_material.derive_subkey(derivation_path);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1202,"byte_end":1282,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1283,"byte_end":1290,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1291,"byte_end":1294,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [bip32]: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1295,"byte_end":1370,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1372,"byte_end":1382,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1477,"byte_end":1540,"line_start":44,"line_end":44,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mnemonic","qualname":"::mnemonic","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":71},{"krate":0,"index":126},{"krate":0,"index":209},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":" Support for BIP39 mnemonic phrases.","sig":null,"attributes":[{"value":"cfg(feature = \"mnemonic\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1642,"byte_end":1670,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ Support for BIP39 mnemonic phrases.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2166,"byte_end":2205,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2206,"byte_end":2209,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These enable deriving `hkd32::KeyMaterial` from a 24-word BIP39 phrase.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2210,"byte_end":2285,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2286,"byte_end":2289,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Adapted from the `bip39` crate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2290,"byte_end":2325,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/ Copyright © 2017-2018 Stephen Oliver with contributions by Maciej Hirsz.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic.rs","byte_start":2326,"byte_end":2403,"line_start":6,"line_end":6,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":3889,"byte_end":3895,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"Bits11","qualname":"::mnemonic::bits::Bits11","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6803,"byte_end":6810,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"English","qualname":"::mnemonic::language::Language::English","value":"Language::English","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" English is presently the only supported language\n","sig":null,"attributes":[{"value":"/ English is presently the only supported language","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6746,"byte_end":6798,"line_start":17,"line_end":17,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":453},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6731,"byte_end":6739,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Language","qualname":"::mnemonic::language::Language","value":"pub enum Language { English, }","parent":null,"children":[{"krate":0,"index":454}],"decl_id":null,"docs":" Supported languages.","sig":null,"attributes":[{"value":"/ Supported languages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6601,"byte_end":6625,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6626,"byte_end":6629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Presently only English is specified by the BIP39 standard","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6630,"byte_end":6691,"line_start":14,"line_end":14,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9427,"byte_end":9433,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Phrase","qualname":"::mnemonic::phrase::Phrase","value":"Phrase {  }","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" BIP39 mnemonic phrases: sequences of words representing cryptographic keys.\n","sig":null,"attributes":[{"value":"/ BIP39 mnemonic phrases: sequences of words representing cryptographic keys.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9319,"byte_end":9398,"line_start":24,"line_end":24,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9659,"byte_end":9665,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"random","qualname":"<Phrase>::random","value":"pub fn random<impl RngCore + CryptoRng: RngCore +\n              CryptoRng>(impl RngCore + CryptoRng, Language) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a random BIP39 mnemonic phrase.\n","sig":null,"attributes":[{"value":"/ Create a random BIP39 mnemonic phrase.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9605,"byte_end":9647,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9945,"byte_end":9957,"line_start":46,"line_end":46,"column_start":12,"column_end":24},"name":"from_entropy","qualname":"<Phrase>::from_entropy","value":"pub fn from_entropy(Entropy, Language) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new BIP39 mnemonic phrase from the given entropy\n","sig":null,"attributes":[{"value":"/ Create a new BIP39 mnemonic phrase from the given entropy","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9872,"byte_end":9933,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":11322,"byte_end":11325,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Phrase>::new","value":"pub fn new<S>(S, Language) -> Result<Self, Error> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Create a new BIP39 mnemonic phrase from the given string.","sig":null,"attributes":[{"value":"/ Create a new BIP39 mnemonic phrase from the given string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":10902,"byte_end":10963,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":10968,"byte_end":10971,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The phrase supplied will be checked for word length and validated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":10976,"byte_end":11045,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ according to the checksum specified in BIP0039.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":11050,"byte_end":11101,"line_start":76,"line_end":76,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":11106,"byte_end":11109,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ To use the default language, English, (the only one supported by this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":11114,"byte_end":11187,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ library and also the only one standardized for BIP39) you can supply","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":11192,"byte_end":11264,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ `Default::default()` as the language.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":11269,"byte_end":11310,"line_start":80,"line_end":80,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12373,"byte_end":12380,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"entropy","qualname":"<Phrase>::entropy","value":"pub fn entropy(&Self) -> &Entropy","parent":null,"children":[],"decl_id":null,"docs":" Get source entropy for this phrase.\n","sig":null,"attributes":[{"value":"/ Get source entropy for this phrase.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12322,"byte_end":12361,"line_start":118,"line_end":118,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12497,"byte_end":12503,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"phrase","qualname":"<Phrase>::phrase","value":"pub fn phrase(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the mnemonic phrase as a string reference.\n","sig":null,"attributes":[{"value":"/ Get the mnemonic phrase as a string reference.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12435,"byte_end":12485,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12607,"byte_end":12615,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"language","qualname":"<Phrase>::language","value":"pub fn language(&Self) -> Language","parent":null,"children":[],"decl_id":null,"docs":" Language this phrase's wordlist is for\n","sig":null,"attributes":[{"value":"/ Language this phrase's wordlist is for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12553,"byte_end":12595,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13092,"byte_end":13105,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"derive_subkey","qualname":"<Phrase>::derive_subkey","value":"pub fn derive_subkey<impl AsRef<Path>: AsRef<Path>>(Self, impl AsRef<Path>)\n-> KeyMaterial","parent":null,"children":[],"decl_id":null,"docs":" Convert this mnemonic phrase's entropy directly into key material.\n If you are looking for the shortest path between a mnemonic phrase\n and a key derivation hierarchy, this is it.","sig":null,"attributes":[{"value":"/ Convert this mnemonic phrase's entropy directly into key material.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12670,"byte_end":12740,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/ If you are looking for the shortest path between a mnemonic phrase","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12745,"byte_end":12815,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ and a key derivation hierarchy, this is it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12820,"byte_end":12867,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12872,"byte_end":12875,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note: that this does not follow the normal BIP39 derivation, which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12880,"byte_end":12950,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ first applies PBKDF2 along with a secondary password. Use `to_seed`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":12955,"byte_end":13026,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ if you are interested in BIP39 compatibility.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13031,"byte_end":13080,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13370,"byte_end":13377,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"to_seed","qualname":"<Phrase>::to_seed","value":"pub fn to_seed(&Self, &str) -> Seed","parent":null,"children":[],"decl_id":null,"docs":" Convert this mnemonic phrase into the BIP39 seed value.\n","sig":null,"attributes":[{"value":"/ Convert this mnemonic phrase into the BIP39 seed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13216,"byte_end":13275,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"bip39\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13280,"byte_end":13305,"line_start":145,"line_end":145,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14209,"byte_end":14213,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Seed","qualname":"::mnemonic::seed::Seed","value":"","parent":null,"children":[],"decl_id":null,"docs":" BIP39 seeds.\n","sig":null,"attributes":[{"value":"/ BIP39 seeds.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14087,"byte_end":14103,"line_start":5,"line_end":5,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":218},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14324,"byte_end":14328,"line_start":12,"line_end":12,"column_start":15,"column_end":19},"name":"SIZE","qualname":"::mnemonic::seed::Seed::SIZE","value":"usize","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Number of bytes of PBKDF2 output to extract.\n","sig":null,"attributes":[{"value":"/ Number of bytes of PBKDF2 output to extract.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14261,"byte_end":14309,"line_start":11,"line_end":11,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14402,"byte_end":14405,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Seed>::new","value":"pub fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new seed from the given bytes.\n","sig":null,"attributes":[{"value":"/ Create a new seed from the given bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14347,"byte_end":14390,"line_start":14,"line_end":14,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14519,"byte_end":14527,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Seed>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the inner secret byte slice\n","sig":null,"attributes":[{"value":"/ Get the inner secret byte slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14472,"byte_end":14507,"line_start":19,"line_end":19,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15723,"byte_end":15734,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"KeyMaterial","qualname":"::key_material::KeyMaterial","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cryptographic key material: 256-bit (32-byte) uniformly random bytestring\n generated either via a CSRNG or via hierarchical derivation.","sig":null,"attributes":[{"value":"/ Cryptographic key material: 256-bit (32-byte) uniformly random bytestring","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15396,"byte_end":15473,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ generated either via a CSRNG or via hierarchical derivation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15474,"byte_end":15538,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15539,"byte_end":15542,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type provides the main key derivation functionality and is used to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15543,"byte_end":15618,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ represent both input and output key material.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15619,"byte_end":15668,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"zeroize(drop)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15695,"byte_end":15711,"line_start":29,"line_end":29,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15851,"byte_end":15857,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"random","qualname":"<KeyMaterial>::random","value":"pub fn random<impl RngCore + CryptoRng: RngCore +\n              CryptoRng>(impl RngCore + CryptoRng) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create random key material using the operating system CSRNG\n","sig":null,"attributes":[{"value":"/ Create random key material using the operating system CSRNG","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15776,"byte_end":15839,"line_start":33,"line_end":33,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16541,"byte_end":16554,"line_start":54,"line_end":54,"column_start":12,"column_end":25},"name":"from_mnemonic","qualname":"<KeyMaterial>::from_mnemonic","value":"pub fn from_mnemonic<S>(S, mnemonic::Language) -> Result<Self, Error> where\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Create key material from a 24-word BIP39 mnemonic phrase\n","sig":null,"attributes":[{"value":"/ Create key material from a 24-word BIP39 mnemonic phrase","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16436,"byte_end":16496,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"mnemonic\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16501,"byte_end":16529,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16915,"byte_end":16925,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<KeyMaterial>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create new key material from a byte slice.","sig":null,"attributes":[{"value":"/ Create new key material from a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16732,"byte_end":16778,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16783,"byte_end":16786,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Byte slice is expected to have been generated by a cryptographically","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16791,"byte_end":16863,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ secure random number generator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":16868,"byte_end":16903,"line_start":64,"line_end":64,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":17255,"byte_end":17258,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyMaterial>::new","value":"pub fn new([u8; ]) -> KeyMaterial","parent":null,"children":[],"decl_id":null,"docs":" Import existing key material - must be uniformly random!\n","sig":null,"attributes":[{"value":"/ Import existing key material - must be uniformly random!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":17183,"byte_end":17243,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":17392,"byte_end":17400,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<KeyMaterial>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the key material as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow the key material as a byte slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":17337,"byte_end":17380,"line_start":80,"line_end":80,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":17516,"byte_end":17529,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"derive_subkey","qualname":"<KeyMaterial>::derive_subkey","value":"pub fn derive_subkey<P>(Self, P) -> Self where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Derive an output key from the given input key material\n","sig":null,"attributes":[{"value":"/ Derive an output key from the given input key material","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":17446,"byte_end":17504,"line_start":85,"line_end":85,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":328},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20431,"byte_end":20451,"line_start":31,"line_end":31,"column_start":11,"column_end":31},"name":"MAX_COMPONENT_LENGTH","qualname":"::path::MAX_COMPONENT_LENGTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum length of a derivation component\n","sig":null,"attributes":[{"value":"/ Maximum length of a derivation component","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20376,"byte_end":20420,"line_start":30,"line_end":30,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20774,"byte_end":20778,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"","parent":null,"children":[],"decl_id":null,"docs":" Key derivation paths: location within a key hierarchy which\n names/identifies a specific key.","sig":null,"attributes":[{"value":"/ Key derivation paths: location within a key hierarchy which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20467,"byte_end":20530,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ names/identifies a specific key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20531,"byte_end":20567,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20568,"byte_end":20571,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is the reference type. The corresponding owned type is `hkd32::Path`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20572,"byte_end":20649,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ (ala the corresponding types in `std`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20650,"byte_end":20693,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"repr(transparent)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20742,"byte_end":20762,"line_start":39,"line_end":39,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21104,"byte_end":21107,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<P: ?Sized>(&P) -> Result<&Self, Error> where P: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Create a path from a byte slice.","sig":null,"attributes":[{"value":"/ Create a path from a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20803,"byte_end":20839,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20844,"byte_end":20847,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` if the path is malformed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20852,"byte_end":20897,"line_start":45,"line_end":45,"column_start":5,"column_end":50}},{"value":"allow(unsafe_code)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21071,"byte_end":21092,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21460,"byte_end":21468,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Path>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to this path's bytestring serialization.\n","sig":null,"attributes":[{"value":"/ Obtain a reference to this path's bytestring serialization.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21385,"byte_end":21448,"line_start":60,"line_end":60,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21580,"byte_end":21590,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Obtain a component iterator for this path.\n","sig":null,"attributes":[{"value":"/ Obtain a component iterator for this path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21522,"byte_end":21568,"line_start":65,"line_end":65,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21705,"byte_end":21712,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Path>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this path the root path?\n","sig":null,"attributes":[{"value":"/ Is this path the root path?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21662,"byte_end":21693,"line_start":70,"line_end":70,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21918,"byte_end":21922,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P>(&Self, P) -> PathBuf where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Create a `PathBuf` with `path` joined to `self`.","sig":null,"attributes":[{"value":"/ Create a `PathBuf` with `path` joined to `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21767,"byte_end":21819,"line_start":75,"line_end":75,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21824,"byte_end":21827,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Requires the `alloc` feature is enabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21832,"byte_end":21876,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":21881,"byte_end":21906,"line_start":78,"line_end":78,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22202,"byte_end":22208,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Get the parent path for this path\n","sig":null,"attributes":[{"value":"/ Get the parent path for this path","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22153,"byte_end":22190,"line_start":89,"line_end":89,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22739,"byte_end":22748,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"stringify","qualname":"<Path>::stringify","value":"pub fn stringify(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert this path to an `/x/y/z` string.","sig":null,"attributes":[{"value":"/ Attempt to convert this path to an `/x/y/z` string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22508,"byte_end":22563,"line_start":103,"line_end":103,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22568,"byte_end":22571,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This will only succeed if the path components are all ASCII.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22576,"byte_end":22640,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22645,"byte_end":22648,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Requires the `alloc` feature is enabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22653,"byte_end":22697,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":22702,"byte_end":22727,"line_start":108,"line_end":108,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":23198,"byte_end":23204,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Path>::to_vec","value":"pub fn to_vec(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this `Path` as a byte vector\n","sig":null,"attributes":[{"value":"/ Serialize this `Path` as a byte vector","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":23114,"byte_end":23156,"line_start":125,"line_end":125,"column_start":5,"column_end":47}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":23161,"byte_end":23186,"line_start":126,"line_end":126,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24264,"byte_end":24273,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"Component","qualname":"::path::Component","value":"","parent":null,"children":[],"decl_id":null,"docs":" Component of a derivation path\n","sig":null,"attributes":[{"value":"/ Component of a derivation path","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24153,"byte_end":24187,"line_start":166,"line_end":166,"column_start":1,"column_end":35}},{"value":"repr(transparent)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24232,"byte_end":24252,"line_start":168,"line_end":168,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24547,"byte_end":24550,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<Component>::new","value":"pub fn new(&'a [u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new component.","sig":null,"attributes":[{"value":"/ Create a new component.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24400,"byte_end":24427,"line_start":174,"line_end":174,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24432,"byte_end":24435,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` if the component is empty or is longer than","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24440,"byte_end":24503,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `MAX_COMPONENT_LENGTH`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24508,"byte_end":24535,"line_start":177,"line_end":177,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24827,"byte_end":24835,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Component>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this component as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this component as a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24757,"byte_end":24815,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24941,"byte_end":24944,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"len","qualname":"<Component>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this component in bytes.\n","sig":null,"attributes":[{"value":"/ Get the length of this component in bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24883,"byte_end":24929,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25146,"byte_end":25155,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"stringify","qualname":"<Component>::stringify","value":"pub fn stringify(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert component to an ASCII string.","sig":null,"attributes":[{"value":"/ Attempt to convert component to an ASCII string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24995,"byte_end":25047,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25052,"byte_end":25055,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Requires the `alloc` feature is enabled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25060,"byte_end":25104,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25109,"byte_end":25134,"line_start":199,"line_end":199,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25512,"byte_end":25520,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Component>::to_bytes","value":"pub fn to_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this component as a length-prefixed bytestring.\n","sig":null,"attributes":[{"value":"/ Serialize this component as a length-prefixed bytestring.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25409,"byte_end":25470,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25475,"byte_end":25500,"line_start":213,"line_end":213,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":26240,"byte_end":26250,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" Iterator over the components of a path\n","sig":null,"attributes":[{"value":"/ Iterator over the components of a path","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":26169,"byte_end":26211,"line_start":241,"line_end":241,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28816,"byte_end":28823,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::pathbuf::PathBuf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Key derivation paths: location within a key hierarchy which\n names/identifies a specific key.","sig":null,"attributes":[{"value":"/ Key derivation paths: location within a key hierarchy which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28462,"byte_end":28525,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ names/identifies a specific key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28526,"byte_end":28562,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28563,"byte_end":28566,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is the owned path type. The corresponding reference type is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28567,"byte_end":28635,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ `hkd32::Path` (ala the corresponding types in `std`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28636,"byte_end":28693,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"repr(transparent)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28767,"byte_end":28787,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"zeroize(drop)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28788,"byte_end":28804,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28917,"byte_end":28927,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<PathBuf>::from_bytes","value":"pub fn from_bytes<B>(B) -> Result<Self, Error> where B: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Parse a path from its bytestring serialization.\n","sig":null,"attributes":[{"value":"/ Parse a path from its bytestring serialization.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28854,"byte_end":28905,"line_start":26,"line_end":26,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29365,"byte_end":29368,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PathBuf` representing the root derivation path.","sig":null,"attributes":[{"value":"/ Create a new `PathBuf` representing the root derivation path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29226,"byte_end":29291,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29296,"byte_end":29299,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This is also the default value for `PathBuf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29304,"byte_end":29353,"line_start":40,"line_end":40,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29465,"byte_end":29472,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Borrow this `PathBuf` as a `Path`\n","sig":null,"attributes":[{"value":"/ Borrow this `PathBuf` as a `Path`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29416,"byte_end":29453,"line_start":45,"line_end":45,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29613,"byte_end":29619,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"extend","qualname":"<PathBuf>::extend","value":"pub fn extend<'a, I, C>(&mut Self, I) where I: IntoIterator<Item = C>,\nC: AsRef<Component>","parent":null,"children":[],"decl_id":null,"docs":" Extend this key derivation path with additional components.\n","sig":null,"attributes":[{"value":"/ Extend this key derivation path with additional components.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29538,"byte_end":29601,"line_start":50,"line_end":50,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29893,"byte_end":29897,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<'a, C: AsRef<Component>>(&mut Self, C)","parent":null,"children":[],"decl_id":null,"docs":" Push an additional component onto this path.\n","sig":null,"attributes":[{"value":"/ Push an additional component onto this path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":29833,"byte_end":29881,"line_start":61,"line_end":61,"column_start":5,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1919,"byte_end":1928,"line_start":65,"line_end":65,"column_start":11,"column_end":20},"name":"DELIMITER","qualname":"::DELIMITER","value":"char","parent":null,"children":[],"decl_id":null,"docs":" Delimiter used for strings containing paths\n","sig":null,"attributes":[{"value":"/ Delimiter used for strings containing paths","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1861,"byte_end":1908,"line_start":64,"line_end":64,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":444},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":2072,"byte_end":2080,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"KEY_SIZE","qualname":"::KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of input key material and derived keys.","sig":null,"attributes":[{"value":"/ Size of input key material and derived keys.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1943,"byte_end":1991,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1992,"byte_end":1995,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Note: the name HKD32 is both a play on this size and \"BIP32\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1996,"byte_end":2061,"line_start":69,"line_end":69,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":2158,"byte_end":2163,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque error type\n","sig":null,"attributes":[{"value":"/ Opaque error type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":2095,"byte_end":2116,"line_start":72,"line_end":72,"column_start":1,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":3550,"byte_end":3551,"line_start":43,"line_end":43,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":3917,"byte_end":3923,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":4032,"byte_end":4038,"line_start":78,"line_end":78,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":4285,"byte_end":4294,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":5293,"byte_end":5300,"line_start":140,"line_end":140,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":5576,"byte_end":5583,"line_start":156,"line_end":156,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6820,"byte_end":6828,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":7272,"byte_end":7280,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":7490,"byte_end":7497,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":7631,"byte_end":7639,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9592,"byte_end":9598,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13738,"byte_end":13749,"line_start":160,"line_end":160,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13935,"byte_end":13941,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14250,"byte_end":14254,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14604,"byte_end":14608,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14690,"byte_end":14694,"line_start":31,"line_end":31,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15758,"byte_end":15769,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":18994,"byte_end":19005,"line_start":130,"line_end":130,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":19118,"byte_end":19129,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20792,"byte_end":20796,"line_start":42,"line_end":42,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":23904,"byte_end":23908,"line_start":152,"line_end":152,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24006,"byte_end":24010,"line_start":159,"line_end":159,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24380,"byte_end":24389,"line_start":173,"line_end":173,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25763,"byte_end":25772,"line_start":222,"line_end":222,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25887,"byte_end":25896,"line_start":229,"line_end":229,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":26403,"byte_end":26413,"line_start":251,"line_end":251,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":26907,"byte_end":26917,"line_start":266,"line_end":266,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28840,"byte_end":28847,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30043,"byte_end":30050,"line_start":67,"line_end":67,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30139,"byte_end":30146,"line_start":73,"line_end":73,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30228,"byte_end":30235,"line_start":79,"line_end":79,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30396,"byte_end":30403,"line_start":86,"line_end":86,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30511,"byte_end":30518,"line_start":94,"line_end":94,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":31539,"byte_end":31543,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/lib.rs","byte_start":1679,"byte_end":1687,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":5}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":2775,"byte_end":2783,"line_start":8,"line_end":8,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":7161},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":3550,"byte_end":3551,"line_start":43,"line_end":43,"column_start":31,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":3917,"byte_end":3923,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":4032,"byte_end":4038,"line_start":78,"line_end":78,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":4285,"byte_end":4294,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":5293,"byte_end":5300,"line_start":140,"line_end":140,"column_start":18,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/bits.rs","byte_start":5576,"byte_end":5583,"line_start":156,"line_end":156,"column_start":31,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":7161}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":6820,"byte_end":6828,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":7272,"byte_end":7280,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":453},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":7490,"byte_end":7497,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/language.rs","byte_start":7631,"byte_end":7639,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":9592,"byte_end":9598,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13738,"byte_end":13749,"line_start":160,"line_end":160,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/phrase.rs","byte_start":13935,"byte_end":13941,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14250,"byte_end":14254,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14604,"byte_end":14608,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/mnemonic/seed.rs","byte_start":14690,"byte_end":14694,"line_start":31,"line_end":31,"column_start":15,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":15758,"byte_end":15769,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":18994,"byte_end":19005,"line_start":130,"line_end":130,"column_start":31,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/key_material.rs","byte_start":19118,"byte_end":19129,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":20792,"byte_end":20796,"line_start":42,"line_end":42,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":23904,"byte_end":23908,"line_start":152,"line_end":152,"column_start":22,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24006,"byte_end":24010,"line_start":159,"line_end":159,"column_start":16,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":24380,"byte_end":24389,"line_start":173,"line_end":173,"column_start":10,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25763,"byte_end":25772,"line_start":222,"line_end":222,"column_start":35,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":497},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":25887,"byte_end":25896,"line_start":229,"line_end":229,"column_start":20,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":497},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":26403,"byte_end":26413,"line_start":251,"line_end":251,"column_start":10,"column_end":20},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/path.rs","byte_start":26907,"byte_end":26917,"line_start":266,"line_end":266,"column_start":23,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":7161}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":28840,"byte_end":28847,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30043,"byte_end":30050,"line_start":67,"line_end":67,"column_start":22,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30139,"byte_end":30146,"line_start":73,"line_end":73,"column_start":23,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":2425}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30228,"byte_end":30235,"line_start":79,"line_end":79,"column_start":16,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30396,"byte_end":30403,"line_start":86,"line_end":86,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":30511,"byte_end":30518,"line_start":94,"line_end":94,"column_start":18,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/hkd32-0.6.0/src/pathbuf.rs","byte_start":31539,"byte_end":31543,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":480},"to":{"krate":4,"index":534}}]}