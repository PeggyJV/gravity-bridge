{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bip32","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bip39\"","--cfg","feature=\"default\"","--cfg","feature=\"k256\"","--cfg","feature=\"secp256k1\"","--cfg","feature=\"std\"","-C","metadata=675d750f2570f417","-C","extra-filename=-675d750f2570f417","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","bs58=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbs58-d8730135fef260e3.rmeta","--extern","hkd32=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libhkd32-ae087d070c7c71e9.rmeta","--extern","hmac=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libhmac-d470cf24dc521e75.rmeta","--extern","k256=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libk256-aa41e8ecd0744115.rmeta","--extern","ripemd160=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libripemd160-0bc44a41a45a1691.rmeta","--extern","sha2=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsha2-7620add3dbbab556.rmeta","--extern","subtle=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsubtle-e2f94bf36a34fd9e.rmeta","--extern","zeroize=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libzeroize-9efa0d1fc54d6e36.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbip32-675d750f2570f417.rmeta"},"prelude":{"crate_id":{"name":"bip32","disambiguator":[1119053664864714215,3158764114837174586]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":18,"id":{"name":"hmac","disambiguator":[15294886789366223087,6131833804343143221]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":19,"id":{"name":"crypto_mac","disambiguator":[6494323612098482869,693981281286547434]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":20,"id":{"name":"generic_array","disambiguator":[11660036351344994564,3930594429372963592]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":21,"id":{"name":"typenum","disambiguator":[15996057349867460478,6617918932531464244]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":22,"id":{"name":"subtle","disambiguator":[16473552840971905471,13383263026665092334]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":23,"id":{"name":"digest","disambiguator":[15437924665489029698,8650536242085247057]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":24,"id":{"name":"zeroize","disambiguator":[744669072465224746,17473627246014046881]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","num":25,"id":{"name":"zeroize_derive","disambiguator":[18017864088066273931,9406744853062868551]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":26,"id":{"name":"ripemd160","disambiguator":[17589313267133226991,3097440144106168950]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":27,"id":{"name":"block_buffer","disambiguator":[8859152241126613282,1637078903675025126]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":28,"id":{"name":"block_padding","disambiguator":[16767438399836447221,8907242898135851367]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":29,"id":{"name":"opaque_debug","disambiguator":[17739550807650243323,14013658468401020324]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":30,"id":{"name":"sha2","disambiguator":[9483505918612507167,7189243545371883239]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":31,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":32,"id":{"name":"cpuid_bool","disambiguator":[3264299262030168264,3357855747673141255]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":33,"id":{"name":"k256","disambiguator":[10049063934620716195,15322814902022824698]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":34,"id":{"name":"elliptic_curve","disambiguator":[8722838712850708487,14216125233081741416]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":35,"id":{"name":"ff","disambiguator":[10772863217640197424,18295049454361394925]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":36,"id":{"name":"rand_core","disambiguator":[8139118517281542286,12191278135173016247]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":37,"id":{"name":"getrandom","disambiguator":[13811811233254902674,13880380393548880828]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":38,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":39,"id":{"name":"group","disambiguator":[14759585461006320763,12950180433182515839]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":40,"id":{"name":"pkcs8","disambiguator":[14119616878716928870,2709589127819395639]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":41,"id":{"name":"der","disambiguator":[16533849354334248908,4897884399637859936]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":42,"id":{"name":"const_oid","disambiguator":[229544138340359289,14689160280420259787]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":43,"id":{"name":"base64ct","disambiguator":[559631286589222384,4087918704850658821]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":44,"id":{"name":"spki","disambiguator":[7904644845798324688,16626291071510500833]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":45,"id":{"name":"crypto_bigint","disambiguator":[414956437230983376,8115537097476538402]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":46,"id":{"name":"ecdsa","disambiguator":[10696157505278090643,10729871682303194269]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":47,"id":{"name":"signature","disambiguator":[15382111409520748529,8455399083572772702]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":48,"id":{"name":"sha3","disambiguator":[11546585034918642282,13690618237879837840]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","num":49,"id":{"name":"keccak","disambiguator":[3163085645553675056,3635668154721753718]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":50,"id":{"name":"hkd32","disambiguator":[16346688243348044347,9135525614749754850]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":51,"id":{"name":"once_cell","disambiguator":[15381452257217144295,7635182210418599630]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":52,"id":{"name":"pbkdf2","disambiguator":[13281890218039939027,9460762969815177360]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","num":53,"id":{"name":"password_hash","disambiguator":[2457512509526958121,6642540692331226433]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","num":54,"id":{"name":"bs58","disambiguator":[4215078748496438174,17381391654791031405]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":0,"byte_end":5406,"line_start":1,"line_end":159,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":680},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4267,"byte_end":4278,"line_start":119,"line_end":119,"column_start":19,"column_end":30},"alias_span":null,"name":"ChildNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4267,"byte_end":4278,"line_start":119,"line_end":119,"column_start":19,"column_end":30},"alias_span":null,"name":"ChildNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":701},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4292,"byte_end":4297,"line_start":120,"line_end":120,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4299,"byte_end":4305,"line_start":120,"line_end":120,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4343,"byte_end":4359,"line_start":122,"line_end":122,"column_start":16,"column_end":32},"alias_span":null,"name":"ExtendedKeyAttrs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4374,"byte_end":4392,"line_start":122,"line_end":122,"column_start":47,"column_end":65},"alias_span":null,"name":"ExtendedPrivateKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4406,"byte_end":4423,"line_start":122,"line_end":122,"column_start":79,"column_end":96},"alias_span":null,"name":"ExtendedPublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4433,"byte_end":4444,"line_start":123,"line_end":123,"column_start":9,"column_end":20},"alias_span":null,"name":"ExtendedKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4465,"byte_end":4471,"line_start":125,"line_end":125,"column_start":13,"column_end":19},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4491,"byte_end":4501,"line_start":126,"line_end":126,"column_start":19,"column_end":29},"alias_span":null,"name":"PrivateKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4503,"byte_end":4518,"line_start":126,"line_end":126,"column_start":31,"column_end":46},"alias_span":null,"name":"PrivateKeyBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4538,"byte_end":4547,"line_start":127,"line_end":127,"column_start":18,"column_end":27},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4549,"byte_end":4563,"line_start":127,"line_end":127,"column_start":29,"column_end":43},"alias_span":null,"name":"PublicKeyBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":50,"index":444},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4584,"byte_end":4592,"line_start":129,"line_end":129,"column_start":16,"column_end":24},"alias_span":null,"name":"KEY_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4653,"byte_end":4667,"line_start":132,"line_end":132,"column_start":33,"column_end":47},"alias_span":null,"name":"DerivationPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":50,"index":453},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4771,"byte_end":4779,"line_start":136,"line_end":136,"column_start":27,"column_end":35},"alias_span":null,"name":"Language","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":50,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4781,"byte_end":4787,"line_start":136,"line_end":136,"column_start":37,"column_end":43},"alias_span":null,"name":"Mnemonic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":50,"index":213},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4801,"byte_end":4805,"line_start":136,"line_end":136,"column_start":57,"column_end":61},"alias_span":null,"name":"Seed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4941,"byte_end":4945,"line_start":141,"line_end":141,"column_start":40,"column_end":44},"alias_span":null,"name":"XPrv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4959,"byte_end":4963,"line_start":141,"line_end":141,"column_start":58,"column_end":62},"alias_span":null,"name":"XPub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4970,"byte_end":4974,"line_start":142,"line_end":142,"column_start":5,"column_end":9},"alias_span":null,"name":"secp256k1","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":0,"byte_end":5406,"line_start":1,"line_end":159,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":45},{"krate":0,"index":70},{"krate":0,"index":369},{"krate":0,"index":450},{"krate":0,"index":492},{"krate":0,"index":553},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":679}],"decl_id":null,"docs":" Pure Rust implementation of\n [BIP-0032: Hierarchical Deterministic Wallets][bip32].","sig":null,"attributes":[{"value":"/ Pure Rust implementation of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":0,"byte_end":31,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/ [BIP-0032: Hierarchical Deterministic Wallets][bip32].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":32,"byte_end":90,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":91,"byte_end":94,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # About","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":95,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ BIP32 is an algorithm for generating a hierarchy of elliptic curve keys,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":107,"byte_end":183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ a.k.a. \"wallets\", from a single seed value. A related algorithm also","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":184,"byte_end":256,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ implemented by this crate, BIP39, provides a way to derive the seed value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":257,"byte_end":334,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ from a set of 24-words from a preset list, a.k.a. a \"mnemonic\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":335,"byte_end":402,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":403,"byte_end":406,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Backends","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":407,"byte_end":422,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ This crate provides a generic implementation of BIP32 which can be used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":423,"byte_end":498,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ with any backing provider which implements the [`PrivateKey`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":499,"byte_end":568,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ [`PublicKey`] traits. The following providers are built into this crate,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":569,"byte_end":645,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ under the following crate features:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":646,"byte_end":685,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":686,"byte_end":689,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - `secp256k1` (enabled by default): support for the pure Rust [`k256`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":690,"byte_end":764,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/   crate, with [`XPrv`] and [`XPub`] type aliases.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":765,"byte_end":818,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/ - `secp256k1-ffi`: support for Bitcoin Core's [libsecp256k1 C library],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":819,"byte_end":894,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/   as wrapped by the [`secp256k1` Rust crate].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":895,"byte_end":944,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":945,"byte_end":948,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Limitations and further work","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":949,"byte_end":984,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/ - Only 24-word BIP39 mnemonics are supported","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":985,"byte_end":1033,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ - BIP43, BIP44, BIP49, BIP84 not yet properly supported","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1034,"byte_end":1093,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1094,"byte_end":1097,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1098,"byte_end":1109,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ The following is an end-to-end example of how to generate a random BIP39","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1110,"byte_end":1186,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ mnemonic and use it to derive child keys according to a provided BIP32","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1187,"byte_end":1261,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ derivation path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1262,"byte_end":1282,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1283,"byte_end":1286,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Accessing `OsRng`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1287,"byte_end":1311,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ The following example uses `OsRng` for cryptographically secure random","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1312,"byte_end":1386,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ number generation. To use it, you need to include `rand_core` with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1387,"byte_end":1461,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ `std` feature by adding the following to `Cargo.toml`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1462,"byte_end":1520,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1521,"byte_end":1524,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1525,"byte_end":1536,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ rand_core = { version = \"0.6\", features = [\"std\"] }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1537,"byte_end":1592,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1593,"byte_end":1600,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1601,"byte_end":1604,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ (on embedded platforms, you will need to supply our own RNG)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1605,"byte_end":1669,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1670,"byte_end":1673,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ## Rust code example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1674,"byte_end":1698,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1699,"byte_end":1706,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1707,"byte_end":1766,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/ # #[cfg(all(feature = \"bip39\", feature = \"secp256k1\"))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1767,"byte_end":1826,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/ # {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1827,"byte_end":1834,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use bip32::{Mnemonic, Prefix, XPrv};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1835,"byte_end":1875,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1876,"byte_end":1901,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1902,"byte_end":1905,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Generate random Mnemonic using the default language (English)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1906,"byte_end":1974,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ let mnemonic = Mnemonic::random(&mut OsRng, Default::default());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":1975,"byte_end":2043,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Derive a BIP39 seed value using the given password","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2048,"byte_end":2105,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ let seed = mnemonic.to_seed(\"password\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2106,"byte_end":2150,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2151,"byte_end":2154,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Derive the root `XPrv` from the `seed` value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2155,"byte_end":2206,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/ let root_xprv = XPrv::new(&seed)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2207,"byte_end":2245,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(root_xprv, XPrv::derive_from_path(&seed, &\"m\".parse()?)?);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2246,"byte_end":2319,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2320,"byte_end":2323,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Derive a child `XPrv` using the provided BIP32 derivation path","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2324,"byte_end":2393,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ let child_path = \"m/0/2147483647'/1/2147483646'\";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2394,"byte_end":2447,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ let child_xprv = XPrv::derive_from_path(&seed, &child_path.parse()?)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2448,"byte_end":2522,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2523,"byte_end":2526,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Get the `XPub` associated with `child_xprv`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2527,"byte_end":2578,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/ let child_xpub = child_xprv.public_key();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2579,"byte_end":2624,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2625,"byte_end":2628,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // Serialize `child_xprv` as a string with the `xprv` prefix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2629,"byte_end":2694,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ let child_xprv_str = child_xprv.to_string(Prefix::XPRV);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2695,"byte_end":2755,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/ assert!(child_xprv_str.starts_with(\"xprv\"));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2756,"byte_end":2804,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2805,"byte_end":2808,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Serialize `child_xpub` as a string with the `xpub` prefix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2809,"byte_end":2874,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/ let child_xpub_str = child_xpub.to_string(Prefix::XPUB);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2875,"byte_end":2935,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/ assert!(child_xprv_str.starts_with(\"xprv\"));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2936,"byte_end":2984,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2985,"byte_end":2988,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Get the ECDSA/secp256k1 signing and verification keys for the xprv and xpub","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":2989,"byte_end":3071,"line_start":74,"line_end":74,"column_start":1,"column_end":83}},{"value":"/ let signing_key = child_xprv.private_key();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3072,"byte_end":3119,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/ let verification_key = child_xpub.public_key();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3120,"byte_end":3171,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3172,"byte_end":3175,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Sign and verify an example message using the derived keys.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3176,"byte_end":3241,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/ use bip32::secp256k1::ecdsa::{","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3242,"byte_end":3276,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/     signature::{Signer, Verifier},","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3277,"byte_end":3315,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/     Signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3316,"byte_end":3333,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/ };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3334,"byte_end":3340,"line_start":82,"line_end":82,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3341,"byte_end":3344,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let example_msg = b\"Hello, world!\";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3345,"byte_end":3384,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/ let signature: Signature = signing_key.sign(example_msg);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3385,"byte_end":3446,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ assert!(verification_key.verify(example_msg, &signature).is_ok());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3447,"byte_end":3517,"line_start":86,"line_end":86,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3518,"byte_end":3525,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3526,"byte_end":3538,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3539,"byte_end":3546,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3547,"byte_end":3554,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3555,"byte_end":3558,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ [bip32]: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3559,"byte_end":3634,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ [libsecp256k1 C library]: https://github.com/bitcoin-core/secp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3635,"byte_end":3706,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ [`secp256k1` Rust crate]: https://github.com/rust-bitcoin/rust-secp256k1/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3707,"byte_end":3784,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3786,"byte_end":3796,"line_start":96,"line_end":96,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3891,"byte_end":3935,"line_start":99,"line_end":99,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":3936,"byte_end":3999,"line_start":100,"line_end":100,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5669,"byte_end":5680,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"ChildNumber","qualname":"::child_number::ChildNumber","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index of a particular child key for a given (extended) private key.\n","sig":null,"attributes":[{"value":"/ Index of a particular child key for a given (extended) private key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5515,"byte_end":5586,"line_start":9,"line_end":9,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5681,"byte_end":5688,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"name":"0","qualname":"::child_number::ChildNumber::0","value":"u32","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5779,"byte_end":5788,"line_start":15,"line_end":15,"column_start":15,"column_end":24},"name":"BYTE_SIZE","qualname":"::child_number::ChildNumber::BYTE_SIZE","value":"usize","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Size of a child number when encoded as bytes.\n","sig":null,"attributes":[{"value":"/ Size of a child number when encoded as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5715,"byte_end":5764,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5877,"byte_end":5890,"line_start":18,"line_end":18,"column_start":15,"column_end":28},"name":"HARDENED_FLAG","qualname":"::child_number::ChildNumber::HARDENED_FLAG","value":"u32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Hardened child keys use indices 2^31 through 2^32-1.\n","sig":null,"attributes":[{"value":"/ Hardened child keys use indices 2^31 through 2^32-1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5806,"byte_end":5862,"line_start":17,"line_end":17,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6086,"byte_end":6089,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<ChildNumber>::new","value":"pub fn new(u32, bool) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`ChildNumber`] with the given index and hardened flag.","sig":null,"attributes":[{"value":"/ Create new [`ChildNumber`] with the given index and hardened flag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5912,"byte_end":5982,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5987,"byte_end":5990,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Returns an error if it is equal to or greater than [`Self::HARDENED_FLAG`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5995,"byte_end":6074,"line_start":22,"line_end":22,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6419,"byte_end":6429,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<ChildNumber>::from_bytes","value":"pub fn from_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a child number from the byte encoding.\n","sig":null,"attributes":[{"value":"/ Parse a child number from the byte encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6359,"byte_end":6407,"line_start":33,"line_end":33,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6575,"byte_end":6583,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<ChildNumber>::to_bytes","value":"pub fn to_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize this child number as bytes.\n","sig":null,"attributes":[{"value":"/ Serialize this child number as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6522,"byte_end":6563,"line_start":38,"line_end":38,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6770,"byte_end":6775,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"index","qualname":"<ChildNumber>::index","value":"pub fn index(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the index number for this [`ChildNumber`], i.e. with\n [`Self::HARDENED_FLAG`] cleared.\n","sig":null,"attributes":[{"value":"/ Get the index number for this [`ChildNumber`], i.e. with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6657,"byte_end":6717,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"/ [`Self::HARDENED_FLAG`] cleared.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6722,"byte_end":6758,"line_start":44,"line_end":44,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6903,"byte_end":6914,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"is_hardened","qualname":"<ChildNumber>::is_hardened","value":"pub fn is_hardened(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this child number within the hardened range?\n","sig":null,"attributes":[{"value":"/ Is this child number within the hardened range?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":6840,"byte_end":6891,"line_start":49,"line_end":49,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":53},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8799,"byte_end":8805,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8773,"byte_end":8789,"line_start":5,"line_end":5,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":702},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8967,"byte_end":8973,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Base58","qualname":"::error::Error::Base58","value":"Error::Base58","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Base58 errors.\n","sig":null,"attributes":[{"value":"/ Base58 errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8944,"byte_end":8962,"line_start":12,"line_end":12,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":704},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9017,"byte_end":9028,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"ChildNumber","qualname":"::error::Error::ChildNumber","value":"Error::ChildNumber","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Child number-related errors.\n","sig":null,"attributes":[{"value":"/ Child number-related errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8980,"byte_end":9012,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":706},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9065,"byte_end":9071,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::error::Error::Crypto","value":"Error::Crypto","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Cryptographic errors.\n","sig":null,"attributes":[{"value":"/ Cryptographic errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9035,"byte_end":9060,"line_start":18,"line_end":18,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":708},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9127,"byte_end":9133,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Decode","qualname":"::error::Error::Decode","value":"Error::Decode","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Decoding errors (not related to Base58).\n","sig":null,"attributes":[{"value":"/ Decoding errors (not related to Base58).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9078,"byte_end":9122,"line_start":21,"line_end":21,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":710},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9183,"byte_end":9188,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Depth","qualname":"::error::Error::Depth","value":"Error::Depth","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Maximum derivation depth exceeded.\n","sig":null,"attributes":[{"value":"/ Maximum derivation depth exceeded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9140,"byte_end":9178,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9224,"byte_end":9234,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"SeedLength","qualname":"::error::Error::SeedLength","value":"Error::SeedLength","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Seed length invalid.\n","sig":null,"attributes":[{"value":"/ Seed length invalid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9195,"byte_end":9219,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":701},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8932,"byte_end":8937,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error { Base58, ChildNumber, Crypto, Decode, Depth, SeedLength, }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712}],"decl_id":null,"docs":" Error type.\n","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8844,"byte_end":8859,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"non_exhaustive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":8905,"byte_end":8922,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16768,"byte_end":16784,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"ExtendedKeyAttrs","qualname":"::extended_key::attrs::ExtendedKeyAttrs","value":"ExtendedKeyAttrs { depth, parent_fingerprint, child_number, chain_code }","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"decl_id":null,"docs":" Extended key attributes: fields common to extended keys including depth,\n fingerprints, child numbers, and chain codes.\n","sig":null,"attributes":[{"value":"/ Extended key attributes: fields common to extended keys including depth,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16574,"byte_end":16650,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ fingerprints, child numbers, and chain codes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16651,"byte_end":16700,"line_start":6,"line_end":6,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":726},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16842,"byte_end":16847,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"depth","qualname":"::extended_key::attrs::ExtendedKeyAttrs::depth","value":"u8","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Depth in the key derivation hierarchy.\n","sig":null,"attributes":[{"value":"/ Depth in the key derivation hierarchy.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16791,"byte_end":16833,"line_start":9,"line_end":9,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16893,"byte_end":16911,"line_start":13,"line_end":13,"column_start":9,"column_end":27},"name":"parent_fingerprint","qualname":"::extended_key::attrs::ExtendedKeyAttrs::parent_fingerprint","value":"[u8; 4]","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Parent fingerprint.\n","sig":null,"attributes":[{"value":"/ Parent fingerprint.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16861,"byte_end":16884,"line_start":12,"line_end":12,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16960,"byte_end":16972,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"name":"child_number","qualname":"::extended_key::attrs::ExtendedKeyAttrs::child_number","value":"child_number::ChildNumber","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Child number.\n","sig":null,"attributes":[{"value":"/ Child number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16934,"byte_end":16951,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":17016,"byte_end":17026,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"chain_code","qualname":"::extended_key::attrs::ExtendedKeyAttrs::chain_code","value":"[u8; _]","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Chain code.\n","sig":null,"attributes":[{"value":"/ Chain code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/attrs.rs","byte_start":16992,"byte_end":17007,"line_start":18,"line_end":18,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":17879,"byte_end":17883,"line_start":31,"line_end":31,"column_start":10,"column_end":14},"name":"XPrv","qualname":"::extended_key::private_key::XPrv","value":"ExtendedPrivateKey<k256::ecdsa::SigningKey>","parent":null,"children":[],"decl_id":null,"docs":" Extended private secp256k1 ECDSA signing key.\n","sig":null,"attributes":[{"value":"/ Extended private secp256k1 ECDSA signing key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":17737,"byte_end":17786,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"secp256k1\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":17787,"byte_end":17816,"line_start":29,"line_end":29,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18205,"byte_end":18223,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"name":"ExtendedPrivateKey","qualname":"::extended_key::private_key::ExtendedPrivateKey","value":"ExtendedPrivateKey {  }","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"decl_id":null,"docs":" Extended private keys derived using BIP32.","sig":null,"attributes":[{"value":"/ Extended private keys derived using BIP32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":17932,"byte_end":17978,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":17979,"byte_end":17982,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Generic around a [`PrivateKey`] type. When the `secp256k1` feature of this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":17983,"byte_end":18061,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ crate is enabled, the [`XPrv`] type provides a convenient alias for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18062,"byte_end":18133,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ extended ECDSA/secp256k1 private keys.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18134,"byte_end":18176,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":183},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18460,"byte_end":18469,"line_start":52,"line_end":52,"column_start":15,"column_end":24},"name":"MAX_DEPTH","qualname":"::extended_key::private_key::ExtendedPrivateKey::<K>::MAX_DEPTH","value":"Depth","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Maximum derivation depth.\n","sig":null,"attributes":[{"value":"/ Maximum derivation depth.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18416,"byte_end":18445,"line_start":51,"line_end":51,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18645,"byte_end":18661,"line_start":57,"line_end":57,"column_start":12,"column_end":28},"name":"derive_from_path","qualname":"<ExtendedPrivateKey<K>>::derive_from_path","value":"pub fn derive_from_path<S>(S, &DerivationPath) -> Result<Self> where\nS: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Derive a child key from the given [`DerivationPath`].\n","sig":null,"attributes":[{"value":"/ Derive a child key from the given [`DerivationPath`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18493,"byte_end":18550,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18555,"byte_end":18580,"line_start":55,"line_end":55,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18978,"byte_end":18981,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<ExtendedPrivateKey<K>>::new","value":"pub fn new<S>(S) -> Result<Self> where S: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Create the root extended key for the given seed value.\n","sig":null,"attributes":[{"value":"/ Create the root extended key for the given seed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18908,"byte_end":18966,"line_start":66,"line_end":66,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":19831,"byte_end":19843,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"derive_child","qualname":"<ExtendedPrivateKey<K>>::derive_child","value":"pub fn derive_child(&Self, ChildNumber) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Derive a child key for a particular [`ChildNumber`].\n","sig":null,"attributes":[{"value":"/ Derive a child key for a particular [`ChildNumber`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":19763,"byte_end":19819,"line_start":91,"line_end":91,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21467,"byte_end":21478,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"private_key","qualname":"<ExtendedPrivateKey<K>>::private_key","value":"pub fn private_key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Borrow the derived private key value.\n","sig":null,"attributes":[{"value":"/ Borrow the derived private key value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21414,"byte_end":21455,"line_start":131,"line_end":131,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21589,"byte_end":21599,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"public_key","qualname":"<ExtendedPrivateKey<K>>::public_key","value":"pub fn public_key(&Self) -> ExtendedPublicKey<K::PublicKey>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the derived public key as bytes.\n","sig":null,"attributes":[{"value":"/ Serialize the derived public key as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21531,"byte_end":21577,"line_start":136,"line_end":136,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21791,"byte_end":21796,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"attrs","qualname":"<ExtendedPrivateKey<K>>::attrs","value":"pub fn attrs(&Self) -> &ExtendedKeyAttrs","parent":null,"children":[],"decl_id":null,"docs":" Get attributes for this key such as depth, parent fingerprint,\n child number, and chain code.\n","sig":null,"attributes":[{"value":"/ Get attributes for this key such as depth, parent fingerprint,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21675,"byte_end":21741,"line_start":141,"line_end":141,"column_start":5,"column_end":71}},{"value":"/ child number, and chain code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21746,"byte_end":21779,"line_start":142,"line_end":142,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21920,"byte_end":21928,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<ExtendedPrivateKey<K>>::to_bytes","value":"pub fn to_bytes(&Self) -> PrivateKeyBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize the raw private key as a byte array.\n","sig":null,"attributes":[{"value":"/ Serialize the raw private key as a byte array.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":21858,"byte_end":21908,"line_start":147,"line_end":147,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22061,"byte_end":22076,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"to_extended_key","qualname":"<ExtendedPrivateKey<K>>::to_extended_key","value":"pub fn to_extended_key(&Self, Prefix) -> ExtendedKey","parent":null,"children":[],"decl_id":null,"docs":" Serialize this key as an [`ExtendedKey`].\n","sig":null,"attributes":[{"value":"/ Serialize this key as an [`ExtendedKey`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22004,"byte_end":22049,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22533,"byte_end":22542,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"to_string","qualname":"<ExtendedPrivateKey<K>>::to_string","value":"pub fn to_string(&Self, Prefix) -> Zeroizing<String>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this key as a self-[`Zeroizing`] `String`.\n","sig":null,"attributes":[{"value":"/ Serialize this key as a self-[`Zeroizing`] `String`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22382,"byte_end":22438,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22443,"byte_end":22468,"line_start":166,"line_end":166,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":284},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25222,"byte_end":25226,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"XPub","qualname":"::extended_key::public_key::XPub","value":"ExtendedPublicKey<k256::ecdsa::VerifyingKey>","parent":null,"children":[],"decl_id":null,"docs":" Extended public secp256k1 ECDSA verification key.\n","sig":null,"attributes":[{"value":"/ Extended public secp256k1 ECDSA verification key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25076,"byte_end":25129,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"secp256k1\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25130,"byte_end":25159,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25585,"byte_end":25602,"line_start":27,"line_end":27,"column_start":12,"column_end":29},"name":"ExtendedPublicKey","qualname":"::extended_key::public_key::ExtendedPublicKey","value":"ExtendedPublicKey {  }","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"decl_id":null,"docs":" Extended public keys derived using BIP32.","sig":null,"attributes":[{"value":"/ Extended public keys derived using BIP32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25276,"byte_end":25321,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25322,"byte_end":25325,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Generic around a [`PublicKey`] type. When the `secp256k1` feature of this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25326,"byte_end":25403,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ crate is enabled, the [`XPub`] type provides a convenient alias for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25404,"byte_end":25475,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ extended ECDSA/secp256k1 public keys.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25476,"byte_end":25517,"line_start":25,"line_end":25,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25851,"byte_end":25861,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"public_key","qualname":"<ExtendedPublicKey<K>>::public_key","value":"pub fn public_key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Obtain the non-extended public key value `K`.\n","sig":null,"attributes":[{"value":"/ Obtain the non-extended public key value `K`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25790,"byte_end":25839,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":26029,"byte_end":26034,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"attrs","qualname":"<ExtendedPublicKey<K>>::attrs","value":"pub fn attrs(&Self) -> &ExtendedKeyAttrs","parent":null,"children":[],"decl_id":null,"docs":" Get attributes for this key such as depth, parent fingerprint,\n child number, and chain code.\n","sig":null,"attributes":[{"value":"/ Get attributes for this key such as depth, parent fingerprint,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25913,"byte_end":25979,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ child number, and chain code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25984,"byte_end":26017,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":26174,"byte_end":26185,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"fingerprint","qualname":"<ExtendedPublicKey<K>>::fingerprint","value":"pub fn fingerprint(&Self) -> KeyFingerprint","parent":null,"children":[],"decl_id":null,"docs":" Compute a 4-byte key fingerprint for this extended public key.\n","sig":null,"attributes":[{"value":"/ Compute a 4-byte key fingerprint for this extended public key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":26096,"byte_end":26162,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":26332,"byte_end":26344,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"derive_child","qualname":"<ExtendedPublicKey<K>>::derive_child","value":"pub fn derive_child(&Self, ChildNumber) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Derive a child key for a particular [`ChildNumber`].\n","sig":null,"attributes":[{"value":"/ Derive a child key for a particular [`ChildNumber`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":26264,"byte_end":26320,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27403,"byte_end":27411,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<ExtendedPublicKey<K>>::to_bytes","value":"pub fn to_bytes(&Self) -> PublicKeyBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize the raw public key as a byte array (e.g. SEC1-encoded).\n","sig":null,"attributes":[{"value":"/ Serialize the raw public key as a byte array (e.g. SEC1-encoded).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27322,"byte_end":27391,"line_start":84,"line_end":84,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27542,"byte_end":27557,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"to_extended_key","qualname":"<ExtendedPublicKey<K>>::to_extended_key","value":"pub fn to_extended_key(&Self, Prefix) -> ExtendedKey","parent":null,"children":[],"decl_id":null,"docs":" Serialize this key as an [`ExtendedKey`].\n","sig":null,"attributes":[{"value":"/ Serialize this key as an [`ExtendedKey`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27485,"byte_end":27530,"line_start":89,"line_end":89,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27872,"byte_end":27881,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"to_string","qualname":"<ExtendedPublicKey<K>>::to_string","value":"pub fn to_string(&Self, Prefix) -> String","parent":null,"children":[],"decl_id":null,"docs":" Serialize this key as a `String`.\n","sig":null,"attributes":[{"value":"/ Serialize this key as a `String`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27740,"byte_end":27777,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":27782,"byte_end":27807,"line_start":99,"line_end":99,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11466,"byte_end":11477,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"ExtendedKey","qualname":"::extended_key::ExtendedKey","value":"ExtendedKey { prefix, attrs, key_bytes }","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"decl_id":null,"docs":" Serialized extended key (e.g. `xprv` and `xpub`).\n","sig":null,"attributes":[{"value":"/ Serialized extended key (e.g. `xprv` and `xpub`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11384,"byte_end":11437,"line_start":15,"line_end":15,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":780},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11559,"byte_end":11565,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"prefix","qualname":"::extended_key::ExtendedKey::prefix","value":"prefix::Prefix","parent":{"krate":0,"index":779},"children":[],"decl_id":null,"docs":" [`Prefix`] (a.k.a. \"version\") of the key (e.g. `xprv`, `xpub`)\n","sig":null,"attributes":[{"value":"/ [`Prefix`] (a.k.a. \"version\") of the key (e.g. `xprv`, `xpub`)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11484,"byte_end":11550,"line_start":18,"line_end":18,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":781},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11617,"byte_end":11622,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"attrs","qualname":"::extended_key::ExtendedKey::attrs","value":"extended_key::attrs::ExtendedKeyAttrs","parent":{"krate":0,"index":779},"children":[],"decl_id":null,"docs":" Extended key attributes.\n","sig":null,"attributes":[{"value":"/ Extended key attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11580,"byte_end":11608,"line_start":21,"line_end":21,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":782},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11768,"byte_end":11777,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"key_bytes","qualname":"::extended_key::ExtendedKey::key_bytes","value":"[u8; _]","parent":{"krate":0,"index":779},"children":[],"decl_id":null,"docs":" Key material (may be public or private).","sig":null,"attributes":[{"value":"/ Key material (may be public or private).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11647,"byte_end":11691,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11696,"byte_end":11699,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Includes an extra byte for a public key's SEC1 tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11704,"byte_end":11759,"line_start":26,"line_end":26,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11909,"byte_end":11918,"line_start":32,"line_end":32,"column_start":15,"column_end":24},"name":"BYTE_SIZE","qualname":"::extended_key::ExtendedKey::BYTE_SIZE","value":"usize","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" Size of an extended key when deserialized into bytes from Base58.\n","sig":null,"attributes":[{"value":"/ Size of an extended key when deserialized into bytes from Base58.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11825,"byte_end":11894,"line_start":31,"line_end":31,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":351},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12079,"byte_end":12094,"line_start":37,"line_end":37,"column_start":15,"column_end":30},"name":"MAX_BASE58_SIZE","qualname":"::extended_key::ExtendedKey::MAX_BASE58_SIZE","value":"usize","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" Maximum size of a Base58Check-encoded extended key in bytes.","sig":null,"attributes":[{"value":"/ Maximum size of a Base58Check-encoded extended key in bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11937,"byte_end":12001,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12006,"byte_end":12009,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that extended keys can also be 111-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12014,"byte_end":12064,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12377,"byte_end":12389,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"write_base58","qualname":"<ExtendedKey>::write_base58","value":"pub fn write_base58<'a>(&Self, &'a mut [u8; ]) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Write a Base58-encoded key to the provided buffer, returning a `&str`\n containing the serialized data.","sig":null,"attributes":[{"value":"/ Write a Base58-encoded key to the provided buffer, returning a `&str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12114,"byte_end":12187,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ containing the serialized data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12192,"byte_end":12227,"line_start":40,"line_end":40,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12232,"byte_end":12235,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Note that this type also impls [`Display`] and therefore you can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12240,"byte_end":12308,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ obtain an owned string by calling `to_string()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":12313,"byte_end":12365,"line_start":43,"line_end":43,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29733,"byte_end":29739,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":789}],"decl_id":null,"docs":" BIP32 extended key prefixes a.k.a. \"versions\" (e.g. `xpub`, `xprv`)","sig":null,"attributes":[{"value":"/ BIP32 extended key prefixes a.k.a. \"versions\" (e.g. `xpub`, `xprv`)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29372,"byte_end":29443,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29444,"byte_end":29447,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The BIP32 spec describes these as \"versions\" and gives examples for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29448,"byte_end":29519,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `xprv`/`xpub` (mainnet) and `tprv`/`tpub` (testnet), however in practice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29520,"byte_end":29596,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ there are many more used (e.g. `ypub`, `zpub`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29597,"byte_end":29648,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29704,"byte_end":29721,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":406},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30000,"byte_end":30006,"line_start":36,"line_end":36,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::prefix::Prefix::LENGTH","value":"usize","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" Length of a prefix in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Length of a prefix in ASCII characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29942,"byte_end":29985,"line_start":35,"line_end":35,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":407},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30056,"byte_end":30060,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"name":"TPRV","qualname":"::prefix::Prefix::TPRV","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `tprv` prefix\n","sig":null,"attributes":[{"value":"/ `tprv` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30024,"byte_end":30041,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":408},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30154,"byte_end":30158,"line_start":42,"line_end":42,"column_start":15,"column_end":19},"name":"TPUB","qualname":"::prefix::Prefix::TPUB","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `tpub` prefix\n","sig":null,"attributes":[{"value":"/ `tpub` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30122,"byte_end":30139,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":409},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30252,"byte_end":30256,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"name":"XPRV","qualname":"::prefix::Prefix::XPRV","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `xprv` prefix\n","sig":null,"attributes":[{"value":"/ `xprv` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30220,"byte_end":30237,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":410},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30350,"byte_end":30354,"line_start":48,"line_end":48,"column_start":15,"column_end":19},"name":"XPUB","qualname":"::prefix::Prefix::XPUB","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `xpub` prefix\n","sig":null,"attributes":[{"value":"/ `xpub` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30318,"byte_end":30335,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":411},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30448,"byte_end":30452,"line_start":51,"line_end":51,"column_start":15,"column_end":19},"name":"YPRV","qualname":"::prefix::Prefix::YPRV","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `yprv` prefix\n","sig":null,"attributes":[{"value":"/ `yprv` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30416,"byte_end":30433,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":412},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30546,"byte_end":30550,"line_start":54,"line_end":54,"column_start":15,"column_end":19},"name":"YPUB","qualname":"::prefix::Prefix::YPUB","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `ypub` prefix\n","sig":null,"attributes":[{"value":"/ `ypub` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30514,"byte_end":30531,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":413},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30644,"byte_end":30648,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"ZPRV","qualname":"::prefix::Prefix::ZPRV","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `zprv` prefix\n","sig":null,"attributes":[{"value":"/ `zprv` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30612,"byte_end":30629,"line_start":56,"line_end":56,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":414},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30742,"byte_end":30746,"line_start":60,"line_end":60,"column_start":15,"column_end":19},"name":"ZPUB","qualname":"::prefix::Prefix::ZPUB","value":"Self","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" `zpub` prefix\n","sig":null,"attributes":[{"value":"/ `zpub` prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30710,"byte_end":30727,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31356,"byte_end":31376,"line_start":72,"line_end":72,"column_start":18,"column_end":38},"name":"from_parts_unchecked","qualname":"<Prefix>::from_parts_unchecked","value":"pub const fn from_parts_unchecked(&str, Version) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new prefix from the given 4-character string and version number.\n The main intended use case for this function is [`Prefix`] constants\n such as [`Prefix::XPRV`].","sig":null,"attributes":[{"value":"/ Create a new prefix from the given 4-character string and version number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30808,"byte_end":30885,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/ The main intended use case for this function is [`Prefix`] constants","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30890,"byte_end":30962,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ such as [`Prefix::XPRV`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":30967,"byte_end":30996,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31001,"byte_end":31004,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Use this function with care: No consistency check is performed! It is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31009,"byte_end":31082,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ up to the caller to ensure that the version number matches the prefix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31087,"byte_end":31161,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31166,"byte_end":31169,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Panics if `s` is not 4 chars long, or any of the chars lie outside of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31174,"byte_end":31247,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the supported range: lower case (`a..=z`) or upper case (`A..=Z`)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31252,"byte_end":31321,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ letters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31326,"byte_end":31338,"line_start":71,"line_end":71,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31853,"byte_end":31863,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Prefix>::from_bytes","value":"pub fn from_bytes([u8; ]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new prefix from the given encoded bytes.","sig":null,"attributes":[{"value":"/ Create a new prefix from the given encoded bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31695,"byte_end":31748,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31753,"byte_end":31756,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ These bytes represent the big endian serialization of a [`Version`] integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":31761,"byte_end":31841,"line_start":82,"line_end":82,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32622,"byte_end":32628,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Prefix>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the prefix as a string.\n","sig":null,"attributes":[{"value":"/ Get the prefix as a string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32579,"byte_end":32610,"line_start":103,"line_end":103,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32762,"byte_end":32771,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"is_public","qualname":"<Prefix>::is_public","value":"pub fn is_public(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a public key?\n","sig":null,"attributes":[{"value":"/ Is this a public key?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32725,"byte_end":32750,"line_start":108,"line_end":108,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32872,"byte_end":32882,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"is_private","qualname":"<Prefix>::is_private","value":"pub fn is_private(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a private key?\n","sig":null,"attributes":[{"value":"/ Is this a private key?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32834,"byte_end":32860,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32988,"byte_end":32995,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"version","qualname":"<Prefix>::version","value":"pub fn version(Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Version`] number.\n","sig":null,"attributes":[{"value":"/ Get the [`Version`] number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":32945,"byte_end":32976,"line_start":118,"line_end":118,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":33116,"byte_end":33124,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Prefix>::to_bytes","value":"pub fn to_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`Version`] number as big-endian bytes.\n","sig":null,"attributes":[{"value":"/ Serialize the [`Version`] number as big-endian bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":33047,"byte_end":33104,"line_start":123,"line_end":123,"column_start":5,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36373,"byte_end":36388,"line_start":9,"line_end":9,"column_start":10,"column_end":25},"name":"PrivateKeyBytes","qualname":"::private_key::PrivateKeyBytes","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Bytes which represent a private key.\n","sig":null,"attributes":[{"value":"/ Bytes which represent a private key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36323,"byte_end":36363,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":470},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36476,"byte_end":36486,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"PrivateKey","qualname":"::private_key::PrivateKey","value":"PrivateKey: Sized","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"decl_id":null,"docs":" Trait for key types which can be derived using BIP32.\n","sig":null,"attributes":[{"value":"/ Trait for key types which can be derived using BIP32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36408,"byte_end":36465,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":471},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36568,"byte_end":36577,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::private_key::PrivateKey::PublicKey","value":"type PublicKey: PublicKey;","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Public key type which corresponds to this private key.\n","sig":null,"attributes":[{"value":"/ Public key type which corresponds to this private key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36500,"byte_end":36558,"line_start":13,"line_end":13,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36638,"byte_end":36648,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::private_key::PrivateKey::from_bytes","value":"pub fn from_bytes(&PrivateKeyBytes) -> Result<Self>","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Initialize this key from bytes.\n","sig":null,"attributes":[{"value":"/ Initialize this key from bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36595,"byte_end":36630,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36736,"byte_end":36744,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::private_key::PrivateKey::to_bytes","value":"pub fn to_bytes(&Self) -> PrivateKeyBytes","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Serialize this key as bytes.\n","sig":null,"attributes":[{"value":"/ Serialize this key as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36696,"byte_end":36728,"line_start":19,"line_end":19,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36988,"byte_end":37000,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"derive_child","qualname":"::private_key::PrivateKey::derive_child","value":"pub fn derive_child(&Self, PrivateKeyBytes) -> Result<Self>","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Derive a child key from a parent key and the a provided tweak value,\n i.e. where `other` is referred to as \"I sub L\" in BIP32 and sourced\n from the left half of the HMAC-SHA-512 output.\n","sig":null,"attributes":[{"value":"/ Derive a child key from a parent key and the a provided tweak value,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36777,"byte_end":36849,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ i.e. where `other` is referred to as \"I sub L\" in BIP32 and sourced","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36854,"byte_end":36925,"line_start":23,"line_end":23,"column_start":5,"column_end":76}},{"value":"/ from the left half of the HMAC-SHA-512 output.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36930,"byte_end":36980,"line_start":24,"line_end":24,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":37131,"byte_end":37141,"line_start":28,"line_end":28,"column_start":8,"column_end":18},"name":"public_key","qualname":"::private_key::PrivateKey::public_key","value":"pub fn public_key(&Self) -> Self::PublicKey","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Get the [`Self::PublicKey`] that corresponds to this private key.\n","sig":null,"attributes":[{"value":"/ Get the [`Self::PublicKey`] that corresponds to this private key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":37054,"byte_end":37123,"line_start":27,"line_end":27,"column_start":5,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41221,"byte_end":41235,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"PublicKeyBytes","qualname":"::public_key::PublicKeyBytes","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Bytes which represent a public key.","sig":null,"attributes":[{"value":"/ Bytes which represent a public key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41124,"byte_end":41163,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41164,"byte_end":41167,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Includes an extra byte for an SEC1 tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41168,"byte_end":41211,"line_start":19,"line_end":19,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":535},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41327,"byte_end":41336,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"name":"PublicKey","qualname":"::public_key::PublicKey","value":"PublicKey: Sized","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" Trait for key types which can be derived using BIP32.\n","sig":null,"attributes":[{"value":"/ Trait for key types which can be derived using BIP32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41259,"byte_end":41316,"line_start":22,"line_end":22,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41393,"byte_end":41403,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::public_key::PublicKey::from_bytes","value":"pub fn from_bytes(PublicKeyBytes) -> Result<Self>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Initialize this key from bytes.\n","sig":null,"attributes":[{"value":"/ Initialize this key from bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41350,"byte_end":41385,"line_start":24,"line_end":24,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41489,"byte_end":41497,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::public_key::PublicKey::to_bytes","value":"pub fn to_bytes(&Self) -> PublicKeyBytes","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Serialize this key as bytes.\n","sig":null,"attributes":[{"value":"/ Serialize this key as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41449,"byte_end":41481,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41605,"byte_end":41617,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"derive_child","qualname":"::public_key::PublicKey::derive_child","value":"pub fn derive_child(&Self, PrivateKeyBytes) -> Result<Self>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Derive a child key from a parent key and a provided tweak value.\n","sig":null,"attributes":[{"value":"/ Derive a child key from a parent key and a provided tweak value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41529,"byte_end":41597,"line_start":30,"line_end":30,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41813,"byte_end":41824,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"fingerprint","qualname":"::public_key::PublicKey::fingerprint","value":"pub fn fingerprint(&Self) -> KeyFingerprint","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Compute a 4-byte key fingerprint for this public key.","sig":null,"attributes":[{"value":"/ Compute a 4-byte key fingerprint for this public key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41671,"byte_end":41728,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41733,"byte_end":41736,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Default implementation uses `RIPEMD160(SHA256(public_key))`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41741,"byte_end":41805,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46109,"byte_end":46123,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"DerivationPath","qualname":"::derivation_path::DerivationPath","value":"DerivationPath {  }","parent":null,"children":[{"krate":0,"index":807}],"decl_id":null,"docs":" Derivation paths within a hierarchical keyspace.\n","sig":null,"attributes":[{"value":"/ Derivation paths within a hierarchical keyspace.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":45948,"byte_end":46000,"line_start":13,"line_end":13,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46263,"byte_end":46267,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"iter","qualname":"<DerivationPath>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the [`ChildNumber`] values in this derivation path.\n","sig":null,"attributes":[{"value":"/ Iterate over the [`ChildNumber`] values in this derivation path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46183,"byte_end":46251,"line_start":21,"line_end":21,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46426,"byte_end":46434,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DerivationPath>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this derivation path empty? (i.e. the root)\n","sig":null,"attributes":[{"value":"/ Is this derivation path empty? (i.e. the root)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46364,"byte_end":46414,"line_start":26,"line_end":26,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46572,"byte_end":46575,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"len","qualname":"<DerivationPath>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the count of [`ChildNumber`] values in this derivation path.\n","sig":null,"attributes":[{"value":"/ Get the count of [`ChildNumber`] values in this derivation path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46492,"byte_end":46560,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46764,"byte_end":46770,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"parent","qualname":"<DerivationPath>::parent","value":"pub fn parent(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the parent [`DerivationPath`] for the current one.","sig":null,"attributes":[{"value":"/ Get the parent [`DerivationPath`] for the current one.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46629,"byte_end":46687,"line_start":36,"line_end":36,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46692,"byte_end":46695,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this is already the root path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46700,"byte_end":46752,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47038,"byte_end":47042,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"push","qualname":"<DerivationPath>::push","value":"pub fn push(&mut Self, ChildNumber)","parent":null,"children":[],"decl_id":null,"docs":" Push a [`ChildNumber`] onto an existing derivation path.\n","sig":null,"attributes":[{"value":"/ Push a [`ChildNumber`] onto an existing derivation path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46966,"byte_end":47026,"line_start":47,"line_end":47,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":673},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5115,"byte_end":5124,"line_start":147,"line_end":147,"column_start":10,"column_end":19},"name":"ChainCode","qualname":"::ChainCode","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Chain code: extension for both private and public keys which provides an\n additional 256-bits of entropy.\n","sig":null,"attributes":[{"value":"/ Chain code: extension for both private and public keys which provides an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":4993,"byte_end":5069,"line_start":145,"line_end":145,"column_start":1,"column_end":77}},{"value":"/ additional 256-bits of entropy.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5070,"byte_end":5105,"line_start":146,"line_end":146,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":675},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5175,"byte_end":5180,"line_start":150,"line_end":150,"column_start":10,"column_end":15},"name":"Depth","qualname":"::Depth","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Derivation depth.\n","sig":null,"attributes":[{"value":"/ Derivation depth.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5144,"byte_end":5165,"line_start":149,"line_end":149,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":676},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5225,"byte_end":5239,"line_start":153,"line_end":153,"column_start":10,"column_end":24},"name":"KeyFingerprint","qualname":"::KeyFingerprint","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" BIP32 key fingerprints.\n","sig":null,"attributes":[{"value":"/ BIP32 key fingerprints.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5188,"byte_end":5215,"line_start":152,"line_end":152,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":678},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5325,"byte_end":5332,"line_start":156,"line_end":156,"column_start":10,"column_end":17},"name":"Version","qualname":"::Version","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" BIP32 \"versions\": integer representation of the key prefix.\n","sig":null,"attributes":[{"value":"/ BIP32 \"versions\": integer representation of the key prefix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/lib.rs","byte_start":5252,"byte_end":5315,"line_start":155,"line_end":155,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5697,"byte_end":5708,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":7000,"byte_end":7011,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":7236,"byte_end":7247,"line_start":67,"line_end":67,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":7427,"byte_end":7438,"line_start":79,"line_end":79,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9256,"byte_end":9261,"line_start":31,"line_end":31,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9866,"byte_end":9871,"line_start":46,"line_end":46,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9911,"byte_end":9916,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10032,"byte_end":10037,"line_start":54,"line_end":54,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10164,"byte_end":10169,"line_start":60,"line_end":60,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10311,"byte_end":10316,"line_start":66,"line_end":66,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10538,"byte_end":10543,"line_start":74,"line_end":74,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10749,"byte_end":10754,"line_start":82,"line_end":82,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18363,"byte_end":18381,"line_start":47,"line_end":47,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22690,"byte_end":22708,"line_start":173,"line_end":173,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":23337,"byte_end":23355,"line_start":197,"line_end":197,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":23735,"byte_end":23753,"line_start":211,"line_end":211,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":23848,"byte_end":23866,"line_start":214,"line_end":214,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":24000,"byte_end":24018,"line_start":223,"line_end":223,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":24208,"byte_end":24226,"line_start":234,"line_end":234,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25739,"byte_end":25756,"line_start":35,"line_end":35,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":28016,"byte_end":28033,"line_start":106,"line_end":106,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":28319,"byte_end":28336,"line_start":118,"line_end":118,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":28525,"byte_end":28542,"line_start":129,"line_end":129,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11807,"byte_end":11818,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":13109,"byte_end":13120,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":13389,"byte_end":13400,"line_start":69,"line_end":69,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":14564,"byte_end":14575,"line_start":108,"line_end":108,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29929,"byte_end":29935,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":33773,"byte_end":33779,"line_start":149,"line_end":149,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":33859,"byte_end":33865,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34115,"byte_end":34121,"line_start":164,"line_end":164,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34253,"byte_end":34260,"line_start":170,"line_end":170,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34361,"byte_end":34368,"line_start":176,"line_end":176,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34473,"byte_end":34479,"line_start":182,"line_end":182,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34628,"byte_end":34634,"line_start":190,"line_end":190,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34928,"byte_end":34940,"line_start":202,"line_end":202,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":37281,"byte_end":37290,"line_start":33,"line_end":33,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":38130,"byte_end":38140,"line_start":60,"line_end":60,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":38796,"byte_end":38806,"line_start":84,"line_end":84,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":39033,"byte_end":39043,"line_start":92,"line_end":92,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":42102,"byte_end":42111,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":42872,"byte_end":42884,"line_start":65,"line_end":65,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":43427,"byte_end":43439,"line_start":83,"line_end":83,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":43670,"byte_end":43682,"line_start":91,"line_end":91,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46162,"byte_end":46176,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47159,"byte_end":47173,"line_start":53,"line_end":53,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47262,"byte_end":47276,"line_start":59,"line_end":59,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47524,"byte_end":47538,"line_start":71,"line_end":71,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47697,"byte_end":47711,"line_start":80,"line_end":80,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":48059,"byte_end":48073,"line_start":96,"line_end":96,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":5697,"byte_end":5708,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":7000,"byte_end":7011,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":680},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":7236,"byte_end":7247,"line_start":67,"line_end":67,"column_start":20,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":680},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/child_number.rs","byte_start":7427,"byte_end":7438,"line_start":79,"line_end":79,"column_start":18,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":680},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9256,"byte_end":9261,"line_start":31,"line_end":31,"column_start":18,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9866,"byte_end":9871,"line_start":46,"line_end":46,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":701},"to":{"krate":5,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":9911,"byte_end":9916,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10032,"byte_end":10037,"line_start":54,"line_end":54,"column_start":36,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10164,"byte_end":10169,"line_start":60,"line_end":60,"column_start":47,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10311,"byte_end":10316,"line_start":66,"line_end":66,"column_start":51,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10538,"byte_end":10543,"line_start":74,"line_end":74,"column_start":44,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/error.rs","byte_start":10749,"byte_end":10754,"line_start":82,"line_end":82,"column_start":35,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":18363,"byte_end":18381,"line_start":47,"line_end":47,"column_start":9,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":22690,"byte_end":22708,"line_start":173,"line_end":173,"column_start":28,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":745},"to":{"krate":22,"index":57}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":23337,"byte_end":23355,"line_start":197,"line_end":197,"column_start":19,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":23735,"byte_end":23753,"line_start":211,"line_end":211,"column_start":16,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":23848,"byte_end":23866,"line_start":214,"line_end":214,"column_start":23,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":24000,"byte_end":24018,"line_start":223,"line_end":223,"column_start":21,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/private_key.rs","byte_start":24208,"byte_end":24226,"line_start":234,"line_end":234,"column_start":34,"column_end":52},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":25739,"byte_end":25756,"line_start":35,"line_end":35,"column_start":9,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":28016,"byte_end":28033,"line_start":106,"line_end":106,"column_start":42,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":752},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":28319,"byte_end":28336,"line_start":118,"line_end":118,"column_start":21,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":752},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key/public_key.rs","byte_start":28525,"byte_end":28542,"line_start":129,"line_end":129,"column_start":34,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":752},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":11807,"byte_end":11818,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":13109,"byte_end":13120,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":13389,"byte_end":13400,"line_start":69,"line_end":69,"column_start":18,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/extended_key.rs","byte_start":14564,"byte_end":14575,"line_start":108,"line_end":108,"column_start":15,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":779},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":29929,"byte_end":29935,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":33773,"byte_end":33779,"line_start":149,"line_end":149,"column_start":21,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":33859,"byte_end":33865,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34115,"byte_end":34121,"line_start":164,"line_end":164,"column_start":18,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34253,"byte_end":34260,"line_start":170,"line_end":170,"column_start":23,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":678},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34361,"byte_end":34368,"line_start":176,"line_end":176,"column_start":24,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":678},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34473,"byte_end":34479,"line_start":182,"line_end":182,"column_start":27,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34628,"byte_end":34634,"line_start":190,"line_end":190,"column_start":25,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/prefix.rs","byte_start":34928,"byte_end":34940,"line_start":202,"line_end":202,"column_start":16,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":36488,"byte_end":36493,"line_start":12,"line_end":12,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":470}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":37281,"byte_end":37290,"line_start":33,"line_end":33,"column_start":27,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":33,"index":1190},"to":{"krate":0,"index":470}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":38130,"byte_end":38140,"line_start":60,"line_end":60,"column_start":34,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":33,"index":1523},"to":{"krate":0,"index":470}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":38796,"byte_end":38806,"line_start":84,"line_end":84,"column_start":34,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":33,"index":1523},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/private_key.rs","byte_start":39033,"byte_end":39043,"line_start":92,"line_end":92,"column_start":35,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":33,"index":1523},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":41338,"byte_end":41343,"line_start":23,"line_end":23,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":42102,"byte_end":42111,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":33,"index":1189},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":42872,"byte_end":42884,"line_start":65,"line_end":65,"column_start":33,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":33,"index":1527},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":43427,"byte_end":43439,"line_start":83,"line_end":83,"column_start":34,"column_end":46},"kind":{"Impl":{"id":43}},"from":{"krate":33,"index":1527},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/public_key.rs","byte_start":43670,"byte_end":43682,"line_start":91,"line_end":91,"column_start":35,"column_end":47},"kind":{"Impl":{"id":44}},"from":{"krate":33,"index":1527},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":46162,"byte_end":46176,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47159,"byte_end":47173,"line_start":53,"line_end":53,"column_start":31,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":806},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47262,"byte_end":47276,"line_start":59,"line_end":59,"column_start":18,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":806},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47524,"byte_end":47538,"line_start":71,"line_end":71,"column_start":30,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":806},"to":{"krate":1,"index":7007}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":47697,"byte_end":47711,"line_start":80,"line_end":80,"column_start":18,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":806},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bip32-0.2.1/src/derivation_path.rs","byte_start":48059,"byte_end":48073,"line_start":96,"line_end":96,"column_start":23,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":806},"to":{"krate":1,"index":6998}}]}