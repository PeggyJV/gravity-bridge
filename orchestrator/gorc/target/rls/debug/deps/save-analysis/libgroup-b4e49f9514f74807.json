{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","group","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b4e49f9514f74807","-C","extra-filename=-b4e49f9514f74807","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","ff=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libff-b3101f6a112947f8.rmeta","--extern","rand_core=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/librand_core-7aef63c7b7031ab2.rmeta","--extern","subtle=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsubtle-e2f94bf36a34fd9e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libgroup-b4e49f9514f74807.rmeta"},"prelude":{"crate_id":{"name":"group","disambiguator":[14759585461006320763,12950180433182515839]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":4,"id":{"name":"ff","disambiguator":[10772863217640197424,18295049454361394925]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":5,"id":{"name":"rand_core","disambiguator":[8139118517281542286,12191278135173016247]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":7,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":8,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":9,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":10,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":20,"id":{"name":"getrandom","disambiguator":[13811811233254902674,13880380393548880828]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":22,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","num":23,"id":{"name":"subtle","disambiguator":[16473552840971905471,13383263026665092334]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":0,"byte_end":6116,"line_start":1,"line_end":174,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":216,"byte_end":218,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"alias_span":null,"name":"ff","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":0,"byte_end":6116,"line_start":1,"line_end":174,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":105},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":194}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"deny(broken_intra_doc_links)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":65,"byte_end":97,"line_start":3,"line_end":3,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cofactor","qualname":"::cofactor","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":97}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6446,"byte_end":6459,"line_start":10,"line_end":10,"column_start":11,"column_end":24},"name":"CofactorGroup","qualname":"::cofactor::CofactorGroup","value":"CofactorGroup: Group + GroupEncoding + GroupOps<<Self as CofactorGroup>::Subgroup> +\nGroupOpsOwned<<Self as CofactorGroup>::Subgroup>","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" This trait represents an element of a cryptographic group with a large prime-order\n subgroup and a comparatively-small cofactor.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a cryptographic group with a large prime-order","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6300,"byte_end":6386,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ subgroup and a comparatively-small cofactor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6387,"byte_end":6435,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6775,"byte_end":6783,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"Subgroup","qualname":"::cofactor::CofactorGroup::Subgroup","value":"type Subgroup: PrimeGroup<Scalar = Self::Scalar> + Into<Self>;","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" The large prime-order subgroup in which cryptographic operations are performed.\n If `Self` implements `PrimeGroup`, then `Self::Subgroup` may be `Self`.\n","sig":null,"attributes":[{"value":"/ The large prime-order subgroup in which cryptographic operations are performed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6602,"byte_end":6685,"line_start":16,"line_end":16,"column_start":5,"column_end":88}},{"value":"/ If `Self` implements `PrimeGroup`, then `Self::Subgroup` may be `Self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6690,"byte_end":6765,"line_start":17,"line_end":17,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7333,"byte_end":7347,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"clear_cofactor","qualname":"::cofactor::CofactorGroup::clear_cofactor","value":"pub fn clear_cofactor(&Self) -> Self::Subgroup","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Maps `self` to the prime-order subgroup by multiplying this element by some\n `k`-multiple of the cofactor.","sig":null,"attributes":[{"value":"/ Maps `self` to the prime-order subgroup by multiplying this element by some","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6838,"byte_end":6917,"line_start":20,"line_end":20,"column_start":5,"column_end":84}},{"value":"/ `k`-multiple of the cofactor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6922,"byte_end":6955,"line_start":21,"line_end":21,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6960,"byte_end":6963,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The value `k` does not vary between inputs for a given implementation, but may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6968,"byte_end":7050,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ vary between different implementations of `CofactorGroup` because some groups have","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7055,"byte_end":7141,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ more efficient methods of clearing the cofactor when `k` is allowed to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7146,"byte_end":7223,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/ different than `1`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7228,"byte_end":7251,"line_start":26,"line_end":26,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7256,"byte_end":7259,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements [`PrimeGroup`], this returns `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7264,"byte_end":7325,"line_start":28,"line_end":28,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7533,"byte_end":7546,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"into_subgroup","qualname":"::cofactor::CofactorGroup::into_subgroup","value":"pub fn into_subgroup(Self) -> CtOption<Self::Subgroup>","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Returns `self` if it is contained in the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Returns `self` if it is contained in the prime-order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7379,"byte_end":7445,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7450,"byte_end":7453,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements [`PrimeGroup`], this returns `Some(self)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7458,"byte_end":7525,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7784,"byte_end":7798,"line_start":41,"line_end":41,"column_start":8,"column_end":22},"name":"is_small_order","qualname":"::cofactor::CofactorGroup::is_small_order","value":"pub fn is_small_order(&Self) -> Choice","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Determines if this element is of small order.","sig":null,"attributes":[{"value":"/ Determines if this element is of small order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7587,"byte_end":7636,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7641,"byte_end":7644,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7649,"byte_end":7661,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ - `true` if `self` is in the torsion subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7666,"byte_end":7716,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"/ - `false` if `self` is not in the torsion subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7721,"byte_end":7776,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8203,"byte_end":8218,"line_start":52,"line_end":52,"column_start":8,"column_end":23},"name":"is_torsion_free","qualname":"::cofactor::CofactorGroup::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> Choice","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Determines if this element is \"torsion free\", i.e., is contained in the\n prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determines if this element is \"torsion free\", i.e., is contained in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7873,"byte_end":7948,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ prime-order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7953,"byte_end":7978,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7983,"byte_end":7986,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":7991,"byte_end":8003,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/ - `true` if `self` has trivial torsion and is in the prime-order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8008,"byte_end":8086,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ - `false` if `self` has non-zero torsion component and is not in the prime-order","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8091,"byte_end":8175,"line_start":50,"line_end":50,"column_start":5,"column_end":89}},{"value":"/   subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8180,"byte_end":8195,"line_start":51,"line_end":51,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8364,"byte_end":8377,"line_start":57,"line_end":57,"column_start":11,"column_end":24},"name":"CofactorCurve","qualname":"::cofactor::CofactorCurve","value":"CofactorCurve: Curve<AffineRepr = <Self as CofactorCurve>::Affine> + CofactorGroup","parent":null,"children":[{"krate":0,"index":95}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8240,"byte_end":8312,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8313,"byte_end":8353,"line_start":56,"line_end":56,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8462,"byte_end":8468,"line_start":60,"line_end":60,"column_start":10,"column_end":16},"name":"Affine","qualname":"::cofactor::CofactorCurve::Affine","value":"type Affine: CofactorCurveAffine<Curve = Self, Scalar = Self::Scalar>\n        + Mul<Self::Scalar, Output = Self>\n        + for<'r> Mul<Self::Scalar, Output = Self>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8746,"byte_end":8765,"line_start":67,"line_end":67,"column_start":11,"column_end":30},"name":"CofactorCurveAffine","qualname":"::cofactor::CofactorCurveAffine","value":"CofactorCurveAffine: GroupEncoding + Copy + Clone + Sized + Send + Sync + fmt::Debug + PartialEq +\nEq + 'static + Neg<Output = Self> + Mul<<Self as CofactorCurveAffine>::Scalar,\nOutput = <Self as CofactorCurveAffine>::Curve> +\nfor<'r> Mul<<Self as CofactorCurveAffine>::Scalar, Output =\n<Self as CofactorCurveAffine>::Curve>","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8625,"byte_end":8694,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8695,"byte_end":8735,"line_start":66,"line_end":66,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9157,"byte_end":9163,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::cofactor::CofactorCurveAffine::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9186,"byte_end":9191,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Curve","qualname":"::cofactor::CofactorCurveAffine::Curve","value":"type Curve: CofactorCurve<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9293,"byte_end":9301,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"identity","qualname":"::cofactor::CofactorCurveAffine::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9251,"byte_end":9285,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9376,"byte_end":9385,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"generator","qualname":"::cofactor::CofactorCurveAffine::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9318,"byte_end":9368,"line_start":91,"line_end":91,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9503,"byte_end":9514,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::cofactor::CofactorCurveAffine::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9402,"byte_end":9468,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9473,"byte_end":9495,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9600,"byte_end":9608,"line_start":99,"line_end":99,"column_start":8,"column_end":16},"name":"to_curve","qualname":"::cofactor::CofactorCurveAffine::to_curve","value":"pub fn to_curve(&Self) -> Self::Curve","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Converts this element to its curve representation.\n","sig":null,"attributes":[{"value":"/ Converts this element to its curve representation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9538,"byte_end":9592,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prime","qualname":"::prime","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":9846,"byte_end":9856,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"PrimeGroup","qualname":"::prime::PrimeGroup","value":"PrimeGroup: Group + GroupEncoding","parent":null,"children":[],"decl_id":null,"docs":" This trait represents an element of a prime-order cryptographic group.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a prime-order cryptographic group.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":9761,"byte_end":9835,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10008,"byte_end":10018,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::prime::PrimeCurve","value":"PrimeCurve: Curve<AffineRepr = <Self as PrimeCurve>::Affine> + PrimeGroup","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":9884,"byte_end":9956,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":9957,"byte_end":9997,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10093,"byte_end":10099,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Affine","qualname":"::prime::PrimeCurve::Affine","value":"type Affine: PrimeCurveAffine<Curve = Self, Scalar = Self::Scalar>\n        + Mul<Self::Scalar, Output = Self>\n        + for<'r> Mul<Self::Scalar, Output = Self>;","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":136},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10374,"byte_end":10390,"line_start":21,"line_end":21,"column_start":11,"column_end":27},"name":"PrimeCurveAffine","qualname":"::prime::PrimeCurveAffine","value":"PrimeCurveAffine: GroupEncoding + Copy + Clone + Sized + Send + Sync + fmt::Debug + PartialEq +\nEq + 'static + Neg<Output = Self> + Mul<<Self as PrimeCurveAffine>::Scalar,\nOutput = <Self as PrimeCurveAffine>::Curve> +\nfor<'r> Mul<<Self as PrimeCurveAffine>::Scalar, Output =\n<Self as PrimeCurveAffine>::Curve>","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10253,"byte_end":10322,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10323,"byte_end":10363,"line_start":20,"line_end":20,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10747,"byte_end":10753,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::prime::PrimeCurveAffine::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10776,"byte_end":10781,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"name":"Curve","qualname":"::prime::PrimeCurveAffine::Curve","value":"type Curve: PrimeCurve<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10880,"byte_end":10888,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"identity","qualname":"::prime::PrimeCurveAffine::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10838,"byte_end":10872,"line_start":39,"line_end":39,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10963,"byte_end":10972,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"generator","qualname":"::prime::PrimeCurveAffine::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10905,"byte_end":10955,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":11090,"byte_end":11101,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::prime::PrimeCurveAffine::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10989,"byte_end":11055,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":11060,"byte_end":11082,"line_start":46,"line_end":46,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":11187,"byte_end":11195,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"to_curve","qualname":"::prime::PrimeCurveAffine::to_curve","value":"pub fn to_curve(&Self) -> Self::Curve","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Converts this element to its curve representation.\n","sig":null,"attributes":[{"value":"/ Converts this element to its curve representation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":11125,"byte_end":11179,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":644,"byte_end":652,"line_start":30,"line_end":30,"column_start":11,"column_end":19},"name":"GroupOps","qualname":"::GroupOps","value":"GroupOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + AddAssign<Rhs> +\nSubAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for types with a group operation.\n","sig":null,"attributes":[{"value":"/ A helper trait for types with a group operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":581,"byte_end":633,"line_start":29,"line_end":29,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1001,"byte_end":1014,"line_start":41,"line_end":41,"column_start":11,"column_end":24},"name":"GroupOpsOwned","qualname":"::GroupOpsOwned","value":"GroupOpsOwned<Rhs = Self, Output = Self>: for<'r> GroupOps<&'r Rhs, Output>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for references with a group operation.\n","sig":null,"attributes":[{"value":"/ A helper trait for references with a group operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":933,"byte_end":990,"line_start":40,"line_end":40,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1262,"byte_end":1271,"line_start":45,"line_end":45,"column_start":11,"column_end":20},"name":"ScalarMul","qualname":"::ScalarMul","value":"ScalarMul<Rhs, Output = Self>: Mul<Rhs, Output = Output> + MulAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for types implementing group scalar multiplication.\n","sig":null,"attributes":[{"value":"/ A helper trait for types implementing group scalar multiplication.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1181,"byte_end":1251,"line_start":44,"line_end":44,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1532,"byte_end":1546,"line_start":51,"line_end":51,"column_start":11,"column_end":25},"name":"ScalarMulOwned","qualname":"::ScalarMulOwned","value":"ScalarMulOwned<Rhs, Output = Self>: for<'r> ScalarMul<&'r Rhs, Output>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for references implementing group scalar multiplication.\n","sig":null,"attributes":[{"value":"/ A helper trait for references implementing group scalar multiplication.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1446,"byte_end":1521,"line_start":50,"line_end":50,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1782,"byte_end":1787,"line_start":55,"line_end":55,"column_start":11,"column_end":16},"name":"Group","qualname":"::Group","value":"Group: Clone + Copy + fmt::Debug + Eq + Sized + Send + Sync + 'static + Sum +\nfor<'a> Sum<&'a Self> + Neg<Output = Self> + GroupOps + GroupOpsOwned +\nScalarMul<<Self as Group>::Scalar> + ScalarMulOwned<<Self as Group>::Scalar>","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" This trait represents an element of a cryptographic group.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a cryptographic group.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1709,"byte_end":1771,"line_start":54,"line_end":54,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2143,"byte_end":2149,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::Group::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Scalars modulo the order of this group's scalar field.\n","sig":null,"attributes":[{"value":"/ Scalars modulo the order of this group's scalar field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2075,"byte_end":2133,"line_start":72,"line_end":72,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2371,"byte_end":2377,"line_start":79,"line_end":79,"column_start":8,"column_end":14},"name":"random","qualname":"::Group::random","value":"pub fn random<impl RngCore: RngCore>(impl RngCore) -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random from the non-identity elements of\n this group.","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random from the non-identity elements of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2168,"byte_end":2251,"line_start":75,"line_end":75,"column_start":5,"column_end":88}},{"value":"/ this group.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2256,"byte_end":2271,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2276,"byte_end":2279,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function is non-deterministic, and samples from the user-provided RNG.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2284,"byte_end":2363,"line_start":78,"line_end":78,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2490,"byte_end":2498,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"identity","qualname":"::Group::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Returns the additive identity, also known as the \"neutral element\".\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, also known as the \"neutral element\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2411,"byte_end":2482,"line_start":81,"line_end":81,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2581,"byte_end":2590,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"generator","qualname":"::Group::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Returns a fixed generator of the prime-order subgroup.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of the prime-order subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2515,"byte_end":2573,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2660,"byte_end":2671,"line_start":88,"line_end":88,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::Group::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Determines if this point is the identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is the identity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2607,"byte_end":2652,"line_start":87,"line_end":87,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2744,"byte_end":2750,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"double","qualname":"::Group::double","value":"pub fn double(&Self) -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2695,"byte_end":2720,"line_start":90,"line_end":90,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2725,"byte_end":2736,"line_start":91,"line_end":91,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2848,"byte_end":2853,"line_start":96,"line_end":96,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: Group + GroupOps<<Self as Curve>::AffineRepr> +\nGroupOpsOwned<<Self as Curve>::AffineRepr>","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2770,"byte_end":2837,"line_start":95,"line_end":95,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3020,"byte_end":3030,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"name":"AffineRepr","qualname":"::Curve::AffineRepr","value":"type AffineRepr;","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The affine representation for this elliptic curve.\n","sig":null,"attributes":[{"value":"/ The affine representation for this elliptic curve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2956,"byte_end":3010,"line_start":99,"line_end":99,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3168,"byte_end":3183,"line_start":104,"line_end":104,"column_start":8,"column_end":23},"name":"batch_normalize","qualname":"::Curve::batch_normalize","value":"pub fn batch_normalize(&[Self], &mut [Self::AffineRepr])","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Converts a batch of projective elements into affine elements. This function will\n panic if `p.len() != q.len()`.\n","sig":null,"attributes":[{"value":"/ Converts a batch of projective elements into affine elements. This function will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3037,"byte_end":3121,"line_start":102,"line_end":102,"column_start":5,"column_end":89}},{"value":"/ panic if `p.len() != q.len()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3126,"byte_end":3160,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3434,"byte_end":3443,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"to_affine","qualname":"::Curve::to_affine","value":"pub fn to_affine(&Self) -> Self::AffineRepr","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3369,"byte_end":3426,"line_start":112,"line_end":112,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3485,"byte_end":3498,"line_start":116,"line_end":116,"column_start":11,"column_end":24},"name":"GroupEncoding","qualname":"::GroupEncoding","value":"GroupEncoding: Sized","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4415,"byte_end":4419,"line_start":137,"line_end":137,"column_start":10,"column_end":14},"name":"Repr","qualname":"::GroupEncoding::Repr","value":"type Repr: Default + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The encoding of group elements.","sig":null,"attributes":[{"value":"/ The encoding of group elements.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3512,"byte_end":3547,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3552,"byte_end":3555,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `Default` implementation is not required to return a valid point encoding. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3560,"byte_end":3646,"line_start":119,"line_end":119,"column_start":5,"column_end":91}},{"value":"/ bound is present to enable encodings to be constructed generically:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3651,"byte_end":3722,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3727,"byte_end":3734,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use group::GroupEncoding;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3739,"byte_end":3770,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/ # use subtle::CtOption;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3775,"byte_end":3802,"line_start":123,"line_end":123,"column_start":5,"column_end":32}},{"value":"/ # struct G;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3807,"byte_end":3822,"line_start":124,"line_end":124,"column_start":5,"column_end":20}},{"value":"/ # impl GroupEncoding for G {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3827,"byte_end":3859,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/ #     type Repr = [u8; 0];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3864,"byte_end":3894,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ #     fn from_bytes(bytes: &Self::Repr) -> CtOption<Self> { unimplemented!() }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3899,"byte_end":3981,"line_start":127,"line_end":127,"column_start":5,"column_end":87}},{"value":"/ #     fn from_bytes_unchecked(bytes: &Self::Repr) -> CtOption<Self> { unimplemented!() }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3986,"byte_end":4078,"line_start":128,"line_end":128,"column_start":5,"column_end":97}},{"value":"/ #     fn to_bytes(&self) -> Self::Repr { unimplemented!() }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4083,"byte_end":4146,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4151,"byte_end":4158,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # let buf = &[0u8; 0][..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4163,"byte_end":4193,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ let mut encoding = <G as GroupEncoding>::Repr::default();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4198,"byte_end":4259,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ encoding.as_mut().copy_from_slice(buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4264,"byte_end":4307,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4312,"byte_end":4319,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4324,"byte_end":4327,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ It is recommended that the default should be the all-zeroes encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4332,"byte_end":4405,"line_start":136,"line_end":136,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4533,"byte_end":4543,"line_start":140,"line_end":140,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::GroupEncoding::from_bytes","value":"pub fn from_bytes(&Self::Repr) -> CtOption<Self>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Attempts to deserialize a group element from its encoding.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize a group element from its encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4463,"byte_end":4525,"line_start":139,"line_end":139,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4886,"byte_end":4906,"line_start":147,"line_end":147,"column_start":8,"column_end":28},"name":"from_bytes_unchecked","qualname":"::GroupEncoding::from_bytes_unchecked","value":"pub fn from_bytes_unchecked(&Self::Repr) -> CtOption<Self>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Attempts to deserialize a group element, not checking if the element is valid.","sig":null,"attributes":[{"value":"/ Attempts to deserialize a group element, not checking if the element is valid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4588,"byte_end":4670,"line_start":142,"line_end":142,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4675,"byte_end":4678,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ **This is dangerous to call unless you trust the bytes you are reading; otherwise,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4683,"byte_end":4769,"line_start":144,"line_end":144,"column_start":5,"column_end":91}},{"value":"/ API invariants may be broken.** Please consider using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4774,"byte_end":4831,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ [`GroupEncoding::from_bytes`] instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4836,"byte_end":4878,"line_start":146,"line_end":146,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5136,"byte_end":5144,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::GroupEncoding::to_bytes","value":"pub fn to_bytes(&Self) -> Self::Repr","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Converts this element into its byte encoding. This may or may not support\n encoding the identity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its byte encoding. This may or may not support","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":4951,"byte_end":5028,"line_start":149,"line_end":149,"column_start":5,"column_end":82}},{"value":"/ encoding the identity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5033,"byte_end":5059,"line_start":150,"line_end":150,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5284,"byte_end":5304,"line_start":157,"line_end":157,"column_start":11,"column_end":31},"name":"UncompressedEncoding","qualname":"::UncompressedEncoding","value":"UncompressedEncoding: Sized","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Affine representation of a point on an elliptic curve that has a defined uncompressed\n encoding.\n","sig":null,"attributes":[{"value":"/ Affine representation of a point on an elliptic curve that has a defined uncompressed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5170,"byte_end":5259,"line_start":155,"line_end":155,"column_start":1,"column_end":90}},{"value":"/ encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5260,"byte_end":5273,"line_start":156,"line_end":156,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5323,"byte_end":5335,"line_start":158,"line_end":158,"column_start":10,"column_end":22},"name":"Uncompressed","qualname":"::UncompressedEncoding::Uncompressed","value":"type Uncompressed: Default + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5457,"byte_end":5474,"line_start":161,"line_end":161,"column_start":8,"column_end":25},"name":"from_uncompressed","qualname":"::UncompressedEncoding::from_uncompressed","value":"pub fn from_uncompressed(&Self::Uncompressed) -> CtOption<Self>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Attempts to deserialize an element from its uncompressed encoding.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize an element from its uncompressed encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5379,"byte_end":5449,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5873,"byte_end":5900,"line_start":169,"line_end":169,"column_start":8,"column_end":35},"name":"from_uncompressed_unchecked","qualname":"::UncompressedEncoding::from_uncompressed_unchecked","value":"pub fn from_uncompressed_unchecked(&Self::Uncompressed) -> CtOption<Self>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Attempts to deserialize an uncompressed element, not checking if the element is in\n the correct subgroup.","sig":null,"attributes":[{"value":"/ Attempts to deserialize an uncompressed element, not checking if the element is in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5527,"byte_end":5613,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ the correct subgroup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5618,"byte_end":5643,"line_start":164,"line_end":164,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5648,"byte_end":5651,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ **This is dangerous to call unless you trust the bytes you are reading; otherwise,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5656,"byte_end":5742,"line_start":166,"line_end":166,"column_start":5,"column_end":91}},{"value":"/ API invariants may be broken.** Please consider using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5747,"byte_end":5804,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/ [`UncompressedEncoding::from_uncompressed`] instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5809,"byte_end":5865,"line_start":168,"line_end":168,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":6069,"byte_end":6084,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"to_uncompressed","qualname":"::UncompressedEncoding::to_uncompressed","value":"pub fn to_uncompressed(&Self) -> Self::Uncompressed","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Converts this element into its uncompressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its uncompressed encoding, so long as it's not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5953,"byte_end":6030,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ the point at infinity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":6035,"byte_end":6061,"line_start":172,"line_end":172,"column_start":5,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":825,"byte_end":826,"line_start":35,"line_end":35,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1132,"byte_end":1133,"line_start":42,"line_end":42,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1388,"byte_end":1389,"line_start":47,"line_end":47,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1659,"byte_end":1660,"line_start":52,"line_end":52,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":412,"byte_end":420,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":430,"byte_end":435,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":105}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6465,"byte_end":6470,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6477,"byte_end":6490,"line_start":12,"line_end":12,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6497,"byte_end":6505,"line_start":13,"line_end":13,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":6547,"byte_end":6560,"line_start":14,"line_end":14,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8383,"byte_end":8388,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8437,"byte_end":8450,"line_start":58,"line_end":58,"column_start":59,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":88},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8771,"byte_end":8784,"line_start":68,"line_end":68,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8791,"byte_end":8795,"line_start":69,"line_end":69,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8802,"byte_end":8807,"line_start":70,"line_end":70,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2447},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8814,"byte_end":8819,"line_start":71,"line_end":71,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8826,"byte_end":8830,"line_start":72,"line_end":72,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2822},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8837,"byte_end":8841,"line_start":73,"line_end":73,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2834},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8853,"byte_end":8858,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8865,"byte_end":8874,"line_start":75,"line_end":75,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2477},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8881,"byte_end":8883,"line_start":76,"line_end":76,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2482},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8904,"byte_end":8907,"line_start":78,"line_end":78,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2916},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":8929,"byte_end":8932,"line_start":79,"line_end":79,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/cofactor.rs","byte_start":9033,"byte_end":9036,"line_start":80,"line_end":80,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":9858,"byte_end":9863,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":9866,"byte_end":9879,"line_start":9,"line_end":9,"column_start":31,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10020,"byte_end":10025,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10071,"byte_end":10081,"line_start":13,"line_end":13,"column_start":74,"column_end":84},"kind":"SuperTrait","from":{"krate":0,"index":132},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10396,"byte_end":10409,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10416,"byte_end":10420,"line_start":23,"line_end":23,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10427,"byte_end":10432,"line_start":24,"line_end":24,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2447},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10439,"byte_end":10444,"line_start":25,"line_end":25,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10451,"byte_end":10455,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2822},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10462,"byte_end":10466,"line_start":27,"line_end":27,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2834},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10478,"byte_end":10483,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10490,"byte_end":10499,"line_start":29,"line_end":29,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2477},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10506,"byte_end":10508,"line_start":30,"line_end":30,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2482},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10529,"byte_end":10532,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2916},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10554,"byte_end":10557,"line_start":33,"line_end":33,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/prime.rs","byte_start":10652,"byte_end":10655,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":685,"byte_end":688,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2889},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":713,"byte_end":716,"line_start":31,"line_end":31,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2894},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":741,"byte_end":750,"line_start":31,"line_end":31,"column_start":61,"column_end":70},"kind":"SuperTrait","from":{"krate":1,"index":2920},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":758,"byte_end":767,"line_start":31,"line_end":31,"column_start":78,"column_end":87},"kind":"SuperTrait","from":{"krate":1,"index":2924},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":825,"byte_end":826,"line_start":35,"line_end":35,"column_start":48,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":148},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1051,"byte_end":1059,"line_start":41,"line_end":41,"column_start":61,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":151}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1132,"byte_end":1133,"line_start":42,"line_end":42,"column_start":53,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":151}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1293,"byte_end":1296,"line_start":45,"line_end":45,"column_start":42,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1321,"byte_end":1330,"line_start":45,"line_end":45,"column_start":70,"column_end":79},"kind":"SuperTrait","from":{"krate":1,"index":2928},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1388,"byte_end":1389,"line_start":47,"line_end":47,"column_start":49,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":164},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1576,"byte_end":1585,"line_start":51,"line_end":51,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1659,"byte_end":1660,"line_start":52,"line_end":52,"column_start":54,"column_end":55},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":172},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1793,"byte_end":1798,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2447},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1805,"byte_end":1809,"line_start":57,"line_end":57,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1821,"byte_end":1826,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1833,"byte_end":1835,"line_start":59,"line_end":59,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2482},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1842,"byte_end":1847,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1854,"byte_end":1858,"line_start":61,"line_end":61,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2822},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1865,"byte_end":1869,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2834},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1890,"byte_end":1893,"line_start":64,"line_end":64,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":6957},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1908,"byte_end":1911,"line_start":65,"line_end":65,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":6957},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1928,"byte_end":1931,"line_start":66,"line_end":66,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2916},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1953,"byte_end":1961,"line_start":67,"line_end":67,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1968,"byte_end":1981,"line_start":68,"line_end":68,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":1988,"byte_end":1997,"line_start":69,"line_end":69,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2029,"byte_end":2043,"line_start":70,"line_end":70,"column_start":7,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":167},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2859,"byte_end":2864,"line_start":97,"line_end":97,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2867,"byte_end":2875,"line_start":97,"line_end":97,"column_start":13,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":2907,"byte_end":2920,"line_start":97,"line_end":97,"column_start":53,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":3500,"byte_end":3505,"line_start":116,"line_end":116,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":189}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.10.0/src/lib.rs","byte_start":5306,"byte_end":5311,"line_start":157,"line_end":157,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":194}}]}