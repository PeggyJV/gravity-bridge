{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","secp256k1","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"recovery\"","--cfg","feature=\"std\"","-C","metadata=fcf43b0c6753bcb5","-C","extra-filename=-fcf43b0c6753bcb5","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","secp256k1_sys=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsecp256k1_sys-0a6c1b7737510617.rmeta","--cap-lints","allow","-L","native=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/build/secp256k1-sys-1d479df524bb6ec5/out","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsecp256k1-fcf43b0c6753bcb5.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[7961101845038161059,14214589257379863748]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","num":18,"id":{"name":"secp256k1_sys","disambiguator":[1870997984306693456,10290366720846243781]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":502,"byte_end":51611,"line_start":16,"line_end":1380,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5484,"byte_end":5497,"line_start":127,"line_end":127,"column_start":9,"column_end":22},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136288,"byte_end":136297,"line_start":24,"line_end":24,"column_start":14,"column_end":23},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":744},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136312,"byte_end":136321,"line_start":25,"line_end":25,"column_start":14,"column_end":23},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6220,"byte_end":6229,"line_start":151,"line_end":151,"column_start":14,"column_end":23},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":744},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6244,"byte_end":6253,"line_start":152,"line_end":152,"column_start":14,"column_end":23},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6272,"byte_end":6273,"line_start":153,"line_end":153,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Context, Verification, Signing","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":502,"byte_end":51611,"line_start":16,"line_end":1380,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":166},{"krate":0,"index":184},{"krate":0,"index":244},{"krate":0,"index":341},{"krate":0,"index":456},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":876},{"krate":0,"index":888},{"krate":0,"index":886},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":889},{"krate":0,"index":896},{"krate":0,"index":893},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":562},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":903},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":937},{"krate":0,"index":966},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":958},{"krate":0,"index":956},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":645},{"krate":0,"index":648}],"decl_id":null,"docs":" # Secp256k1\n Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"/ # Secp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":502,"byte_end":517,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ Rust bindings for Pieter Wuille's secp256k1 library, which is used for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":518,"byte_end":592,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ fast and accurate manipulation of ECDSA signatures on the secp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":593,"byte_end":664,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ curve. Such signatures are used extensively by the Bitcoin network","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":665,"byte_end":735,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ and its derivatives.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":736,"byte_end":760,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":761,"byte_end":764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To minimize dependencies, some functions are feature-gated. To generate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":765,"byte_end":840,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ random keys or to re-randomize a context object, compile with the \"rand\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":841,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ feature. To de/serialize objects with serde, compile with \"serde\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":918,"byte_end":988,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":989,"byte_end":992,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Where possible, the bindings use the Rust type system to ensure that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":993,"byte_end":1065,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ API usage errors are impossible. For example, the library uses context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1066,"byte_end":1140,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ objects that contain precomputation tables which are created on object","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1141,"byte_end":1215,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ construction. Since this is a slow operation (10+ milliseconds, vs ~50","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1216,"byte_end":1290,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ microseconds for typical crypto operations, on a 2.70 Ghz i7-6820HQ)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1291,"byte_end":1363,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ the tables are optional, giving a performance boost for users who only","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1364,"byte_end":1438,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ care about signing, only care about verification, or only care about","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1439,"byte_end":1511,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ parsing. In the upstream library, if you attempt to sign a message using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1512,"byte_end":1588,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ a context that does not support this, it will trigger an assertion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1589,"byte_end":1659,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ failure and terminate the program. In `rust-secp256k1`, this is caught","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1660,"byte_end":1734,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ at compile-time; in fact, it is impossible to compile code that will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1735,"byte_end":1807,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ trigger any assertion failures in the upstream library.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1808,"byte_end":1867,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1868,"byte_end":1871,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1872,"byte_end":1883,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature=\"rand\", feature=\"bitcoin_hashes\"))] {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1884,"byte_end":1945,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/ use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1946,"byte_end":1983,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ use secp256k1::{Secp256k1, Message};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":1984,"byte_end":2024,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ use secp256k1::bitcoin_hashes::sha256;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2025,"byte_end":2067,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2072,"byte_end":2104,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/ let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2105,"byte_end":2152,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2153,"byte_end":2220,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ let message = Message::from_hashed_data::<sha256::Hash>(\"Hello World!\".as_bytes());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2221,"byte_end":2308,"line_start":48,"line_end":48,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2309,"byte_end":2312,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2313,"byte_end":2360,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2361,"byte_end":2423,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2424,"byte_end":2431,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2432,"byte_end":2439,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2440,"byte_end":2443,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The above code requires `rust-secp256k1` to be compiled with the `rand` and `bitcoin_hashes`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2444,"byte_end":2540,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ feature enabled, to get access to [`generate_keypair`](struct.Secp256k1.html#method.generate_keypair)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2541,"byte_end":2646,"line_start":56,"line_end":56,"column_start":1,"column_end":106}},{"value":"/ Alternately, keys and messages can be parsed from slices, like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2647,"byte_end":2713,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2714,"byte_end":2717,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2718,"byte_end":2729,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use self::secp256k1::{Secp256k1, Message, SecretKey, PublicKey};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2730,"byte_end":2798,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2799,"byte_end":2802,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2803,"byte_end":2835,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2836,"byte_end":2931,"line_start":63,"line_end":63,"column_start":1,"column_end":96}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":2932,"byte_end":3000,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ // This is unsafe unless the supplied byte slice is the output of a cryptographic hash function.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3001,"byte_end":3101,"line_start":65,"line_end":65,"column_start":1,"column_end":101}},{"value":"/ // See the above example for how to use this library together with bitcoin_hashes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3102,"byte_end":3188,"line_start":66,"line_end":66,"column_start":1,"column_end":87}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3189,"byte_end":3259,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3260,"byte_end":3263,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3264,"byte_end":3311,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3312,"byte_end":3374,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3375,"byte_end":3382,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Users who only want to verify signatures can use a cheaper context, like so:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3387,"byte_end":3467,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3468,"byte_end":3471,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3472,"byte_end":3483,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use secp256k1::{Secp256k1, Message, Signature, PublicKey};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3484,"byte_end":3546,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3547,"byte_end":3550,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::verification_only();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3551,"byte_end":3597,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3598,"byte_end":3601,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let public_key = PublicKey::from_slice(&[","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3602,"byte_end":3647,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/     0x02,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3648,"byte_end":3661,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/     0xc6, 0x6e, 0x7d, 0x89, 0x66, 0xb5, 0xc5, 0x55,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3662,"byte_end":3717,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/     0xaf, 0x58, 0x05, 0x98, 0x9d, 0xa9, 0xfb, 0xf8,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3718,"byte_end":3773,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     0xdb, 0x95, 0xe1, 0x56, 0x31, 0xce, 0x35, 0x8c,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3774,"byte_end":3829,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/     0x3a, 0x17, 0x10, 0xc9, 0x62, 0x67, 0x90, 0x63,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3830,"byte_end":3885,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"public keys must be 33 or 65 bytes, serialized according to SEC 2\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3886,"byte_end":3969,"line_start":86,"line_end":86,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3970,"byte_end":3973,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let message = Message::from_slice(&[","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":3974,"byte_end":4014,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     0xaa, 0xdf, 0x7d, 0xe7, 0x82, 0x03, 0x4f, 0xbe,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4015,"byte_end":4070,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/     0x3d, 0x3d, 0xb2, 0xcb, 0x13, 0xc0, 0xcd, 0x91,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4071,"byte_end":4126,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/     0xbf, 0x41, 0xcb, 0x08, 0xfa, 0xc7, 0xbd, 0x61,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4127,"byte_end":4182,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/     0xd5, 0x44, 0x53, 0xcf, 0x6e, 0x82, 0xb4, 0x50,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4183,"byte_end":4238,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"messages must be 32 bytes and are expected to be hashes\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4239,"byte_end":4312,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4313,"byte_end":4316,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let sig = Signature::from_compact(&[","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4317,"byte_end":4357,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/     0xdc, 0x4d, 0xc2, 0x64, 0xa9, 0xfe, 0xf1, 0x7a,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4358,"byte_end":4413,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/     0x3f, 0x25, 0x34, 0x49, 0xcf, 0x8c, 0x39, 0x7a,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4414,"byte_end":4469,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/     0xb6, 0xf1, 0x6f, 0xb3, 0xd6, 0x3d, 0x86, 0x94,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4470,"byte_end":4525,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/     0x0b, 0x55, 0x86, 0x82, 0x3d, 0xfd, 0x02, 0xae,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4526,"byte_end":4581,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/     0x3b, 0x46, 0x1b, 0xb4, 0x33, 0x6b, 0x5e, 0xcb,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4582,"byte_end":4637,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/     0xae, 0xfd, 0x66, 0x27, 0xaa, 0x92, 0x2e, 0xfc,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4638,"byte_end":4693,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/     0x04, 0x8f, 0xec, 0x0c, 0x88, 0x1c, 0x10, 0xc4,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4694,"byte_end":4749,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/     0xc9, 0x42, 0x8f, 0xca, 0x69, 0xc1, 0x32, 0xa2,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4750,"byte_end":4805,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"compact signatures are 64 bytes; DER signatures are 68-72 bytes\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4806,"byte_end":4887,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4888,"byte_end":4891,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(not(fuzzing))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4892,"byte_end":4918,"line_start":106,"line_end":106,"column_start":1,"column_end":27}},{"value":"/ assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4919,"byte_end":4981,"line_start":107,"line_end":107,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4982,"byte_end":4989,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4990,"byte_end":4993,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Observe that the same code using, say [`signing_only`](struct.Secp256k1.html#method.signing_only)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":4994,"byte_end":5095,"line_start":110,"line_end":110,"column_start":1,"column_end":102}},{"value":"/ to generate a context would simply not compile.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5096,"byte_end":5147,"line_start":111,"line_end":111,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5148,"byte_end":5151,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5175,"byte_end":5207,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5208,"byte_end":5238,"line_start":116,"line_end":116,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5239,"byte_end":5263,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5264,"byte_end":5284,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":5285,"byte_end":5307,"line_start":119,"line_end":119,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58701,"byte_end":58708,"line_start":46,"line_end":46,"column_start":18,"column_end":25},"name":"Context","qualname":"::context::Context","value":"Context: private::Sealed","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" A trait for all kinds of Context's that Lets you define the exact flags and a function to deallocate memory.\n It shouldn't be possible to implement this for types outside this crate.\n","sig":null,"attributes":[{"value":"/ A trait for all kinds of Context's that Lets you define the exact flags and a function to deallocate memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58494,"byte_end":58606,"line_start":44,"line_end":44,"column_start":1,"column_end":113}},{"value":"/ It shouldn't be possible to implement this for types outside this crate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58607,"byte_end":58683,"line_start":45,"line_end":45,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":59},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58766,"byte_end":58771,"line_start":48,"line_end":48,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::context::Context::FLAGS","value":"c_uint","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Flags for the ffi.\n","sig":null,"attributes":[{"value":"/ Flags for the ffi.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58733,"byte_end":58755,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":60},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58838,"byte_end":58849,"line_start":50,"line_end":50,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::context::Context::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" A constant description of the context.\n","sig":null,"attributes":[{"value":"/ A constant description of the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58785,"byte_end":58827,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58952,"byte_end":58962,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"name":"deallocate","qualname":"::context::Context::deallocate","value":"pub unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" A function to deallocate the memory when the context is dropped.\n","sig":null,"attributes":[{"value":"/ A function to deallocate the memory when the context is dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58869,"byte_end":58937,"line_start":51,"line_end":51,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59093,"byte_end":59100,"line_start":56,"line_end":56,"column_start":11,"column_end":18},"name":"Signing","qualname":"::context::Signing","value":"Signing: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for signing.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for signing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58994,"byte_end":59082,"line_start":55,"line_end":55,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59218,"byte_end":59230,"line_start":59,"line_end":59,"column_start":11,"column_end":23},"name":"Verification","qualname":"::context::Verification","value":"Verification: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for verification.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for verification.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59114,"byte_end":59207,"line_start":58,"line_end":58,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59346,"byte_end":59366,"line_start":62,"line_end":62,"column_start":12,"column_end":32},"name":"SignOnlyPreallocated","qualname":"::context::SignOnlyPreallocated","value":"SignOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":" Represents the set of capabilities needed for signing with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing with a user preallocated memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59244,"byte_end":59334,"line_start":61,"line_end":61,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59521,"byte_end":59543,"line_start":67,"line_end":67,"column_start":12,"column_end":34},"name":"VerifyOnlyPreallocated","qualname":"::context::VerifyOnlyPreallocated","value":"VerifyOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" Represents the set of capabilities needed for verification with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification with a user preallocated memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59414,"byte_end":59509,"line_start":66,"line_end":66,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59678,"byte_end":59693,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"AllPreallocated","qualname":"::context::AllPreallocated","value":"AllPreallocated {  }","parent":null,"children":[{"krate":0,"index":72}],"decl_id":null,"docs":" Represents the set of all capabilities with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities with a user preallocated memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59591,"byte_end":59666,"line_start":71,"line_end":71,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60003,"byte_end":60009,"line_start":81,"line_end":81,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::context::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":91},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60517,"byte_end":60525,"line_start":99,"line_end":99,"column_start":14,"column_end":22},"name":"SignOnly","qualname":"::context::std_only::SignOnly","value":"pub enum SignOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for signing.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60445,"byte_end":60503,"line_start":98,"line_end":98,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":92},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60611,"byte_end":60621,"line_start":102,"line_end":102,"column_start":14,"column_end":24},"name":"VerifyOnly","qualname":"::context::std_only::VerifyOnly","value":"pub enum VerifyOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for verification.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60534,"byte_end":60597,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":93},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60687,"byte_end":60690,"line_start":105,"line_end":105,"column_start":14,"column_end":17},"name":"All","qualname":"::context::std_only::All","value":"pub enum All { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of all capabilities.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60630,"byte_end":60673,"line_start":104,"line_end":104,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62034,"byte_end":62041,"line_start":145,"line_end":145,"column_start":16,"column_end":23},"name":"gen_new","qualname":"<Secp256k1<C>>::gen_new","value":"pub fn gen_new() -> Secp256k1<C>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context in a generic manner(sign/verify/all)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61952,"byte_end":62018,"line_start":144,"line_end":144,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62705,"byte_end":62708,"line_start":162,"line_end":162,"column_start":16,"column_end":19},"name":"new","qualname":"<Secp256k1<All>>::new","value":"pub fn new() -> Secp256k1<All>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62632,"byte_end":62689,"line_start":161,"line_end":161,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62905,"byte_end":62917,"line_start":169,"line_end":169,"column_start":16,"column_end":28},"name":"signing_only","qualname":"<Secp256k1<SignOnly>>::signing_only","value":"pub fn signing_only() -> Secp256k1<SignOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62820,"byte_end":62889,"line_start":168,"line_end":168,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63126,"byte_end":63143,"line_start":176,"line_end":176,"column_start":16,"column_end":33},"name":"verification_only","qualname":"<Secp256k1<VerifyOnly>>::verification_only","value":"pub fn verification_only() -> Secp256k1<VerifyOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63036,"byte_end":63110,"line_start":175,"line_end":175,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":65078,"byte_end":65098,"line_start":236,"line_end":236,"column_start":12,"column_end":32},"name":"preallocated_gen_new","qualname":"<Secp256k1<C>>::preallocated_gen_new","value":"pub fn preallocated_gen_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<C>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64975,"byte_end":65066,"line_start":235,"line_end":235,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":65849,"byte_end":65865,"line_start":257,"line_end":257,"column_start":12,"column_end":28},"name":"preallocated_new","qualname":"<Secp256k1<AllPreallocated>>::preallocated_new","value":"pub fn preallocated_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<AllPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":65780,"byte_end":65837,"line_start":256,"line_end":256,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66116,"byte_end":66132,"line_start":261,"line_end":261,"column_start":12,"column_end":28},"name":"preallocate_size","qualname":"<Secp256k1<AllPreallocated>>::preallocate_size","value":"pub fn preallocate_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66004,"byte_end":66104,"line_start":260,"line_end":260,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66838,"byte_end":66850,"line_start":276,"line_end":276,"column_start":19,"column_end":31},"name":"from_raw_all","qualname":"<Secp256k1<AllPreallocated>>::from_raw_all","value":"pub unsafe fn from_raw_all(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<AllPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66194,"byte_end":66234,"line_start":265,"line_end":265,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66239,"byte_end":66242,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66247,"byte_end":66259,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66264,"byte_end":66343,"line_start":268,"line_end":268,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66348,"byte_end":66410,"line_start":269,"line_end":269,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66415,"byte_end":66503,"line_start":270,"line_end":270,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66508,"byte_end":66617,"line_start":271,"line_end":271,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66622,"byte_end":66654,"line_start":272,"line_end":272,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66659,"byte_end":66753,"line_start":273,"line_end":273,"column_start":5,"column_end":99}},{"value":"/ * Violating these may lead to Undefined Behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66758,"byte_end":66811,"line_start":274,"line_end":274,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":66816,"byte_end":66819,"line_start":275,"line_end":275,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67292,"byte_end":67317,"line_start":287,"line_end":287,"column_start":12,"column_end":37},"name":"preallocated_signing_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocated_signing_only","value":"pub fn preallocated_signing_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<SignOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67211,"byte_end":67280,"line_start":286,"line_end":286,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67590,"byte_end":67614,"line_start":293,"line_end":293,"column_start":12,"column_end":36},"name":"preallocate_signing_size","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocate_signing_size","value":"pub fn preallocate_signing_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67462,"byte_end":67564,"line_start":291,"line_end":291,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67569,"byte_end":67578,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68354,"byte_end":68377,"line_start":308,"line_end":308,"column_start":19,"column_end":42},"name":"from_raw_signining_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::from_raw_signining_only","value":"pub unsafe fn from_raw_signining_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<SignOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67676,"byte_end":67716,"line_start":297,"line_end":297,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67721,"byte_end":67724,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67729,"byte_end":67741,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67746,"byte_end":67825,"line_start":300,"line_end":300,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67830,"byte_end":67892,"line_start":301,"line_end":301,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67897,"byte_end":67985,"line_start":302,"line_end":302,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67990,"byte_end":68099,"line_start":303,"line_end":303,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68104,"byte_end":68136,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68141,"byte_end":68235,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68240,"byte_end":68327,"line_start":306,"line_end":306,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68332,"byte_end":68335,"line_start":307,"line_end":307,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68831,"byte_end":68861,"line_start":319,"line_end":319,"column_start":12,"column_end":42},"name":"preallocated_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocated_verification_only","value":"pub fn preallocated_verification_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<VerifyOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68745,"byte_end":68819,"line_start":318,"line_end":318,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69136,"byte_end":69165,"line_start":325,"line_end":325,"column_start":12,"column_end":41},"name":"preallocate_verification_size","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocate_verification_size","value":"pub fn preallocate_verification_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69008,"byte_end":69110,"line_start":323,"line_end":323,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69115,"byte_end":69124,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69905,"byte_end":69931,"line_start":340,"line_end":340,"column_start":19,"column_end":45},"name":"from_raw_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::from_raw_verification_only","value":"pub unsafe fn from_raw_verification_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<VerifyOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69227,"byte_end":69267,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69272,"byte_end":69275,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69280,"byte_end":69292,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69297,"byte_end":69376,"line_start":332,"line_end":332,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69381,"byte_end":69443,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69448,"byte_end":69536,"line_start":334,"line_end":334,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69541,"byte_end":69650,"line_start":335,"line_end":335,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69655,"byte_end":69687,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69692,"byte_end":69786,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69791,"byte_end":69878,"line_start":338,"line_end":338,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":69883,"byte_end":69886,"line_start":339,"line_end":339,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182}],"decl_id":null,"docs":" # Constants\n Constants related to the API and the underlying curve\n","sig":null,"attributes":[{"value":"/ # Constants","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70746,"byte_end":70761,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ Constants related to the API and the underlying curve","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70762,"byte_end":70819,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":167},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70868,"byte_end":70880,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a message","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70821,"byte_end":70857,"line_start":19,"line_end":19,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70945,"byte_end":70960,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70895,"byte_end":70934,"line_start":22,"line_end":22,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":169},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71037,"byte_end":71052,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a serialized public key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":70975,"byte_end":71026,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":170},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71142,"byte_end":71170,"line_start":29,"line_end":29,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an serialized uncompressed public key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of an serialized uncompressed public key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71067,"byte_end":71131,"line_start":28,"line_end":28,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71231,"byte_end":71249,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71185,"byte_end":71220,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71318,"byte_end":71340,"line_start":35,"line_end":35,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a compact signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71264,"byte_end":71307,"line_start":34,"line_end":34,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":173},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71397,"byte_end":71422,"line_start":38,"line_end":38,"column_start":11,"column_end":36},"name":"SCHNORRSIG_SIGNATURE_SIZE","qualname":"::constants::SCHNORRSIG_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of a Schnorr signature\n","sig":null,"attributes":[{"value":"/ Size of a Schnorr signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71355,"byte_end":71386,"line_start":37,"line_end":37,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71480,"byte_end":71506,"line_start":41,"line_end":41,"column_start":11,"column_end":37},"name":"SCHNORRSIG_PUBLIC_KEY_SIZE","qualname":"::constants::SCHNORRSIG_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of a Schnorr public key\n","sig":null,"attributes":[{"value":"/ Size of a Schnorr public key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71437,"byte_end":71469,"line_start":40,"line_end":40,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":175},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71554,"byte_end":71567,"line_start":44,"line_end":44,"column_start":11,"column_end":24},"name":"KEY_PAIR_SIZE","qualname":"::constants::KEY_PAIR_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of a key pair\n","sig":null,"attributes":[{"value":"/ Size of a key pair","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71521,"byte_end":71543,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71639,"byte_end":71649,"line_start":47,"line_end":47,"column_start":11,"column_end":21},"name":"FIELD_SIZE","qualname":"::constants::FIELD_SIZE","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Prime for the secp256k1 field element.\n","sig":null,"attributes":[{"value":"/ The Prime for the secp256k1 field element.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71582,"byte_end":71628,"line_start":46,"line_end":46,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71922,"byte_end":71933,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve\n","sig":null,"attributes":[{"value":"/ The order of the secp256k1 curve","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":71875,"byte_end":71911,"line_start":54,"line_end":54,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":180},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":72207,"byte_end":72218,"line_start":63,"line_end":63,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The X coordinate of the generator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":72159,"byte_end":72196,"line_start":62,"line_end":62,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":72492,"byte_end":72503,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The Y coordinate of the generator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/constants.rs","byte_start":72444,"byte_end":72481,"line_start":70,"line_end":70,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":649},{"krate":0,"index":656},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":664},{"krate":0,"index":669},{"krate":0,"index":674},{"krate":0,"index":679},{"krate":0,"index":684},{"krate":0,"index":689},{"krate":0,"index":694},{"krate":0,"index":699},{"krate":0,"index":219},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":" # ECDH\n Support for shared secret computations","sig":null,"attributes":[{"value":"/ # ECDH","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73206,"byte_end":73216,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/ Support for shared secret computations","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73217,"byte_end":73259,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73260,"byte_end":73263,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73525,"byte_end":73537,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"SharedSecret {  }","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":652}],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73421,"byte_end":73490,"line_start":26,"line_end":26,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74298,"byte_end":74306,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SharedSecret>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74235,"byte_end":74286,"line_start":54,"line_end":54,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74405,"byte_end":74408,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"len","qualname":"<SharedSecret>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74360,"byte_end":74393,"line_start":59,"line_end":59,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74515,"byte_end":74523,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SharedSecret>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the underlying data buffer is empty.\n","sig":null,"attributes":[{"value":"/ True if the underlying data buffer is empty.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74455,"byte_end":74503,"line_start":64,"line_end":64,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75455,"byte_end":75458,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"pub fn new(&PublicKey, &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key\n","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75369,"byte_end":75429,"line_start":103,"line_end":103,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75434,"byte_end":75443,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":77170,"byte_end":77183,"line_start":144,"line_end":144,"column_start":12,"column_end":25},"name":"new_with_hash","qualname":"<SharedSecret>::new_with_hash","value":"pub fn new_with_hash<F>(&PublicKey, &SecretKey, F) -> SharedSecret where\nF: FnMut([u8; ], [u8; ]) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key with applied custom hash function\n The custom hash function must be in the form of `fn(x: [u8;32], y: [u8;32]) -> SharedSecret`\n `SharedSecret` can be easily created via the `From` impl from arrays.\n # Examples\n ```\n # use secp256k1::ecdh::SharedSecret;\n # use secp256k1::{Secp256k1, PublicKey, SecretKey};\n # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}\n # let secp = Secp256k1::signing_only();\n # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();\n # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();\n # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key with applied custom hash function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76225,"byte_end":76319,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ The custom hash function must be in the form of `fn(x: [u8;32], y: [u8;32]) -> SharedSecret`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76324,"byte_end":76420,"line_start":126,"line_end":126,"column_start":5,"column_end":101}},{"value":"/ `SharedSecret` can be easily created via the `From` impl from arrays.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76425,"byte_end":76498,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76503,"byte_end":76517,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76522,"byte_end":76529,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76534,"byte_end":76574,"line_start":130,"line_end":130,"column_start":5,"column_end":45}},{"value":"/ # use secp256k1::{Secp256k1, PublicKey, SecretKey};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76579,"byte_end":76634,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76639,"byte_end":76698,"line_start":132,"line_end":132,"column_start":5,"column_end":64}},{"value":"/ # let secp = Secp256k1::signing_only();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76703,"byte_end":76746,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/ # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76751,"byte_end":76817,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76822,"byte_end":76889,"line_start":135,"line_end":135,"column_start":5,"column_end":72}},{"value":"/ # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76894,"byte_end":76965,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76970,"byte_end":76973,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let secret = SharedSecret::new_with_hash(&public_key, &secret_key, |x,y| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":76978,"byte_end":77056,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/     let hash: [u8; 32] = sha2(&x,&y);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":77061,"byte_end":77102,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/     hash.into()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":77107,"byte_end":77126,"line_start":140,"line_end":140,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":77131,"byte_end":77138,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":77143,"byte_end":77146,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":77151,"byte_end":77158,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key","qualname":"::key","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":742},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":744},{"krate":0,"index":761},{"krate":0,"index":759},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":750},{"krate":0,"index":747},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339}],"decl_id":null,"docs":" # Public and secret keys\n","sig":null,"attributes":[{"value":"/ # Public and secret keys","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81199,"byte_end":81227,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81538,"byte_end":81547,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Secret 256-bit key used as `x` in an ECDSA signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81470,"byte_end":81526,"line_start":29,"line_end":29,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":297},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82402,"byte_end":82409,"line_start":61,"line_end":61,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82351,"byte_end":82391,"line_start":60,"line_end":60,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82785,"byte_end":82794,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures\n","sig":null,"attributes":[{"value":"/ A Secp256k1 public key, used for verification of signatures","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82659,"byte_end":82722,"line_start":66,"line_end":66,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":84565,"byte_end":84575,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key\n","sig":null,"attributes":[{"value":"/ Converts a `SECRET_KEY_SIZE`-byte slice to a secret key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":84480,"byte_end":84539,"line_start":129,"line_end":129,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":84544,"byte_end":84553,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85285,"byte_end":85298,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<SecretKey>::negate_assign","value":"pub fn negate_assign(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates one secret key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85232,"byte_end":85241,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ Negates one secret key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85246,"byte_end":85273,"line_start":152,"line_end":152,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85767,"byte_end":85777,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"pub fn add_assign(&mut Self, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order. WIll\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85559,"byte_end":85568,"line_start":165,"line_end":165,"column_start":5,"column_end":14}},{"value":"/ Adds one secret key to another, modulo the curve order. WIll","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85573,"byte_end":85637,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85642,"byte_end":85705,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":85710,"byte_end":85755,"line_start":168,"line_end":168,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":86492,"byte_end":86502,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"pub fn mul_assign(&mut Self, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order. Will\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":86278,"byte_end":86287,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ Multiplies one secret key by another, modulo the curve order. Will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":86292,"byte_end":86362,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":86367,"byte_end":86430,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":86435,"byte_end":86480,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87168,"byte_end":87174,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87075,"byte_end":87142,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87147,"byte_end":87156,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87331,"byte_end":87341,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87236,"byte_end":87305,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87310,"byte_end":87319,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87482,"byte_end":87497,"line_start":233,"line_end":233,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"pub fn from_secret_key<C: Signing>(&Secp256k1<C>, &SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new public key from a secret key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87409,"byte_end":87456,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87461,"byte_end":87470,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88090,"byte_end":88100,"line_start":248,"line_end":248,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a public key directly from a slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88018,"byte_end":88064,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88069,"byte_end":88078,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88834,"byte_end":88843,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88630,"byte_end":88639,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"/ Serialize the key as a byte-encoded pair of values. In compressed form","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88644,"byte_end":88718,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ the y-coordinate is represented by only a single bit, as x determines","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88723,"byte_end":88796,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ it up to one bit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":88801,"byte_end":88822,"line_start":270,"line_end":270,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":89508,"byte_end":89530,"line_start":290,"line_end":290,"column_start":12,"column_end":34},"name":"serialize_uncompressed","qualname":"<PublicKey>::serialize_uncompressed","value":"pub fn serialize_uncompressed(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values, in uncompressed form\n","sig":null,"attributes":[{"value":"/ Serialize the key as a byte-encoded pair of values, in uncompressed form","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":89420,"byte_end":89496,"line_start":289,"line_end":289,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90275,"byte_end":90288,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<PublicKey>::negate_assign","value":"pub fn negate_assign<C: Verification>(&mut Self, &Secp256k1<C>)","parent":null,"children":[],"decl_id":null,"docs":" Negates the pk to the pk `self` in place\n Will return an error if the pk would be invalid.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90148,"byte_end":90157,"line_start":308,"line_end":308,"column_start":5,"column_end":14}},{"value":"/ Negates the pk to the pk `self` in place","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90162,"byte_end":90206,"line_start":309,"line_end":309,"column_start":5,"column_end":49}},{"value":"/ Will return an error if the pk would be invalid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90211,"byte_end":90263,"line_start":310,"line_end":310,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90731,"byte_end":90745,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"pub fn add_exp_assign<C: Verification>(&mut Self, &Secp256k1<C>, &[u8])\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the pk corresponding to `other` to the pk `self` in place\n Will return an error if the resulting key would be invalid or\n if the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90516,"byte_end":90525,"line_start":321,"line_end":321,"column_start":5,"column_end":14}},{"value":"/ Adds the pk corresponding to `other` to the pk `self` in place","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90530,"byte_end":90596,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/ Will return an error if the resulting key would be invalid or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90601,"byte_end":90666,"line_start":323,"line_end":323,"column_start":5,"column_end":70}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":90671,"byte_end":90719,"line_start":324,"line_end":324,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91390,"byte_end":91400,"line_start":346,"line_end":346,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"pub fn mul_assign<C: Verification>(&mut Self, &Secp256k1<C>, &[u8])\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Muliplies the pk `self` in place by the scalar `other`\n Will return an error if the resulting key would be invalid or\n if the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91183,"byte_end":91192,"line_start":342,"line_end":342,"column_start":5,"column_end":14}},{"value":"/ Muliplies the pk `self` in place by the scalar `other`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91197,"byte_end":91255,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ Will return an error if the resulting key would be invalid or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91260,"byte_end":91325,"line_start":344,"line_end":344,"column_start":5,"column_end":70}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91330,"byte_end":91378,"line_start":345,"line_end":345,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":92033,"byte_end":92040,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"pub fn combine(&Self, &PublicKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds a second key to this one, returning the sum. Returns an error if\n the result would be the point at infinity, i.e. we are adding this point\n to its own negation\n","sig":null,"attributes":[{"value":"/ Adds a second key to this one, returning the sum. Returns an error if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91839,"byte_end":91912,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ the result would be the point at infinity, i.e. we are adding this point","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91917,"byte_end":91993,"line_start":364,"line_end":364,"column_start":5,"column_end":81}},{"value":"/ to its own negation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":91998,"byte_end":92021,"line_start":365,"line_end":365,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":341},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schnorrsig","qualname":"::schnorrsig","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":800},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":802},{"krate":0,"index":823},{"krate":0,"index":821},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":812},{"krate":0,"index":810},{"krate":0,"index":808},{"krate":0,"index":805},{"krate":0,"index":824},{"krate":0,"index":845},{"krate":0,"index":843},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":834},{"krate":0,"index":832},{"krate":0,"index":830},{"krate":0,"index":827},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":426},{"krate":0,"index":440},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448}],"decl_id":null,"docs":" # schnorrsig\n Support for Schnorr signatures.","sig":null,"attributes":[{"value":"/ # schnorrsig","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":109697,"byte_end":109713,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"/ Support for Schnorr signatures.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":109714,"byte_end":109749,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":109750,"byte_end":109753,"line_start":3,"line_end":3,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110150,"byte_end":110159,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Signature","qualname":"::schnorrsig::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Represents a Schnorr signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110103,"byte_end":110138,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111313,"byte_end":111320,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"KeyPair","qualname":"::schnorrsig::KeyPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque data structure that holds a keypair consisting of a secret and a public key.\n","sig":null,"attributes":[{"value":"/ Opaque data structure that holds a keypair consisting of a secret and a public key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111146,"byte_end":111233,"line_start":51,"line_end":51,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111486,"byte_end":111495,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::schnorrsig::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Schnorr public key, used for verification of Schnorr signatures\n","sig":null,"attributes":[{"value":"/ A Schnorr public key, used for verification of Schnorr signatures","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111337,"byte_end":111406,"line_start":55,"line_end":55,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112414,"byte_end":112424,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Signature directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a Signature directly from a slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112343,"byte_end":112388,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112393,"byte_end":112402,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112889,"byte_end":112895,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<KeyPair>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112796,"byte_end":112863,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112868,"byte_end":112877,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113050,"byte_end":113060,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<KeyPair>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112955,"byte_end":113024,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113029,"byte_end":113038,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113214,"byte_end":113231,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"from_seckey_slice","qualname":"<KeyPair>::from_seckey_slice","value":"pub fn from_seckey_slice<C: Signing>(&Secp256k1<C>, &[u8])\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr KeyPair directly from a secret key slice\n","sig":null,"attributes":[{"value":"/ Creates a Schnorr KeyPair directly from a secret key slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113126,"byte_end":113188,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113193,"byte_end":113202,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113821,"byte_end":113836,"line_start":138,"line_end":138,"column_start":12,"column_end":27},"name":"from_seckey_str","qualname":"<KeyPair>::from_seckey_str","value":"pub fn from_seckey_str<C: Signing>(&Secp256k1<C>, &str)\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr KeyPair directly from a secret key string\n","sig":null,"attributes":[{"value":"/ Creates a Schnorr KeyPair directly from a secret key string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113732,"byte_end":113795,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":113800,"byte_end":113809,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115151,"byte_end":115167,"line_start":172,"line_end":172,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<KeyPair>::tweak_add_assign","value":"pub fn tweak_add_assign<C: Verification>(&mut Self, &Secp256k1<C>, &[u8])\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweak a keypair by adding the given tweak to the secret key and updating the\n public key accordingly.\n Will return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"/ Tweak a keypair by adding the given tweak to the secret key and updating the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":114890,"byte_end":114970,"line_start":167,"line_end":167,"column_start":5,"column_end":85}},{"value":"/ public key accordingly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":114975,"byte_end":115002,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ Will return an error if the resulting key would be invalid or if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115007,"byte_end":115075,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115080,"byte_end":115125,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115130,"byte_end":115139,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115814,"byte_end":115820,"line_start":200,"line_end":200,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115721,"byte_end":115788,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115793,"byte_end":115802,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115982,"byte_end":115992,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115887,"byte_end":115956,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115961,"byte_end":115970,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":116151,"byte_end":116163,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<PublicKey>::from_keypair","value":"pub fn from_keypair<C: Signing>(&Secp256k1<C>, &KeyPair) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Schnorr public key from a Schnorr key pair\n","sig":null,"attributes":[{"value":"/ Creates a new Schnorr public key from a Schnorr key pair","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":116065,"byte_end":116125,"line_start":210,"line_end":210,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":116130,"byte_end":116139,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":116703,"byte_end":116713,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr public key directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a Schnorr public key directly from a slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":116623,"byte_end":116677,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":116682,"byte_end":116691,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":117488,"byte_end":117497,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":117284,"byte_end":117293,"line_start":249,"line_end":249,"column_start":5,"column_end":14}},{"value":"/ Serialize the key as a byte-encoded pair of values. In compressed form","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":117298,"byte_end":117372,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/ the y-coordinate is represented by only a single bit, as x determines","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":117377,"byte_end":117450,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ it up to one bit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":117455,"byte_end":117476,"line_start":252,"line_end":252,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":118359,"byte_end":118375,"line_start":273,"line_end":273,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<PublicKey>::tweak_add_assign","value":"pub fn tweak_add_assign<V: Verification>(&mut Self, &Secp256k1<V>, &[u8])\n-> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweak an x-only PublicKey by adding the generator multiplied with the given tweak to it.","sig":null,"attributes":[{"value":"/ Tweak an x-only PublicKey by adding the generator multiplied with the given tweak to it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":117905,"byte_end":117997,"line_start":267,"line_end":267,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":118002,"byte_end":118005,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean representing the parity of the tweaked key, which can be provided to ","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":118010,"byte_end":118101,"line_start":269,"line_end":269,"column_start":5,"column_end":96}},{"value":"/ `tweak_add_check` which can be used to verify a tweak more efficiently than regenerating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":118106,"byte_end":118198,"line_start":270,"line_end":270,"column_start":5,"column_end":97}},{"value":"/ it and checking equality. Will return an error if the resulting key would be invalid or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":118203,"byte_end":118294,"line_start":271,"line_end":271,"column_start":5,"column_end":96}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":118299,"byte_end":118347,"line_start":272,"line_end":272,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119867,"byte_end":119882,"line_start":320,"line_end":320,"column_start":12,"column_end":27},"name":"tweak_add_check","qualname":"<PublicKey>::tweak_add_check","value":"pub fn tweak_add_check<V: Verification>(&Self, &Secp256k1<V>, &Self, bool,\n                                        [u8; ]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify that a tweak produced by `tweak_add_assign` was computed correctly","sig":null,"attributes":[{"value":"/ Verify that a tweak produced by `tweak_add_assign` was computed correctly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119350,"byte_end":119427,"line_start":311,"line_end":311,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119432,"byte_end":119435,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Should be called on the original untweaked key. Takes the tweaked key and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119440,"byte_end":119517,"line_start":313,"line_end":313,"column_start":5,"column_end":82}},{"value":"/ output parity from `tweak_add_assign` as input.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119522,"byte_end":119573,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119578,"byte_end":119581,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Currently this is not much more efficient than just recomputing the tweak","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119586,"byte_end":119663,"line_start":316,"line_end":316,"column_start":5,"column_end":82}},{"value":"/ and checking equality. However, in future this API will support batch","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119668,"byte_end":119741,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/ verification, which is significantly faster, so it is wise to design","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119746,"byte_end":119818,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ protocols with this in mind.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":119823,"byte_end":119855,"line_start":319,"line_end":319,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":122584,"byte_end":122611,"line_start":416,"line_end":416,"column_start":12,"column_end":39},"name":"schnorrsig_sign_no_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_no_aux_rand","value":"pub fn schnorrsig_sign_no_aux_rand(&Self, &Message, &KeyPair) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a schnorr signature without using any auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a schnorr signature without using any auxiliary random data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":122501,"byte_end":122572,"line_start":415,"line_end":415,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":122854,"byte_end":122883,"line_start":425,"line_end":425,"column_start":12,"column_end":41},"name":"schnorrsig_sign_with_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_with_aux_rand","value":"pub fn schnorrsig_sign_with_aux_rand(&Self, &Message, &KeyPair, &[u8; ])\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature using the given auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a Schnorr signature using the given auxiliary random data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":122773,"byte_end":122842,"line_start":424,"line_end":424,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":123746,"byte_end":123763,"line_start":454,"line_end":454,"column_start":12,"column_end":29},"name":"schnorrsig_verify","qualname":"<Secp256k1<C>>::schnorrsig_verify","value":"pub fn schnorrsig_verify(&Self, &Signature, &Message, &PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Verify a Schnorr signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":123703,"byte_end":123734,"line_start":453,"line_end":453,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"recovery","qualname":"::recovery","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":846},{"krate":0,"index":860},{"krate":0,"index":858},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":849},{"krate":0,"index":861},{"krate":0,"index":875},{"krate":0,"index":873},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":864},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":517}],"decl_id":null,"docs":" # Recovery module\n Provides a signing function that allows recovering the public key from the\n signature.\n","sig":null,"attributes":[{"value":"cfg(feature = \"recovery\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6159,"byte_end":6187,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"/ # Recovery module","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136031,"byte_end":136052,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/ Provides a signing function that allows recovering the public key from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136053,"byte_end":136131,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136132,"byte_end":136146,"line_start":18,"line_end":18,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136504,"byte_end":136514,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::recovery::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136378,"byte_end":136447,"line_start":30,"line_end":30,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136640,"byte_end":136660,"line_start":36,"line_end":36,"column_start":12,"column_end":32},"name":"RecoverableSignature","qualname":"::recovery::RecoverableSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature with a recovery ID for pubkey recovery\n","sig":null,"attributes":[{"value":"/ An ECDSA signature with a recovery ID for pubkey recovery","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136522,"byte_end":136583,"line_start":34,"line_end":34,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136789,"byte_end":136797,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"from_i32","qualname":"<RecoveryId>::from_i32","value":"pub fn from_i32(i32) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to create valid recovery IDs from i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136708,"byte_end":136717,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ Allows library users to create valid recovery IDs from i32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136718,"byte_end":136781,"line_start":40,"line_end":40,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137024,"byte_end":137030,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"to_i32","qualname":"<RecoveryId>::to_i32","value":"pub fn to_i32(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to convert recovery IDs to i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136950,"byte_end":136959,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ Allows library users to convert recovery IDs to i32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136960,"byte_end":137016,"line_start":49,"line_end":49,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137269,"byte_end":137281,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<RecoverableSignature>::from_compact","value":"pub fn from_compact(&[u8], RecoveryId) -> Result<RecoverableSignature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a compact-encoded byte slice to a signature. This\n representation is nonstandard and defined by the libsecp256k1\n library.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137094,"byte_end":137103,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ Converts a compact-encoded byte slice to a signature. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137108,"byte_end":137170,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ representation is nonstandard and defined by the libsecp256k1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137175,"byte_end":137240,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/ library.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137245,"byte_end":137257,"line_start":59,"line_end":59,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138063,"byte_end":138069,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RecoverableSignature>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137976,"byte_end":138037,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138042,"byte_end":138051,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138237,"byte_end":138247,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<RecoverableSignature>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138142,"byte_end":138211,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138216,"byte_end":138225,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138410,"byte_end":138427,"line_start":96,"line_end":96,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<RecoverableSignature>::serialize_compact","value":"pub fn serialize_compact(&Self) -> (RecoveryId, [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Serializes the recoverable signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138326,"byte_end":138335,"line_start":94,"line_end":94,"column_start":5,"column_end":14}},{"value":"/ Serializes the recoverable signature in compact format","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138340,"byte_end":138398,"line_start":95,"line_end":95,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139009,"byte_end":139020,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"to_standard","qualname":"<RecoverableSignature>::to_standard","value":"pub fn to_standard(&Self) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Converts a recoverable signature to a non-recoverable one (this is needed\n for verification\n","sig":null,"attributes":[{"value":"/ Converts a recoverable signature to a non-recoverable one (this is needed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138881,"byte_end":138958,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ for verification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138963,"byte_end":138983,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":138988,"byte_end":138997,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":140064,"byte_end":140080,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"sign_recoverable","qualname":"<Secp256k1<C>>::sign_recoverable","value":"pub fn sign_recoverable(&Self, &Message, &key::SecretKey)\n-> RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139928,"byte_end":140008,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":140013,"byte_end":140052,"line_start":150,"line_end":150,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":141004,"byte_end":141011,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"recover","qualname":"<Secp256k1<C>>::recover","value":"pub fn recover(&Self, &Message, &RecoverableSignature)\n-> Result<key::PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determines the public key for which `sig` is a valid signature for\n `msg`. Requires a verify-capable context.\n","sig":null,"attributes":[{"value":"/ Determines the public key for which `sig` is a valid signature for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":140872,"byte_end":140942,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ `msg`. Requires a verify-capable context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":140947,"byte_end":140992,"line_start":177,"line_end":177,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6587,"byte_end":6596,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"/ An ECDSA signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6515,"byte_end":6537,"line_start":165,"line_end":165,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":889},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6680,"byte_end":6699,"line_start":171,"line_end":171,"column_start":12,"column_end":31},"name":"SerializedSignature","qualname":"::SerializedSignature","value":"SerializedSignature {  }","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":892}],"decl_id":null,"docs":" A DER serialized Signature\n","sig":null,"attributes":[{"value":"/ A DER serialized Signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6615,"byte_end":6645,"line_start":169,"line_end":169,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7592,"byte_end":7609,"line_start":206,"line_end":206,"column_start":11,"column_end":28},"name":"ThirtyTwoByteHash","qualname":"::ThirtyTwoByteHash","value":"ThirtyTwoByteHash","parent":null,"children":[{"krate":0,"index":552}],"decl_id":null,"docs":" Trait describing something that promises to be a 32-byte random number; in particular,\n it has negligible probability of being zero or overflowing the group order. Such objects\n may be converted to `Message`s without any error paths.\n","sig":null,"attributes":[{"value":"/ Trait describing something that promises to be a 32-byte random number; in particular,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7338,"byte_end":7428,"line_start":203,"line_end":203,"column_start":1,"column_end":91}},{"value":"/ it has negligible probability of being zero or overflowing the group order. Such objects","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7429,"byte_end":7521,"line_start":204,"line_end":204,"column_start":1,"column_end":93}},{"value":"/ may be converted to `Message`s without any error paths.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7522,"byte_end":7581,"line_start":205,"line_end":205,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7668,"byte_end":7675,"line_start":208,"line_end":208,"column_start":8,"column_end":15},"name":"into_32","qualname":"::ThirtyTwoByteHash::into_32","value":"pub fn into_32(Self) -> [u8; ]","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Converts the object into a 32-byte array\n","sig":null,"attributes":[{"value":"/ Converts the object into a 32-byte array","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7616,"byte_end":7660,"line_start":207,"line_end":207,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8490,"byte_end":8498,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SerializedSignature>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8427,"byte_end":8478,"line_start":238,"line_end":238,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8597,"byte_end":8600,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"len","qualname":"<SerializedSignature>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8552,"byte_end":8585,"line_start":243,"line_end":243,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8877,"byte_end":8889,"line_start":255,"line_end":255,"column_start":12,"column_end":24},"name":"to_signature","qualname":"<SerializedSignature>::to_signature","value":"pub fn to_signature(&Self) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert the serialized signature into the Signature struct.\n (This DER deserializes it)\n","sig":null,"attributes":[{"value":"/ Convert the serialized signature into the Signature struct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8767,"byte_end":8830,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ (This DER deserializes it)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8835,"byte_end":8865,"line_start":254,"line_end":254,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9068,"byte_end":9082,"line_start":261,"line_end":261,"column_start":12,"column_end":26},"name":"from_signature","qualname":"<SerializedSignature>::from_signature","value":"pub fn from_signature(&Signature) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a SerializedSignature from a Signature.\n (this DER serializes it)\n","sig":null,"attributes":[{"value":"/ Create a SerializedSignature from a Signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8973,"byte_end":9023,"line_start":259,"line_end":259,"column_start":5,"column_end":55}},{"value":"/ (this DER serializes it)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9028,"byte_end":9056,"line_start":260,"line_end":260,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9207,"byte_end":9215,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SerializedSignature>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the space is zero.\n","sig":null,"attributes":[{"value":"/ Check if the space is zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9164,"byte_end":9195,"line_start":265,"line_end":265,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9349,"byte_end":9357,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"pub fn from_der(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9271,"byte_end":9280,"line_start":270,"line_end":270,"column_start":1,"column_end":10}},{"value":"/ Converts a DER-encoded byte slice to a signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9285,"byte_end":9337,"line_start":271,"line_end":271,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9983,"byte_end":9995,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<Signature>::from_compact","value":"pub fn from_compact(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a 64-byte compact-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"/ Converts a 64-byte compact-encoded byte slice to a signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9907,"byte_end":9971,"line_start":291,"line_end":291,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":10833,"byte_end":10845,"line_start":316,"line_end":316,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"pub fn from_der_lax(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":10534,"byte_end":10611,"line_start":312,"line_end":312,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":10616,"byte_end":10695,"line_start":313,"line_end":313,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":10700,"byte_end":10776,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":10781,"byte_end":10821,"line_start":315,"line_end":315,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12574,"byte_end":12585,"line_start":352,"line_end":352,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"pub fn normalize_s(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11389,"byte_end":11459,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11464,"byte_end":11533,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11538,"byte_end":11609,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11614,"byte_end":11684,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11689,"byte_end":11760,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11765,"byte_end":11839,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11844,"byte_end":11918,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11923,"byte_end":11994,"line_start":342,"line_end":342,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accommodate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":11999,"byte_end":12074,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12079,"byte_end":12152,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12157,"byte_end":12223,"line_start":345,"line_end":345,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12228,"byte_end":12242,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12247,"byte_end":12250,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12255,"byte_end":12330,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12335,"byte_end":12408,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12413,"byte_end":12486,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12491,"byte_end":12562,"line_start":351,"line_end":351,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13036,"byte_end":13042,"line_start":366,"line_end":366,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":12949,"byte_end":13010,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13015,"byte_end":13024,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13199,"byte_end":13209,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13104,"byte_end":13173,"line_start":370,"line_end":370,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13178,"byte_end":13187,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13345,"byte_end":13358,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"pub fn serialize_der(&Self) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13277,"byte_end":13286,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in DER format","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13291,"byte_end":13333,"line_start":377,"line_end":377,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13912,"byte_end":13929,"line_start":396,"line_end":396,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<Signature>::serialize_compact","value":"pub fn serialize_compact(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13840,"byte_end":13849,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in compact format","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":13854,"byte_end":13900,"line_start":395,"line_end":395,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":579},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15607,"byte_end":15614,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature\n","sig":null,"attributes":[{"value":"/ A (hashed) message input to an ECDSA signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15545,"byte_end":15595,"line_start":457,"line_end":457,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":16203,"byte_end":16213,"line_start":470,"line_end":470,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","sig":null,"attributes":[{"value":"/ **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15755,"byte_end":15849,"line_start":463,"line_end":463,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15854,"byte_end":15857,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Converts a `MESSAGE_SIZE`-byte slice to a message object. **WARNING:** the slice has to be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15862,"byte_end":15958,"line_start":465,"line_end":465,"column_start":5,"column_end":101}},{"value":"/ cryptographically secure hash of the actual message that's going to be signed. Otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15963,"byte_end":16055,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"/ the result of signing isn't a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":16060,"byte_end":16093,"line_start":467,"line_end":467,"column_start":5,"column_end":38}},{"value":"/ [secure signature](https://twitter.com/pwuille/status/1063582706288586752).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":16098,"byte_end":16177,"line_start":468,"line_end":468,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":16182,"byte_end":16191,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17631,"byte_end":17649,"line_start":513,"line_end":513,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[{"value":"/ Signature failed verification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17593,"byte_end":17626,"line_start":512,"line_end":512,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17770,"byte_end":17784,"line_start":516,"line_end":516,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant)\n","sig":null,"attributes":[{"value":"/ Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17655,"byte_end":17747,"line_start":514,"line_end":514,"column_start":5,"column_end":97}},{"value":"/ constant)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17752,"byte_end":17765,"line_start":515,"line_end":515,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":942},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17813,"byte_end":17829,"line_start":518,"line_end":518,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Bad public key\n","sig":null,"attributes":[{"value":"/ Bad public key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17790,"byte_end":17808,"line_start":517,"line_end":517,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":944},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17857,"byte_end":17873,"line_start":520,"line_end":520,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Bad signature\n","sig":null,"attributes":[{"value":"/ Bad signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17835,"byte_end":17852,"line_start":519,"line_end":519,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17902,"byte_end":17918,"line_start":522,"line_end":522,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Bad secret key\n","sig":null,"attributes":[{"value":"/ Bad secret key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17879,"byte_end":17897,"line_start":521,"line_end":521,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17948,"byte_end":17965,"line_start":524,"line_end":524,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Bad recovery id\n","sig":null,"attributes":[{"value":"/ Bad recovery id","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17924,"byte_end":17943,"line_start":523,"line_end":523,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18026,"byte_end":18038,"line_start":526,"line_end":526,"column_start":5,"column_end":17},"name":"InvalidTweak","qualname":"::Error::InvalidTweak","value":"Error::InvalidTweak","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Invalid tweak for add_*_assign or mul_*_assign\n","sig":null,"attributes":[{"value":"/ Invalid tweak for add_*_assign or mul_*_assign","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17971,"byte_end":18021,"line_start":525,"line_end":525,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18100,"byte_end":18116,"line_start":528,"line_end":528,"column_start":5,"column_end":21},"name":"TweakCheckFailed","qualname":"::Error::TweakCheckFailed","value":"Error::TweakCheckFailed","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" `tweak_add_check` failed on an xonly public key\n","sig":null,"attributes":[{"value":"/ `tweak_add_check` failed on an xonly public key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18044,"byte_end":18095,"line_start":527,"line_end":527,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18201,"byte_end":18216,"line_start":530,"line_end":530,"column_start":5,"column_end":20},"name":"NotEnoughMemory","qualname":"::Error::NotEnoughMemory","value":"Error::NotEnoughMemory","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Didn't pass enough memory to context creation with preallocated memory\n","sig":null,"attributes":[{"value":"/ Didn't pass enough memory to context creation with preallocated memory","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18122,"byte_end":18196,"line_start":529,"line_end":529,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":937},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17581,"byte_end":17586,"line_start":511,"line_end":511,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    IncorrectSignature,\n    InvalidMessage,\n    InvalidPublicKey,\n    InvalidSignature,\n    InvalidSecretKey,\n    InvalidRecoveryId,\n    InvalidTweak,\n    TweakCheckFailed,\n    NotEnoughMemory,\n}","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"/ An ECDSA error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17508,"byte_end":17526,"line_start":509,"line_end":509,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19333,"byte_end":19342,"line_start":561,"line_end":561,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations\n","sig":null,"attributes":[{"value":"/ The secp256k1 engine, used to execute all signature operations","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19255,"byte_end":19321,"line_start":560,"line_end":560,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":21197,"byte_end":21200,"line_start":630,"line_end":630,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Secp256k1<C>>::ctx","value":"pub fn ctx(&Self) -> &*mut ffi::Context","parent":null,"children":[],"decl_id":null,"docs":" Getter for the raw pointer to the underlying secp256k1 context. This\n shouldn't be needed with normal usage of the library. It enables\n extending the Secp256k1 with more cryptographic algorithms outside of\n this crate.\n","sig":null,"attributes":[{"value":"/ Getter for the raw pointer to the underlying secp256k1 context. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20942,"byte_end":21014,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ shouldn't be needed with normal usage of the library. It enables","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":21019,"byte_end":21087,"line_start":627,"line_end":627,"column_start":5,"column_end":73}},{"value":"/ extending the Secp256k1 with more cryptographic algorithms outside of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":21092,"byte_end":21165,"line_start":628,"line_end":628,"column_start":5,"column_end":78}},{"value":"/ this crate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":21170,"byte_end":21185,"line_start":629,"line_end":629,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":21375,"byte_end":21395,"line_start":635,"line_end":635,"column_start":12,"column_end":32},"name":"preallocate_size_gen","qualname":"<Secp256k1<C>>::preallocate_size_gen","value":"pub fn preallocate_size_gen() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":21261,"byte_end":21363,"line_start":634,"line_end":634,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":22243,"byte_end":22259,"line_start":655,"line_end":655,"column_start":12,"column_end":28},"name":"seeded_randomize","qualname":"<Secp256k1<C>>::seeded_randomize","value":"pub fn seeded_randomize(&mut Self, &[u8; ])","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for cheap sidechannel resistance given 32 bytes of\n cryptographically-secure random data;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.\n","sig":null,"attributes":[{"value":"/ (Re)randomizes the Secp256k1 context for cheap sidechannel resistance given 32 bytes of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":22021,"byte_end":22112,"line_start":652,"line_end":652,"column_start":5,"column_end":96}},{"value":"/ cryptographically-secure random data;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":22117,"byte_end":22158,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":22163,"byte_end":22231,"line_start":654,"line_end":654,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":23979,"byte_end":23983,"line_start":703,"line_end":703,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1<C>>::sign","value":"pub fn sign(&Self, &Message, &key::SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":23843,"byte_end":23923,"line_start":701,"line_end":701,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":23928,"byte_end":23967,"line_start":702,"line_end":702,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26664,"byte_end":26676,"line_start":759,"line_end":759,"column_start":12,"column_end":24},"name":"sign_grind_r","qualname":"<Secp256k1<C>>::sign_grind_r","value":"pub fn sign_grind_r(&Self, &Message, &key::SecretKey, usize) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 - bytes_to_grund bytes. The number\n of signing operation performed by this function is exponential in the\n number of bytes grinded.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26264,"byte_end":26341,"line_start":753,"line_end":753,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26346,"byte_end":26421,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 - bytes_to_grund bytes. The number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26426,"byte_end":26497,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ of signing operation performed by this function is exponential in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26502,"byte_end":26575,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ number of bytes grinded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26580,"byte_end":26608,"line_start":757,"line_end":757,"column_start":5,"column_end":33}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26613,"byte_end":26652,"line_start":758,"line_end":758,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":27331,"byte_end":27341,"line_start":770,"line_end":770,"column_start":12,"column_end":22},"name":"sign_low_r","qualname":"<Secp256k1<C>>::sign_low_r","value":"pub fn sign_low_r(&Self, &Message, &key::SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 bytes and compatible with the low r\n signature implementation of bitcoin core. In average, this function\n will perform two signing operations.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":26920,"byte_end":26997,"line_start":764,"line_end":764,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":27002,"byte_end":27077,"line_start":765,"line_end":765,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 bytes and compatible with the low r","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":27082,"byte_end":27154,"line_start":766,"line_end":766,"column_start":5,"column_end":77}},{"value":"/ signature implementation of bitcoin core. In average, this function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":27159,"byte_end":27230,"line_start":767,"line_end":767,"column_start":5,"column_end":76}},{"value":"/ will perform two signing operations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":27235,"byte_end":27275,"line_start":768,"line_end":768,"column_start":5,"column_end":45}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":27280,"byte_end":27319,"line_start":769,"line_end":769,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29258,"byte_end":29264,"line_start":813,"line_end":813,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1<C>>::verify","value":"pub fn verify(&Self, &Message, &Signature, &key::PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(())` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28138,"byte_end":28213,"line_start":789,"line_end":789,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(())` on success. Note that this function cannot","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28218,"byte_end":28295,"line_start":790,"line_end":790,"column_start":5,"column_end":82}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28300,"byte_end":28375,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28380,"byte_end":28458,"line_start":792,"line_end":792,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28463,"byte_end":28490,"line_start":793,"line_end":793,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28495,"byte_end":28498,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28503,"byte_end":28514,"line_start":795,"line_end":795,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(feature=\"rand\")] {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28519,"byte_end":28549,"line_start":796,"line_end":796,"column_start":5,"column_end":35}},{"value":"/ # use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28554,"byte_end":28593,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ # use secp256k1::{Secp256k1, Message, Error};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28598,"byte_end":28647,"line_start":798,"line_end":798,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28652,"byte_end":28657,"line_start":799,"line_end":799,"column_start":5,"column_end":10}},{"value":"/ # let secp = Secp256k1::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28662,"byte_end":28696,"line_start":800,"line_end":800,"column_start":5,"column_end":39}},{"value":"/ # let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28701,"byte_end":28750,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/ # let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28755,"byte_end":28824,"line_start":802,"line_end":802,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28829,"byte_end":28834,"line_start":803,"line_end":803,"column_start":5,"column_end":10}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28839,"byte_end":28909,"line_start":804,"line_end":804,"column_start":5,"column_end":75}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28914,"byte_end":28961,"line_start":805,"line_end":805,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Ok(()));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28966,"byte_end":29031,"line_start":806,"line_end":806,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29036,"byte_end":29039,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let message = Message::from_slice(&[0xcd; 32]).expect(\"32 bytes\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29044,"byte_end":29114,"line_start":808,"line_end":808,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Err(Error::IncorrectSignature));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29119,"byte_end":29208,"line_start":809,"line_end":809,"column_start":5,"column_end":94}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29213,"byte_end":29220,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29225,"byte_end":29232,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":29237,"byte_end":29246,"line_start":812,"line_end":812,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60040,"byte_end":60055,"line_start":83,"line_end":83,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60091,"byte_end":60113,"line_start":84,"line_end":84,"column_start":27,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60149,"byte_end":60169,"line_start":85,"line_end":85,"column_start":27,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60250,"byte_end":60258,"line_start":90,"line_end":90,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60291,"byte_end":60294,"line_start":91,"line_end":91,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60327,"byte_end":60337,"line_start":92,"line_end":92,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60716,"byte_end":60724,"line_start":107,"line_end":107,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60749,"byte_end":60752,"line_start":108,"line_end":108,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60783,"byte_end":60793,"line_start":110,"line_end":110,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60823,"byte_end":60826,"line_start":111,"line_end":111,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60859,"byte_end":60867,"line_start":113,"line_end":113,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61212,"byte_end":61222,"line_start":123,"line_end":123,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61574,"byte_end":61577,"line_start":133,"line_end":133,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61929,"byte_end":61938,"line_start":143,"line_end":143,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62607,"byte_end":62616,"line_start":160,"line_end":160,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62790,"byte_end":62799,"line_start":167,"line_end":167,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63004,"byte_end":63013,"line_start":174,"line_end":174,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63244,"byte_end":63253,"line_start":181,"line_end":181,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63364,"byte_end":63373,"line_start":187,"line_end":187,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63896,"byte_end":63916,"line_start":201,"line_end":201,"column_start":24,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63949,"byte_end":63964,"line_start":202,"line_end":202,"column_start":24,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64003,"byte_end":64025,"line_start":204,"line_end":204,"column_start":29,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64063,"byte_end":64078,"line_start":205,"line_end":205,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64119,"byte_end":64139,"line_start":207,"line_end":207,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64384,"byte_end":64406,"line_start":216,"line_end":216,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64658,"byte_end":64673,"line_start":225,"line_end":225,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64956,"byte_end":64965,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":65741,"byte_end":65750,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67167,"byte_end":67176,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68699,"byte_end":68708,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73872,"byte_end":73884,"line_start":39,"line_end":39,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74765,"byte_end":74777,"line_start":76,"line_end":76,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74899,"byte_end":74911,"line_start":82,"line_end":82,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75001,"byte_end":75013,"line_start":88,"line_end":88,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75350,"byte_end":75362,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81702,"byte_end":81711,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81900,"byte_end":81909,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82038,"byte_end":82047,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82836,"byte_end":82845,"line_start":70,"line_end":70,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":83067,"byte_end":83076,"line_start":80,"line_end":80,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":83205,"byte_end":83214,"line_start":86,"line_end":86,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":83933,"byte_end":83942,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87059,"byte_end":87068,"line_start":218,"line_end":218,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":92574,"byte_end":92583,"line_start":385,"line_end":385,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":92868,"byte_end":92877,"line_start":398,"line_end":398,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":93028,"byte_end":93037,"line_start":407,"line_end":407,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":93199,"byte_end":93208,"line_start":413,"line_end":413,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110396,"byte_end":110405,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110593,"byte_end":110602,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110731,"byte_end":110740,"line_start":38,"line_end":38,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111542,"byte_end":111551,"line_start":59,"line_end":59,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111773,"byte_end":111782,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111911,"byte_end":111920,"line_start":75,"line_end":75,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112327,"byte_end":112336,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112782,"byte_end":112789,"line_start":103,"line_end":103,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115705,"byte_end":115714,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":120426,"byte_end":120435,"line_start":342,"line_end":342,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":120744,"byte_end":120753,"line_start":354,"line_end":354,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":120885,"byte_end":120894,"line_start":361,"line_end":361,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":121405,"byte_end":121414,"line_start":381,"line_end":381,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136695,"byte_end":136705,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137067,"byte_end":137087,"line_start":55,"line_end":55,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139412,"byte_end":139432,"line_start":129,"line_end":129,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139742,"byte_end":139762,"line_start":141,"line_end":141,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139909,"byte_end":139918,"line_start":148,"line_end":148,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":140853,"byte_end":140862,"line_start":175,"line_end":175,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6761,"byte_end":6770,"line_start":176,"line_end":176,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6886,"byte_end":6895,"line_start":182,"line_end":182,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7092,"byte_end":7101,"line_start":192,"line_end":192,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8230,"byte_end":8249,"line_start":232,"line_end":232,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9259,"byte_end":9268,"line_start":269,"line_end":269,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":14288,"byte_end":14297,"line_start":410,"line_end":410,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":14579,"byte_end":14588,"line_start":422,"line_end":422,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15741,"byte_end":15748,"line_start":462,"line_end":462,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17355,"byte_end":17362,"line_start":502,"line_end":502,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18226,"byte_end":18231,"line_start":533,"line_end":533,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19071,"byte_end":19076,"line_start":550,"line_end":550,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19244,"byte_end":19249,"line_start":557,"line_end":557,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19556,"byte_end":19565,"line_start":568,"line_end":568,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19701,"byte_end":19710,"line_start":570,"line_end":570,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19750,"byte_end":19759,"line_start":573,"line_end":573,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19842,"byte_end":19861,"line_start":577,"line_end":577,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20023,"byte_end":20042,"line_start":586,"line_end":586,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20188,"byte_end":20207,"line_start":592,"line_end":592,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20297,"byte_end":20316,"line_start":598,"line_end":598,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20426,"byte_end":20445,"line_start":605,"line_end":605,"column_start":13,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20474,"byte_end":20483,"line_start":607,"line_end":607,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20518,"byte_end":20527,"line_start":609,"line_end":609,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20746,"byte_end":20755,"line_start":618,"line_end":618,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20922,"byte_end":20931,"line_start":624,"line_end":624,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":23823,"byte_end":23832,"line_start":699,"line_end":699,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28119,"byte_end":28128,"line_start":788,"line_end":788,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6101,"byte_end":6110,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":166}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6120,"byte_end":6124,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6134,"byte_end":6137,"line_start":146,"line_end":146,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6147,"byte_end":6157,"line_start":147,"line_end":147,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":341}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6196,"byte_end":6204,"line_start":149,"line_end":149,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":456}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":58720,"byte_end":58726,"line_start":46,"line_end":46,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59102,"byte_end":59109,"line_start":56,"line_end":56,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":58},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":59232,"byte_end":59239,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":58},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60040,"byte_end":60055,"line_start":83,"line_end":83,"column_start":27,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60091,"byte_end":60113,"line_start":84,"line_end":84,"column_start":27,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60149,"byte_end":60169,"line_start":85,"line_end":85,"column_start":27,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60250,"byte_end":60258,"line_start":90,"line_end":90,"column_start":30,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60291,"byte_end":60294,"line_start":91,"line_end":91,"column_start":30,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60327,"byte_end":60337,"line_start":92,"line_end":92,"column_start":30,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60716,"byte_end":60724,"line_start":107,"line_end":107,"column_start":22,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60749,"byte_end":60752,"line_start":108,"line_end":108,"column_start":22,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60783,"byte_end":60793,"line_start":110,"line_end":110,"column_start":27,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60823,"byte_end":60826,"line_start":111,"line_end":111,"column_start":27,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":60859,"byte_end":60867,"line_start":113,"line_end":113,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61212,"byte_end":61222,"line_start":123,"line_end":123,"column_start":29,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61574,"byte_end":61577,"line_start":133,"line_end":133,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":61929,"byte_end":61938,"line_start":143,"line_end":143,"column_start":22,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62607,"byte_end":62616,"line_start":160,"line_end":160,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":62790,"byte_end":62799,"line_start":167,"line_end":167,"column_start":10,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63004,"byte_end":63013,"line_start":174,"line_end":174,"column_start":10,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63244,"byte_end":63253,"line_start":181,"line_end":181,"column_start":22,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63364,"byte_end":63373,"line_start":187,"line_end":187,"column_start":32,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63896,"byte_end":63916,"line_start":201,"line_end":201,"column_start":24,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":63949,"byte_end":63964,"line_start":202,"line_end":202,"column_start":24,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64003,"byte_end":64025,"line_start":204,"line_end":204,"column_start":29,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64063,"byte_end":64078,"line_start":205,"line_end":205,"column_start":29,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64119,"byte_end":64139,"line_start":207,"line_end":207,"column_start":31,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64384,"byte_end":64406,"line_start":216,"line_end":216,"column_start":31,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64658,"byte_end":64673,"line_start":225,"line_end":225,"column_start":31,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":64956,"byte_end":64965,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":65741,"byte_end":65750,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":67167,"byte_end":67176,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/context.rs","byte_start":68699,"byte_end":68708,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":73872,"byte_end":73884,"line_start":39,"line_end":39,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74765,"byte_end":74777,"line_start":76,"line_end":76,"column_start":20,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":74899,"byte_end":74911,"line_start":82,"line_end":82,"column_start":22,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75001,"byte_end":75013,"line_start":88,"line_end":88,"column_start":16,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/ecdh.rs","byte_start":75350,"byte_end":75362,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81702,"byte_end":81711,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":8714}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":81900,"byte_end":81909,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82038,"byte_end":82047,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":82836,"byte_end":82845,"line_start":70,"line_end":70,"column_start":24,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":8714}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":83067,"byte_end":83076,"line_start":80,"line_end":80,"column_start":23,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":83205,"byte_end":83214,"line_start":86,"line_end":86,"column_start":23,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":83933,"byte_end":83942,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":87059,"byte_end":87068,"line_start":218,"line_end":218,"column_start":6,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":92574,"byte_end":92583,"line_start":385,"line_end":385,"column_start":15,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":744},"to":{"krate":18,"index":202}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":92868,"byte_end":92877,"line_start":398,"line_end":398,"column_start":31,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":93028,"byte_end":93037,"line_start":407,"line_end":407,"column_start":21,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/key.rs","byte_start":93199,"byte_end":93208,"line_start":413,"line_end":413,"column_start":14,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110396,"byte_end":110405,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":8714}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110593,"byte_end":110602,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":110731,"byte_end":110740,"line_start":38,"line_end":38,"column_start":23,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111542,"byte_end":111551,"line_start":59,"line_end":59,"column_start":24,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":8714}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111773,"byte_end":111782,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":111911,"byte_end":111920,"line_start":75,"line_end":75,"column_start":23,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112327,"byte_end":112336,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":112782,"byte_end":112789,"line_start":103,"line_end":103,"column_start":6,"column_end":13},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":115705,"byte_end":115714,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":120426,"byte_end":120435,"line_start":342,"line_end":342,"column_start":15,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":824},"to":{"krate":18,"index":202}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":120744,"byte_end":120753,"line_start":354,"line_end":354,"column_start":36,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":120885,"byte_end":120894,"line_start":361,"line_end":361,"column_start":33,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/schnorrsig.rs","byte_start":121405,"byte_end":121414,"line_start":381,"line_end":381,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":136695,"byte_end":136705,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":137067,"byte_end":137087,"line_start":55,"line_end":55,"column_start":6,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139412,"byte_end":139432,"line_start":129,"line_end":129,"column_start":15,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":861},"to":{"krate":18,"index":202}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139742,"byte_end":139762,"line_start":141,"line_end":141,"column_start":42,"column_end":62},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":139909,"byte_end":139918,"line_start":148,"line_end":148,"column_start":18,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/recovery.rs","byte_start":140853,"byte_end":140862,"line_start":175,"line_end":175,"column_start":23,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6761,"byte_end":6770,"line_start":176,"line_end":176,"column_start":21,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":6886,"byte_end":6895,"line_start":182,"line_end":182,"column_start":23,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":7092,"byte_end":7101,"line_start":192,"line_end":192,"column_start":23,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":8230,"byte_end":8249,"line_start":232,"line_end":232,"column_start":6,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":9259,"byte_end":9268,"line_start":269,"line_end":269,"column_start":6,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":14288,"byte_end":14297,"line_start":410,"line_end":410,"column_start":15,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":876},"to":{"krate":18,"index":202}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":14579,"byte_end":14588,"line_start":422,"line_end":422,"column_start":31,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":15741,"byte_end":15748,"line_start":462,"line_end":462,"column_start":6,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":17355,"byte_end":17362,"line_start":502,"line_end":502,"column_start":40,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":18226,"byte_end":18231,"line_start":533,"line_end":533,"column_start":6,"column_end":11},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19071,"byte_end":19076,"line_start":550,"line_end":550,"column_start":23,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":937},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19244,"byte_end":19249,"line_start":557,"line_end":557,"column_start":28,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":937},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19556,"byte_end":19565,"line_start":568,"line_end":568,"column_start":34,"column_end":43},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19701,"byte_end":19710,"line_start":570,"line_end":570,"column_start":34,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19750,"byte_end":19759,"line_start":573,"line_end":573,"column_start":32,"column_end":41},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":19842,"byte_end":19861,"line_start":577,"line_end":577,"column_start":18,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20023,"byte_end":20042,"line_start":586,"line_end":586,"column_start":20,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20188,"byte_end":20207,"line_start":592,"line_end":592,"column_start":22,"column_end":41},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20297,"byte_end":20316,"line_start":598,"line_end":598,"column_start":16,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20426,"byte_end":20445,"line_start":605,"line_end":605,"column_start":13,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20474,"byte_end":20483,"line_start":607,"line_end":607,"column_start":25,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20518,"byte_end":20527,"line_start":609,"line_end":609,"column_start":27,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20746,"byte_end":20755,"line_start":618,"line_end":618,"column_start":33,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":20922,"byte_end":20931,"line_start":624,"line_end":624,"column_start":18,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":23823,"byte_end":23832,"line_start":699,"line_end":699,"column_start":18,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.1/src/lib.rs","byte_start":28119,"byte_end":28128,"line_start":788,"line_end":788,"column_start":23,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}}]}