{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prost","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"prost-derive\"","--cfg","feature=\"std\"","-C","metadata=d662da11f70d9c95","-C","extra-filename=-d662da11f70d9c95","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","bytes=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbytes-7a6e657daebb7eb8.rmeta","--extern","prost_derive=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libprost_derive-af63be023fd079dd.so","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libprost-d662da11f70d9c95.rmeta"},"prelude":{"crate_id":{"name":"prost","disambiguator":[4871155259995139735,11345393049999642343]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","num":18,"id":{"name":"prost_derive","disambiguator":[1907569387495853741,795707953428713001]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","num":19,"id":{"name":"bytes","disambiguator":[16605158223807296615,2139309927205400556]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":0,"byte_end":2935,"line_start":1,"line_end":93,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":278,"byte_end":283,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"alias_span":null,"name":"bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":379,"byte_end":390,"line_start":19,"line_end":19,"column_start":24,"column_end":35},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":392,"byte_end":403,"line_start":19,"line_end":19,"column_start":37,"column_end":48},"alias_span":null,"name":"EncodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":430,"byte_end":437,"line_start":20,"line_end":20,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":2933,"byte_end":2934,"line_start":93,"line_end":93,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Message","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":0,"byte_end":2935,"line_start":1,"line_end":93,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":40},{"krate":0,"index":110},{"krate":0,"index":248},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3381,"byte_end":3392,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"DecodeError","qualname":"::error::DecodeError","value":"DecodeError {  }","parent":null,"children":[{"krate":0,"index":462}],"decl_id":null,"docs":" A Protobuf message decoding error.","sig":null,"attributes":[{"value":"/ A Protobuf message decoding error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3066,"byte_end":3104,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3105,"byte_end":3108,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `DecodeError` indicates that the input buffer does not caontain a valid","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3109,"byte_end":3184,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ Protobuf message. The error details should be considered 'best effort': in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3185,"byte_end":3263,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ general it is not possible to exactly pinpoint why data is malformed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3264,"byte_end":3337,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4403,"byte_end":4407,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"push","qualname":"<DecodeError>::push","value":"pub fn push(&mut Self, &'static str, &'static str)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a (message, field) name location pair on to the location stack.","sig":null,"attributes":[{"value":"/ Pushes a (message, field) name location pair on to the location stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4230,"byte_end":4304,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4309,"byte_end":4312,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4317,"byte_end":4372,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5658,"byte_end":5669,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"EncodeError","qualname":"::error::EncodeError","value":"EncodeError {  }","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"decl_id":null,"docs":" A Protobuf message encoding error.","sig":null,"attributes":[{"value":"/ A Protobuf message encoding error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5387,"byte_end":5425,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5426,"byte_end":5429,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ `EncodeError` always indicates that a message failed to encode because the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5430,"byte_end":5508,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ provided buffer had insufficient capacity. Message encoding is otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5509,"byte_end":5585,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ infallible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5586,"byte_end":5601,"line_start":85,"line_end":85,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6011,"byte_end":6028,"line_start":102,"line_end":102,"column_start":12,"column_end":29},"name":"required_capacity","qualname":"<EncodeError>::required_capacity","value":"pub fn required_capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required buffer capacity to encode the message.\n","sig":null,"attributes":[{"value":"/ Returns the required buffer capacity to encode the message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5936,"byte_end":5999,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6172,"byte_end":6181,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"remaining","qualname":"<EncodeError>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining length in the provided buffer at the time of encoding.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length in the provided buffer at the time of encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6080,"byte_end":6160,"line_start":106,"line_end":106,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7090,"byte_end":7097,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"Message","qualname":"::message::Message","value":"Message: Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101}],"decl_id":null,"docs":" A Protocol Buffers message.\n","sig":null,"attributes":[{"value":"/ A Protocol Buffers message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7048,"byte_end":7079,"line_start":13,"line_end":13,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7336,"byte_end":7346,"line_start":21,"line_end":21,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"::message::Message::encode_raw","value":"pub fn encode_raw<B>(&Self, &mut B) where B: BufMut, Self: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message to a buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7125,"byte_end":7161,"line_start":15,"line_end":15,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7166,"byte_end":7169,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This method will panic if the buffer has insufficient capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7174,"byte_end":7241,"line_start":17,"line_end":17,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7246,"byte_end":7249,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7254,"byte_end":7309,"line_start":19,"line_end":19,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7581,"byte_end":7592,"line_start":30,"line_end":30,"column_start":8,"column_end":19},"name":"merge_field","qualname":"::message::Message::merge_field","value":"pub fn merge_field<B>(&mut Self, u32, WireType, &mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf, Self: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decodes a field from a buffer, and merges it into `self`.","sig":null,"attributes":[{"value":"/ Decodes a field from a buffer, and merges it into `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7425,"byte_end":7486,"line_start":26,"line_end":26,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7491,"byte_end":7494,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7499,"byte_end":7554,"line_start":28,"line_end":28,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7878,"byte_end":7889,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::message::Message::encoded_len","value":"pub fn encoded_len(&Self) -> usize","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns the encoded length of the message without a length delimiter.\n","sig":null,"attributes":[{"value":"/ Returns the encoded length of the message without a length delimiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7797,"byte_end":7870,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":8047,"byte_end":8053,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"encode","qualname":"::message::Message::encode","value":"pub fn encode<B>(&Self, &mut B) -> Result<(), EncodeError> where B: BufMut,\nSelf: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message to a buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7912,"byte_end":7948,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7953,"byte_end":7956,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7961,"byte_end":8039,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":8581,"byte_end":8604,"line_start":65,"line_end":65,"column_start":8,"column_end":31},"name":"encode_length_delimited","qualname":"::message::Message::encode_length_delimited","value":"pub fn encode_length_delimited<B>(&Self, &mut B) -> Result<(), EncodeError>\nwhere B: BufMut, Self: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Encodes the message with a length-delimiter to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message with a length-delimiter to a buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":8422,"byte_end":8482,"line_start":62,"line_end":62,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":8487,"byte_end":8490,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":8495,"byte_end":8573,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9171,"byte_end":9177,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"decode","qualname":"::message::Message::decode","value":"pub fn decode<B>(B) -> Result<Self, DecodeError> where B: Buf, Self: Default","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer.","sig":null,"attributes":[{"value":"/ Decodes an instance of the message from a buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9058,"byte_end":9111,"line_start":81,"line_end":81,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9116,"byte_end":9119,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The entire buffer will be consumed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9124,"byte_end":9163,"line_start":83,"line_end":83,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9471,"byte_end":9494,"line_start":94,"line_end":94,"column_start":8,"column_end":31},"name":"decode_length_delimited","qualname":"::message::Message::decode_length_delimited","value":"pub fn decode_length_delimited<B>(B) -> Result<Self, DecodeError> where\nB: Buf, Self: Default","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from the buffer.\n","sig":null,"attributes":[{"value":"/ Decodes a length-delimited instance of the message from the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9392,"byte_end":9463,"line_start":93,"line_end":93,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9850,"byte_end":9855,"line_start":107,"line_end":107,"column_start":8,"column_end":13},"name":"merge","qualname":"::message::Message::merge","value":"pub fn merge<B>(&mut Self, B) -> Result<(), DecodeError> where B: Buf,\nSelf: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer, and merges it into `self`.","sig":null,"attributes":[{"value":"/ Decodes an instance of the message from a buffer, and merges it into `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9710,"byte_end":9790,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9795,"byte_end":9798,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The entire buffer will be consumed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":9803,"byte_end":9842,"line_start":106,"line_end":106,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10316,"byte_end":10338,"line_start":122,"line_end":122,"column_start":8,"column_end":30},"name":"merge_length_delimited","qualname":"::message::Message::merge_length_delimited","value":"pub fn merge_length_delimited<B>(&mut Self, B) -> Result<(), DecodeError>\nwhere B: Buf, Self: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from buffer, and\n merges it into `self`.\n","sig":null,"attributes":[{"value":"/ Decodes a length-delimited instance of the message from buffer, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10206,"byte_end":10277,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ merges it into `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10282,"byte_end":10308,"line_start":121,"line_end":121,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10677,"byte_end":10682,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"clear","qualname":"::message::Message::clear","value":"pub fn clear(&mut Self)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Clears the message, resetting all fields to their default.\n","sig":null,"attributes":[{"value":"/ Clears the message, resetting all fields to their default.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10607,"byte_end":10669,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encoding","qualname":"::encoding","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":499},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":505},{"krate":0,"index":530},{"krate":0,"index":529},{"krate":0,"index":527},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":532},{"krate":0,"index":551},{"krate":0,"index":570},{"krate":0,"index":589},{"krate":0,"index":608},{"krate":0,"index":627},{"krate":0,"index":646},{"krate":0,"index":665},{"krate":0,"index":681},{"krate":0,"index":697},{"krate":0,"index":713},{"krate":0,"index":729},{"krate":0,"index":745},{"krate":0,"index":331},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":374},{"krate":0,"index":382},{"krate":0,"index":402},{"krate":0,"index":421},{"krate":0,"index":425}],"decl_id":null,"docs":" Utility functions and types for encoding and decoding Protobuf types.","sig":null,"attributes":[{"value":"/ Utility functions and types for encoding and decoding Protobuf types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20240,"byte_end":20313,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20314,"byte_end":20317,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Meant to be used only from `Message` implementations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20318,"byte_end":20375,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"allow(clippy :: implicit_hasher, clippy :: ptr_arg)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20377,"byte_end":20428,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":295},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20902,"byte_end":20915,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"encode_varint","qualname":"::encoding::encode_varint","value":"pub fn encode_varint<B>(u64, &mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes an integer value into LEB128 variable length format, and writes it to the buffer.\n The buffer must have enough remaining space (maximum 10 bytes).\n","sig":null,"attributes":[{"value":"/ Encodes an integer value into LEB128 variable length format, and writes it to the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20723,"byte_end":20816,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ The buffer must have enough remaining space (maximum 10 bytes).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20817,"byte_end":20884,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":20885,"byte_end":20894,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":22092,"byte_end":22105,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"decode_varint","qualname":"::encoding::decode_varint","value":"pub fn decode_varint<B>(&mut B) -> Result<u64, DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a LEB128-encoded variable length integer from the buffer.\n","sig":null,"attributes":[{"value":"/ Decodes a LEB128-encoded variable length integer from the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":22015,"byte_end":22084,"line_start":63,"line_end":63,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":25970,"byte_end":25983,"line_start":198,"line_end":198,"column_start":12,"column_end":25},"name":"DecodeContext","qualname":"::encoding::DecodeContext","value":"DecodeContext {  }","parent":null,"children":[{"krate":0,"index":500}],"decl_id":null,"docs":" Additional information passed to every decode/merge function.","sig":null,"attributes":[{"value":"/ Additional information passed to every decode/merge function.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":25703,"byte_end":25768,"line_start":193,"line_end":193,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":25769,"byte_end":25772,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The context should be passed by value and can be freely cloned. When passing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":25773,"byte_end":25853,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/ to a function which is decoding a nested object, then use `enter_recursion`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":25854,"byte_end":25934,"line_start":196,"line_end":196,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":307},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28261,"byte_end":28279,"line_start":270,"line_end":270,"column_start":8,"column_end":26},"name":"encoded_len_varint","qualname":"::encoding::encoded_len_varint","value":"pub fn encoded_len_varint(u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of the value in LEB128 variable length format.\n The returned value will be between 1 and 10, inclusive.\n","sig":null,"attributes":[{"value":"/ Returns the encoded length of the value in LEB128 variable length format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28106,"byte_end":28183,"line_start":267,"line_end":267,"column_start":1,"column_end":78}},{"value":"/ The returned value will be between 1 and 10, inclusive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28184,"byte_end":28243,"line_start":268,"line_end":268,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28244,"byte_end":28253,"line_start":269,"line_end":269,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28592,"byte_end":28598,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"Varint","qualname":"::encoding::WireType::Varint","value":"WireType::Varint","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28608,"byte_end":28620,"line_start":280,"line_end":280,"column_start":5,"column_end":17},"name":"SixtyFourBit","qualname":"::encoding::WireType::SixtyFourBit","value":"WireType::SixtyFourBit","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28630,"byte_end":28645,"line_start":281,"line_end":281,"column_start":5,"column_end":20},"name":"LengthDelimited","qualname":"::encoding::WireType::LengthDelimited","value":"WireType::LengthDelimited","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":515},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28655,"byte_end":28665,"line_start":282,"line_end":282,"column_start":5,"column_end":15},"name":"StartGroup","qualname":"::encoding::WireType::StartGroup","value":"WireType::StartGroup","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":518},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28675,"byte_end":28683,"line_start":283,"line_end":283,"column_start":5,"column_end":13},"name":"EndGroup","qualname":"::encoding::WireType::EndGroup","value":"WireType::EndGroup","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28693,"byte_end":28705,"line_start":284,"line_end":284,"column_start":5,"column_end":17},"name":"ThirtyTwoBit","qualname":"::encoding::WireType::ThirtyTwoBit","value":"WireType::ThirtyTwoBit","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28577,"byte_end":28585,"line_start":278,"line_end":278,"column_start":10,"column_end":18},"name":"WireType","qualname":"::encoding::WireType","value":"pub enum WireType {\n    Varint = ,\n    SixtyFourBit = ,\n    LengthDelimited = ,\n    StartGroup = ,\n    EndGroup = ,\n    ThirtyTwoBit = ,\n}","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28556,"byte_end":28567,"line_start":277,"line_end":277,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":308},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28724,"byte_end":28731,"line_start":287,"line_end":287,"column_start":11,"column_end":18},"name":"MIN_TAG","qualname":"::encoding::MIN_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":309},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28752,"byte_end":28759,"line_start":288,"line_end":288,"column_start":11,"column_end":18},"name":"MAX_TAG","qualname":"::encoding::MAX_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29470,"byte_end":29480,"line_start":313,"line_end":313,"column_start":8,"column_end":18},"name":"encode_key","qualname":"::encoding::encode_key","value":"pub fn encode_key<B>(u32, WireType, &mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"/ Encodes a Protobuf field key, which consists of a wire type designator and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29355,"byte_end":29433,"line_start":310,"line_end":310,"column_start":1,"column_end":79}},{"value":"/ the field tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29434,"byte_end":29452,"line_start":311,"line_end":311,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29453,"byte_end":29462,"line_start":312,"line_end":312,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":315},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29815,"byte_end":29825,"line_start":325,"line_end":325,"column_start":8,"column_end":18},"name":"decode_key","qualname":"::encoding::decode_key","value":"pub fn decode_key<B>(&mut B) -> Result<(u32, WireType), DecodeError> where\nB: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"/ Decodes a Protobuf field key, which consists of a wire type designator and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29692,"byte_end":29770,"line_start":322,"line_end":322,"column_start":1,"column_end":79}},{"value":"/ the field tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29771,"byte_end":29789,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":29790,"byte_end":29807,"line_start":324,"line_end":324,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30418,"byte_end":30425,"line_start":346,"line_end":346,"column_start":8,"column_end":15},"name":"key_len","qualname":"::encoding::key_len","value":"pub fn key_len(u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of an encoded Protobuf field key with the given tag.\n The returned width will be between 1 and 5 bytes (inclusive).\n","sig":null,"attributes":[{"value":"/ Returns the width of an encoded Protobuf field key with the given tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30260,"byte_end":30334,"line_start":343,"line_end":343,"column_start":1,"column_end":75}},{"value":"/ The returned width will be between 1 and 5 bytes (inclusive).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30335,"byte_end":30400,"line_start":344,"line_end":344,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30401,"byte_end":30410,"line_start":345,"line_end":345,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30612,"byte_end":30627,"line_start":353,"line_end":353,"column_start":8,"column_end":23},"name":"check_wire_type","qualname":"::encoding::check_wire_type","value":"pub fn check_wire_type(WireType, WireType) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the expected wire type matches the actual wire type,\n or returns an error result.\n","sig":null,"attributes":[{"value":"/ Checks that the expected wire type matches the actual wire type,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30494,"byte_end":30562,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/ or returns an error result.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30563,"byte_end":30594,"line_start":351,"line_end":351,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30595,"byte_end":30604,"line_start":352,"line_end":352,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":319},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":31034,"byte_end":31044,"line_start":365,"line_end":365,"column_start":8,"column_end":18},"name":"merge_loop","qualname":"::encoding::merge_loop","value":"pub fn merge_loop<T, M, B>(&mut T, &mut B, DecodeContext, M)\n-> Result<(), DecodeError> where M: FnMut(&mut T, &mut B, DecodeContext) ->\nResult<(), DecodeError>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Helper function which abstracts reading a length delimiter prefix followed\n by decoding values until the length of bytes is exhausted.\n","sig":null,"attributes":[{"value":"/ Helper function which abstracts reading a length delimiter prefix followed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30885,"byte_end":30963,"line_start":363,"line_end":363,"column_start":1,"column_end":79}},{"value":"/ by decoding values until the length of bytes is exhausted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":30964,"byte_end":31026,"line_start":364,"line_end":364,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":323},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":31677,"byte_end":31687,"line_start":392,"line_end":392,"column_start":8,"column_end":18},"name":"skip_field","qualname":"::encoding::skip_field","value":"pub fn skip_field<B>(WireType, u32, &mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38286,"byte_end":38290,"line_start":586,"line_end":586,"column_start":15,"column_end":19},"name":"bool","qualname":"::encoding::bool","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":546},{"krate":0,"index":538},{"krate":0,"index":548},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":544}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38404,"byte_end":38409,"line_start":589,"line_end":589,"column_start":14,"column_end":19},"name":"int32","qualname":"::encoding::int32","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":565},{"krate":0,"index":557},{"krate":0,"index":567},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38425,"byte_end":38430,"line_start":590,"line_end":590,"column_start":14,"column_end":19},"name":"int64","qualname":"::encoding::int64","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":584},{"krate":0,"index":576},{"krate":0,"index":586},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":582}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":589},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38446,"byte_end":38452,"line_start":591,"line_end":591,"column_start":14,"column_end":20},"name":"uint32","qualname":"::encoding::uint32","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":603},{"krate":0,"index":595},{"krate":0,"index":605},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":608},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38468,"byte_end":38474,"line_start":592,"line_end":592,"column_start":14,"column_end":20},"name":"uint64","qualname":"::encoding::uint64","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":622},{"krate":0,"index":614},{"krate":0,"index":624},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":627},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38490,"byte_end":38496,"line_start":593,"line_end":593,"column_start":14,"column_end":20},"name":"sint32","qualname":"::encoding::sint32","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":641},{"krate":0,"index":633},{"krate":0,"index":643},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":646},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":38689,"byte_end":38695,"line_start":601,"line_end":601,"column_start":14,"column_end":20},"name":"sint64","qualname":"::encoding::sint64","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":660},{"krate":0,"index":652},{"krate":0,"index":662},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":665},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":42424,"byte_end":42429,"line_start":721,"line_end":721,"column_start":5,"column_end":10},"name":"float","qualname":"::encoding::float","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":676},{"krate":0,"index":671},{"krate":0,"index":678},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":681},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":42527,"byte_end":42533,"line_start":729,"line_end":729,"column_start":5,"column_end":11},"name":"double","qualname":"::encoding::double","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":692},{"krate":0,"index":687},{"krate":0,"index":694},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":697},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":42631,"byte_end":42638,"line_start":737,"line_end":737,"column_start":5,"column_end":12},"name":"fixed32","qualname":"::encoding::fixed32","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":708},{"krate":0,"index":703},{"krate":0,"index":710},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":42736,"byte_end":42743,"line_start":745,"line_end":745,"column_start":5,"column_end":12},"name":"fixed64","qualname":"::encoding::fixed64","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":724},{"krate":0,"index":719},{"krate":0,"index":726},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":42841,"byte_end":42849,"line_start":753,"line_end":753,"column_start":5,"column_end":13},"name":"sfixed32","qualname":"::encoding::sfixed32","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":740},{"krate":0,"index":735},{"krate":0,"index":742},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":745},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":42947,"byte_end":42955,"line_start":761,"line_end":761,"column_start":5,"column_end":13},"name":"sfixed64","qualname":"::encoding::sfixed64","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":756},{"krate":0,"index":751},{"krate":0,"index":758},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":331},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":44120,"byte_end":44126,"line_start":803,"line_end":803,"column_start":9,"column_end":15},"name":"string","qualname":"::encoding::string","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":766},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":333},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":44159,"byte_end":44165,"line_start":806,"line_end":806,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::string::encode","value":"pub fn encode<B>(u32, &String, &mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":44406,"byte_end":44411,"line_start":814,"line_end":814,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::string::merge","value":"pub fn merge<B>(WireType, &mut String, &mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":344},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47065,"byte_end":47077,"line_start":885,"line_end":885,"column_start":11,"column_end":23},"name":"BytesAdapter","qualname":"::encoding::BytesAdapter","value":"BytesAdapter: sealed::BytesAdapter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":353},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47162,"byte_end":47174,"line_start":890,"line_end":890,"column_start":15,"column_end":27},"name":"BytesAdapter","qualname":"::encoding::sealed::BytesAdapter","value":"BytesAdapter: Default + Sized + 'static","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47215,"byte_end":47218,"line_start":891,"line_end":891,"column_start":12,"column_end":15},"name":"len","qualname":"::encoding::sealed::BytesAdapter::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47329,"byte_end":47341,"line_start":894,"line_end":894,"column_start":12,"column_end":24},"name":"replace_with","qualname":"::encoding::sealed::BytesAdapter::replace_with","value":"pub fn replace_with<B>(&mut Self, B) where B: Buf","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Replace contents of this buffer with the contents of another buffer.\n","sig":null,"attributes":[{"value":"/ Replace contents of this buffer with the contents of another buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47245,"byte_end":47317,"line_start":893,"line_end":893,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47477,"byte_end":47486,"line_start":899,"line_end":899,"column_start":12,"column_end":21},"name":"append_to","qualname":"::encoding::sealed::BytesAdapter::append_to","value":"pub fn append_to<B>(&Self, &mut B) where B: BufMut","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Appends this buffer to the (contents of) other buffer.\n","sig":null,"attributes":[{"value":"/ Appends this buffer to the (contents of) other buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47407,"byte_end":47465,"line_start":898,"line_end":898,"column_start":9,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47559,"byte_end":47567,"line_start":903,"line_end":903,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::encoding::sealed::BytesAdapter::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":374},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48441,"byte_end":48446,"line_start":955,"line_end":955,"column_start":9,"column_end":14},"name":"bytes","qualname":"::encoding::bytes","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":776},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":773}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":376},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48479,"byte_end":48485,"line_start":958,"line_end":958,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::bytes::encode","value":"pub fn encode<A, B>(u32, &A, &mut B) where A: BytesAdapter, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48739,"byte_end":48744,"line_start":968,"line_end":968,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::bytes::merge","value":"pub fn merge<A, B>(WireType, &mut A, &mut B, DecodeContext)\n-> Result<(), DecodeError> where A: BytesAdapter, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":382},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":51768,"byte_end":51775,"line_start":1043,"line_end":1043,"column_start":9,"column_end":16},"name":"message","qualname":"::encoding::message","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":399}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":384},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":51808,"byte_end":51814,"line_start":1046,"line_end":1046,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::message::encode","value":"pub fn encode<M, B>(u32, &M, &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":387},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":52066,"byte_end":52071,"line_start":1056,"line_end":1056,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::message::merge","value":"pub fn merge<M, B>(WireType, &mut M, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":391},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":52650,"byte_end":52665,"line_start":1079,"line_end":1079,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::message::encode_repeated","value":"pub fn encode_repeated<M, B>(u32, &[M], &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":52859,"byte_end":52873,"line_start":1089,"line_end":1089,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::message::merge_repeated","value":"pub fn merge_repeated<M, B>(WireType, &mut Vec<M>, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message + Default, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":397},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":53323,"byte_end":53334,"line_start":1107,"line_end":1107,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::message::encoded_len","value":"pub fn encoded_len<M>(u32, &M) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":53302,"byte_end":53311,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":53531,"byte_end":53551,"line_start":1116,"line_end":1116,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::message::encoded_len_repeated","value":"pub fn encoded_len_repeated<M>(u32, &[M]) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":53510,"byte_end":53519,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":402},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":53868,"byte_end":53873,"line_start":1129,"line_end":1129,"column_start":9,"column_end":14},"name":"group","qualname":"::encoding::group","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":53906,"byte_end":53912,"line_start":1132,"line_end":1132,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::group::encode","value":"pub fn encode<M, B>(u32, &M, &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":54155,"byte_end":54160,"line_start":1142,"line_end":1142,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::group::merge","value":"pub fn merge<M, B>(u32, WireType, &mut M, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":54893,"byte_end":54908,"line_start":1169,"line_end":1169,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::group::encode_repeated","value":"pub fn encode_repeated<M, B>(u32, &[M], &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":413},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":55102,"byte_end":55116,"line_start":1179,"line_end":1179,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::group::merge_repeated","value":"pub fn merge_repeated<M, B>(u32, WireType, &mut Vec<M>, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message + Default, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":416},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":55579,"byte_end":55590,"line_start":1198,"line_end":1198,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::group::encoded_len","value":"pub fn encoded_len<M>(u32, &M) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":55558,"byte_end":55567,"line_start":1197,"line_end":1197,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":55735,"byte_end":55755,"line_start":1206,"line_end":1206,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::group::encoded_len_repeated","value":"pub fn encoded_len_repeated<M>(u32, &[M]) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":55714,"byte_end":55723,"line_start":1205,"line_end":1205,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":421},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":62366,"byte_end":62374,"line_start":1402,"line_end":1402,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::encoding::hash_map","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":791},{"krate":0,"index":797},{"krate":0,"index":802},{"krate":0,"index":810},{"krate":0,"index":817}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":62334,"byte_end":62357,"line_start":1401,"line_end":1401,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":425},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":62442,"byte_end":62451,"line_start":1407,"line_end":1407,"column_start":9,"column_end":18},"name":"btree_map","qualname":"::encoding::btree_map","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":835},{"krate":0,"index":841},{"krate":0,"index":846},{"krate":0,"index":854},{"krate":0,"index":861}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":454},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":958,"byte_end":981,"line_start":37,"line_end":37,"column_start":8,"column_end":31},"name":"encode_length_delimiter","qualname":"::encode_length_delimiter","value":"pub fn encode_length_delimiter<B>(usize, &mut B) -> Result<(), EncodeError>\nwhere B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes a length delimiter to the buffer.","sig":null,"attributes":[{"value":"/ Encodes a length delimiter to the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":733,"byte_end":778,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":779,"byte_end":782,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ See [Message.encode_length_delimited] for more info.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":783,"byte_end":839,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":840,"byte_end":843,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity to encode the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":844,"byte_end":935,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ delimiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":936,"byte_end":950,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1564,"byte_end":1584,"line_start":55,"line_end":55,"column_start":8,"column_end":28},"name":"length_delimiter_len","qualname":"::length_delimiter_len","value":"pub fn length_delimiter_len(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of a length delimiter.","sig":null,"attributes":[{"value":"/ Returns the encoded length of a length delimiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1324,"byte_end":1377,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1378,"byte_end":1381,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Applications may use this method to ensure sufficient buffer capacity before calling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1382,"byte_end":1470,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/ `encode_length_delimiter`. The returned size will be between 1 and 10, inclusive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1471,"byte_end":1556,"line_start":54,"line_end":54,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":2239,"byte_end":2262,"line_start":70,"line_end":70,"column_start":8,"column_end":31},"name":"decode_length_delimiter","qualname":"::decode_length_delimiter","value":"pub fn decode_length_delimiter<B>(B) -> Result<usize, DecodeError> where\nB: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a length delimiter from the buffer.","sig":null,"attributes":[{"value":"/ Decodes a length delimiter from the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1652,"byte_end":1699,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1700,"byte_end":1703,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This method allows the length delimiter to be decoded independently of the message, when the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1704,"byte_end":1800,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"/ message is encoded with [Message.encode_length_delimited].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1801,"byte_end":1863,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An error may be returned in two cases:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1868,"byte_end":1910,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * If the supplied buffer contains fewer than 10 bytes, then an error indicates that more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":1915,"byte_end":2008,"line_start":66,"line_end":66,"column_start":1,"column_end":94}},{"value":"/    input is required to decode the full delimiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":2009,"byte_end":2063,"line_start":67,"line_end":67,"column_start":1,"column_end":55}},{"value":"/  * If the supplied buffer contains more than 10 bytes, then the buffer contains an invalid","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":2064,"byte_end":2158,"line_start":68,"line_end":68,"column_start":1,"column_end":95}},{"value":"/    delimiter, and typically the buffer should be considered corrupt.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":2159,"byte_end":2231,"line_start":69,"line_end":69,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3794,"byte_end":3805,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4543,"byte_end":4554,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4817,"byte_end":4828,"line_start":61,"line_end":61,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5174,"byte_end":5185,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5250,"byte_end":5255,"line_start":75,"line_end":75,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5723,"byte_end":5734,"line_start":92,"line_end":92,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6254,"byte_end":6265,"line_start":112,"line_end":112,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6584,"byte_end":6595,"line_start":123,"line_end":123,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6660,"byte_end":6665,"line_start":126,"line_end":126,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10718,"byte_end":10721,"line_start":139,"line_end":139,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/types.rs","byte_start":17444,"byte_end":17450,"line_start":288,"line_end":288,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/types.rs","byte_start":18238,"byte_end":18241,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/types.rs","byte_start":19030,"byte_end":19035,"line_start":364,"line_end":364,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":26399,"byte_end":26412,"line_start":209,"line_end":209,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":26737,"byte_end":26750,"line_start":225,"line_end":225,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28805,"byte_end":28813,"line_start":290,"line_end":290,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":45555,"byte_end":45564,"line_start":838,"line_end":838,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47654,"byte_end":47659,"line_start":909,"line_end":909,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47694,"byte_end":47699,"line_start":911,"line_end":911,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48040,"byte_end":48043,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48082,"byte_end":48085,"line_start":933,"line_end":933,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/lib.rs","byte_start":345,"byte_end":353,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":248}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":3794,"byte_end":3805,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4543,"byte_end":4554,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":4817,"byte_end":4828,"line_start":61,"line_end":61,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5174,"byte_end":5185,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5250,"byte_end":5255,"line_start":75,"line_end":75,"column_start":37,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":3733},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":5723,"byte_end":5734,"line_start":92,"line_end":92,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6254,"byte_end":6265,"line_start":112,"line_end":112,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6584,"byte_end":6595,"line_start":123,"line_end":123,"column_start":28,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":484},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/error.rs","byte_start":6660,"byte_end":6665,"line_start":126,"line_end":126,"column_start":37,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":3733},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7099,"byte_end":7104,"line_start":14,"line_end":14,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":8701},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7107,"byte_end":7111,"line_start":14,"line_end":14,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":7114,"byte_end":7118,"line_start":14,"line_end":14,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/message.rs","byte_start":10718,"byte_end":10721,"line_start":139,"line_end":139,"column_start":21,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/types.rs","byte_start":17444,"byte_end":17450,"line_start":288,"line_end":288,"column_start":18,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":7216},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/types.rs","byte_start":18238,"byte_end":18241,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/types.rs","byte_start":19030,"byte_end":19035,"line_start":364,"line_end":364,"column_start":18,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":19,"index":513},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":26399,"byte_end":26412,"line_start":209,"line_end":209,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":499},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":26737,"byte_end":26750,"line_start":225,"line_end":225,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":28805,"byte_end":28813,"line_start":290,"line_end":290,"column_start":23,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":45555,"byte_end":45564,"line_start":838,"line_end":838,"column_start":31,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47087,"byte_end":47099,"line_start":885,"line_end":885,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":353},"to":{"krate":0,"index":344}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47176,"byte_end":47183,"line_start":890,"line_end":890,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47186,"byte_end":47191,"line_start":890,"line_end":890,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47654,"byte_end":47659,"line_start":909,"line_end":909,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":19,"index":513},"to":{"krate":0,"index":344}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":47694,"byte_end":47699,"line_start":911,"line_end":911,"column_start":31,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":19,"index":513},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48040,"byte_end":48043,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":344}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.7.0/src/encoding.rs","byte_start":48082,"byte_end":48085,"line_start":933,"line_end":933,"column_start":31,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":6703},"to":{"krate":0,"index":353}}]}