{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","actix","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"actix_derive\"","--cfg","feature=\"default\"","--cfg","feature=\"macros\"","-C","metadata=36590df25b1ec4f7","-C","extra-filename=-36590df25b1ec4f7","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","actix_rt=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libactix_rt-473c06de9832fd17.rmeta","--extern","actix_derive=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libactix_derive-2ca420e06ad17a84.so","--extern","bitflags=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbitflags-ba8252caf5d392e5.rmeta","--extern","bytes=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbytes-7a6e657daebb7eb8.rmeta","--extern","crossbeam_channel=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libcrossbeam_channel-3f57f0d9e3112777.rmeta","--extern","futures_core=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_core-0533940c6bc2bdcd.rmeta","--extern","futures_sink=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_sink-6d5600b9e29c95ed.rmeta","--extern","futures_task=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_task-bf53fb97aebc43c1.rmeta","--extern","futures_util=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_util-6cb348271837bdd1.rmeta","--extern","log=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/liblog-fac7a9de76e9754d.rmeta","--extern","once_cell=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libonce_cell-bf2d87d7b77d759d.rmeta","--extern","parking_lot=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libparking_lot-9cebb1adfaec6546.rmeta","--extern","pin_project_lite=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libpin_project_lite-70b5e349bb5ae177.rmeta","--extern","smallvec=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsmallvec-a53d0ef2909c236c.rmeta","--extern","tokio=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio-d36f104b99e70419.rmeta","--extern","tokio_util=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio_util-c09dadaa048f734f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libactix-36590df25b1ec4f7.rmeta"},"prelude":{"crate_id":{"name":"actix","disambiguator":[10597783636665460586,10624558281635853418]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":18,"id":{"name":"actix_rt","disambiguator":[10025244226815357658,1975967784465698413]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","num":19,"id":{"name":"tokio","disambiguator":[16353378429824476342,2060103248263720111]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","num":20,"id":{"name":"parking_lot","disambiguator":[14331116733237037633,1733547897482442134]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":21,"id":{"name":"instant","disambiguator":[11361008649439768419,13512573952781869826]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":22,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":23,"id":{"name":"lock_api","disambiguator":[18197204475178301771,10109649757336546226]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":24,"id":{"name":"scopeguard","disambiguator":[2181135905612754568,6053946559474066644]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":25,"id":{"name":"parking_lot_core","disambiguator":[12086112946249549060,1314504070364395696]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","num":26,"id":{"name":"smallvec","disambiguator":[291282355886527283,13566040600539321920]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":27,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":28,"id":{"name":"mio","disambiguator":[980902961067663816,14858026113145421146]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":29,"id":{"name":"log","disambiguator":[9999652943946548626,13641826928383836309]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","num":30,"id":{"name":"pin_project_lite","disambiguator":[9145299615355368616,5447980798194890694]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","num":31,"id":{"name":"bytes","disambiguator":[16605158223807296615,2139309927205400556]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","num":32,"id":{"name":"once_cell","disambiguator":[15381452257217144295,7635182210418599630]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":33,"id":{"name":"tokio_macros","disambiguator":[17518586050439928397,5930942372196096673]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":34,"id":{"name":"memchr","disambiguator":[13309440065246054461,9623703849673585728]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":35,"id":{"name":"num_cpus","disambiguator":[673716848283037980,13614879919095805843]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":36,"id":{"name":"signal_hook_registry","disambiguator":[3393182166626963142,14184042726220995224]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":37,"id":{"name":"actix_macros","disambiguator":[8958730630108926231,18247961891159541323]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","num":38,"id":{"name":"futures_core","disambiguator":[29397662539448121,8477785109263410569]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","num":39,"id":{"name":"bitflags","disambiguator":[8952423603997010315,6514677473746216087]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":40,"id":{"name":"futures_util","disambiguator":[3280059893384521325,11598808553936333138]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":41,"id":{"name":"pin_utils","disambiguator":[14395563498781816293,16484404266226080499]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":42,"id":{"name":"proc_macro_hack","disambiguator":[11501105840794256935,10642840395116319496]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","num":43,"id":{"name":"futures_task","disambiguator":[16020005147022665285,9026085615796595227]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","num":44,"id":{"name":"futures_sink","disambiguator":[2922734123352180455,14403152685744851238]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":45,"id":{"name":"futures_channel","disambiguator":[17242227673017059874,10535311695956202953]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":46,"id":{"name":"slab","disambiguator":[13561909771579579308,2681944852510081505]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":47,"id":{"name":"futures_io","disambiguator":[15034522671843221786,2690313799458130393]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","num":48,"id":{"name":"futures_macro","disambiguator":[7164365384525528058,12984376660750215651]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","num":49,"id":{"name":"tokio_util","disambiguator":[17488339846141952403,9164315025699559522]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","num":50,"id":{"name":"crossbeam_channel","disambiguator":[16176224089317311964,14955518310860382515]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","num":51,"id":{"name":"crossbeam_utils","disambiguator":[18199969773054661778,13230476106880295684]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","num":52,"id":{"name":"lazy_static","disambiguator":[9131932799642439997,5737279247675587365]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","num":53,"id":{"name":"actix_derive","disambiguator":[12340791765672290807,16647972450818138220]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":0,"byte_end":5668,"line_start":1,"line_end":181,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125613,"byte_end":125614,"line_start":9,"line_end":9,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"sleep, Sleep, Instant","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126148,"byte_end":126151,"line_start":12,"line_end":12,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":3432},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126167,"byte_end":126171,"line_start":13,"line_end":13,"column_start":15,"column_end":19},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":3488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126190,"byte_end":126197,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":40,"index":1354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136432,"byte_end":136437,"line_start":12,"line_end":12,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1467}},{"kind":"Use","ref_id":{"krate":40,"index":9878},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136439,"byte_end":136444,"line_start":12,"line_end":12,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":1467}},{"kind":"Use","ref_id":{"krate":0,"index":3575},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141849,"byte_end":141856,"line_start":11,"line_end":11,"column_start":18,"column_end":25},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3622},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141874,"byte_end":141880,"line_start":12,"line_end":12,"column_start":17,"column_end":23},"alias_span":null,"name":"Finish","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141896,"byte_end":141900,"line_start":13,"line_end":13,"column_start":15,"column_end":19},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3735},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141915,"byte_end":141918,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141940,"byte_end":141949,"line_start":15,"line_end":15,"column_start":21,"column_end":30},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141971,"byte_end":141980,"line_start":16,"line_end":16,"column_start":21,"column_end":30},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":3944},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":141996,"byte_end":142000,"line_start":17,"line_end":17,"column_start":15,"column_end":19},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":4002},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142019,"byte_end":142026,"line_start":18,"line_end":18,"column_start":18,"column_end":25},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":1634}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125757,"byte_end":125760,"line_start":7,"line_end":7,"column_start":14,"column_end":17},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125762,"byte_end":125764,"line_start":7,"line_end":7,"column_start":19,"column_end":21},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":40,"index":1354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125766,"byte_end":125771,"line_start":7,"line_end":7,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125773,"byte_end":125779,"line_start":7,"line_end":7,"column_start":30,"column_end":36},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":40,"index":9878},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125781,"byte_end":125786,"line_start":7,"line_end":7,"column_start":38,"column_end":43},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1626},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125793,"byte_end":125804,"line_start":8,"line_end":8,"column_start":5,"column_end":16},"alias_span":null,"name":"wrap_future","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125806,"byte_end":125817,"line_start":8,"line_end":8,"column_start":18,"column_end":29},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125819,"byte_end":125833,"line_start":8,"line_end":8,"column_start":31,"column_end":45},"alias_span":null,"name":"ActorFutureExt","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125835,"byte_end":125854,"line_start":8,"line_end":8,"column_start":47,"column_end":66},"alias_span":null,"name":"LocalBoxActorFuture","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1615},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125856,"byte_end":125866,"line_start":8,"line_end":8,"column_start":68,"column_end":78},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":2039},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125894,"byte_end":125905,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"wrap_stream","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125907,"byte_end":125918,"line_start":10,"line_end":10,"column_start":37,"column_end":48},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125920,"byte_end":125934,"line_start":10,"line_end":10,"column_start":50,"column_end":64},"alias_span":null,"name":"ActorStreamExt","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":2028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125936,"byte_end":125946,"line_start":10,"line_end":10,"column_start":66,"column_end":76},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":53,"index":51},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1549,"byte_end":1553,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":52},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1555,"byte_end":1559,"line_start":55,"line_end":55,"column_start":30,"column_end":34},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":49},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1561,"byte_end":1568,"line_start":55,"line_end":55,"column_start":36,"column_end":43},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":50},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1570,"byte_end":1585,"line_start":55,"line_end":55,"column_start":45,"column_end":60},"alias_span":null,"name":"MessageResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1607,"byte_end":1612,"line_start":56,"line_end":56,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1614,"byte_end":1621,"line_start":56,"line_end":56,"column_start":27,"column_end":34},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":363},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1623,"byte_end":1636,"line_start":56,"line_end":56,"column_start":36,"column_end":49},"alias_span":null,"name":"ArbiterHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":383},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1638,"byte_end":1644,"line_start":56,"line_end":56,"column_start":51,"column_end":57},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":391},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1646,"byte_end":1658,"line_start":56,"line_end":56,"column_start":59,"column_end":71},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1690,"byte_end":1695,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1697,"byte_end":1709,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1711,"byte_end":1721,"line_start":59,"line_end":59,"column_start":26,"column_end":36},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1723,"byte_end":1735,"line_start":59,"line_end":59,"column_start":38,"column_end":50},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2942},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1737,"byte_end":1744,"line_start":59,"line_end":59,"column_start":52,"column_end":59},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2955},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1746,"byte_end":1757,"line_start":59,"line_end":59,"column_start":61,"column_end":72},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1759,"byte_end":1769,"line_start":59,"line_end":59,"column_start":74,"column_end":84},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3362},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1799,"byte_end":1803,"line_start":61,"line_end":61,"column_start":26,"column_end":30},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1805,"byte_end":1817,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1819,"byte_end":1828,"line_start":61,"line_end":61,"column_start":46,"column_end":55},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1830,"byte_end":1838,"line_start":61,"line_end":61,"column_start":57,"column_end":65},"alias_span":null,"name":"WeakAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1840,"byte_end":1853,"line_start":61,"line_end":61,"column_start":67,"column_end":80},"alias_span":null,"name":"WeakRecipient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1880,"byte_end":1887,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1915,"byte_end":1926,"line_start":64,"line_end":64,"column_start":5,"column_end":16},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1928,"byte_end":1942,"line_start":64,"line_end":64,"column_start":18,"column_end":32},"alias_span":null,"name":"ActorFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1944,"byte_end":1955,"line_start":64,"line_end":64,"column_start":34,"column_end":45},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1957,"byte_end":1971,"line_start":64,"line_end":64,"column_start":47,"column_end":61},"alias_span":null,"name":"ActorStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1615},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1973,"byte_end":1983,"line_start":64,"line_end":64,"column_start":63,"column_end":73},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1985,"byte_end":1995,"line_start":64,"line_end":64,"column_start":75,"column_end":85},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2030,"byte_end":2043,"line_start":67,"line_end":67,"column_start":5,"column_end":18},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2045,"byte_end":2059,"line_start":67,"line_end":67,"column_start":20,"column_end":34},"alias_span":null,"name":"AtomicResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2061,"byte_end":2068,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2070,"byte_end":2077,"line_start":67,"line_end":67,"column_start":45,"column_end":52},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2079,"byte_end":2092,"line_start":67,"line_end":67,"column_start":54,"column_end":67},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2079,"byte_end":2092,"line_start":67,"line_end":67,"column_start":54,"column_end":67},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2094,"byte_end":2102,"line_start":67,"line_end":67,"column_start":69,"column_end":77},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2108,"byte_end":2125,"line_start":68,"line_end":68,"column_start":5,"column_end":22},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2127,"byte_end":2141,"line_start":68,"line_end":68,"column_start":24,"column_end":38},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2172,"byte_end":2186,"line_start":70,"line_end":70,"column_start":27,"column_end":41},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2188,"byte_end":2196,"line_start":70,"line_end":70,"column_start":43,"column_end":51},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2198,"byte_end":2212,"line_start":70,"line_end":70,"column_start":53,"column_end":67},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2214,"byte_end":2227,"line_start":70,"line_end":70,"column_start":69,"column_end":82},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2253,"byte_end":2266,"line_start":71,"line_end":71,"column_start":24,"column_end":37},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3247},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2295,"byte_end":2305,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2329,"byte_end":2340,"line_start":73,"line_end":73,"column_start":23,"column_end":34},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2342,"byte_end":2353,"line_start":73,"line_end":73,"column_start":36,"column_end":47},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2396,"byte_end":2416,"line_start":76,"line_end":76,"column_start":25,"column_end":45},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":49},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2805,"byte_end":2812,"line_start":91,"line_end":91,"column_start":28,"column_end":35},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":53,"index":50},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2814,"byte_end":2829,"line_start":91,"line_end":91,"column_start":37,"column_end":52},"alias_span":null,"name":"MessageResponse","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":18,"index":369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2856,"byte_end":2863,"line_start":93,"line_end":93,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":18,"index":363},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2865,"byte_end":2878,"line_start":93,"line_end":93,"column_start":33,"column_end":46},"alias_span":null,"name":"ArbiterHandle","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":18,"index":383},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2880,"byte_end":2886,"line_start":93,"line_end":93,"column_start":48,"column_end":54},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":18,"index":391},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2888,"byte_end":2900,"line_start":93,"line_end":93,"column_start":56,"column_end":68},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2940,"byte_end":2945,"line_start":96,"line_end":96,"column_start":9,"column_end":14},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2947,"byte_end":2959,"line_start":96,"line_end":96,"column_start":16,"column_end":28},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2961,"byte_end":2971,"line_start":96,"line_end":96,"column_start":30,"column_end":40},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2973,"byte_end":2985,"line_start":96,"line_end":96,"column_start":42,"column_end":54},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2942},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2987,"byte_end":2994,"line_start":96,"line_end":96,"column_start":56,"column_end":63},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2955},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2996,"byte_end":3007,"line_start":96,"line_end":96,"column_start":65,"column_end":76},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3009,"byte_end":3019,"line_start":96,"line_end":96,"column_start":78,"column_end":88},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":3362},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3066,"byte_end":3070,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":3354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3072,"byte_end":3084,"line_start":99,"line_end":99,"column_start":15,"column_end":27},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3086,"byte_end":3095,"line_start":99,"line_end":99,"column_start":29,"column_end":38},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3097,"byte_end":3113,"line_start":99,"line_end":99,"column_start":40,"column_end":56},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3115,"byte_end":3122,"line_start":99,"line_end":99,"column_start":58,"column_end":65},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3124,"byte_end":3133,"line_start":99,"line_end":99,"column_start":67,"column_end":76},"alias_span":null,"name":"SendError","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3171,"byte_end":3178,"line_start":101,"line_end":101,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3180,"byte_end":3200,"line_start":101,"line_end":101,"column_start":39,"column_end":59},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3237,"byte_end":3248,"line_start":103,"line_end":103,"column_start":9,"column_end":20},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3250,"byte_end":3264,"line_start":103,"line_end":103,"column_start":22,"column_end":36},"alias_span":null,"name":"ActorFutureExt","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3266,"byte_end":3277,"line_start":103,"line_end":103,"column_start":38,"column_end":49},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3279,"byte_end":3293,"line_start":103,"line_end":103,"column_start":51,"column_end":65},"alias_span":null,"name":"ActorStreamExt","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1615},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3295,"byte_end":3305,"line_start":103,"line_end":103,"column_start":67,"column_end":77},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3307,"byte_end":3317,"line_start":103,"line_end":103,"column_start":79,"column_end":89},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3364,"byte_end":3377,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3379,"byte_end":3393,"line_start":106,"line_end":106,"column_start":24,"column_end":38},"alias_span":null,"name":"AtomicResponse","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3395,"byte_end":3402,"line_start":106,"line_end":106,"column_start":40,"column_end":47},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3404,"byte_end":3411,"line_start":106,"line_end":106,"column_start":49,"column_end":56},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3413,"byte_end":3426,"line_start":106,"line_end":106,"column_start":58,"column_end":71},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3413,"byte_end":3426,"line_start":106,"line_end":106,"column_start":58,"column_end":71},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3428,"byte_end":3436,"line_start":106,"line_end":106,"column_start":73,"column_end":81},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3446,"byte_end":3463,"line_start":107,"line_end":107,"column_start":9,"column_end":26},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3465,"byte_end":3479,"line_start":107,"line_end":107,"column_start":28,"column_end":42},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3518,"byte_end":3532,"line_start":109,"line_end":109,"column_start":31,"column_end":45},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3534,"byte_end":3547,"line_start":109,"line_end":109,"column_start":47,"column_end":60},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3577,"byte_end":3590,"line_start":110,"line_end":110,"column_start":28,"column_end":41},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":3247},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3623,"byte_end":3633,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3661,"byte_end":3672,"line_start":112,"line_end":112,"column_start":27,"column_end":38},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3674,"byte_end":3685,"line_start":112,"line_end":112,"column_start":40,"column_end":51},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1322},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3708,"byte_end":3714,"line_start":114,"line_end":114,"column_start":20,"column_end":26},"alias_span":null,"name":"actors","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3735,"byte_end":3738,"line_start":115,"line_end":115,"column_start":20,"column_end":23},"alias_span":null,"name":"dev","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3759,"byte_end":3762,"line_start":116,"line_end":116,"column_start":20,"column_end":23},"alias_span":null,"name":"fut","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2092},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3783,"byte_end":3785,"line_start":117,"line_end":117,"column_start":20,"column_end":22},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3814,"byte_end":3823,"line_start":118,"line_end":118,"column_start":28,"column_end":37},"alias_span":null,"name":"Condition","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":4227},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3825,"byte_end":3837,"line_start":118,"line_end":118,"column_start":39,"column_end":51},"alias_span":null,"name":"IntervalFunc","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":0,"index":4190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3839,"byte_end":3848,"line_start":118,"line_end":118,"column_start":53,"column_end":62},"alias_span":null,"name":"TimerFunc","value":"","parent":{"krate":0,"index":2709}},{"kind":"Use","ref_id":{"krate":38,"index":96},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3943,"byte_end":3949,"line_start":121,"line_end":121,"column_start":35,"column_end":41},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2709}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4306,"byte_end":4307,"line_start":135,"line_end":135,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4339,"byte_end":4347,"line_start":137,"line_end":137,"column_start":30,"column_end":38},"alias_span":null,"name":"Envelope","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4349,"byte_end":4362,"line_start":137,"line_end":137,"column_start":40,"column_end":53},"alias_span":null,"name":"EnvelopeProxy","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4364,"byte_end":4380,"line_start":137,"line_end":137,"column_start":55,"column_end":71},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4382,"byte_end":4389,"line_start":137,"line_end":137,"column_start":73,"column_end":80},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4391,"byte_end":4401,"line_start":137,"line_end":137,"column_start":82,"column_end":92},"alias_span":null,"name":"ToEnvelope","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4468,"byte_end":4475,"line_start":139,"line_end":139,"column_start":43,"column_end":50},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4477,"byte_end":4492,"line_start":139,"line_end":139,"column_start":52,"column_end":67},"alias_span":null,"name":"AddressReceiver","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4494,"byte_end":4507,"line_start":139,"line_end":139,"column_start":69,"column_end":82},"alias_span":null,"name":"AddressSender","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4549,"byte_end":4566,"line_start":141,"line_end":141,"column_start":34,"column_end":51},"alias_span":null,"name":"AsyncContextParts","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4568,"byte_end":4578,"line_start":141,"line_end":141,"column_start":53,"column_end":63},"alias_span":null,"name":"ContextFut","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4580,"byte_end":4592,"line_start":141,"line_end":141,"column_start":65,"column_end":77},"alias_span":null,"name":"ContextParts","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4624,"byte_end":4639,"line_start":142,"line_end":142,"column_start":30,"column_end":45},"alias_span":null,"name":"MessageResponse","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":19,"index":10653},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4641,"byte_end":4654,"line_start":142,"line_end":142,"column_start":47,"column_end":60},"alias_span":null,"name":"OneshotSender","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":1304},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4685,"byte_end":4692,"line_start":143,"line_end":143,"column_start":29,"column_end":36},"alias_span":null,"name":"Mailbox","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":4177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4724,"byte_end":4732,"line_start":144,"line_end":144,"column_start":31,"column_end":39},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":4185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4734,"byte_end":4748,"line_start":144,"line_end":144,"column_start":41,"column_end":55},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":2867}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":0,"byte_end":5668,"line_start":1,"line_end":181,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":110},{"krate":0,"index":195},{"krate":0,"index":333},{"krate":0,"index":424},{"krate":0,"index":594},{"krate":0,"index":652},{"krate":0,"index":709},{"krate":0,"index":1263},{"krate":0,"index":1322},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":2092},{"krate":0,"index":2284},{"krate":0,"index":2365},{"krate":0,"index":2497},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2867},{"krate":0,"index":2923}],"decl_id":null,"docs":" Actix is an actor framework.","sig":null,"attributes":[{"value":"/ Actix is an actor framework.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":33,"byte_end":36,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Actors](./trait.Actor.html) are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":37,"byte_end":73,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/ objects which encapsulate state and behavior, they communicate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":74,"byte_end":140,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ exclusively by exchanging messages. Actix actors are implemented","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":141,"byte_end":209,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ on top of [Tokio](https://tokio.rs).  Multiple actors can run in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":210,"byte_end":278,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ same thread. Actors can run in multiple threads using the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":279,"byte_end":340,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ [`Arbiter`](struct.Arbiter.html) API. Actors exchange typed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":341,"byte_end":404,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ messages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":405,"byte_end":418,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":419,"byte_end":422,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Other Documentation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":423,"byte_end":449,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ - [User Guide](https://actix.rs/book/actix/)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":450,"byte_end":498,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ - [Community Chat on Gitter](https://gitter.im/actix/actix)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":499,"byte_end":562,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":563,"byte_end":566,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":567,"byte_end":582,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/ - Async/Sync actors","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":583,"byte_end":606,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ - Actor communication in a local/thread context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":607,"byte_end":658,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/ - Using Futures for asynchronous message handling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":659,"byte_end":712,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/ - Actor supervision","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":713,"byte_end":736,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/ - Typed messages (No `Any` type). Generic messages are allowed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":737,"byte_end":803,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ - Runs on stable Rust 1.40+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":804,"byte_end":835,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":836,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Package feature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":840,"byte_end":862,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/ * `resolver` - enables DNS resolver actor; see [resolver](./actors/resolver/index.html) module","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":863,"byte_end":961,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":963,"byte_end":1003,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"deny(nonstandard_style, rust_2018_idioms)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1004,"byte_end":1049,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"warn(deprecated_in_future, trivial_casts, trivial_numeric_casts)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1050,"byte_end":1118,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"allow(deprecated)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1188,"byte_end":1209,"line_start":30,"line_end":30,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8449,"byte_end":8454,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Actor","qualname":"::actor::Actor","value":"Actor: Sized + Unpin + 'static","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73}],"decl_id":null,"docs":" Actors are objects which encapsulate state and behavior.","sig":null,"attributes":[{"value":"/ Actors are objects which encapsulate state and behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6141,"byte_end":6201,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6202,"byte_end":6205,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Actors run within a specific execution context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6206,"byte_end":6256,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ [`Context<A>`](struct.Context.html). The context object is available","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6257,"byte_end":6329,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ only during execution. Each actor has a separate execution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6330,"byte_end":6392,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ context. The execution context also controls the lifecycle of an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6393,"byte_end":6461,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6462,"byte_end":6472,"line_start":22,"line_end":22,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6473,"byte_end":6476,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Actors communicate exclusively by exchanging messages. The sender","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6477,"byte_end":6546,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ actor can wait for a response. Actors are not referenced directly,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6547,"byte_end":6617,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ but by address [`Addr`](struct.Addr.html) To be able to handle a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6618,"byte_end":6686,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ specific message actor has to provide a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6687,"byte_end":6730,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ [`Handler<M>`](trait.Handler.html) implementation for this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6731,"byte_end":6793,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ message. All messages are statically typed. A message can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6794,"byte_end":6858,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ handled in asynchronous fashion. An actor can spawn other actors","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6859,"byte_end":6927,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ or add futures or streams to the execution context. The actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6928,"byte_end":6993,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ trait provides several methods that allow controlling the actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":6994,"byte_end":7061,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ lifecycle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7062,"byte_end":7076,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7077,"byte_end":7080,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Actor lifecycle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7081,"byte_end":7102,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7103,"byte_end":7106,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Started","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7107,"byte_end":7121,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7122,"byte_end":7125,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ An actor starts in the `Started` state, during this state the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7126,"byte_end":7191,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ `started` method gets called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7192,"byte_end":7225,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7226,"byte_end":7229,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Running","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7230,"byte_end":7244,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7245,"byte_end":7248,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ After an actor's `started` method got called, the actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7249,"byte_end":7308,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/ transitions to the `Running` state. An actor can stay in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7309,"byte_end":7373,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ `running` state for an indefinite amount of time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7374,"byte_end":7427,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7428,"byte_end":7431,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Stopping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7432,"byte_end":7447,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7448,"byte_end":7451,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The actor's execution state changes to `stopping` in the following","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7452,"byte_end":7522,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ situations:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7523,"byte_end":7538,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7539,"byte_end":7542,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * `Context::stop` gets called by actor itself","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7543,"byte_end":7592,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/ * all addresses to the actor get dropped","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7593,"byte_end":7637,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ * no evented objects are registered in its context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7638,"byte_end":7693,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7694,"byte_end":7697,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ An actor can return from the `stopping` state to the `running`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7698,"byte_end":7764,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ state by creating a new address or adding an evented object, like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7765,"byte_end":7834,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ a future or stream, in its `Actor::stopping` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7835,"byte_end":7891,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7892,"byte_end":7895,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If an actor changed to a `stopping` state because","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7896,"byte_end":7949,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ `Context::stop()` got called, the context then immediately stops","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":7950,"byte_end":8018,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/ processing incoming messages and calls the `Actor::stopping()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8019,"byte_end":8085,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/ method. If an actor does not return back to a `running` state,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8086,"byte_end":8152,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ all unprocessed messages get dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8153,"byte_end":8194,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8195,"byte_end":8198,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Stopped","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8199,"byte_end":8213,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8214,"byte_end":8217,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If an actor does not modify execution context while in stopping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8218,"byte_end":8285,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ state, the actor state changes to `Stopped`. This state is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8286,"byte_end":8348,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ considered final and at this point the actor gets dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8349,"byte_end":8411,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8412,"byte_end":8438,"line_start":72,"line_end":72,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":64},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8528,"byte_end":8535,"line_start":75,"line_end":75,"column_start":10,"column_end":17},"name":"Context","qualname":"::actor::Actor::Context","value":"type Context: ActorContext;","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Actor execution context type\n","sig":null,"attributes":[{"value":"/ Actor execution context type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8486,"byte_end":8518,"line_start":74,"line_end":74,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8616,"byte_end":8623,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"started","qualname":"::actor::Actor::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Called when an actor gets polled the first time.\n","sig":null,"attributes":[{"value":"/ Called when an actor gets polled the first time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8556,"byte_end":8608,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9101,"byte_end":9109,"line_start":90,"line_end":90,"column_start":8,"column_end":16},"name":"stopping","qualname":"::actor::Actor::stopping","value":"pub fn stopping(&mut Self, &mut Self::Context) -> Running","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Called after an actor is in `Actor::Stopping` state.","sig":null,"attributes":[{"value":"/ Called after an actor is in `Actor::Stopping` state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8668,"byte_end":8724,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8729,"byte_end":8732,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ There can be several reasons for stopping:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8737,"byte_end":8783,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8788,"byte_end":8791,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ - `Context::stop` gets called by the actor itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8796,"byte_end":8850,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/ - All addresses to the current actor get dropped and no more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8855,"byte_end":8919,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/   evented objects are left in the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8924,"byte_end":8970,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8975,"byte_end":8978,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ An actor can return from the stopping state to the running","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8983,"byte_end":9045,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/ state by returning `Running::Continue`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9050,"byte_end":9093,"line_start":89,"line_end":89,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9435,"byte_end":9442,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"stopped","qualname":"::actor::Actor::stopped","value":"pub fn stopped(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Called after an actor is stopped.","sig":null,"attributes":[{"value":"/ Called after an actor is stopped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9192,"byte_end":9229,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9234,"byte_end":9237,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method can be used to perform any needed cleanup work or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9242,"byte_end":9307,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ to spawn more actors. This is the final state, after this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9312,"byte_end":9373,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ method got called, the actor will be dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9378,"byte_end":9427,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10005,"byte_end":10010,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"start","qualname":"::actor::Actor::start","value":"pub fn start(Self) -> Addr<Self> where Self: Actor<Context = Context<Self>>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Start a new asynchronous actor, returning its address.","sig":null,"attributes":[{"value":"/ Start a new asynchronous actor, returning its address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9487,"byte_end":9545,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9550,"byte_end":9553,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9558,"byte_end":9572,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9577,"byte_end":9580,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9585,"byte_end":9592,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use actix::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9597,"byte_end":9614,"line_start":106,"line_end":106,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9619,"byte_end":9622,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9627,"byte_end":9646,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9651,"byte_end":9679,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9684,"byte_end":9721,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9726,"byte_end":9731,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9736,"byte_end":9739,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9744,"byte_end":9759,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9764,"byte_end":9792,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/     System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9797,"byte_end":9835,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         let addr = MyActor.start(); // <- start actor and get its address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9840,"byte_end":9917,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9922,"byte_end":9959,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9964,"byte_end":9975,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9980,"byte_end":9985,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":9990,"byte_end":9997,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10339,"byte_end":10352,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"start_default","qualname":"::actor::Actor::start_default","value":"pub fn start_default() -> Addr<Self> where Self: Actor<Context =\nContext<Self>> + Default","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Construct and start a new asynchronous actor, returning its\n address.","sig":null,"attributes":[{"value":"/ Construct and start a new asynchronous actor, returning its","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10137,"byte_end":10200,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10205,"byte_end":10217,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10222,"byte_end":10225,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This is constructs a new actor using the `Default` trait, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10230,"byte_end":10295,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/ invokes its `start` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10300,"byte_end":10331,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10532,"byte_end":10548,"line_start":141,"line_end":141,"column_start":8,"column_end":24},"name":"start_in_arbiter","qualname":"::actor::Actor::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&ArbiterHandle, F) -> Addr<Self> where\nSelf: Actor<Context = Context<Self>>, F: FnOnce(&mut Context<Self>) -> Self +\nSend + 'static","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Start new actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new actor in arbiter's thread.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":10484,"byte_end":10524,"line_start":140,"line_end":140,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11710,"byte_end":11716,"line_start":185,"line_end":185,"column_start":8,"column_end":14},"name":"create","qualname":"::actor::Actor::create","value":"pub fn create<F>(F) -> Addr<Self> where Self: Actor<Context = Context<Self>>,\nF: FnOnce(&mut Context<Self>) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Start a new asynchronous actor given a `Context`.","sig":null,"attributes":[{"value":"/ Start a new asynchronous actor given a `Context`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11048,"byte_end":11101,"line_start":160,"line_end":160,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11106,"byte_end":11109,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Use this method if you need the `Context` object during actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11114,"byte_end":11179,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/ initialization.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11184,"byte_end":11203,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11208,"byte_end":11211,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11216,"byte_end":11230,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11235,"byte_end":11238,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11243,"byte_end":11250,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use actix::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11255,"byte_end":11272,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11277,"byte_end":11280,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ struct MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11285,"byte_end":11305,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/     val: usize,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11310,"byte_end":11329,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11334,"byte_end":11339,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11344,"byte_end":11372,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11377,"byte_end":11414,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11419,"byte_end":11424,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11429,"byte_end":11432,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11437,"byte_end":11452,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11457,"byte_end":11485,"line_start":178,"line_end":178,"column_start":5,"column_end":33}},{"value":"/     System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11490,"byte_end":11528,"line_start":179,"line_end":179,"column_start":5,"column_end":43}},{"value":"/         let addr = MyActor::create(|ctx: &mut Context<MyActor>| MyActor { val: 10 });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11533,"byte_end":11622,"line_start":180,"line_end":180,"column_start":5,"column_end":94}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11627,"byte_end":11664,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11669,"byte_end":11680,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11685,"byte_end":11690,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11695,"byte_end":11702,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12576,"byte_end":12586,"line_start":210,"line_end":210,"column_start":11,"column_end":21},"name":"Supervised","qualname":"::actor::Supervised","value":"Supervised: Actor","parent":null,"children":[{"krate":0,"index":76}],"decl_id":null,"docs":" Actors with the ability to restart after failure.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11948,"byte_end":11974,"line_start":196,"line_end":196,"column_start":1,"column_end":27}},{"value":"/ Actors with the ability to restart after failure.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":11975,"byte_end":12028,"line_start":197,"line_end":197,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12029,"byte_end":12032,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ Supervised actors can be managed by a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12033,"byte_end":12074,"line_start":199,"line_end":199,"column_start":1,"column_end":42}},{"value":"/ [`Supervisor`](struct.Supervisor.html). As an additional lifecycle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12075,"byte_end":12145,"line_start":200,"line_end":200,"column_start":1,"column_end":71}},{"value":"/ event, the `restarting` method can be implemented.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12146,"byte_end":12200,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12201,"byte_end":12204,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ If a supervised actor fails, its supervisor creates new execution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12205,"byte_end":12274,"line_start":203,"line_end":203,"column_start":1,"column_end":70}},{"value":"/ context and restarts the actor, invoking its `restarting` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12275,"byte_end":12344,"line_start":204,"line_end":204,"column_start":1,"column_end":70}},{"value":"/ After a call to this method, the actor's execution state changes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12345,"byte_end":12413,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"/ to `Started` and the regular lifecycle process starts.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12414,"byte_end":12472,"line_start":206,"line_end":206,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12473,"byte_end":12476,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ The `restarting` method gets called with the newly constructed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12477,"byte_end":12543,"line_start":208,"line_end":208,"column_start":1,"column_end":67}},{"value":"/ `Context` object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12544,"byte_end":12565,"line_start":209,"line_end":209,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12663,"byte_end":12673,"line_start":212,"line_end":212,"column_start":8,"column_end":18},"name":"restarting","qualname":"::actor::Supervised::restarting","value":"pub fn restarting(&mut Self, &mut <Self as Actor>::Context)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Called when the supervisor restarts a failed actor.\n","sig":null,"attributes":[{"value":"/ Called when the supervisor restarts a failed actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12600,"byte_end":12655,"line_start":211,"line_end":211,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2926},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12846,"byte_end":12853,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"Started","qualname":"::actor::ActorState::Started","value":"ActorState::Started","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" Actor is started.\n","sig":null,"attributes":[{"value":"/ Actor is started.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12820,"byte_end":12841,"line_start":218,"line_end":218,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2928},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12885,"byte_end":12892,"line_start":221,"line_end":221,"column_start":5,"column_end":12},"name":"Running","qualname":"::actor::ActorState::Running","value":"ActorState::Running","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" Actor is running.\n","sig":null,"attributes":[{"value":"/ Actor is running.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12859,"byte_end":12880,"line_start":220,"line_end":220,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2930},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12925,"byte_end":12933,"line_start":223,"line_end":223,"column_start":5,"column_end":13},"name":"Stopping","qualname":"::actor::ActorState::Stopping","value":"ActorState::Stopping","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" Actor is stopping.\n","sig":null,"attributes":[{"value":"/ Actor is stopping.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12898,"byte_end":12920,"line_start":222,"line_end":222,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2932},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12965,"byte_end":12972,"line_start":225,"line_end":225,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::actor::ActorState::Stopped","value":"ActorState::Stopped","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" Actor is stopped.\n","sig":null,"attributes":[{"value":"/ Actor is stopped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12939,"byte_end":12960,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12803,"byte_end":12813,"line_start":217,"line_end":217,"column_start":10,"column_end":20},"name":"ActorState","qualname":"::actor::ActorState","value":"pub enum ActorState { Started, Running, Stopping, Stopped, }","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2932}],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"/ Actor execution state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12727,"byte_end":12752,"line_start":215,"line_end":215,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2943},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13041,"byte_end":13045,"line_start":230,"line_end":230,"column_start":5,"column_end":9},"name":"Stop","qualname":"::actor::Running::Stop","value":"Running::Stop","parent":{"krate":0,"index":2942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2945},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13051,"byte_end":13059,"line_start":231,"line_end":231,"column_start":5,"column_end":13},"name":"Continue","qualname":"::actor::Running::Continue","value":"Running::Continue","parent":{"krate":0,"index":2942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2942},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13027,"byte_end":13034,"line_start":229,"line_end":229,"column_start":10,"column_end":17},"name":"Running","qualname":"::actor::Running","value":"pub enum Running { Stop, Continue, }","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2945}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13139,"byte_end":13144,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"alive","qualname":"<ActorState>::alive","value":"pub fn alive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the actor is alive.\n","sig":null,"attributes":[{"value":"/ Indicates whether the actor is alive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13086,"byte_end":13127,"line_start":235,"line_end":235,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13305,"byte_end":13313,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"stopping","qualname":"<ActorState>::stopping","value":"pub fn stopping(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the actor is stopped or stopping.\n","sig":null,"attributes":[{"value":"/ Indicates whether the actor is stopped or stopping.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13238,"byte_end":13293,"line_start":239,"line_end":239,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13771,"byte_end":13783,"line_start":253,"line_end":253,"column_start":11,"column_end":23},"name":"ActorContext","qualname":"::actor::ActorContext","value":"ActorContext: Sized","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"decl_id":null,"docs":" Actor execution context.","sig":null,"attributes":[{"value":"/ Actor execution context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13407,"byte_end":13435,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13436,"byte_end":13439,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Each actor runs within a specific execution context. The actor's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13440,"byte_end":13508,"line_start":247,"line_end":247,"column_start":1,"column_end":69}},{"value":"/ associated type `Actor::Context` defines the context to use for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13509,"byte_end":13576,"line_start":248,"line_end":248,"column_start":1,"column_end":68}},{"value":"/ the actor, and must implement the `ActorContext` trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13577,"byte_end":13636,"line_start":249,"line_end":249,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13637,"byte_end":13640,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ The execution context defines the type of execution, and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13641,"byte_end":13705,"line_start":251,"line_end":251,"column_start":1,"column_end":65}},{"value":"/ actor's communication channels (message handling).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13706,"byte_end":13760,"line_start":252,"line_end":252,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14004,"byte_end":14008,"line_start":257,"line_end":257,"column_start":8,"column_end":12},"name":"stop","qualname":"::actor::ActorContext::stop","value":"pub fn stop(&mut Self)","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Immediately stop processing incoming messages and switch to a\n `stopping` state. This only affects actors that are currently\n `running`. Future attempts to queue messages will fail.\n","sig":null,"attributes":[{"value":"/ Immediately stop processing incoming messages and switch to a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13797,"byte_end":13862,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ `stopping` state. This only affects actors that are currently","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13867,"byte_end":13932,"line_start":255,"line_end":255,"column_start":5,"column_end":70}},{"value":"/ `running`. Future attempts to queue messages will fail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13937,"byte_end":13996,"line_start":256,"line_end":256,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14197,"byte_end":14206,"line_start":262,"line_end":262,"column_start":8,"column_end":17},"name":"terminate","qualname":"::actor::ActorContext::terminate","value":"pub fn terminate(&mut Self)","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Terminate actor execution unconditionally. This sets the actor\n into the `stopped` state. This causes future attempts to queue\n messages to fail.\n","sig":null,"attributes":[{"value":"/ Terminate actor execution unconditionally. This sets the actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14026,"byte_end":14092,"line_start":259,"line_end":259,"column_start":5,"column_end":71}},{"value":"/ into the `stopped` state. This causes future attempts to queue","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14097,"byte_end":14163,"line_start":260,"line_end":260,"column_start":5,"column_end":71}},{"value":"/ messages to fail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14168,"byte_end":14189,"line_start":261,"line_end":261,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14279,"byte_end":14284,"line_start":265,"line_end":265,"column_start":8,"column_end":13},"name":"state","qualname":"::actor::ActorContext::state","value":"pub fn state(&Self) -> ActorState","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Retrieve the current Actor execution state.\n","sig":null,"attributes":[{"value":"/ Retrieve the current Actor execution state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14224,"byte_end":14271,"line_start":264,"line_end":264,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14356,"byte_end":14368,"line_start":269,"line_end":269,"column_start":11,"column_end":23},"name":"AsyncContext","qualname":"::actor::AsyncContext","value":"AsyncContext<A>: ActorContext","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":" Asynchronous execution context.\n","sig":null,"attributes":[{"value":"/ Asynchronous execution context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14310,"byte_end":14345,"line_start":268,"line_end":268,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14475,"byte_end":14482,"line_start":274,"line_end":274,"column_start":8,"column_end":15},"name":"address","qualname":"::actor::AsyncContext::address","value":"pub fn address(&Self) -> Addr<A>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns the address of the context.\n","sig":null,"attributes":[{"value":"/ Returns the address of the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14428,"byte_end":14467,"line_start":273,"line_end":273,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14781,"byte_end":14786,"line_start":283,"line_end":283,"column_start":8,"column_end":13},"name":"spawn","qualname":"::actor::AsyncContext::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<A, Output =\n()> + 'static","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Spawns a future into the context.","sig":null,"attributes":[{"value":"/ Spawns a future into the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14507,"byte_end":14544,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14549,"byte_end":14552,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Returns a handle of the spawned future, which can be used for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14557,"byte_end":14622,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ cancelling its execution.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14627,"byte_end":14656,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14661,"byte_end":14664,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ All futures spawned into an actor's context are cancelled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14669,"byte_end":14730,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/ during the actor's stopping stage.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14735,"byte_end":14773,"line_start":282,"line_end":282,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15054,"byte_end":15058,"line_start":291,"line_end":291,"column_start":8,"column_end":12},"name":"wait","qualname":"::actor::AsyncContext::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<A, Output = ()> + 'static","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Spawns a future into the context, waiting for it to resolve.","sig":null,"attributes":[{"value":"/ Spawns a future into the context, waiting for it to resolve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14889,"byte_end":14953,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14958,"byte_end":14961,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This stops processing any incoming events until the future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14966,"byte_end":15028,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/ resolves.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15033,"byte_end":15046,"line_start":290,"line_end":290,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15234,"byte_end":15241,"line_start":296,"line_end":296,"column_start":8,"column_end":15},"name":"waiting","qualname":"::actor::AsyncContext::waiting","value":"pub fn waiting(&Self) -> bool","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Checks if the context is paused (waiting for future completion or stopping).\n","sig":null,"attributes":[{"value":"/ Checks if the context is paused (waiting for future completion or stopping).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15146,"byte_end":15226,"line_start":295,"line_end":295,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15372,"byte_end":15385,"line_start":301,"line_end":301,"column_start":8,"column_end":21},"name":"cancel_future","qualname":"::actor::AsyncContext::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Cancels a spawned future.","sig":null,"attributes":[{"value":"/ Cancels a spawned future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15263,"byte_end":15292,"line_start":298,"line_end":298,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15297,"byte_end":15300,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The `handle` is a value returned by the `spawn` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15305,"byte_end":15364,"line_start":300,"line_end":300,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16607,"byte_end":16617,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::actor::AsyncContext::add_stream","value":"pub fn add_stream<S>(&mut Self, S) -> SpawnHandle where S: Stream + 'static,\nA: StreamHandler<S::Item>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Registers a stream with the context.","sig":null,"attributes":[{"value":"/ Registers a stream with the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15432,"byte_end":15472,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15477,"byte_end":15480,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This allows handling a `Stream` in a way similar to normal","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15485,"byte_end":15547,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/ actor messages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15552,"byte_end":15571,"line_start":306,"line_end":306,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15576,"byte_end":15579,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15584,"byte_end":15591,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15596,"byte_end":15614,"line_start":309,"line_end":309,"column_start":5,"column_end":23}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15619,"byte_end":15645,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ use futures_util::stream::once;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15650,"byte_end":15685,"line_start":311,"line_end":311,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15690,"byte_end":15693,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15698,"byte_end":15720,"line_start":313,"line_end":313,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15725,"byte_end":15752,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15757,"byte_end":15773,"line_start":315,"line_end":315,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15778,"byte_end":15781,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15786,"byte_end":15805,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15810,"byte_end":15813,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15818,"byte_end":15860,"line_start":319,"line_end":319,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15865,"byte_end":15868,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15873,"byte_end":15943,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15948,"byte_end":15977,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/         System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":15982,"byte_end":16019,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16024,"byte_end":16033,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16038,"byte_end":16041,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16046,"byte_end":16103,"line_start":326,"line_end":326,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16108,"byte_end":16141,"line_start":327,"line_end":327,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16146,"byte_end":16155,"line_start":328,"line_end":328,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16160,"byte_end":16165,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16170,"byte_end":16173,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16178,"byte_end":16206,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16211,"byte_end":16247,"line_start":332,"line_end":332,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16252,"byte_end":16255,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16260,"byte_end":16315,"line_start":334,"line_end":334,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16320,"byte_end":16344,"line_start":335,"line_end":335,"column_start":5,"column_end":29}},{"value":"/        ctx.add_stream(once(async { Ping }));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16349,"byte_end":16397,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/    }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16402,"byte_end":16410,"line_start":337,"line_end":337,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16415,"byte_end":16420,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16425,"byte_end":16428,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16433,"byte_end":16448,"line_start":340,"line_end":340,"column_start":5,"column_end":20}},{"value":"/     let mut sys = System::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16453,"byte_end":16489,"line_start":341,"line_end":341,"column_start":5,"column_end":41}},{"value":"/     let addr = sys.block_on(async { MyActor.start() });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16494,"byte_end":16553,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/     sys.run();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16558,"byte_end":16576,"line_start":343,"line_end":343,"column_start":5,"column_end":23}},{"value":"/  }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16581,"byte_end":16587,"line_start":344,"line_end":344,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16592,"byte_end":16599,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17862,"byte_end":17880,"line_start":393,"line_end":393,"column_start":8,"column_end":26},"name":"add_message_stream","qualname":"::actor::AsyncContext::add_message_stream","value":"pub fn add_message_stream<S>(&mut Self, S) where S: Stream + 'static,\nS::Item: Message, A: Handler<S::Item>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Registers a stream with the context, ignoring errors.","sig":null,"attributes":[{"value":"/ Registers a stream with the context, ignoring errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16807,"byte_end":16864,"line_start":354,"line_end":354,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16869,"byte_end":16872,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method is similar to `add_stream` but it skips stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16877,"byte_end":16939,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16944,"byte_end":16955,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16960,"byte_end":16963,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16968,"byte_end":16975,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":16980,"byte_end":17006,"line_start":360,"line_end":360,"column_start":5,"column_end":31}},{"value":"/ use futures_util::stream::once;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17011,"byte_end":17046,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17051,"byte_end":17054,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17059,"byte_end":17081,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17086,"byte_end":17113,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17118,"byte_end":17134,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17139,"byte_end":17142,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17147,"byte_end":17166,"line_start":367,"line_end":367,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17171,"byte_end":17174,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ impl Handler<Ping> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17179,"byte_end":17215,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/     type Result = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17220,"byte_end":17245,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17250,"byte_end":17253,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, msg: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17258,"byte_end":17327,"line_start":372,"line_end":372,"column_start":5,"column_end":74}},{"value":"/         println!(\"PING\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17332,"byte_end":17361,"line_start":373,"line_end":373,"column_start":5,"column_end":34}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17366,"byte_end":17403,"line_start":374,"line_end":374,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17408,"byte_end":17417,"line_start":375,"line_end":375,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17422,"byte_end":17427,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17432,"byte_end":17435,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17440,"byte_end":17468,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17473,"byte_end":17510,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17515,"byte_end":17518,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17523,"byte_end":17579,"line_start":381,"line_end":381,"column_start":5,"column_end":61}},{"value":"/         // add messages stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17584,"byte_end":17618,"line_start":382,"line_end":382,"column_start":5,"column_end":39}},{"value":"/         ctx.add_message_stream(once(async { Ping }));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17623,"byte_end":17680,"line_start":383,"line_end":383,"column_start":5,"column_end":62}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17685,"byte_end":17694,"line_start":384,"line_end":384,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17699,"byte_end":17704,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17709,"byte_end":17712,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17717,"byte_end":17732,"line_start":387,"line_end":387,"column_start":5,"column_end":20}},{"value":"/    System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17737,"byte_end":17774,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/        let addr = MyActor.start();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17779,"byte_end":17817,"line_start":389,"line_end":389,"column_start":5,"column_end":43}},{"value":"/    });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17822,"byte_end":17832,"line_start":390,"line_end":390,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17837,"byte_end":17842,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":17847,"byte_end":17854,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18421,"byte_end":18427,"line_start":409,"line_end":409,"column_start":8,"column_end":14},"name":"notify","qualname":"::actor::AsyncContext::notify","value":"pub fn notify<M>(&mut Self, M) where A: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Sends the message `msg` to self. This bypasses the mailbox capacity, and\n will always queue the message. If the actor is in the `stopped` state, an\n error will be raised.\n","sig":null,"attributes":[{"value":"/ Sends the message `msg` to self. This bypasses the mailbox capacity, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18225,"byte_end":18301,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ will always queue the message. If the actor is in the `stopped` state, an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18306,"byte_end":18383,"line_start":407,"line_end":407,"column_start":5,"column_end":82}},{"value":"/ error will be raised.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18388,"byte_end":18413,"line_start":408,"line_end":408,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19117,"byte_end":19129,"line_start":428,"line_end":428,"column_start":8,"column_end":20},"name":"notify_later","qualname":"::actor::AsyncContext::notify_later","value":"pub fn notify_later<M>(&mut Self, M, Duration) -> SpawnHandle where\nA: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Sends the message `msg` to self after a specified period of time.","sig":null,"attributes":[{"value":"/ Sends the message `msg` to self after a specified period of time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18723,"byte_end":18792,"line_start":421,"line_end":421,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18797,"byte_end":18800,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Returns a spawn handle which can be used for cancellation. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18805,"byte_end":18871,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ notification gets cancelled if the context's stop method gets","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18876,"byte_end":18941,"line_start":424,"line_end":424,"column_start":5,"column_end":70}},{"value":"/ called. This bypasses the mailbox capacity, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":18946,"byte_end":18997,"line_start":425,"line_end":425,"column_start":5,"column_end":56}},{"value":"/ will always queue the message. If the actor is in the `stopped` state, an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19002,"byte_end":19079,"line_start":426,"line_end":426,"column_start":5,"column_end":82}},{"value":"/ error will be raised.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19084,"byte_end":19109,"line_start":427,"line_end":427,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19730,"byte_end":19739,"line_start":446,"line_end":446,"column_start":8,"column_end":17},"name":"run_later","qualname":"::actor::AsyncContext::run_later","value":"pub fn run_later<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Executes a closure after a specified period of time.","sig":null,"attributes":[{"value":"/ Executes a closure after a specified period of time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19511,"byte_end":19567,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19572,"byte_end":19575,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The closure gets passed the same actor and its","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19580,"byte_end":19630,"line_start":443,"line_end":443,"column_start":5,"column_end":55}},{"value":"/ context. Execution gets cancelled if the context's stop method","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19635,"byte_end":19701,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/ gets called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19706,"byte_end":19722,"line_start":445,"line_end":445,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20020,"byte_end":20032,"line_start":455,"line_end":455,"column_start":8,"column_end":20},"name":"run_interval","qualname":"::actor::AsyncContext::run_interval","value":"pub fn run_interval<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Spawns a job to execute the given closure periodically, at a\n specified fixed interval.\n","sig":null,"attributes":[{"value":"/ Spawns a job to execute the given closure periodically, at a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19914,"byte_end":19978,"line_start":453,"line_end":453,"column_start":5,"column_end":69}},{"value":"/ specified fixed interval.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":19983,"byte_end":20012,"line_start":454,"line_end":454,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2955},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20354,"byte_end":20365,"line_start":467,"line_end":467,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::actor::SpawnHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a spawned future.","sig":null,"attributes":[{"value":"/ A handle to a spawned future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20216,"byte_end":20249,"line_start":463,"line_end":463,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20250,"byte_end":20253,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ Can be used to cancel the future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20254,"byte_end":20291,"line_start":465,"line_end":465,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20435,"byte_end":20439,"line_start":471,"line_end":471,"column_start":12,"column_end":16},"name":"next","qualname":"<SpawnHandle>::next","value":"pub fn next(Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Gets the next handle.\n","sig":null,"attributes":[{"value":"/ Gets the next handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20398,"byte_end":20423,"line_start":470,"line_end":470,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20531,"byte_end":20541,"line_start":475,"line_end":475,"column_start":12,"column_end":22},"name":"into_usize","qualname":"<SpawnHandle>::into_usize","value":"pub fn into_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":20993,"byte_end":21000,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"decl_id":null,"docs":" An actor execution context.\n","sig":null,"attributes":[{"value":"/ An actor execution context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":20950,"byte_end":20981,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":22665,"byte_end":22678,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"with_receiver","qualname":"<Context<A>>::with_receiver","value":"pub fn with_receiver(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":22644,"byte_end":22653,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":22891,"byte_end":22894,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"run","qualname":"<Context<A>>::run","value":"pub fn run(Self, A) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":22870,"byte_end":22879,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23058,"byte_end":23069,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"into_future","qualname":"<Context<A>>::into_future","value":"pub fn into_future(Self, A) -> ContextFut<A, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23351,"byte_end":23357,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"handle","qualname":"<Context<A>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the running future.","sig":null,"attributes":[{"value":"/ Returns a handle to the running future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23205,"byte_end":23248,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23253,"byte_end":23256,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is the handle returned by the `AsyncContext::spawn()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23261,"byte_end":23323,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/ method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23328,"byte_end":23339,"line_start":119,"line_end":119,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24043,"byte_end":24063,"line_start":146,"line_end":146,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<Context<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the mailbox capacity.","sig":null,"attributes":[{"value":"/ Sets the mailbox capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23426,"byte_end":23456,"line_start":124,"line_end":124,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23461,"byte_end":23464,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The default mailbox capacity is 16 messages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23469,"byte_end":23517,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/ #Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23522,"byte_end":23535,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23540,"byte_end":23547,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23552,"byte_end":23580,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23585,"byte_end":23604,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23609,"byte_end":23637,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23642,"byte_end":23679,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23684,"byte_end":23687,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23692,"byte_end":23748,"line_start":134,"line_end":134,"column_start":5,"column_end":61}},{"value":"/         ctx.set_mailbox_capacity(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23753,"byte_end":23793,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/         System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23798,"byte_end":23835,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23840,"byte_end":23849,"line_start":137,"line_end":137,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23854,"byte_end":23859,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23864,"byte_end":23867,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23872,"byte_end":23889,"line_start":140,"line_end":140,"column_start":5,"column_end":22}},{"value":"/ # let mut sys = System::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23894,"byte_end":23928,"line_start":141,"line_end":141,"column_start":5,"column_end":39}},{"value":"/ let addr = sys.block_on(async { MyActor.start() });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23933,"byte_end":23988,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/ sys.run();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":23993,"byte_end":24007,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24012,"byte_end":24019,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24024,"byte_end":24031,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24211,"byte_end":24220,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"connected","qualname":"<Context<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether any addresses are still connected.\n","sig":null,"attributes":[{"value":"/ Returns whether any addresses are still connected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24145,"byte_end":24199,"line_start":150,"line_end":150,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24521,"byte_end":24541,"line_start":166,"line_end":166,"column_start":11,"column_end":31},"name":"ContextFutureSpawner","qualname":"::context::ContextFutureSpawner","value":"ContextFutureSpawner<A>","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" Helper trait which can spawn a future into the actor's context.\n","sig":null,"attributes":[{"value":"/ Helper trait which can spawn a future into the actor's context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24443,"byte_end":24510,"line_start":165,"line_end":165,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24657,"byte_end":24662,"line_start":172,"line_end":172,"column_start":8,"column_end":13},"name":"spawn","qualname":"::context::ContextFutureSpawner::spawn","value":"pub fn spawn(Self, &mut A::Context)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Spawns the future into the given context.\n","sig":null,"attributes":[{"value":"/ Spawns the future into the given context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24604,"byte_end":24649,"line_start":171,"line_end":171,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24879,"byte_end":24883,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"wait","qualname":"::context::ContextFutureSpawner::wait","value":"pub fn wait(Self, &mut A::Context)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Spawns the future into the given context, waiting for it to\n resolve.","sig":null,"attributes":[{"value":"/ Spawns the future into the given context, waiting for it to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24697,"byte_end":24760,"line_start":174,"line_end":174,"column_start":5,"column_end":68}},{"value":"/ resolve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24765,"byte_end":24777,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24782,"byte_end":24785,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This stops processing any incoming events until this future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24790,"byte_end":24853,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ resolves.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24858,"byte_end":24871,"line_start":178,"line_end":178,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26009,"byte_end":26026,"line_start":31,"line_end":31,"column_start":11,"column_end":28},"name":"AsyncContextParts","qualname":"::contextimpl::AsyncContextParts","value":"AsyncContextParts<A>: ActorContext + AsyncContext<A>","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26107,"byte_end":26112,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"parts","qualname":"::contextimpl::AsyncContextParts::parts","value":"pub fn parts(&mut Self) -> &mut ContextParts<A>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26163,"byte_end":26175,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"ContextParts","qualname":"::contextimpl::ContextParts","value":"ContextParts {  }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26834,"byte_end":26837,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextParts<A>>::new","value":"pub fn new(AddressSenderProducer<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new ContextParts instance\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26772,"byte_end":26781,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ Create new ContextParts instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26786,"byte_end":26822,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27327,"byte_end":27331,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"stop","qualname":"<ContextParts<A>>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Initiate stop process for actor execution","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27149,"byte_end":27158,"line_start":79,"line_end":79,"column_start":5,"column_end":14}},{"value":"/ Initiate stop process for actor execution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27163,"byte_end":27208,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27213,"byte_end":27216,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Actor could prevent stopping by returning `false` from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27221,"byte_end":27279,"line_start":82,"line_end":82,"column_start":5,"column_end":63}},{"value":"/ `Actor::stopping()` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27284,"byte_end":27315,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27586,"byte_end":27595,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"terminate","qualname":"<ContextParts<A>>::terminate","value":"pub fn terminate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Terminate actor execution\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27531,"byte_end":27540,"line_start":91,"line_end":91,"column_start":5,"column_end":14}},{"value":"/ Terminate actor execution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27545,"byte_end":27574,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27715,"byte_end":27720,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"state","qualname":"<ContextParts<A>>::state","value":"pub fn state(&Self) -> ActorState","parent":null,"children":[],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27664,"byte_end":27673,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ Actor execution state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":27678,"byte_end":27703,"line_start":98,"line_end":98,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28164,"byte_end":28171,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"waiting","qualname":"<ContextParts<A>>::waiting","value":"pub fn waiting(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is context waiting for future completion\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28094,"byte_end":28103,"line_start":111,"line_end":111,"column_start":5,"column_end":14}},{"value":"/ Is context waiting for future completion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28108,"byte_end":28152,"line_start":112,"line_end":112,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28407,"byte_end":28418,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"curr_handle","qualname":"<ContextParts<A>>::curr_handle","value":"pub fn curr_handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Handle of the running future\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28349,"byte_end":28358,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"/ Handle of the running future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28363,"byte_end":28395,"line_start":121,"line_end":121,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28541,"byte_end":28546,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ContextParts<A>>::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<A, Output =\n()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28478,"byte_end":28487,"line_start":126,"line_end":126,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28492,"byte_end":28529,"line_start":127,"line_end":127,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29039,"byte_end":29043,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"wait","qualname":"<ContextParts<A>>::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<A, Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context and wait future completion.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28877,"byte_end":28886,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context and wait future completion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28891,"byte_end":28955,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28960,"byte_end":28963,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ During wait period actor does not receive any messages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":28968,"byte_end":29027,"line_start":142,"line_end":142,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29253,"byte_end":29266,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"cancel_future","qualname":"<ContextParts<A>>::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Cancel previously scheduled future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29188,"byte_end":29197,"line_start":150,"line_end":150,"column_start":5,"column_end":14}},{"value":"/ Cancel previously scheduled future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29202,"byte_end":29241,"line_start":151,"line_end":151,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29389,"byte_end":29397,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ContextParts<A>>::capacity","value":"pub fn capacity(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29368,"byte_end":29377,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29481,"byte_end":29501,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<ContextParts<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29460,"byte_end":29469,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29653,"byte_end":29660,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextParts<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":29632,"byte_end":29641,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30048,"byte_end":30055,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"started","qualname":"<ContextParts<A>>::started","value":"pub fn started(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30027,"byte_end":30036,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30194,"byte_end":30203,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"connected","qualname":"<ContextParts<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30139,"byte_end":30168,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30173,"byte_end":30182,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30271,"byte_end":30281,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"ContextFut","qualname":"::contextimpl::ContextFut","value":"ContextFut {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31227,"byte_end":31230,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextFut<A, C>>::new","value":"pub fn new(C, A, Mailbox<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31467,"byte_end":31470,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"ctx","qualname":"<ContextFut<A, C>>::ctx","value":"pub fn ctx(&mut Self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31446,"byte_end":31455,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31548,"byte_end":31555,"line_start":252,"line_end":252,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextFut<A, C>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31527,"byte_end":31536,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31826,"byte_end":31831,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"alive","qualname":"<ContextFut<A, C>>::alive","value":"pub fn alive(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31805,"byte_end":31814,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44143,"byte_end":44150,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler<M>","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" Describes how to handle messages of a specific type.","sig":null,"attributes":[{"value":"/ Describes how to handle messages of a specific type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":43877,"byte_end":43933,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":43934,"byte_end":43937,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Implementing `Handler` is a general way to handle incoming","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":43938,"byte_end":44000,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ messages, streams, and futures.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44001,"byte_end":44036,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44037,"byte_end":44040,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The type `M` is a message which can be handled by the actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44041,"byte_end":44105,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44106,"byte_end":44132,"line_start":15,"line_end":15,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44374,"byte_end":44380,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Handler::Result","value":"type Result: MessageResponse<Self, M>;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" The type of value that this handler will return.","sig":null,"attributes":[{"value":"/ The type of value that this handler will return.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44199,"byte_end":44251,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44256,"byte_end":44259,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Check the [MessageResponse] trait for some details","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44264,"byte_end":44318,"line_start":23,"line_end":23,"column_start":5,"column_end":59}},{"value":"/ on how a message can be responded to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44323,"byte_end":44364,"line_start":24,"line_end":24,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44488,"byte_end":44494,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::Handler::handle","value":"pub fn handle(&mut Self, M, &mut Self::Context) -> Self::Result","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" This method is called for every message received by this actor.\n","sig":null,"attributes":[{"value":"/ This method is called for every message received by this actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44413,"byte_end":44480,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44624,"byte_end":44631,"line_start":32,"line_end":32,"column_start":11,"column_end":18},"name":"Message","qualname":"::handler::Message","value":"Message","parent":null,"children":[{"krate":0,"index":466}],"decl_id":null,"docs":" Represent message that can be handled by an actor.\n","sig":null,"attributes":[{"value":"/ Represent message that can be handled by an actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44559,"byte_end":44613,"line_start":31,"line_end":31,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":466},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44735,"byte_end":44741,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Message::Result","value":"type Result: 'static;","parent":{"krate":0,"index":465},"children":[],"decl_id":null,"docs":" The type of value that this message will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this message will resolved with if it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44638,"byte_end":44705,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/ successful.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44710,"byte_end":44725,"line_start":34,"line_end":34,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45647,"byte_end":45660,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"MessageResult","qualname":"::handler::MessageResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A helper type that implements the `MessageResponse` trait.","sig":null,"attributes":[{"value":"/ A helper type that implements the `MessageResponse` trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45083,"byte_end":45145,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45146,"byte_end":45149,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45150,"byte_end":45164,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45165,"byte_end":45178,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45179,"byte_end":45205,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45206,"byte_end":45209,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45210,"byte_end":45232,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"Response\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45233,"byte_end":45266,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ struct Msg;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45267,"byte_end":45282,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45283,"byte_end":45286,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ struct Response;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45287,"byte_end":45307,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45308,"byte_end":45311,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45312,"byte_end":45331,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45332,"byte_end":45335,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45336,"byte_end":45364,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45365,"byte_end":45402,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45403,"byte_end":45408,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45409,"byte_end":45412,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45413,"byte_end":45448,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/     type Result = MessageResult<Msg>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45449,"byte_end":45490,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45491,"byte_end":45494,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45495,"byte_end":45572,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/         MessageResult(Response {})","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45573,"byte_end":45611,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45612,"byte_end":45621,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45622,"byte_end":45627,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45628,"byte_end":45635,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":476},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45673,"byte_end":45686,"line_start":80,"line_end":80,"column_start":38,"column_end":51},"name":"0","qualname":"::handler::MessageResult::0","value":"<M as handler::Message>::Result","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47503,"byte_end":47517,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"AtomicResponse","qualname":"::handler::AtomicResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A specialized actor future holder for atomic asynchronous message handling.","sig":null,"attributes":[{"value":"/ A specialized actor future holder for atomic asynchronous message handling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45690,"byte_end":45769,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45770,"byte_end":45773,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Intended be used when the future returned will need exclusive access Actor's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45774,"byte_end":45854,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ internal state or context, e.g., it can yield at critical sessions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45855,"byte_end":45926,"line_start":85,"line_end":85,"column_start":1,"column_end":72}},{"value":"/ When the actor starts to process this future, it will not pull any other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45927,"byte_end":46003,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ spawned futures until this one as been completed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46004,"byte_end":46057,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/ Check [ActorFuture] for available methods for accessing Actor's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46058,"byte_end":46125,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ internal state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46126,"byte_end":46145,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46146,"byte_end":46149,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46150,"byte_end":46161,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ The runtime itself is not blocked in the process, only the Actor,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46162,"byte_end":46231,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/ other futures, and therefore, other actors are still allowed to make","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46232,"byte_end":46304,"line_start":93,"line_end":93,"column_start":1,"column_end":73}},{"value":"/ progress when this [AtomicResponse] is used.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46305,"byte_end":46353,"line_start":94,"line_end":94,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46354,"byte_end":46357,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46358,"byte_end":46372,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ On the following example, the response to `Msg` would always be 29","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46373,"byte_end":46443,"line_start":97,"line_end":97,"column_start":1,"column_end":71}},{"value":"/ even if there are multiple `Msg` sent to `MyActor`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46444,"byte_end":46499,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46500,"byte_end":46513,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46514,"byte_end":46542,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/ # use actix::clock::sleep;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46543,"byte_end":46573,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46574,"byte_end":46604,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46605,"byte_end":46610,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46611,"byte_end":46635,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ # #[rtype(result = \"usize\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46636,"byte_end":46668,"line_start":105,"line_end":105,"column_start":1,"column_end":33}},{"value":"/ # struct Msg;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46669,"byte_end":46686,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46687,"byte_end":46692,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ # struct MyActor(usize);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46693,"byte_end":46721,"line_start":108,"line_end":108,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46722,"byte_end":46727,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ # impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46728,"byte_end":46758,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ #    type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46759,"byte_end":46797,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46798,"byte_end":46805,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46806,"byte_end":46811,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46812,"byte_end":46847,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/     type Result = AtomicResponse<Self, usize>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46848,"byte_end":46898,"line_start":115,"line_end":115,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46899,"byte_end":46902,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46903,"byte_end":46980,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/         AtomicResponse::new(Box::pin(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":46981,"byte_end":47022,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/             async {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47023,"byte_end":47047,"line_start":119,"line_end":119,"column_start":1,"column_end":25}},{"value":"/                 .into_actor(self)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47048,"byte_end":47085,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/                 .map(|_, this, _| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47086,"byte_end":47125,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/                     this.0 = 30;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47126,"byte_end":47162,"line_start":122,"line_end":122,"column_start":1,"column_end":37}},{"value":"/                 })","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47163,"byte_end":47185,"line_start":123,"line_end":123,"column_start":1,"column_end":23}},{"value":"/                 .then(|_, this, _| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47186,"byte_end":47226,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/                     sleep(Duration::from_secs(3)).into_actor(this)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47227,"byte_end":47297,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/                 })","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47298,"byte_end":47320,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/                 .map(|_, this, _| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47321,"byte_end":47360,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/                     this.0 -= 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47361,"byte_end":47397,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/                     this.0","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47398,"byte_end":47428,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/                 }),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47429,"byte_end":47452,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/         ))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47453,"byte_end":47467,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47468,"byte_end":47477,"line_start":132,"line_end":132,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47478,"byte_end":47483,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47484,"byte_end":47491,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47596,"byte_end":47599,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomicResponse<A, T>>::new","value":"pub fn new(ResponseActFuture<A, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49454,"byte_end":49471,"line_start":198,"line_end":198,"column_start":10,"column_end":27},"name":"ResponseActFuture","qualname":"::handler::ResponseActFuture","value":"LocalBoxActorFuture<A, I>","parent":null,"children":[],"decl_id":null,"docs":" A specialized actor future for asynchronous message handling.","sig":null,"attributes":[{"value":"/ A specialized actor future for asynchronous message handling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47961,"byte_end":48026,"line_start":154,"line_end":154,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48027,"byte_end":48030,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Intended be used when the future returned will, at some point, need to access Actor's internal","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48031,"byte_end":48129,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ state or context in order to finish. Check [ActorFuture] for available methods for accessing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48130,"byte_end":48226,"line_start":157,"line_end":157,"column_start":1,"column_end":97}},{"value":"/ Actor's internal state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48227,"byte_end":48254,"line_start":158,"line_end":158,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48255,"byte_end":48258,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48259,"byte_end":48269,"line_start":160,"line_end":160,"column_start":1,"column_end":11}},{"value":"/ It's important to keep in mind that the provided [AsyncContext], does not enforce the poll of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48270,"byte_end":48367,"line_start":161,"line_end":161,"column_start":1,"column_end":98}},{"value":"/ any [ActorFuture] to be exclusive. Therefore, if other instances of [ActorFuture] are spawned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48368,"byte_end":48465,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"/ into this Context **their execution won't necessarily be atomic**. Check [AtomicResponse] if you","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48466,"byte_end":48566,"line_start":163,"line_end":163,"column_start":1,"column_end":101}},{"value":"/ need exclusive access over the actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48567,"byte_end":48608,"line_start":164,"line_end":164,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48609,"byte_end":48612,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48613,"byte_end":48627,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48628,"byte_end":48641,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48642,"byte_end":48668,"line_start":168,"line_end":168,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48669,"byte_end":48672,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48673,"byte_end":48695,"line_start":170,"line_end":170,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"Result<usize, ()>\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48696,"byte_end":48738,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ struct Msg;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48739,"byte_end":48754,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48755,"byte_end":48758,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48759,"byte_end":48778,"line_start":174,"line_end":174,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48779,"byte_end":48782,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48783,"byte_end":48811,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48812,"byte_end":48849,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48850,"byte_end":48855,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48856,"byte_end":48859,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48860,"byte_end":48895,"line_start":180,"line_end":180,"column_start":1,"column_end":36}},{"value":"/     type Result = ResponseActFuture<Self, Result<usize, ()>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48896,"byte_end":48961,"line_start":181,"line_end":181,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48962,"byte_end":48965,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":48966,"byte_end":49043,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/         Box::pin(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49044,"byte_end":49065,"line_start":184,"line_end":184,"column_start":1,"column_end":22}},{"value":"/             async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49066,"byte_end":49089,"line_start":185,"line_end":185,"column_start":1,"column_end":24}},{"value":"/                 // Some async computation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49090,"byte_end":49135,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/                 42","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49136,"byte_end":49158,"line_start":187,"line_end":187,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49159,"byte_end":49176,"line_start":188,"line_end":188,"column_start":1,"column_end":18}},{"value":"/             .into_actor(self) // converts future to ActorFuture","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49177,"byte_end":49244,"line_start":189,"line_end":189,"column_start":1,"column_end":68}},{"value":"/             .map(|res, _act, _ctx| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49245,"byte_end":49285,"line_start":190,"line_end":190,"column_start":1,"column_end":41}},{"value":"/                 // Do some computation with actor's state or context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49286,"byte_end":49358,"line_start":191,"line_end":191,"column_start":1,"column_end":73}},{"value":"/                 Ok(res)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49359,"byte_end":49386,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/             }),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49387,"byte_end":49406,"line_start":193,"line_end":193,"column_start":1,"column_end":20}},{"value":"/         )","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49407,"byte_end":49420,"line_start":194,"line_end":194,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49421,"byte_end":49430,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49431,"byte_end":49436,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49437,"byte_end":49444,"line_start":197,"line_end":197,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50431,"byte_end":50445,"line_start":232,"line_end":232,"column_start":10,"column_end":24},"name":"ResponseFuture","qualname":"::handler::ResponseFuture","value":"Pin<Box<dyn Future<Output = I>>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized future for asynchronous message handling.","sig":null,"attributes":[{"value":"/ A specialized future for asynchronous message handling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49508,"byte_end":49567,"line_start":200,"line_end":200,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49568,"byte_end":49571,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Intended be used for when the future returned doesn't","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49572,"byte_end":49629,"line_start":202,"line_end":202,"column_start":1,"column_end":58}},{"value":"/ need to access Actor's internal state or context to progress, either","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49630,"byte_end":49702,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/ because it's completely agnostic to it, or because the required data has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49703,"byte_end":49779,"line_start":204,"line_end":204,"column_start":1,"column_end":77}},{"value":"/ already been moved inside the future and it won't need Actor state to continue.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49780,"byte_end":49863,"line_start":205,"line_end":205,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49864,"byte_end":49867,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49868,"byte_end":49882,"line_start":207,"line_end":207,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49883,"byte_end":49896,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49897,"byte_end":49923,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49924,"byte_end":49927,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49928,"byte_end":49950,"line_start":211,"line_end":211,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"Result<(), ()>\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49951,"byte_end":49990,"line_start":212,"line_end":212,"column_start":1,"column_end":40}},{"value":"/ struct Msg;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":49991,"byte_end":50006,"line_start":213,"line_end":213,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50007,"byte_end":50010,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50011,"byte_end":50030,"line_start":215,"line_end":215,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50031,"byte_end":50034,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50035,"byte_end":50063,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50064,"byte_end":50101,"line_start":218,"line_end":218,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50102,"byte_end":50107,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50108,"byte_end":50111,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50112,"byte_end":50147,"line_start":221,"line_end":221,"column_start":1,"column_end":36}},{"value":"/     type Result = ResponseFuture<Result<(), ()>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50148,"byte_end":50201,"line_start":222,"line_end":222,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50202,"byte_end":50205,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50206,"byte_end":50283,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/         Box::pin(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50284,"byte_end":50317,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             // Some async computation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50318,"byte_end":50359,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/             Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50360,"byte_end":50382,"line_start":227,"line_end":227,"column_start":1,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50383,"byte_end":50397,"line_start":228,"line_end":228,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50398,"byte_end":50407,"line_start":229,"line_end":229,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50408,"byte_end":50413,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50414,"byte_end":50421,"line_start":231,"line_end":231,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51474,"byte_end":51489,"line_start":251,"line_end":251,"column_start":11,"column_end":26},"name":"MessageResponse","qualname":"::handler::MessageResponse","value":"MessageResponse<A: Actor, M: Message>","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":" A trait which defines message responses.","sig":null,"attributes":[{"value":"/ A trait which defines message responses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50486,"byte_end":50530,"line_start":234,"line_end":234,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50531,"byte_end":50534,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ We offer implementation for some common language types, if you need","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50535,"byte_end":50606,"line_start":236,"line_end":236,"column_start":1,"column_end":72}},{"value":"/ to respond with a new type you can use [MessageResult].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50607,"byte_end":50666,"line_start":237,"line_end":237,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50667,"byte_end":50670,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ If `Actor::Context` implements [AsyncContext] it's possible to handle","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50671,"byte_end":50744,"line_start":239,"line_end":239,"column_start":1,"column_end":74}},{"value":"/ the message asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50745,"byte_end":50776,"line_start":240,"line_end":240,"column_start":1,"column_end":32}},{"value":"/ For asynchronous message handling we offer the following possible response types:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50777,"byte_end":50862,"line_start":241,"line_end":241,"column_start":1,"column_end":86}},{"value":"/ - [ResponseFuture] should be used for when the future returned doesn't","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50863,"byte_end":50937,"line_start":242,"line_end":242,"column_start":1,"column_end":75}},{"value":"/   need to access Actor's internal state or context to progress, either","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":50938,"byte_end":51012,"line_start":243,"line_end":243,"column_start":1,"column_end":75}},{"value":"/   because it's completely agnostic to it or because the required data has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51013,"byte_end":51090,"line_start":244,"line_end":244,"column_start":1,"column_end":78}},{"value":"/   already been moved to it and it won't need Actor state to continue.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51091,"byte_end":51164,"line_start":245,"line_end":245,"column_start":1,"column_end":74}},{"value":"/ - [ResponseActFuture] should be used when the future returned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51165,"byte_end":51230,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/   will, at some point, need to access Actor's internal state or context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51231,"byte_end":51306,"line_start":247,"line_end":247,"column_start":1,"column_end":76}},{"value":"/   in order to finish.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51307,"byte_end":51332,"line_start":248,"line_end":248,"column_start":1,"column_end":26}},{"value":"/ - [AtomicResponse] should be used when the future returned needs exclusive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51333,"byte_end":51411,"line_start":249,"line_end":249,"column_start":1,"column_end":79}},{"value":"/   access to  Actor's internal state or context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51412,"byte_end":51463,"line_start":250,"line_end":250,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51521,"byte_end":51527,"line_start":252,"line_end":252,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::MessageResponse::handle","value":"pub fn handle(Self, &mut A::Context, Option<OneshotSender<M::Result>>)","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55208,"byte_end":55216,"line_start":393,"line_end":393,"column_start":12,"column_end":20},"name":"Response","qualname":"::handler::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":545}],"decl_id":null,"docs":" Helper type for representing different type of message responses\n","sig":null,"attributes":[{"value":"/ Helper type for representing different type of message responses","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55128,"byte_end":55196,"line_start":392,"line_end":392,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55718,"byte_end":55721,"line_start":410,"line_end":410,"column_start":12,"column_end":15},"name":"fut","qualname":"<Response<I>>::fut","value":"pub fn fut<T>(T) -> Self where T: Future<Output = I> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates an asynchronous response.\n","sig":null,"attributes":[{"value":"/ Creates an asynchronous response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55669,"byte_end":55706,"line_start":409,"line_end":409,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55925,"byte_end":55930,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"reply","qualname":"<Response<I>>::reply","value":"pub fn reply(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a response.\n","sig":null,"attributes":[{"value":"/ Creates a response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55890,"byte_end":55913,"line_start":419,"line_end":419,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":56620,"byte_end":56633,"line_start":448,"line_end":448,"column_start":12,"column_end":25},"name":"ActorResponse","qualname":"::handler::ActorResponse","value":"ActorResponse {  }","parent":null,"children":[{"krate":0,"index":571}],"decl_id":null,"docs":" A helper type for representing different types of message responses.\n","sig":null,"attributes":[{"value":"/ A helper type for representing different types of message responses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":56536,"byte_end":56608,"line_start":447,"line_end":447,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57176,"byte_end":57181,"line_start":465,"line_end":465,"column_start":12,"column_end":17},"name":"reply","qualname":"<ActorResponse<A, I>>::reply","value":"pub fn reply(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a response.\n","sig":null,"attributes":[{"value":"/ Creates a response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57141,"byte_end":57164,"line_start":464,"line_end":464,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57339,"byte_end":57346,"line_start":472,"line_end":472,"column_start":12,"column_end":19},"name":"async","qualname":"<ActorResponse<A, I>>::async","value":"pub fn r#async<T>(T) -> Self where T: ActorFuture<A, Output = I> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates an asynchronous response.\n","sig":null,"attributes":[{"value":"/ Creates an asynchronous response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57290,"byte_end":57327,"line_start":471,"line_end":471,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":637},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60433,"byte_end":60446,"line_start":55,"line_end":55,"column_start":11,"column_end":24},"name":"StreamHandler","qualname":"::stream::StreamHandler","value":"StreamHandler<I>","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"decl_id":null,"docs":" Stream handling for Actors.","sig":null,"attributes":[{"value":"/ Stream handling for Actors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59241,"byte_end":59272,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59273,"byte_end":59276,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is helper trait that allows handling [`Stream`]s in a similar way to normal actor messages.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59277,"byte_end":59377,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ When stream resolves its next item, `handle()` is called with that item.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59378,"byte_end":59454,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59455,"byte_end":59458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When the stream completes, `finished()` is called. By default, it stops Actor execution.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59459,"byte_end":59551,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59552,"byte_end":59555,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59556,"byte_end":59570,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59571,"byte_end":59578,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59579,"byte_end":59605,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ use futures_util::stream::once;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59606,"byte_end":59641,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59642,"byte_end":59645,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59646,"byte_end":59668,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59669,"byte_end":59696,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59697,"byte_end":59713,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59714,"byte_end":59717,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59718,"byte_end":59737,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59738,"byte_end":59741,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ impl StreamHandler<Ping> for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59742,"byte_end":59784,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59785,"byte_end":59855,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/         println!(\"PING\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59856,"byte_end":59885,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/         System::current().stop()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59886,"byte_end":59922,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59923,"byte_end":59932,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59933,"byte_end":59936,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59937,"byte_end":59994,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/         println!(\"finished\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":59995,"byte_end":60028,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60029,"byte_end":60038,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60039,"byte_end":60044,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60045,"byte_end":60048,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60049,"byte_end":60077,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60078,"byte_end":60114,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60115,"byte_end":60118,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60119,"byte_end":60174,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"/        Self::add_stream(once(async { Ping }), ctx);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60175,"byte_end":60230,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/    }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60231,"byte_end":60239,"line_start":45,"line_end":45,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60240,"byte_end":60245,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60246,"byte_end":60249,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60250,"byte_end":60265,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     let mut sys = System::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60266,"byte_end":60302,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/     let addr = sys.block_on(async { MyActor.start() });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60303,"byte_end":60362,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/     sys.run();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60363,"byte_end":60381,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60382,"byte_end":60387,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60388,"byte_end":60395,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60396,"byte_end":60422,"line_start":54,"line_end":54,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60538,"byte_end":60544,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"handle","qualname":"::stream::StreamHandler::handle","value":"pub fn handle(&mut Self, I, &mut Self::Context)","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Called for every message emitted by the stream.\n","sig":null,"attributes":[{"value":"/ Called for every message emitted by the stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60479,"byte_end":60530,"line_start":59,"line_end":59,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60697,"byte_end":60704,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"started","qualname":"::stream::StreamHandler::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Called when stream emits first item.","sig":null,"attributes":[{"value":"/ Called when stream emits first item.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60596,"byte_end":60636,"line_start":62,"line_end":62,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60641,"byte_end":60644,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Default implementation does nothing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60649,"byte_end":60689,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60851,"byte_end":60859,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"finished","qualname":"::stream::StreamHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Called when stream finishes.","sig":null,"attributes":[{"value":"/ Called when stream finishes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60749,"byte_end":60781,"line_start":67,"line_end":67,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60786,"byte_end":60789,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Default implementation stops Actor execution.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60794,"byte_end":60843,"line_start":69,"line_end":69,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60979,"byte_end":60989,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::stream::StreamHandler::add_stream","value":"pub fn add_stream<S>(S, &mut Self::Context) -> SpawnHandle where S: Stream +\n'static, Self: StreamHandler<S::Item>, Self::Context: AsyncContext<Self>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Register a Stream to the actor context.\n","sig":null,"attributes":[{"value":"/ Register a Stream to the actor context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":60928,"byte_end":60971,"line_start":74,"line_end":74,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3247},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65061,"byte_end":65071,"line_start":70,"line_end":70,"column_start":16,"column_end":26},"name":"Supervisor","qualname":"::supervisor::Supervisor","value":"Supervisor {  }","parent":null,"children":[{"krate":0,"index":3249}],"decl_id":null,"docs":" Actor supervisor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":66029,"byte_end":66034,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"start","qualname":"<Supervisor<A>>::start","value":"pub fn start<F>(F) -> Addr<A> where F: FnOnce(&mut A::Context) -> A + 'static,\nA: Actor<Context = Context<A>>","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in current tokio runtime.","sig":null,"attributes":[{"value":"/ Start new supervised actor in current tokio runtime.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65300,"byte_end":65356,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65361,"byte_end":65364,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Type of returned address depends on variable type. For example to get","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65369,"byte_end":65442,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ `Addr<Syn, _>` of newly created actor, use explicitly `Addr<Syn,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65447,"byte_end":65515,"line_start":87,"line_end":87,"column_start":5,"column_end":73}},{"value":"/ _>` type as type of a variable.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65520,"byte_end":65555,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65560,"byte_end":65563,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65568,"byte_end":65575,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65580,"byte_end":65608,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65613,"byte_end":65632,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65637,"byte_end":65640,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65645,"byte_end":65673,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65678,"byte_end":65715,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65720,"byte_end":65725,"line_start":96,"line_end":96,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65730,"byte_end":65733,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # impl actix::Supervised for MyActor {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65738,"byte_end":65781,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65786,"byte_end":65803,"line_start":99,"line_end":99,"column_start":5,"column_end":22}},{"value":"/ #    System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65808,"byte_end":65847,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/ // Get `Addr` of a MyActor actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65852,"byte_end":65888,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/ let addr = actix::Supervisor::start(|_| MyActor);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65893,"byte_end":65946,"line_start":102,"line_end":102,"column_start":5,"column_end":58}},{"value":"/ #         System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65951,"byte_end":65990,"line_start":103,"line_end":103,"column_start":5,"column_end":44}},{"value":"/ # });}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65995,"byte_end":66005,"line_start":104,"line_end":104,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":66010,"byte_end":66017,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":66486,"byte_end":66502,"line_start":124,"line_end":124,"column_start":12,"column_end":28},"name":"start_in_arbiter","qualname":"<Supervisor<A>>::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&ArbiterHandle, F) -> Addr<A> where\nA: Actor<Context = Context<A>>, F: FnOnce(&mut Context<A>) -> A + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new supervised actor in arbiter's thread.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":66423,"byte_end":66474,"line_start":123,"line_end":123,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":810},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80129,"byte_end":80135,"line_start":29,"line_end":29,"column_start":11,"column_end":17},"name":"Sender","qualname":"::address::channel::Sender","value":"Sender<M>: Send","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80204,"byte_end":80211,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"do_send","qualname":"::address::channel::Sender::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80264,"byte_end":80272,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"try_send","qualname":"::address::channel::Sender::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80325,"byte_end":80329,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"send","qualname":"::address::channel::Sender::send","value":"pub fn send(&Self, M) -> Result<OneshotReceiver<M::Result>, SendError<M>>","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80406,"byte_end":80411,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"boxed","qualname":"::address::channel::Sender::boxed","value":"pub fn boxed(&Self) -> Box<dyn Sender<M> + Sync>","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80457,"byte_end":80461,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"hash","qualname":"::address::channel::Sender::hash","value":"pub fn hash(&Self) -> usize","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80487,"byte_end":80496,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"connected","qualname":"::address::channel::Sender::connected","value":"pub fn connected(&Self) -> bool","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":81643,"byte_end":81656,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"AddressSender","qualname":"::address::channel::AddressSender","value":"AddressSender {  }","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":81515,"byte_end":81582,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":81583,"byte_end":81586,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":81587,"byte_end":81631,"line_start":92,"line_end":92,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82560,"byte_end":82577,"line_start":119,"line_end":119,"column_start":12,"column_end":29},"name":"WeakAddressSender","qualname":"::address::channel::WeakAddressSender","value":"WeakAddressSender {  }","parent":null,"children":[{"krate":0,"index":841}],"decl_id":null,"docs":" A weakly referenced version of `AddressSender`.","sig":null,"attributes":[{"value":"/ A weakly referenced version of `AddressSender`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82431,"byte_end":82482,"line_start":116,"line_end":116,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82483,"byte_end":82486,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This is created by the `AddressSender::downgrade` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82487,"byte_end":82548,"line_start":118,"line_end":118,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":849},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83287,"byte_end":83302,"line_start":144,"line_end":144,"column_start":12,"column_end":27},"name":"AddressReceiver","qualname":"::address::channel::AddressReceiver","value":"AddressReceiver {  }","parent":null,"children":[{"krate":0,"index":851}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83025,"byte_end":83096,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83097,"byte_end":83100,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83101,"byte_end":83181,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83182,"byte_end":83253,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ `channel` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83254,"byte_end":83275,"line_start":143,"line_end":143,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":852},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83401,"byte_end":83422,"line_start":149,"line_end":149,"column_start":12,"column_end":33},"name":"AddressSenderProducer","qualname":"::address::channel::AddressSenderProducer","value":"AddressSenderProducer {  }","parent":null,"children":[{"krate":0,"index":854}],"decl_id":null,"docs":" Generate `AddressSenders` for the channel\n","sig":null,"attributes":[{"value":"/ Generate `AddressSenders` for the channel","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83344,"byte_end":83389,"line_start":148,"line_end":148,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":86298,"byte_end":86305,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"channel","qualname":"::address::channel::channel","value":"pub fn channel<A: Actor>(usize) -> (AddressSender<A>, AddressReceiver<A>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n bounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85525,"byte_end":85599,"line_start":231,"line_end":231,"column_start":1,"column_end":75}},{"value":"/ bounded capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85600,"byte_end":85621,"line_start":232,"line_end":232,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85622,"byte_end":85625,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85626,"byte_end":85703,"line_start":234,"line_end":234,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85704,"byte_end":85778,"line_start":235,"line_end":235,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85779,"byte_end":85855,"line_start":236,"line_end":236,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The channel capacity is equal to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85856,"byte_end":85928,"line_start":237,"line_end":237,"column_start":1,"column_end":73}},{"value":"/ `buffer + num-senders`. In other words, each sender gets a guaranteed slot","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85929,"byte_end":86007,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ in the channel capacity, and on top of that there are `buffer` \"first come,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":86008,"byte_end":86087,"line_start":239,"line_end":239,"column_start":1,"column_end":80}},{"value":"/ first serve\" slots available to all senders.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":86088,"byte_end":86136,"line_start":240,"line_end":240,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":86137,"byte_end":86140,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":86141,"byte_end":86220,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":86221,"byte_end":86290,"line_start":243,"line_end":243,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87209,"byte_end":87218,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSender<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the channel still open\n","sig":null,"attributes":[{"value":"/ Is the channel still open","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87168,"byte_end":87197,"line_start":275,"line_end":275,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87505,"byte_end":87509,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"send","qualname":"<AddressSender<A>>::send","value":"pub fn send<M>(&Self, M) -> Result<OneshotReceiver<M::Result>, SendError<M>>\nwhere A: Handler<M>, A::Context: ToEnvelope<A, M>, M::Result: Send,\nM: Message + Send","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` with blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` with blocking.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87360,"byte_end":87425,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87430,"byte_end":87433,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function must be called from inside of a task.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87438,"byte_end":87493,"line_start":285,"line_end":285,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":89071,"byte_end":89079,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"try_send","qualname":"<AddressSender<A>>::try_send","value":"pub fn try_send<M>(&Self, M, bool) -> Result<(), SendError<M>> where\nA: Handler<M>, <A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send,\nM: Message + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` without blocking.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` without blocking.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":88991,"byte_end":89059,"line_start":325,"line_end":325,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":90122,"byte_end":90129,"line_start":358,"line_end":358,"column_start":12,"column_end":19},"name":"do_send","qualname":"<AddressSender<A>>::do_send","value":"pub fn do_send<M>(&Self, M) -> Result<(), SendError<M>> where A: Handler<M>,\n<A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send, M: Message + Send","parent":null,"children":[],"decl_id":null,"docs":" Send a message on this `Sender<A>` without blocking.","sig":null,"attributes":[{"value":"/ Send a message on this `Sender<A>` without blocking.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":89996,"byte_end":90052,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":90057,"byte_end":90060,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function does not park current task.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":90065,"byte_end":90110,"line_start":357,"line_end":357,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":90878,"byte_end":90887,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<AddressSender<A>>::downgrade","value":"pub fn downgrade(&Self) -> WeakAddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade to `WeakAddressSender` which can later be upgraded\n","sig":null,"attributes":[{"value":"/ Downgrade to `WeakAddressSender` which can later be upgraded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":90802,"byte_end":90866,"line_start":377,"line_end":377,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96684,"byte_end":96691,"line_start":564,"line_end":564,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakAddressSender<A>>::upgrade","value":"pub fn upgrade(&Self) -> Option<AddressSender<A>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakAddressSender<A>` pointer to an [`AddressSender<A>`]","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakAddressSender<A>` pointer to an [`AddressSender<A>`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96517,"byte_end":96602,"line_start":561,"line_end":561,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96607,"byte_end":96610,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the actor has since been dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96615,"byte_end":96672,"line_start":563,"line_end":563,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97497,"byte_end":97506,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSenderProducer<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97456,"byte_end":97485,"line_start":598,"line_end":598,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97620,"byte_end":97628,"line_start":604,"line_end":604,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressSenderProducer<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get channel capacity\n","sig":null,"attributes":[{"value":"/ Get channel capacity","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97584,"byte_end":97608,"line_start":603,"line_end":603,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97839,"byte_end":97851,"line_start":612,"line_end":612,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressSenderProducer<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set channel capacity","sig":null,"attributes":[{"value":"/ Set channel capacity","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97698,"byte_end":97722,"line_start":608,"line_end":608,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97727,"byte_end":97730,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if new capacity is greater","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97735,"byte_end":97806,"line_start":610,"line_end":610,"column_start":5,"column_end":76}},{"value":"/ than current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97811,"byte_end":97827,"line_start":611,"line_end":611,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":98230,"byte_end":98236,"line_start":625,"line_end":625,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressSenderProducer<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Get sender side of the channel\n","sig":null,"attributes":[{"value":"/ Get sender side of the channel","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":98184,"byte_end":98218,"line_start":624,"line_end":624,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99351,"byte_end":99360,"line_start":660,"line_end":660,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressReceiver<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether any senders are still connected.\n","sig":null,"attributes":[{"value":"/ Returns whether any senders are still connected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99287,"byte_end":99339,"line_start":659,"line_end":659,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99483,"byte_end":99491,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressReceiver<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.\n","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99438,"byte_end":99471,"line_start":664,"line_end":664,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99721,"byte_end":99733,"line_start":673,"line_end":673,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressReceiver<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the channel capacity.","sig":null,"attributes":[{"value":"/ Sets the channel capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99561,"byte_end":99591,"line_start":669,"line_end":669,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99596,"byte_end":99599,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if the new capacity","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99604,"byte_end":99668,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ is greater than the current one.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99673,"byte_end":99709,"line_start":672,"line_end":672,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":100121,"byte_end":100127,"line_start":686,"line_end":686,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressReceiver<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sender side of the channel.\n","sig":null,"attributes":[{"value":"/ Returns the sender side of the channel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":100066,"byte_end":100109,"line_start":685,"line_end":685,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":101143,"byte_end":101158,"line_start":714,"line_end":714,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<AddressReceiver<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates the sender producer.\n","sig":null,"attributes":[{"value":"/ Creates the sender producer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":101099,"byte_end":101131,"line_start":713,"line_end":713,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108577,"byte_end":108587,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"ToEnvelope","qualname":"::address::envelope::ToEnvelope","value":"ToEnvelope<A, M: Message>","parent":null,"children":[{"krate":0,"index":981}],"decl_id":null,"docs":" Converter trait, packs message into a suitable envelope.\n","sig":null,"attributes":[{"value":"/ Converter trait, packs message into a suitable envelope.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108506,"byte_end":108566,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108723,"byte_end":108727,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"pack","qualname":"::address::envelope::ToEnvelope::pack","value":"pub fn pack(M, Option<Sender<M::Result>>) -> Envelope<A>","parent":{"krate":0,"index":978},"children":[],"decl_id":null,"docs":" Pack message into suitable envelope\n","sig":null,"attributes":[{"value":"/ Pack message into suitable envelope","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108676,"byte_end":108715,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":982},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108796,"byte_end":108809,"line_start":17,"line_end":17,"column_start":11,"column_end":24},"name":"EnvelopeProxy","qualname":"::address::envelope::EnvelopeProxy","value":"EnvelopeProxy<A: Actor>","parent":null,"children":[{"krate":0,"index":984}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108881,"byte_end":108887,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"handle","qualname":"::address::envelope::EnvelopeProxy::handle","value":"pub fn handle(&mut Self, &mut A, &mut A::Context)","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":" handle message within new actor and context\n","sig":null,"attributes":[{"value":"/ handle message within new actor and context","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108826,"byte_end":108873,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109211,"byte_end":109219,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"Envelope","qualname":"::address::envelope::Envelope","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109306,"byte_end":109309,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Envelope<A>>::new","value":"pub fn new<M>(M, Option<Sender<M::Result>>) -> Self where A: Handler<M>,\nA::Context: AsyncContext<A>, M: Message + Send + 'static, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109585,"byte_end":109595,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"with_proxy","qualname":"<Envelope<A>>::with_proxy","value":"pub fn with_proxy(Box<dyn EnvelopeProxy<A> + Send>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1052},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":110829,"byte_end":110836,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Request","qualname":"::address::message::Request","value":"MsgRequest<AddressSender<A>, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1055},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":110888,"byte_end":110904,"line_start":17,"line_end":17,"column_start":10,"column_end":26},"name":"RecipientRequest","qualname":"::address::message::RecipientRequest","value":"MsgRequest<Box<dyn Sender<M>>, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3291},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111141,"byte_end":111151,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"name":"MsgRequest","qualname":"::address::message::MsgRequest","value":"MsgRequest {  }","parent":null,"children":[{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296}],"decl_id":null,"docs":" A `Future` which represents an asynchronous message sending process.\n","sig":null,"attributes":[{"value":"must_use =\n  \"You have to wait on request otherwise the Message wont be delivered\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111824,"byte_end":111831,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"timeout","qualname":"<MsgRequest<S, M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111780,"byte_end":111812,"line_start":55,"line_end":55,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68084,"byte_end":68088,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Full","qualname":"::address::SendError::Full","value":"SendError::Full(T)","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1164},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68097,"byte_end":68103,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::SendError::Closed","value":"SendError::Closed(T)","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68065,"byte_end":68074,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"SendError","qualname":"::address::SendError","value":"pub enum SendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1164}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68229,"byte_end":68235,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::MailboxError::Closed","value":"MailboxError::Closed","parent":{"krate":0,"index":3354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68241,"byte_end":68248,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::address::MailboxError::Timeout","value":"MailboxError::Timeout","parent":{"krate":0,"index":3354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68210,"byte_end":68222,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"MailboxError","qualname":"::address::MailboxError","value":"pub enum MailboxError { Closed, Timeout, }","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3357}],"decl_id":null,"docs":" The errors that can occur during the message delivery process.\n","sig":null,"attributes":[{"value":"/ The errors that can occur during the message delivery process.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68134,"byte_end":68200,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68774,"byte_end":68784,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3362},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69613,"byte_end":69617,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"Addr","qualname":"::address::Addr","value":"Addr {  }","parent":null,"children":[{"krate":0,"index":3364}],"decl_id":null,"docs":" The address of an actor.\n","sig":null,"attributes":[{"value":"/ The address of an actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69556,"byte_end":69584,"line_start":75,"line_end":75,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69695,"byte_end":69698,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Addr<A>>::new","value":"pub fn new(AddressSender<A>) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69836,"byte_end":69845,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"connected","qualname":"<Addr<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the actor is still alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69765,"byte_end":69774,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"/ Returns whether the actor is still alive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69779,"byte_end":69824,"line_start":87,"line_end":87,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70154,"byte_end":70161,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Addr<A>>::do_send","value":"pub fn do_send<M>(&Self, M) where M: Message + Send, M::Result: Send,\nA: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message unconditionally, ignoring any potential errors.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69902,"byte_end":69911,"line_start":92,"line_end":92,"column_start":5,"column_end":14}},{"value":"/ Sends a message unconditionally, ignoring any potential errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69916,"byte_end":69983,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69988,"byte_end":69991,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The message is always queued, even if the mailbox for the receiver is full.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69996,"byte_end":70075,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/ If the mailbox is closed, the message is silently dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70080,"byte_end":70142,"line_start":96,"line_end":96,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70542,"byte_end":70550,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Addr<A>>::try_send","value":"pub fn try_send<M>(&Self, M) -> Result<(), SendError<M>> where M: Message +\nSend + 'static, M::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Tries to send a message.","sig":null,"attributes":[{"value":"/ Tries to send a message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70358,"byte_end":70386,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70391,"byte_end":70394,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This method fails if actor's mailbox is full or closed. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70399,"byte_end":70463,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/ method registers the current task in the receiver's queue.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70468,"byte_end":70530,"line_start":110,"line_end":110,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71023,"byte_end":71027,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"send","qualname":"<Addr<A>>::send","value":"pub fn send<M>(&Self, M) -> Request<A, M> where M: Message + Send + 'static,\nM::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Sends an asynchronous message and waits for a response.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70783,"byte_end":70792,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"/ Sends an asynchronous message and waits for a response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70797,"byte_end":70856,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70861,"byte_end":70864,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The communication channel to the actor is bounded. If the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70869,"byte_end":70930,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/ returned `Future` object gets dropped, the message is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70935,"byte_end":70992,"line_start":125,"line_end":125,"column_start":5,"column_end":62}},{"value":"/ cancelled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":70997,"byte_end":71011,"line_start":126,"line_end":126,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71535,"byte_end":71544,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"recipient","qualname":"<Addr<A>>::recipient","value":"pub fn recipient<M: 'static>(Self) -> Recipient<M> where A: Handler<M>,\nA::Context: ToEnvelope<A, M>, M: Message + Send, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Recipient` for a specific message type.\n","sig":null,"attributes":[{"value":"/ Returns the `Recipient` for a specific message type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71467,"byte_end":71523,"line_start":141,"line_end":141,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71787,"byte_end":71796,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Addr<A>>::downgrade","value":"pub fn downgrade(&Self) -> WeakAddr<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a downgraded `WeakAddr`.\n","sig":null,"attributes":[{"value":"/ Returns a downgraded `WeakAddr`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71739,"byte_end":71775,"line_start":152,"line_end":152,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72379,"byte_end":72387,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"WeakAddr","qualname":"::address::WeakAddr","value":"WeakAddr {  }","parent":null,"children":[{"krate":0,"index":3370}],"decl_id":null,"docs":" A weakly referenced counterpart to `Addr<A>`.\n","sig":null,"attributes":[{"value":"/ A weakly referenced counterpart to `Addr<A>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72301,"byte_end":72350,"line_start":182,"line_end":182,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72663,"byte_end":72670,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakAddr<A>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakAddr<A>` pointer to an `Addr<A>`.","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakAddr<A>` pointer to an `Addr<A>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72467,"byte_end":72533,"line_start":189,"line_end":189,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72538,"byte_end":72541,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the actor has since been dropped or the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72546,"byte_end":72607,"line_start":191,"line_end":191,"column_start":5,"column_end":66}},{"value":"/ underlying address is disconnected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72612,"byte_end":72651,"line_start":192,"line_end":192,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72972,"byte_end":72981,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"recipient","qualname":"<WeakAddr<A>>::recipient","value":"pub fn recipient<M: 'static>(Self) -> WeakRecipient<M> where A: Handler<M>,\nA::Context: ToEnvelope<A, M>, M: Message + Send, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1216},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73571,"byte_end":73580,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"Recipient","qualname":"::address::Recipient","value":"Recipient {  }","parent":null,"children":[{"krate":0,"index":1218}],"decl_id":null,"docs":" The `Recipient` type allows to send one specific message to an\n actor.","sig":null,"attributes":[{"value":"/ The `Recipient` type allows to send one specific message to an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73327,"byte_end":73393,"line_start":225,"line_end":225,"column_start":1,"column_end":67}},{"value":"/ actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73394,"byte_end":73404,"line_start":226,"line_end":226,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73405,"byte_end":73408,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ You can get a recipient using the `Addr::recipient()` method. It","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73409,"byte_end":73477,"line_start":228,"line_end":228,"column_start":1,"column_end":69}},{"value":"/ is possible to use the `Clone::clone()` method to get a cloned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73478,"byte_end":73544,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ recipient.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73545,"byte_end":73559,"line_start":230,"line_end":230,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74005,"byte_end":74012,"line_start":252,"line_end":252,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Recipient<M>>::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message.","sig":null,"attributes":[{"value":"/ Sends a message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73896,"byte_end":73916,"line_start":249,"line_end":249,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73921,"byte_end":73924,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Deliver the message even if the recipient's mailbox is full.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73929,"byte_end":73993,"line_start":251,"line_end":251,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74296,"byte_end":74304,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Recipient<M>>::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message.","sig":null,"attributes":[{"value":"/ Attempts to send a message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74098,"byte_end":74129,"line_start":256,"line_end":256,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74134,"byte_end":74137,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This method fails if the actor's mailbox is full or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74142,"byte_end":74197,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/ closed. This method registers the current task in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74202,"byte_end":74259,"line_start":259,"line_end":259,"column_start":5,"column_end":62}},{"value":"/ receivers queue.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74264,"byte_end":74284,"line_start":260,"line_end":260,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74618,"byte_end":74622,"line_start":270,"line_end":270,"column_start":12,"column_end":16},"name":"send","qualname":"<Recipient<M>>::send","value":"pub fn send(&Self, M) -> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message and asynchronously wait for a response.","sig":null,"attributes":[{"value":"/ Sends a message and asynchronously wait for a response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74391,"byte_end":74450,"line_start":265,"line_end":265,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74455,"byte_end":74458,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The communication channel to the actor is bounded. If the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74463,"byte_end":74524,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ returned `Request` object gets dropped, the message is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74529,"byte_end":74587,"line_start":268,"line_end":268,"column_start":5,"column_end":63}},{"value":"/ cancelled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74592,"byte_end":74606,"line_start":269,"line_end":269,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":74993,"byte_end":75002,"line_start":280,"line_end":280,"column_start":12,"column_end":21},"name":"connected","qualname":"<Recipient<M>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76210,"byte_end":76223,"line_start":346,"line_end":346,"column_start":12,"column_end":25},"name":"WeakRecipient","qualname":"::address::WeakRecipient","value":"WeakRecipient {  }","parent":null,"children":[{"krate":0,"index":1247}],"decl_id":null,"docs":" A weakly referenced counterpart to `Recipient<M>`\n","sig":null,"attributes":[{"value":"/ A weakly referenced counterpart to `Recipient<M>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76145,"byte_end":76198,"line_start":345,"line_end":345,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76865,"byte_end":76872,"line_start":374,"line_end":374,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakRecipient<M>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Recipient<M>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakRecipient<M>` pointer to an `Recipient<M>`, similar to `WeakAddr<A>`\n","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakRecipient<M>` pointer to an `Recipient<M>`, similar to `WeakAddr<A>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76752,"byte_end":76853,"line_start":373,"line_end":373,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":1304},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120271,"byte_end":120278,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Mailbox","qualname":"::mailbox::Mailbox","value":"Mailbox {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120962,"byte_end":120965,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Mailbox<A>>::new","value":"pub fn new(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120941,"byte_end":120950,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121042,"byte_end":121050,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Mailbox<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121116,"byte_end":121128,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<Mailbox<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121223,"byte_end":121232,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"connected","qualname":"<Mailbox<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121202,"byte_end":121211,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121298,"byte_end":121305,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"address","qualname":"<Mailbox<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121382,"byte_end":121397,"line_start":73,"line_end":73,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<Mailbox<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":121489,"byte_end":121493,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<Mailbox<A>>::poll","value":"pub fn poll(&mut Self, &mut A, &mut A::Context, &mut task::Context)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1322},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"actors","qualname":"::actors","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mod.rs","parent":null,"children":[{"krate":0,"index":1323}],"decl_id":null,"docs":" Helper actors\n","sig":null,"attributes":[{"value":"/ Helper actors","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mod.rs","byte_start":122314,"byte_end":122331,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1323},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocker","qualname":"::actors::mocker","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1356}],"decl_id":null,"docs":" Mocking utility actor.","sig":null,"attributes":[{"value":"/ Mocking utility actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122520,"byte_end":122546,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122547,"byte_end":122550,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This actor wraps any actor, and replaces instances of that actor with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122551,"byte_end":122624,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ mocker actor, which is able to accept all messages which the actor can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122625,"byte_end":122699,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ receive.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122700,"byte_end":122712,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122713,"byte_end":122716,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Mocking is intended to be achieved by using a pattern similar to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122717,"byte_end":122785,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ ```ignore","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122786,"byte_end":122799,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ #[cfg(not(test))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122800,"byte_end":122821,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ type DBClientAct = DBClientActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122822,"byte_end":122859,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/ #[cfg(test)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122860,"byte_end":122876,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ type DBClientAct = Mocker<DBClientActor>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122877,"byte_end":122922,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122923,"byte_end":122930,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ Then, the actor should be used as a system service (or arbiter service, but","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":122931,"byte_end":123010,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ take care that all the places which will use the mocked actor are on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123011,"byte_end":123087,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ same arbiter). Thus, in a test, it will retrieve the mocker from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123088,"byte_end":123160,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ registry instead of the actual actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123161,"byte_end":123202,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123203,"byte_end":123206,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To set the mock function in the actor, the `init_actor` function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123207,"byte_end":123275,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ is used, which allows the state of an actor to be set when it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123276,"byte_end":123344,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ started as an arbiter or system service. A closure which takes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123345,"byte_end":123411,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ `Box<Any>` is evaluated for every message, and must return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123412,"byte_end":123474,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/ `Box<Any>`, specifically the return type for the message type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123475,"byte_end":123540,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ send.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123541,"byte_end":123550,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123551,"byte_end":123554,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See the mock example to see how it can be used.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123555,"byte_end":123606,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123948,"byte_end":123954,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Mocker","qualname":"::actors::mocker::Mocker","value":"Mocker {  }","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"decl_id":null,"docs":" This actor is able to wrap another actor and accept all the messages the\n wrapped actor can, passing it to a closure which can mock the response of\n the actor.\n","sig":null,"attributes":[{"value":"/ This actor is able to wrap another actor and accept all the messages the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123733,"byte_end":123809,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ wrapped actor can, passing it to a closure which can mock the response of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123810,"byte_end":123887,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ the actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123888,"byte_end":123902,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":123903,"byte_end":123936,"line_start":38,"line_end":38,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124174,"byte_end":124178,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"mock","qualname":"<Mocker<T>>::mock","value":"pub fn mock(Box<dyn FnMut(Box<dyn Any>, &mut Context<Mocker<T>>) ->\n                Box<dyn Any>>) -> Mocker<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124129,"byte_end":124162,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::clock","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","parent":null,"children":[{"krate":0,"index":1362}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125320,"byte_end":125352,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125353,"byte_end":125356,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period of time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125357,"byte_end":125446,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125447,"byte_end":125450,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [`tokio::time` module] for full documentation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125451,"byte_end":125505,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125506,"byte_end":125509,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time` module]: https://docs.rs/tokio/1.0.1/tokio/time/index.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/clock.rs","byte_start":125510,"byte_end":125587,"line_start":7,"line_end":7,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":1363},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fut","qualname":"::fut","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1634},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089}],"decl_id":null,"docs":" Custom `Future` and `Stream` implementation with `Actix` support\n","sig":null,"attributes":[{"value":"/ Custom `Future` and `Stream` implementation with `Actix` support","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125617,"byte_end":125685,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":1364},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::fut::future","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1433},{"krate":0,"index":1467},{"krate":0,"index":1510},{"krate":0,"index":1545},{"krate":0,"index":1586},{"krate":0,"index":1590},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1610},{"krate":0,"index":1615},{"krate":0,"index":1620},{"krate":0,"index":3523},{"krate":0,"index":3528},{"krate":0,"index":1626},{"krate":0,"index":1629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3381},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":134995,"byte_end":135005,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::fut::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3384},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":135089,"byte_end":135097,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"name":"Complete","qualname":"::fut::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3378},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":134973,"byte_end":134976,"line_start":16,"line_end":16,"column_start":14,"column_end":17},"name":"Map","qualname":"::fut::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3384}],"decl_id":null,"docs":" Future for the [`map`](super::ActorFutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11966094,"byte_end":11966103,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":1467},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::fut::future::result","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505}],"decl_id":null,"docs":" Definition of the `Result` (immediately finished) combinator\n","sig":null,"attributes":[{"value":"/ Definition of the `Result` (immediately finished) combinator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136128,"byte_end":136192,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137051,"byte_end":137057,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"result","qualname":"::fut::future::result::result","value":"pub fn result<T, E>(Result<T, E>) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"leaf future\" which will resolve with the given result.","sig":null,"attributes":[{"value":"/ Creates a new \"leaf future\" which will resolve with the given result.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136448,"byte_end":136521,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136522,"byte_end":136525,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned future represents a computation which is finished immediately.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136526,"byte_end":136605,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ This can be useful with the `finished` and `failed` base future types to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136606,"byte_end":136682,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ convert an immediate value to a future to interoperate elsewhere.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136683,"byte_end":136752,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136753,"byte_end":136756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136757,"byte_end":136771,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136772,"byte_end":136775,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136776,"byte_end":136783,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136784,"byte_end":136821,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136822,"byte_end":136825,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136826,"byte_end":136845,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136846,"byte_end":136874,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136875,"byte_end":136912,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136913,"byte_end":136918,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136919,"byte_end":136922,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = fut::result::<u32, u32>(Ok(1));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136923,"byte_end":136976,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ let future_of_err_2 = fut::result::<u32, u32>(Err(2));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":136977,"byte_end":137035,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137036,"byte_end":137043,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137595,"byte_end":137597,"line_start":56,"line_end":56,"column_start":8,"column_end":10},"name":"ok","qualname":"::fut::future::result::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a finished and\n successful computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a finished and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137122,"byte_end":137191,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ successful computation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137192,"byte_end":137219,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137220,"byte_end":137223,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137224,"byte_end":137302,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137303,"byte_end":137350,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137351,"byte_end":137354,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137355,"byte_end":137369,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137370,"byte_end":137373,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137374,"byte_end":137381,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use actix::fut::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137382,"byte_end":137404,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ use actix::{Actor, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137405,"byte_end":137437,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137438,"byte_end":137441,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137442,"byte_end":137461,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137462,"byte_end":137490,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137491,"byte_end":137528,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137529,"byte_end":137534,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137535,"byte_end":137538,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = ok::<u32, u32>(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137539,"byte_end":137579,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137580,"byte_end":137587,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138099,"byte_end":138102,"line_start":77,"line_end":77,"column_start":8,"column_end":11},"name":"err","qualname":"::fut::future::result::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a failed computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a failed computation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137655,"byte_end":137731,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137732,"byte_end":137735,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137736,"byte_end":137814,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137815,"byte_end":137862,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137863,"byte_end":137866,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137867,"byte_end":137881,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137882,"byte_end":137885,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137886,"byte_end":137893,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137894,"byte_end":137931,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137932,"byte_end":137935,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137936,"byte_end":137955,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137956,"byte_end":137984,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":137985,"byte_end":138022,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138023,"byte_end":138028,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138029,"byte_end":138032,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let future_of_err_1 = fut::err::<u32, u32>(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138033,"byte_end":138083,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138084,"byte_end":138091,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":3436},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/then.rs","byte_start":138961,"byte_end":138966,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"name":"First","qualname":"::fut::future::then::Then::First","value":"Then::First { fut1, data }","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3439},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/then.rs","byte_start":139057,"byte_end":139063,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"Second","qualname":"::fut::future::then::Then::Second","value":"Then::Second { fut2 }","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3441},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/then.rs","byte_start":139124,"byte_end":139129,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"Empty","qualname":"::fut::future::then::Then::Empty","value":"Then::Empty","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3432},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/then.rs","byte_start":138937,"byte_end":138941,"line_start":18,"line_end":18,"column_start":14,"column_end":18},"name":"Then","qualname":"::fut::future::then::Then","value":"pub enum Then<A, B, F> {\n    First {\n        fut1: A,\n        data: Option<F>,\n    },\n    Second {\n        fut2: B,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3441}],"decl_id":null,"docs":" Future for the `then` combinator, chaining computations on the end of\n another future regardless of its outcome.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11966094,"byte_end":11966103,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/timeout.rs","byte_start":140890,"byte_end":140897,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::fut::future::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129653,"byte_end":129664,"line_start":116,"line_end":116,"column_start":11,"column_end":22},"name":"ActorFuture","qualname":"::fut::future::ActorFuture","value":"ActorFuture<A: Actor>","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"decl_id":null,"docs":" Trait for types which are a placeholder of a value that may become\n available at some later point in time.","sig":null,"attributes":[{"value":"/ Trait for types which are a placeholder of a value that may become","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126287,"byte_end":126357,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ available at some later point in time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126358,"byte_end":126400,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126401,"byte_end":126404,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` is very similar to a regular `Future`, only with subsequent combinator closures accepting the actor and its context, in addition to the result.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126405,"byte_end":126566,"line_start":27,"line_end":27,"column_start":1,"column_end":162}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126567,"byte_end":126570,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` allows for use cases where future processing requires access to the actor or its context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126571,"byte_end":126678,"line_start":29,"line_end":29,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126679,"byte_end":126682,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Here is an example of a handler on a single actor, deferring work to another actor, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126683,"byte_end":126774,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ then updating the initiating actor's state:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126775,"byte_end":126822,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126823,"byte_end":126826,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126827,"byte_end":126840,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126841,"byte_end":126867,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126868,"byte_end":126871,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // The response type returned by the actor future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126872,"byte_end":126925,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ type OriginalActorResponse = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126926,"byte_end":126962,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ // The error type returned by the actor future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126963,"byte_end":127013,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/ type MessageError = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127014,"byte_end":127041,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ // This is the needed result for the DeferredWork message","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127042,"byte_end":127103,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ // It's a result that combine both Response and Error from the future response.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127104,"byte_end":127187,"line_start":42,"line_end":42,"column_start":1,"column_end":84}},{"value":"/ type DeferredWorkResult = Result<OriginalActorResponse, MessageError>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127188,"byte_end":127262,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127263,"byte_end":127268,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # struct ActorState {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127269,"byte_end":127295,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127296,"byte_end":127301,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # impl ActorState {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127302,"byte_end":127325,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ #    fn update_from(&mut self, _result: ()) {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127326,"byte_end":127376,"line_start":48,"line_end":48,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127377,"byte_end":127384,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127385,"byte_end":127390,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ # struct OtherActor {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127391,"byte_end":127417,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127418,"byte_end":127423,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # impl Actor for OtherActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127424,"byte_end":127457,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ #    type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127458,"byte_end":127496,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127497,"byte_end":127504,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127505,"byte_end":127510,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ # impl Handler<OtherMessage> for OtherActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127511,"byte_end":127560,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ #    type Result = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127561,"byte_end":127587,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127588,"byte_end":127593,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ #    fn handle(&mut self, _msg: OtherMessage, _ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127594,"byte_end":127687,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ #    }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127688,"byte_end":127698,"line_start":61,"line_end":61,"column_start":1,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127699,"byte_end":127706,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127707,"byte_end":127712,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # struct OriginalActor{","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127713,"byte_end":127740,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ #     other_actor: Addr<OtherActor>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127741,"byte_end":127781,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/ #     inner_state: ActorState","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127782,"byte_end":127815,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127816,"byte_end":127823,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127824,"byte_end":127829,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # impl Actor for OriginalActor{","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127830,"byte_end":127865,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ #     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127866,"byte_end":127905,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127906,"byte_end":127913,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127914,"byte_end":127919,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127920,"byte_end":127944,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/ # #[rtype(result = \"Result<(), MessageError>\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127945,"byte_end":127996,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"/ # struct DeferredWork{}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":127997,"byte_end":128024,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128025,"byte_end":128030,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128031,"byte_end":128055,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/ # #[rtype(result = \"()\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128056,"byte_end":128085,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/ # struct OtherMessage{}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128086,"byte_end":128113,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128114,"byte_end":128117,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ impl Handler<DeferredWork> for OriginalActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128118,"byte_end":128168,"line_start":81,"line_end":81,"column_start":1,"column_end":51}},{"value":"/     // Notice the `Response` is an `ActorFuture`-ized version of `Self::Message::Result`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128169,"byte_end":128262,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"/     type Result = ResponseActFuture<Self, Result<OriginalActorResponse, MessageError>>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128263,"byte_end":128354,"line_start":83,"line_end":83,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128355,"byte_end":128358,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _msg: DeferredWork, _ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128359,"byte_end":128451,"line_start":85,"line_end":85,"column_start":1,"column_end":93}},{"value":"/         // this creates a `Future` representing the `.send` and subsequent `Result` from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128452,"byte_end":128544,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/         // `other_actor`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128545,"byte_end":128573,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/         let send_to_other = self.other_actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128574,"byte_end":128622,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/             .send(OtherMessage {});","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128623,"byte_end":128662,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128663,"byte_end":128666,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/         // Wrap that `Future` so subsequent chained handlers can access","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128667,"byte_end":128742,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/         // the `actor` (`self` in the  synchronous code) as well as the context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128743,"byte_end":128827,"line_start":92,"line_end":92,"column_start":1,"column_end":85}},{"value":"/         let send_to_other = actix::fut::wrap_future::<_, Self>(send_to_other);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128828,"byte_end":128910,"line_start":93,"line_end":93,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128911,"byte_end":128914,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/         // once the wrapped future resolves, update this actor's state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128915,"byte_end":128989,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/         let update_self = send_to_other.map(|result, actor, _ctx| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":128990,"byte_end":129061,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/             // Actor's state updated here","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129062,"byte_end":129107,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/             match result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129108,"byte_end":129138,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/                 Ok(v) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129139,"byte_end":129169,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/                     actor.inner_state.update_from(v);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129170,"byte_end":129227,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/                     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129228,"byte_end":129258,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/                 },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129259,"byte_end":129281,"line_start":102,"line_end":102,"column_start":1,"column_end":23}},{"value":"/                 // Failed to send message to other_actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129282,"byte_end":129342,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/                 Err(_e) => Err(()),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129343,"byte_end":129382,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129383,"byte_end":129400,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129401,"byte_end":129416,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129417,"byte_end":129420,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/         // return the wrapped future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129421,"byte_end":129461,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/         Box::pin(update_self)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129462,"byte_end":129495,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129496,"byte_end":129505,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129506,"byte_end":129511,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129512,"byte_end":129515,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129516,"byte_end":129523,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129524,"byte_end":129527,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ See also [into_actor](trait.WrapFuture.html#tymethod.into_actor), which provides future conversion using trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129528,"byte_end":129642,"line_start":115,"line_end":115,"column_start":1,"column_end":115}}]},{"kind":"Type","id":{"krate":0,"index":1588},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129777,"byte_end":129783,"line_start":119,"line_end":119,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::future::ActorFuture::Output","value":"type Output;","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":" The type of value that this future will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this future will resolved with if it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129681,"byte_end":129747,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"/ successful.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129752,"byte_end":129767,"line_start":118,"line_end":118,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129793,"byte_end":129797,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"poll","qualname":"::fut::future::ActorFuture::poll","value":"pub fn poll(Pin<&mut Self>, &mut A, &mut A::Context, &mut Context)\n-> Poll<Self::Output>","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129954,"byte_end":129968,"line_start":129,"line_end":129,"column_start":11,"column_end":25},"name":"ActorFutureExt","qualname":"::fut::future::ActorFutureExt","value":"ActorFutureExt<A: Actor>: ActorFuture<A>","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130112,"byte_end":130115,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::future::ActorFutureExt::map","value":"pub fn map<F, U>(Self, F) -> Map<Self, F> where\nF: FnOnce(Self::Output, &mut A, &mut A::Context) -> U, Self: Sized","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Map this future's result to a different type, returning a new future of\n the resulting type.\n","sig":null,"attributes":[{"value":"/ Map this future's result to a different type, returning a new future of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130001,"byte_end":130076,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130081,"byte_end":130104,"line_start":131,"line_end":131,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130419,"byte_end":130423,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::future::ActorFutureExt::then","value":"pub fn then<F, Fut>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output, &mut A, &mut A::Context) -> Fut, Fut: ActorFuture<A>,\nSelf: Sized","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130287,"byte_end":130363,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130368,"byte_end":130411,"line_start":141,"line_end":141,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130731,"byte_end":130738,"line_start":154,"line_end":154,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::future::ActorFutureExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Add timeout to futures chain.","sig":null,"attributes":[{"value":"/ Add timeout to futures chain.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130635,"byte_end":130668,"line_start":151,"line_end":151,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130673,"byte_end":130676,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ `Err(())` returned as a timeout error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130681,"byte_end":130723,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1602},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131013,"byte_end":131032,"line_start":170,"line_end":170,"column_start":10,"column_end":29},"name":"LocalBoxActorFuture","qualname":"::fut::future::LocalBoxActorFuture","value":"Pin<Box<dyn ActorFuture<A, Output = I>>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a pinned box ActorFuture trait object.\n","sig":null,"attributes":[{"value":"/ Type alias for a pinned box ActorFuture trait object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130946,"byte_end":131003,"line_start":169,"line_end":169,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1615},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131945,"byte_end":131955,"line_start":208,"line_end":208,"column_start":11,"column_end":21},"name":"WrapFuture","qualname":"::fut::future::WrapFuture","value":"WrapFuture<A>","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"decl_id":null,"docs":" Helper trait that allows conversion of normal future into `ActorFuture`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal future into `ActorFuture`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131859,"byte_end":131934,"line_start":207,"line_end":207,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1617},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132047,"byte_end":132053,"line_start":213,"line_end":213,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::future::WrapFuture::Future","value":"type Future: ActorFuture<A>;","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131985,"byte_end":132037,"line_start":212,"line_end":212,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132178,"byte_end":132187,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"actfuture","qualname":"::fut::future::WrapFuture::actfuture","value":"pub fn actfuture(Self) -> Self::Future","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.11.0\", note = \"Please use WrapFuture::into_actor\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132076,"byte_end":132151,"line_start":215,"line_end":215,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132266,"byte_end":132276,"line_start":220,"line_end":220,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::future::WrapFuture::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Future","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":" Convert normal future to a ActorFuture\n","sig":null,"attributes":[{"value":"/ Convert normal future to a ActorFuture","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132216,"byte_end":132258,"line_start":219,"line_end":219,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3523},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132602,"byte_end":132612,"line_start":237,"line_end":237,"column_start":16,"column_end":26},"name":"FutureWrap","qualname":"::fut::future::FutureWrap","value":"FutureWrap {  }","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3527}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1626},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132996,"byte_end":133007,"line_start":253,"line_end":253,"column_start":8,"column_end":19},"name":"wrap_future","qualname":"::fut::future::wrap_future","value":"pub fn wrap_future<F, A>(F) -> FutureWrap<F, A> where F: Future, A: Actor","parent":null,"children":[],"decl_id":null,"docs":" Converts normal future into `ActorFuture`, allowing its processing to\n use the actor's state.","sig":null,"attributes":[{"value":"/ Converts normal future into `ActorFuture`, allowing its processing to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132741,"byte_end":132814,"line_start":248,"line_end":248,"column_start":1,"column_end":74}},{"value":"/ use the actor's state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132815,"byte_end":132841,"line_start":249,"line_end":249,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132842,"byte_end":132845,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [ActorFuture](trait.ActorFuture.html) for a practical example involving both","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132846,"byte_end":132952,"line_start":251,"line_end":251,"column_start":1,"column_end":107}},{"value":"/ `wrap_future` and `ActorFuture`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132953,"byte_end":132988,"line_start":252,"line_end":252,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1634},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::fut::stream","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1728},{"krate":0,"index":1763},{"krate":0,"index":1802},{"krate":0,"index":1838},{"krate":0,"index":1877},{"krate":0,"index":1916},{"krate":0,"index":1955},{"krate":0,"index":2000},{"krate":0,"index":2004},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2033},{"krate":0,"index":4045},{"krate":0,"index":4050},{"krate":0,"index":2039},{"krate":0,"index":2042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3575},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/collect.rs","byte_start":148695,"byte_end":148702,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"Collect","qualname":"::fut::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"decl_id":null,"docs":" Future for the [`collect`](super::ActorStreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3622},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/finish.rs","byte_start":149938,"byte_end":149944,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"Finish","qualname":"::fut::stream::finish::Finish","value":"Finish {  }","parent":null,"children":[{"krate":0,"index":3624}],"decl_id":null,"docs":" Future for the [`finish`](super::ActorStreamExt::finish) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/finish.rs","byte_start":150034,"byte_end":150037,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Finish<S>>::new","value":"pub fn new(S) -> Finish<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/fold.rs","byte_start":150876,"byte_end":150880,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Fold","qualname":"::fut::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672}],"decl_id":null,"docs":" Stream for the [`fold`](super::ActorStreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3735},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/map.rs","byte_start":152948,"byte_end":152951,"line_start":14,"line_end":14,"column_start":16,"column_end":19},"name":"Map","qualname":"::fut::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3738},{"krate":0,"index":3739}],"decl_id":null,"docs":" Stream for the [`map`](super::ActorStreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/skip_while.rs","byte_start":154074,"byte_end":154083,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::fut::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::ActorStreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/take_while.rs","byte_start":156230,"byte_end":156239,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::fut::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876}],"decl_id":null,"docs":" Stream for the [`take_while`](super::ActorStreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3944},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/then.rs","byte_start":158398,"byte_end":158402,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::fut::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950}],"decl_id":null,"docs":" Stream for the [`then`](super::ActorStreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4002},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/timeout.rs","byte_start":160082,"byte_end":160089,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::fut::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":" Stream for the [`timeout`](super::ActorStreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142361,"byte_end":142372,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"ActorStream","qualname":"::fut::stream::ActorStream","value":"ActorStream<A: Actor>","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003}],"decl_id":null,"docs":" A stream of values, not all of which may have been produced yet.","sig":null,"attributes":[{"value":"/ A stream of values, not all of which may have been produced yet.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142188,"byte_end":142256,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142257,"byte_end":142260,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This is similar to `futures_util::stream::Stream` trait, except it works with `Actor`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142261,"byte_end":142350,"line_start":35,"line_end":35,"column_start":1,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":2002},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142454,"byte_end":142458,"line_start":38,"line_end":38,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::stream::ActorStream::Item","value":"type Item;","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The type of item this stream will yield on success.\n","sig":null,"attributes":[{"value":"/ The type of item this stream will yield on success.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142389,"byte_end":142444,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142468,"byte_end":142477,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::fut::stream::ActorStream::poll_next","value":"pub fn poll_next(Pin<&mut Self>, &mut A, &mut A::Context, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142640,"byte_end":142654,"line_start":48,"line_end":48,"column_start":11,"column_end":25},"name":"ActorStreamExt","qualname":"::fut::stream::ActorStreamExt","value":"ActorStreamExt<A: Actor>: ActorStream<A>","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2024}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143190,"byte_end":143193,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::stream::ActorStreamExt::map","value":"pub fn map<F, U>(Self, F) -> Map<Self, F> where\nF: FnMut(Self::Item, &mut A, &mut A::Context) -> U, Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142687,"byte_end":142762,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142767,"byte_end":142790,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142795,"byte_end":142798,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142803,"byte_end":142875,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142880,"byte_end":142944,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](ActorStream::poll_next).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142949,"byte_end":142991,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142996,"byte_end":142999,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143004,"byte_end":143080,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143085,"byte_end":143156,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143161,"byte_end":143182,"line_start":58,"line_end":58,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143805,"byte_end":143809,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::stream::ActorStreamExt::then","value":"pub fn then<F, Fut>(Self, F) -> Then<Self, F, Fut> where\nF: FnMut(Self::Item, &mut A, &mut A::Context) -> Fut, Fut: ActorFuture<A>,\nSelf: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143362,"byte_end":143435,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143440,"byte_end":143468,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143473,"byte_end":143476,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143481,"byte_end":143555,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143560,"byte_end":143627,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143632,"byte_end":143677,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143682,"byte_end":143685,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143690,"byte_end":143766,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":143771,"byte_end":143797,"line_start":75,"line_end":75,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144501,"byte_end":144505,"line_start":93,"line_end":93,"column_start":8,"column_end":12},"name":"fold","qualname":"::fut::stream::ActorStreamExt::fold","value":"pub fn fold<F, Fut>(Self, Fut::Output, F) -> Fold<Self, F, Fut, Fut::Output>\nwhere F: FnMut(Fut::Output, Self::Item, &mut A, &mut A::Context) -> Fut,\nFut: ActorFuture<A>, Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144018,"byte_end":144085,"line_start":85,"line_end":85,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144090,"byte_end":144142,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144147,"byte_end":144150,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144155,"byte_end":144225,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144230,"byte_end":144306,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144311,"byte_end":144387,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144392,"byte_end":144462,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144467,"byte_end":144493,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145114,"byte_end":145124,"line_start":108,"line_end":108,"column_start":8,"column_end":18},"name":"take_while","qualname":"::fut::stream::ActorStreamExt::take_while","value":"pub fn take_while<F, Fut>(Self, F) -> TakeWhile<Self, Self::Item, F, Fut>\nwhere F: FnMut(&Self::Item, &mut A, &mut A::Context) -> Fut,\nFut: ActorFuture<A, Output = bool>, Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144765,"byte_end":144841,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144846,"byte_end":144869,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144874,"byte_end":144877,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144882,"byte_end":144957,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":144962,"byte_end":145034,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145039,"byte_end":145106,"line_start":107,"line_end":107,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145743,"byte_end":145753,"line_start":124,"line_end":124,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::fut::stream::ActorStreamExt::skip_while","value":"pub fn skip_while<F, Fut>(Self, F) -> SkipWhile<Self, Self::Item, F, Fut>\nwhere F: FnMut(&Self::Item, &mut A, &mut A::Context) -> Fut,\nFut: ActorFuture<A, Output = bool>, Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145372,"byte_end":145446,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145451,"byte_end":145474,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145479,"byte_end":145482,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145487,"byte_end":145560,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145565,"byte_end":145637,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145642,"byte_end":145719,"line_start":122,"line_end":122,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":145724,"byte_end":145735,"line_start":123,"line_end":123,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146090,"byte_end":146097,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::stream::ActorStreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Add timeout to stream.","sig":null,"attributes":[{"value":"/ Add timeout to stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146001,"byte_end":146027,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146032,"byte_end":146035,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ `Err(())` returned as a timeout error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146040,"byte_end":146082,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146427,"byte_end":146434,"line_start":147,"line_end":147,"column_start":8,"column_end":15},"name":"collect","qualname":"::fut::stream::ActorStreamExt::collect","value":"pub fn collect<C>(Self) -> Collect<Self, C> where C: Default +\nExtend<Self::Item>, Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146224,"byte_end":146278,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146283,"byte_end":146338,"line_start":144,"line_end":144,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146343,"byte_end":146346,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146351,"byte_end":146419,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146659,"byte_end":146665,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::stream::ActorStreamExt::finish","value":"pub fn finish(Self) -> Finish<Self> where Self: Sized","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Transforms a stream to a future that resolves when stream finishes.\n","sig":null,"attributes":[{"value":"/ Transforms a stream to a future that resolves when stream finishes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146580,"byte_end":146651,"line_start":155,"line_end":155,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":2028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146929,"byte_end":146939,"line_start":172,"line_end":172,"column_start":11,"column_end":21},"name":"WrapStream","qualname":"::fut::stream::WrapStream","value":"WrapStream<A>","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"decl_id":null,"docs":" Helper trait that allows conversion of normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal stream into `ActorStream`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146843,"byte_end":146918,"line_start":171,"line_end":171,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":2030},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147031,"byte_end":147037,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"Stream","qualname":"::fut::stream::WrapStream::Stream","value":"type Stream: ActorStream<A>;","parent":{"krate":0,"index":2028},"children":[],"decl_id":null,"docs":" The stream that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The stream that this type can be converted into.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146969,"byte_end":147021,"line_start":176,"line_end":176,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147162,"byte_end":147171,"line_start":181,"line_end":181,"column_start":8,"column_end":17},"name":"actstream","qualname":"::fut::stream::WrapStream::actstream","value":"pub fn actstream(Self) -> Self::Stream","parent":{"krate":0,"index":2028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.11.0\", note = \"Please use WrapStream::into_actor\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147060,"byte_end":147135,"line_start":179,"line_end":179,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147250,"byte_end":147260,"line_start":184,"line_end":184,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::stream::WrapStream::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Stream","parent":{"krate":0,"index":2028},"children":[],"decl_id":null,"docs":" Convert normal stream to a ActorStream\n","sig":null,"attributes":[{"value":"/ Convert normal stream to a ActorStream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147200,"byte_end":147242,"line_start":183,"line_end":183,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4045},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147606,"byte_end":147616,"line_start":205,"line_end":205,"column_start":16,"column_end":26},"name":"StreamWrap","qualname":"::fut::stream::StreamWrap","value":"StreamWrap {  }","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2039},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147800,"byte_end":147811,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"wrap_stream","qualname":"::fut::stream::wrap_stream","value":"pub fn wrap_stream<S, A>(S) -> StreamWrap<S, A> where S: Stream, A: Actor","parent":null,"children":[],"decl_id":null,"docs":" Converts normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Converts normal stream into `ActorStream`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147747,"byte_end":147792,"line_start":216,"line_end":216,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2092},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":4090},{"krate":0,"index":4108},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4099},{"krate":0,"index":4097},{"krate":0,"index":4095},{"krate":0,"index":4092},{"krate":0,"index":4109},{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4121},{"krate":0,"index":4123},{"krate":0,"index":4131},{"krate":0,"index":4134},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4146},{"krate":0,"index":4149},{"krate":0,"index":4151},{"krate":0,"index":4154},{"krate":0,"index":4157},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2173},{"krate":0,"index":2179},{"krate":0,"index":2183},{"krate":0,"index":2192},{"krate":0,"index":2203},{"krate":0,"index":2207},{"krate":0,"index":2213},{"krate":0,"index":2217},{"krate":0,"index":2223},{"krate":0,"index":2229},{"krate":0,"index":2245},{"krate":0,"index":2250},{"krate":0,"index":2254},{"krate":0,"index":2265},{"krate":0,"index":2274},{"krate":0,"index":2278}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162158,"byte_end":162170,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"WriteHandler","qualname":"::io::WriteHandler","value":"WriteHandler<E>","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166}],"decl_id":null,"docs":" A helper trait for write handling.","sig":null,"attributes":[{"value":"/ A helper trait for write handling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":161938,"byte_end":161976,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":161977,"byte_end":161980,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `WriteHandler` is a helper for `AsyncWrite` types. Implementation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":161981,"byte_end":162050,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ of this trait is required for `Writer` and `FramedWrite` support.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162051,"byte_end":162120,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162121,"byte_end":162147,"line_start":22,"line_end":22,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162417,"byte_end":162422,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"error","qualname":"::io::WriteHandler::error","value":"pub fn error(&mut Self, E, &mut Self::Context) -> Running","parent":{"krate":0,"index":2163},"children":[],"decl_id":null,"docs":" Called when the writer emits error.","sig":null,"attributes":[{"value":"/ Called when the writer emits error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162236,"byte_end":162275,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162280,"byte_end":162283,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If this method returns `ErrorAction::Continue` writer processing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162288,"byte_end":162356,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ continues otherwise stream processing stops.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162361,"byte_end":162409,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162621,"byte_end":162629,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"finished","qualname":"::io::WriteHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":2163},"children":[],"decl_id":null,"docs":" Called when the writer finishes.","sig":null,"attributes":[{"value":"/ Called when the writer finishes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162513,"byte_end":162549,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162554,"byte_end":162557,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor's `Context`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162562,"byte_end":162613,"line_start":38,"line_end":38,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2169},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162951,"byte_end":162957,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"Writer","qualname":"::io::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":2172}],"decl_id":null,"docs":" A wrapper for `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ A wrapper for `AsyncWrite` types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":162902,"byte_end":162939,"line_start":54,"line_end":54,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":163576,"byte_end":163579,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<T, E>>::new","value":"pub fn new<A, C>(T, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<E>, C: AsyncContext<A>, T: Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164433,"byte_end":164438,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"close","qualname":"<Writer<T, E>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164338,"byte_end":164369,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164374,"byte_end":164377,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164382,"byte_end":164421,"line_start":110,"line_end":110,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164572,"byte_end":164578,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"closed","qualname":"<Writer<T, E>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164527,"byte_end":164560,"line_start":115,"line_end":115,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164714,"byte_end":164733,"line_start":121,"line_end":121,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<Writer<T, E>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the write buffer capacity.\n","sig":null,"attributes":[{"value":"/ Sets the write buffer capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164667,"byte_end":164702,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164968,"byte_end":164973,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<T, E>>::write","value":"pub fn write(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the sink.\n","sig":null,"attributes":[{"value":"/ Sends an item to the sink.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":164926,"byte_end":164956,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":165254,"byte_end":165260,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"handle","qualname":"<Writer<T, E>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":165196,"byte_end":165242,"line_start":136,"line_end":136,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2223},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":170481,"byte_end":170492,"line_start":303,"line_end":303,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::io::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228}],"decl_id":null,"docs":" A wrapper for the `AsyncWrite` and `Encoder` types. The AsyncWrite will be flushed when this\n struct is dropped.\n","sig":null,"attributes":[{"value":"/ A wrapper for the `AsyncWrite` and `Encoder` types. The AsyncWrite will be flushed when this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":170350,"byte_end":170446,"line_start":301,"line_end":301,"column_start":1,"column_end":97}},{"value":"/ struct is dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":170447,"byte_end":170469,"line_start":302,"line_end":302,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":170669,"byte_end":170672,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<I, T, U>>::new","value":"pub fn new<A, C>(T, U, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<U::Error>, C: AsyncContext<A>, U::Error: 'static, T: Unpin +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":171485,"byte_end":171496,"line_start":337,"line_end":337,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<FramedWrite<I, T, U>>::from_buffer","value":"pub fn from_buffer<A, C>(T, U, BytesMut, &mut C) -> Self where\nA: Actor<Context = C> + WriteHandler<U::Error>, C: AsyncContext<A>,\nU::Error: 'static, T: Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172398,"byte_end":172403,"line_start":368,"line_end":368,"column_start":12,"column_end":17},"name":"close","qualname":"<FramedWrite<I, T, U>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172303,"byte_end":172334,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172339,"byte_end":172342,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172347,"byte_end":172386,"line_start":367,"line_end":367,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172537,"byte_end":172543,"line_start":373,"line_end":373,"column_start":12,"column_end":18},"name":"closed","qualname":"<FramedWrite<I, T, U>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172492,"byte_end":172525,"line_start":372,"line_end":372,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172679,"byte_end":172698,"line_start":378,"line_end":378,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<FramedWrite<I, T, U>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the write buffer capacity.\n","sig":null,"attributes":[{"value":"/ Sets the write buffer capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172632,"byte_end":172667,"line_start":377,"line_end":377,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172894,"byte_end":172899,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"write","qualname":"<FramedWrite<I, T, U>>::write","value":"pub fn write(&mut Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Writes an item to the sink.\n","sig":null,"attributes":[{"value":"/ Writes an item to the sink.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":172851,"byte_end":172882,"line_start":384,"line_end":384,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":173250,"byte_end":173256,"line_start":396,"line_end":396,"column_start":12,"column_end":18},"name":"handle","qualname":"<FramedWrite<I, T, U>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":173192,"byte_end":173238,"line_start":395,"line_end":395,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2250},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":173908,"byte_end":173917,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"SinkWrite","qualname":"::io::SinkWrite","value":"SinkWrite {  }","parent":null,"children":[{"krate":0,"index":2253}],"decl_id":null,"docs":" A wrapper for the `Sink` type.\n","sig":null,"attributes":[{"value":"/ A wrapper for the `Sink` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":173862,"byte_end":173896,"line_start":414,"line_end":414,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174068,"byte_end":174071,"line_start":420,"line_end":420,"column_start":12,"column_end":15},"name":"new","qualname":"<SinkWrite<I, S>>::new","value":"pub fn new<A, C>(S, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<S::Error>, C: AsyncContext<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174775,"byte_end":174780,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"write","qualname":"<SinkWrite<I, S>>::write","value":"pub fn write(&mut Self, I) -> Option<I>","parent":null,"children":[],"decl_id":null,"docs":" Queues an item to be sent to the sink.","sig":null,"attributes":[{"value":"/ Queues an item to be sent to the sink.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174655,"byte_end":174697,"line_start":442,"line_end":442,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174702,"byte_end":174705,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Returns unsent item if sink is closing or closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174710,"byte_end":174763,"line_start":444,"line_end":444,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175138,"byte_end":175143,"line_start":458,"line_end":458,"column_start":12,"column_end":17},"name":"close","qualname":"<SinkWrite<I, S>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175043,"byte_end":175074,"line_start":455,"line_end":455,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175079,"byte_end":175082,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175087,"byte_end":175126,"line_start":457,"line_end":457,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175310,"byte_end":175316,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"closed","qualname":"<SinkWrite<I, S>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175265,"byte_end":175298,"line_start":463,"line_end":463,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175604,"byte_end":175610,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"handle","qualname":"<SinkWrite<I, S>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":175546,"byte_end":175592,"line_start":474,"line_end":474,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":2284},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registry","qualname":"::registry","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":4177},{"krate":0,"index":4179},{"krate":0,"index":4181},{"krate":0,"index":2334},{"krate":0,"index":2340},{"krate":0,"index":4185},{"krate":0,"index":4188},{"krate":0,"index":2348},{"krate":0,"index":2350},{"krate":0,"index":2356}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178285,"byte_end":178304,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178305,"byte_end":178308,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178309,"byte_end":178386,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178387,"byte_end":178465,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178466,"byte_end":178491,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180434,"byte_end":180442,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":4178}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178888,"byte_end":178907,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178908,"byte_end":178911,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178912,"byte_end":178989,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":178990,"byte_end":179068,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179069,"byte_end":179094,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179095,"byte_end":179098,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If an arbiter service is used outside of a running arbiter, it panics.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179099,"byte_end":179173,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179174,"byte_end":179177,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179178,"byte_end":179192,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179193,"byte_end":179196,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179197,"byte_end":179204,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179205,"byte_end":179231,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179232,"byte_end":179235,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179236,"byte_end":179258,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179259,"byte_end":179286,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179287,"byte_end":179303,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179304,"byte_end":179307,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179308,"byte_end":179330,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179331,"byte_end":179351,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179352,"byte_end":179355,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179356,"byte_end":179385,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179386,"byte_end":179423,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179424,"byte_end":179429,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179430,"byte_end":179472,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179473,"byte_end":179476,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ impl ArbiterService for MyActor1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179477,"byte_end":179515,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/    fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179516,"byte_end":179579,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/       println!(\"Service started\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179580,"byte_end":179618,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/    }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179619,"byte_end":179627,"line_start":51,"line_end":51,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179628,"byte_end":179633,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179634,"byte_end":179637,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179638,"byte_end":179675,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/    type Result = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179676,"byte_end":179700,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179701,"byte_end":179704,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/    fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179705,"byte_end":179768,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/       println!(\"ping\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179769,"byte_end":179796,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/ #     System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179797,"byte_end":179832,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/    }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179833,"byte_end":179841,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179842,"byte_end":179847,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179848,"byte_end":179851,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179852,"byte_end":179872,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179873,"byte_end":179876,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179877,"byte_end":179906,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179907,"byte_end":179943,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179944,"byte_end":179947,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":179948,"byte_end":180001,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/       // get MyActor1 address from the registry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180002,"byte_end":180053,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/       let act = MyActor1::from_registry();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180054,"byte_end":180100,"line_start":70,"line_end":70,"column_start":1,"column_end":47}},{"value":"/       act.do_send(Ping);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180101,"byte_end":180129,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/    }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180130,"byte_end":180138,"line_start":72,"line_end":72,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180139,"byte_end":180144,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180145,"byte_end":180148,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180149,"byte_end":180164,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180165,"byte_end":180193,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/     let code = System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180194,"byte_end":180243,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/         // Start MyActor2 in new Arbiter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180244,"byte_end":180288,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/         Arbiter::new().spawn_fn(|| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180289,"byte_end":180329,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/             MyActor2.start();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180330,"byte_end":180363,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/         });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180364,"byte_end":180379,"line_start":81,"line_end":81,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180380,"byte_end":180391,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180392,"byte_end":180397,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180398,"byte_end":180405,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180701,"byte_end":180715,"line_start":100,"line_end":100,"column_start":11,"column_end":25},"name":"ArbiterService","qualname":"::registry::ArbiterService","value":"ArbiterService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2338}],"decl_id":null,"docs":" Trait defines arbiter's service.\n","sig":null,"attributes":[{"value":"/ Trait defines arbiter's service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180627,"byte_end":180663,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180664,"byte_end":180690,"line_start":99,"line_end":99,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180824,"byte_end":180837,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::ArbiterService::start_service","value":"pub fn start_service() -> Addr<Self>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Construct and start arbiter service\n","sig":null,"attributes":[{"value":"/ Construct and start arbiter service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180777,"byte_end":180816,"line_start":101,"line_end":101,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181068,"byte_end":181083,"line_start":111,"line_end":111,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::ArbiterService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181009,"byte_end":181060,"line_start":110,"line_end":110,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181181,"byte_end":181194,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::ArbiterService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Get actor's address from arbiter registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from arbiter registry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181128,"byte_end":181173,"line_start":113,"line_end":113,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181461,"byte_end":181464,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"get","qualname":"<Registry>::get","value":"pub fn get<A: ArbiterService + Actor<Context = Context<A>>>(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Query registry for specific actor. Returns address of the actor.\n If actor is not registered, starts new actor and\n return address of newly created actor.\n","sig":null,"attributes":[{"value":"/ Query registry for specific actor. Returns address of the actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181277,"byte_end":181345,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ If actor is not registered, starts new actor and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181350,"byte_end":181402,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/ return address of newly created actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181407,"byte_end":181449,"line_start":122,"line_end":122,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182000,"byte_end":182005,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"query","qualname":"<Registry>::query","value":"pub fn query<A: ArbiterService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181928,"byte_end":181988,"line_start":138,"line_end":138,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182428,"byte_end":182431,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"set","qualname":"<Registry>::set","value":"pub fn set<A: ArbiterService + Actor<Context = Context<A>>>(Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182337,"byte_end":182416,"line_start":149,"line_end":149,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184181,"byte_end":184195,"line_start":221,"line_end":221,"column_start":12,"column_end":26},"name":"SystemRegistry","qualname":"::registry::SystemRegistry","value":"SystemRegistry {  }","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4187}],"decl_id":null,"docs":" System wide actors registry","sig":null,"attributes":[{"value":"/ System wide actors registry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182863,"byte_end":182894,"line_start":164,"line_end":164,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182895,"byte_end":182898,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ System registry serves same purpose as [Registry](struct.Registry.html),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182899,"byte_end":182975,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ except it is shared across all arbiters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":182976,"byte_end":183020,"line_start":167,"line_end":167,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183021,"byte_end":183024,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183025,"byte_end":183039,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183040,"byte_end":183043,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183044,"byte_end":183051,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183052,"byte_end":183078,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183079,"byte_end":183082,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183083,"byte_end":183105,"line_start":174,"line_end":174,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183106,"byte_end":183133,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183134,"byte_end":183150,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183151,"byte_end":183154,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183155,"byte_end":183177,"line_start":178,"line_end":178,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183178,"byte_end":183198,"line_start":179,"line_end":179,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183199,"byte_end":183202,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183203,"byte_end":183232,"line_start":181,"line_end":181,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183233,"byte_end":183270,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183271,"byte_end":183276,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183277,"byte_end":183319,"line_start":184,"line_end":184,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183320,"byte_end":183323,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ impl SystemService for MyActor1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183324,"byte_end":183361,"line_start":186,"line_end":186,"column_start":1,"column_end":38}},{"value":"/     fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183362,"byte_end":183426,"line_start":187,"line_end":187,"column_start":1,"column_end":65}},{"value":"/         println!(\"Service started\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183427,"byte_end":183467,"line_start":188,"line_end":188,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183468,"byte_end":183477,"line_start":189,"line_end":189,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183478,"byte_end":183483,"line_start":190,"line_end":190,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183484,"byte_end":183487,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183488,"byte_end":183525,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/     type Result = ();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183526,"byte_end":183551,"line_start":193,"line_end":193,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183552,"byte_end":183555,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183556,"byte_end":183620,"line_start":195,"line_end":195,"column_start":1,"column_end":65}},{"value":"/         println!(\"ping\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183621,"byte_end":183650,"line_start":196,"line_end":196,"column_start":1,"column_end":30}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183651,"byte_end":183688,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183689,"byte_end":183698,"line_start":198,"line_end":198,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183699,"byte_end":183704,"line_start":199,"line_end":199,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183705,"byte_end":183708,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183709,"byte_end":183729,"line_start":201,"line_end":201,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183730,"byte_end":183733,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183734,"byte_end":183763,"line_start":203,"line_end":203,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183764,"byte_end":183801,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183802,"byte_end":183805,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/     fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183806,"byte_end":183860,"line_start":206,"line_end":206,"column_start":1,"column_end":55}},{"value":"/         let act = MyActor1::from_registry();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183861,"byte_end":183909,"line_start":207,"line_end":207,"column_start":1,"column_end":49}},{"value":"/         act.do_send(Ping);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183910,"byte_end":183940,"line_start":208,"line_end":208,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183941,"byte_end":183950,"line_start":209,"line_end":209,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183951,"byte_end":183956,"line_start":210,"line_end":210,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183957,"byte_end":183960,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183961,"byte_end":183976,"line_start":212,"line_end":212,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":183977,"byte_end":184005,"line_start":213,"line_end":213,"column_start":1,"column_end":29}},{"value":"/     let code = System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184006,"byte_end":184055,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/         // Start MyActor2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184056,"byte_end":184085,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/         let addr = MyActor2.start();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184086,"byte_end":184126,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184127,"byte_end":184138,"line_start":217,"line_end":217,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184139,"byte_end":184144,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184145,"byte_end":184152,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184459,"byte_end":184472,"line_start":231,"line_end":231,"column_start":11,"column_end":24},"name":"SystemService","qualname":"::registry::SystemService","value":"SystemService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2353},{"krate":0,"index":2354}],"decl_id":null,"docs":" Trait defines system's service.\n","sig":null,"attributes":[{"value":"/ Trait defines system's service.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184386,"byte_end":184421,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"allow(unused_variables)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184422,"byte_end":184448,"line_start":230,"line_end":230,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184580,"byte_end":184593,"line_start":233,"line_end":233,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::SystemService::start_service","value":"pub fn start_service(&ArbiterHandle) -> Addr<Self>","parent":{"krate":0,"index":2350},"children":[],"decl_id":null,"docs":" Construct and start system service\n","sig":null,"attributes":[{"value":"/ Construct and start system service","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184534,"byte_end":184572,"line_start":232,"line_end":232,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184859,"byte_end":184874,"line_start":242,"line_end":242,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::SystemService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":2350},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184800,"byte_end":184851,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184971,"byte_end":184984,"line_start":245,"line_end":245,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::SystemService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":2350},"children":[],"decl_id":null,"docs":" Get actor's address from system registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from system registry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184919,"byte_end":184963,"line_start":244,"line_end":244,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":185876,"byte_end":185879,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"get","qualname":"<SystemRegistry>::get","value":"pub fn get<A: SystemService + Actor<Context = Context<A>>>(&mut Self)\n-> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Return address of the service. If service actor is not running\n it get started in the system.\n","sig":null,"attributes":[{"value":"/ Return address of the service. If service actor is not running","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":185760,"byte_end":185826,"line_start":274,"line_end":274,"column_start":5,"column_end":71}},{"value":"/ it get started in the system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":185831,"byte_end":185864,"line_start":275,"line_end":275,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":186445,"byte_end":186450,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"query","qualname":"<SystemRegistry>::query","value":"pub fn query<A: SystemService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":186373,"byte_end":186433,"line_start":290,"line_end":290,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":186880,"byte_end":186883,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"set","qualname":"<SystemRegistry>::set","value":"pub fn set<A: SystemService + Actor<Context = Context<A>>>(Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":186789,"byte_end":186868,"line_start":302,"line_end":302,"column_start":5,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":2365},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2382},{"krate":0,"index":2385},{"krate":0,"index":2388},{"krate":0,"index":2391},{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2410},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2452},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2464},{"krate":0,"index":2468},{"krate":0,"index":2476},{"krate":0,"index":2481},{"krate":0,"index":2486},{"krate":0,"index":2490},{"krate":0,"index":2493}],"decl_id":null,"docs":" Sync Actors support","sig":null,"attributes":[{"value":"/ Sync Actors support","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187424,"byte_end":187447,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187448,"byte_end":187451,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Sync Actors are actors that run multiple instances on a thread pool.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187452,"byte_end":187524,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ This is useful for CPU bound, or concurrent workloads. There can only be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187525,"byte_end":187601,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ a single Sync Actor type on a `SyncArbiter`. This means you can't have","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187602,"byte_end":187676,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Actor type A and B, sharing the same thread pool. You need to create two","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187677,"byte_end":187753,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ SyncArbiters and have A and B spawn on unique `SyncArbiter`s respectively.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187754,"byte_end":187832,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ For more information and examples, see `SyncArbiter`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":187833,"byte_end":187889,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2448},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190570,"byte_end":190581,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"SyncArbiter","qualname":"::sync::SyncArbiter","value":"SyncArbiter {  }","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451}],"decl_id":null,"docs":" SyncArbiter provides the resources for a single Sync Actor to run on a dedicated\n thread or threads. This is generally used for CPU bound concurrent workloads. It's\n important to note, that the SyncArbiter generates a single address for the pool\n of hosted Sync Actors. Any message sent to this Address, will be operated on by\n a single Sync Actor from the pool.","sig":null,"attributes":[{"value":"/ SyncArbiter provides the resources for a single Sync Actor to run on a dedicated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188448,"byte_end":188532,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ thread or threads. This is generally used for CPU bound concurrent workloads. It's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188533,"byte_end":188619,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ important to note, that the SyncArbiter generates a single address for the pool","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188620,"byte_end":188703,"line_start":31,"line_end":31,"column_start":1,"column_end":84}},{"value":"/ of hosted Sync Actors. Any message sent to this Address, will be operated on by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188704,"byte_end":188787,"line_start":32,"line_end":32,"column_start":1,"column_end":84}},{"value":"/ a single Sync Actor from the pool.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188788,"byte_end":188826,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188827,"byte_end":188830,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Sync Actors have a different lifecycle compared to Actors on the System","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188831,"byte_end":188906,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ Arbiter. For more, see `SyncContext`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188907,"byte_end":188948,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188949,"byte_end":188952,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188953,"byte_end":188967,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188968,"byte_end":188971,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188972,"byte_end":188979,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":188980,"byte_end":189006,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189007,"byte_end":189010,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ struct Fibonacci(pub u32);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189011,"byte_end":189041,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189042,"byte_end":189045,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # impl Message for Fibonacci {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189046,"byte_end":189080,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/ #     type Result = Result<u64, ()>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189081,"byte_end":189121,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189122,"byte_end":189129,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189130,"byte_end":189133,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ struct SyncActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189134,"byte_end":189155,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189156,"byte_end":189159,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ impl Actor for SyncActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189160,"byte_end":189190,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/     // It's important to note that you use \"SyncContext\" here instead of \"Context\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189191,"byte_end":189278,"line_start":52,"line_end":52,"column_start":1,"column_end":88}},{"value":"/     type Context = SyncContext<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189279,"byte_end":189320,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189321,"byte_end":189326,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189327,"byte_end":189330,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Fibonacci> for SyncActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189331,"byte_end":189374,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/     type Result = Result<u64, ()>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189375,"byte_end":189413,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189414,"byte_end":189417,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, msg: Fibonacci, _: &mut Self::Context) -> Self::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189418,"byte_end":189503,"line_start":59,"line_end":59,"column_start":1,"column_end":86}},{"value":"/         if msg.0 == 0 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189504,"byte_end":189531,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/             Err(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189532,"byte_end":189555,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/         } else if msg.0 == 1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189556,"byte_end":189590,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/             Ok(1)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189591,"byte_end":189612,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/         } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189613,"byte_end":189633,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/             let mut i = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189634,"byte_end":189664,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/             let mut sum = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189665,"byte_end":189697,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/             let mut last = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189698,"byte_end":189731,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/             let mut curr = 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189732,"byte_end":189765,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/             while i < msg.0 - 1 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189766,"byte_end":189803,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/                 sum = last + curr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189804,"byte_end":189842,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/                 last = curr;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189843,"byte_end":189875,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/                 curr = sum;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189876,"byte_end":189907,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/                 i += 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189908,"byte_end":189935,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189936,"byte_end":189953,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/             Ok(sum)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189954,"byte_end":189977,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189978,"byte_end":189991,"line_start":76,"line_end":76,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":189992,"byte_end":190001,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190002,"byte_end":190007,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190008,"byte_end":190011,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190012,"byte_end":190027,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     System::new().block_on(async {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190028,"byte_end":190066,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/         // Start the SyncArbiter with 2 threads, and receive the address of the Actor pool.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190067,"byte_end":190162,"line_start":82,"line_end":82,"column_start":1,"column_end":96}},{"value":"/         let addr = SyncArbiter::start(2, || SyncActor);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190163,"byte_end":190222,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190223,"byte_end":190226,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/         // send 5 messages","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190227,"byte_end":190257,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/         for n in 5..10 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190258,"byte_end":190286,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/             // As there are 2 threads, there are at least 2 messages always being processed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190287,"byte_end":190382,"line_start":87,"line_end":87,"column_start":1,"column_end":96}},{"value":"/             // concurrently by the SyncActor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190383,"byte_end":190432,"line_start":88,"line_end":88,"column_start":1,"column_end":50}},{"value":"/             addr.do_send(Fibonacci(n));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190433,"byte_end":190476,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190477,"byte_end":190490,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190491,"byte_end":190494,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ #       System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190495,"byte_end":190532,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190533,"byte_end":190544,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190545,"byte_end":190550,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190551,"byte_end":190558,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":191078,"byte_end":191083,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"start","qualname":"<SyncArbiter<A>>::start","value":"pub fn start<F>(usize, F) -> Addr<A> where F: Fn() -> A + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Start a new `SyncArbiter` with specified number of worker threads.\n Returns a single address of the started actor. A single address is\n used to communicate to the actor(s), and messages are handled by\n the next available Actor in the `SyncArbiter`.\n","sig":null,"attributes":[{"value":"/ Start a new `SyncArbiter` with specified number of worker threads.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190793,"byte_end":190863,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ Returns a single address of the started actor. A single address is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190868,"byte_end":190938,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ used to communicate to the actor(s), and messages are handled by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190943,"byte_end":191011,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ the next available Actor in the `SyncArbiter`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":191016,"byte_end":191066,"line_start":111,"line_end":111,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193995,"byte_end":194006,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"SyncContext","qualname":"::sync::SyncContext","value":"SyncContext {  }","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"decl_id":null,"docs":" Sync actor execution context. This is used instead of impl Actor for your Actor\n instead of Context, if you intend this actor to run in a SyncArbiter.","sig":null,"attributes":[{"value":"/ Sync actor execution context. This is used instead of impl Actor for your Actor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193136,"byte_end":193219,"line_start":191,"line_end":191,"column_start":1,"column_end":84}},{"value":"/ instead of Context, if you intend this actor to run in a SyncArbiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193220,"byte_end":193293,"line_start":192,"line_end":192,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193294,"byte_end":193297,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Unlike Context, an Actor that uses a SyncContext can not be stopped","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193298,"byte_end":193369,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/ by calling `stop` or `terminate`: Instead, these trigger a restart of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193370,"byte_end":193443,"line_start":195,"line_end":195,"column_start":1,"column_end":74}},{"value":"/ the Actor. Similar, returning `false` from `fn stopping` can not prevent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193444,"byte_end":193520,"line_start":196,"line_end":196,"column_start":1,"column_end":77}},{"value":"/ the restart or termination of the Actor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193521,"byte_end":193565,"line_start":197,"line_end":197,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193566,"byte_end":193569,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193570,"byte_end":193584,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193585,"byte_end":193588,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193589,"byte_end":193596,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193597,"byte_end":193623,"line_start":202,"line_end":202,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193624,"byte_end":193627,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # struct Fibonacci(pub u32);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193628,"byte_end":193660,"line_start":204,"line_end":204,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193661,"byte_end":193664,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # impl Message for Fibonacci {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193665,"byte_end":193699,"line_start":206,"line_end":206,"column_start":1,"column_end":35}},{"value":"/ #     type Result = Result<u64, ()>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193700,"byte_end":193740,"line_start":207,"line_end":207,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193741,"byte_end":193748,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193749,"byte_end":193752,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ struct SyncActor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193753,"byte_end":193774,"line_start":210,"line_end":210,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193775,"byte_end":193778,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ impl Actor for SyncActor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193779,"byte_end":193809,"line_start":212,"line_end":212,"column_start":1,"column_end":31}},{"value":"/     // It's important to note that you use \"SyncContext\" here instead of \"Context\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193810,"byte_end":193897,"line_start":213,"line_end":213,"column_start":1,"column_end":88}},{"value":"/     type Context = SyncContext<Self>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193898,"byte_end":193939,"line_start":214,"line_end":214,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193940,"byte_end":193945,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193946,"byte_end":193949,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193950,"byte_end":193967,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193968,"byte_end":193975,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":193976,"byte_end":193983,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":195931,"byte_end":195938,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"address","qualname":"<SyncContext<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2547},{"krate":0,"index":4190},{"krate":0,"index":4194},{"krate":0,"index":2550},{"krate":0,"index":2554},{"krate":0,"index":4227},{"krate":0,"index":4232},{"krate":0,"index":2558},{"krate":0,"index":2562}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2540},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199207,"byte_end":199216,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Condition","qualname":"::utils::Condition","value":"Condition {  }","parent":null,"children":[{"krate":0,"index":2542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.11.0\", note =\n             \"Please use tokio::sync::oneshot::Sender instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199095,"byte_end":199195,"line_start":14,"line_end":17,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199337,"byte_end":199341,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condition<T>>::wait","value":"pub fn wait(&mut Self) -> oneshot::Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199482,"byte_end":199485,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"set","qualname":"<Condition<T>>::set","value":"pub fn set(Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201023,"byte_end":201032,"line_start":90,"line_end":90,"column_start":16,"column_end":25},"name":"TimerFunc","qualname":"::utils::TimerFunc","value":"TimerFunc {  }","parent":null,"children":[{"krate":0,"index":4192},{"krate":0,"index":4193}],"decl_id":null,"docs":" An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","sig":null,"attributes":[{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201254,"byte_end":201257,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<TimerFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> TimerFunc<A> where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimerFunc` with the given duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `TimerFunc` with the given duration.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201188,"byte_end":201242,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4227},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203270,"byte_end":203282,"line_start":169,"line_end":169,"column_start":16,"column_end":28},"name":"IntervalFunc","qualname":"::utils::IntervalFunc","value":"IntervalFunc {  }","parent":null,"children":[{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4231}],"decl_id":null,"docs":" An `ActorStream` that periodically runs a function in the actor's context.","sig":null,"attributes":[{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11958205,"byte_end":11958214,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203531,"byte_end":203534,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<IntervalFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> IntervalFunc<A> where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IntervalFunc` with the given interval duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `IntervalFunc` with the given interval duration.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203453,"byte_end":203519,"line_start":178,"line_end":178,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2709},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2427,"byte_end":2434,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2749},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2832},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2839},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2864}],"decl_id":null,"docs":" The `actix` prelude.","sig":null,"attributes":[{"value":"/ The `actix` prelude.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2441,"byte_end":2465,"line_start":79,"line_end":79,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2470,"byte_end":2473,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2478,"byte_end":2553,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2558,"byte_end":2627,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2632,"byte_end":2635,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2640,"byte_end":2647,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2652,"byte_end":2683,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2688,"byte_end":2714,"line_start":86,"line_end":86,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":2719,"byte_end":2726,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3962,"byte_end":3965,"line_start":124,"line_end":124,"column_start":9,"column_end":12},"name":"dev","qualname":"::dev","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2910},{"krate":0,"index":2913},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2920}],"decl_id":null,"docs":" The `actix` prelude for library developers.","sig":null,"attributes":[{"value":"/ The `actix` prelude for library developers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":3972,"byte_end":4019,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4024,"byte_end":4027,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4032,"byte_end":4107,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4112,"byte_end":4181,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4186,"byte_end":4189,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4194,"byte_end":4201,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4206,"byte_end":4237,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/ use actix::dev::*;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4242,"byte_end":4264,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4269,"byte_end":4276,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2885},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4416,"byte_end":4423,"line_start":138,"line_end":138,"column_start":13,"column_end":20},"name":"channel","qualname":"::dev::channel","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2923},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5528,"byte_end":5531,"line_start":176,"line_end":176,"column_start":8,"column_end":11},"name":"run","qualname":"::run","value":"pub fn run<R>(R) -> std::io::Result<()> where R: std::future::Future<Output =\n()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Starts the system and executes the supplied future.","sig":null,"attributes":[{"value":"/ Starts the system and executes the supplied future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4754,"byte_end":4809,"line_start":147,"line_end":147,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4810,"byte_end":4813,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This function does the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4814,"byte_end":4851,"line_start":149,"line_end":149,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4852,"byte_end":4855,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * Creates and starts the actix system with default configuration.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4856,"byte_end":4925,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/ * Spawns the given future onto the current arbiter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4926,"byte_end":4981,"line_start":152,"line_end":152,"column_start":1,"column_end":56}},{"value":"/ * Blocks the current thread until the system shuts down.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":4982,"byte_end":5042,"line_start":153,"line_end":153,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The `run` function returns when the `System::current().stop()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5047,"byte_end":5113,"line_start":155,"line_end":155,"column_start":1,"column_end":67}},{"value":"/ method gets called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5114,"byte_end":5137,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5138,"byte_end":5141,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5142,"byte_end":5156,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5157,"byte_end":5160,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5161,"byte_end":5168,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5169,"byte_end":5208,"line_start":161,"line_end":161,"column_start":1,"column_end":40}},{"value":"/ use actix_rt::time::sleep;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5209,"byte_end":5239,"line_start":162,"line_end":162,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5240,"byte_end":5243,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5244,"byte_end":5259,"line_start":164,"line_end":164,"column_start":1,"column_end":16}},{"value":"/   actix::run(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5260,"byte_end":5289,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/       sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5290,"byte_end":5340,"line_start":166,"line_end":166,"column_start":1,"column_end":51}},{"value":"/       actix::System::current().stop();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5341,"byte_end":5383,"line_start":167,"line_end":167,"column_start":1,"column_end":43}},{"value":"/   });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5384,"byte_end":5393,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5394,"byte_end":5399,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5400,"byte_end":5407,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5408,"byte_end":5411,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5412,"byte_end":5424,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5425,"byte_end":5428,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This function panics if the actix system is already running.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5429,"byte_end":5493,"line_start":174,"line_end":174,"column_start":1,"column_end":65}},{"value":"allow(clippy :: unit_arg)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":5494,"byte_end":5520,"line_start":175,"line_end":175,"column_start":1,"column_end":27}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13069,"byte_end":13079,"line_start":234,"line_end":234,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20380,"byte_end":20391,"line_start":469,"line_end":469,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20600,"byte_end":20611,"line_start":480,"line_end":480,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":21159,"byte_end":21166,"line_start":18,"line_end":18,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":21405,"byte_end":21412,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":21720,"byte_end":21727,"line_start":45,"line_end":45,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":22388,"byte_end":22395,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24311,"byte_end":24318,"line_start":156,"line_end":156,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24955,"byte_end":24956,"line_start":182,"line_end":182,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26440,"byte_end":26452,"line_start":50,"line_end":50,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26697,"byte_end":26709,"line_start":62,"line_end":62,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30516,"byte_end":30526,"line_start":206,"line_end":206,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30753,"byte_end":30763,"line_start":216,"line_end":216,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31127,"byte_end":31137,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":34326,"byte_end":34336,"line_start":348,"line_end":348,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":40369,"byte_end":40382,"line_start":16,"line_end":16,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":41255,"byte_end":41278,"line_start":56,"line_end":56,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":41481,"byte_end":41504,"line_start":65,"line_end":65,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42091,"byte_end":42107,"line_start":91,"line_end":91,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42132,"byte_end":42148,"line_start":93,"line_end":93,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42258,"byte_end":42274,"line_start":99,"line_end":99,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42839,"byte_end":42861,"line_start":127,"line_end":127,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42966,"byte_end":42988,"line_start":133,"line_end":133,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44856,"byte_end":44859,"line_start":39,"line_end":39,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45020,"byte_end":45023,"line_start":47,"line_end":47,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47562,"byte_end":47576,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47714,"byte_end":47728,"line_start":143,"line_end":143,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51635,"byte_end":51648,"line_start":255,"line_end":255,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51846,"byte_end":51852,"line_start":265,"line_end":265,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52090,"byte_end":52093,"line_start":277,"line_end":277,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52312,"byte_end":52318,"line_start":288,"line_end":288,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52537,"byte_end":52541,"line_start":299,"line_end":299,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52755,"byte_end":52772,"line_start":310,"line_end":310,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":54831,"byte_end":54845,"line_start":377,"line_end":377,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55279,"byte_end":55287,"line_start":397,"line_end":397,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55651,"byte_end":55659,"line_start":408,"line_end":408,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":56069,"byte_end":56077,"line_start":427,"line_end":427,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":56710,"byte_end":56723,"line_start":452,"line_end":452,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57115,"byte_end":57128,"line_start":463,"line_end":463,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57563,"byte_end":57576,"line_start":482,"line_end":482,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":58843,"byte_end":58849,"line_start":535,"line_end":535,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":61534,"byte_end":61545,"line_start":98,"line_end":98,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":61701,"byte_end":61712,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65225,"byte_end":65235,"line_start":80,"line_end":80,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":67004,"byte_end":67014,"line_start":144,"line_end":144,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80541,"byte_end":80544,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82166,"byte_end":82179,"line_start":107,"line_end":107,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82645,"byte_end":82662,"line_start":123,"line_end":123,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82830,"byte_end":82847,"line_start":131,"line_end":131,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":84361,"byte_end":84366,"line_start":184,"line_end":184,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85186,"byte_end":85196,"line_start":211,"line_end":211,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87145,"byte_end":87158,"line_start":274,"line_end":274,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":93789,"byte_end":93802,"line_start":466,"line_end":466,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":94514,"byte_end":94527,"line_start":496,"line_end":496,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":95770,"byte_end":95783,"line_start":529,"line_end":529,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96091,"byte_end":96104,"line_start":540,"line_end":540,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96229,"byte_end":96242,"line_start":546,"line_end":546,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96274,"byte_end":96287,"line_start":548,"line_end":548,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96490,"byte_end":96507,"line_start":560,"line_end":560,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96921,"byte_end":96938,"line_start":572,"line_end":572,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97425,"byte_end":97446,"line_start":597,"line_end":597,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99262,"byte_end":99277,"line_start":658,"line_end":658,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":103178,"byte_end":103193,"line_start":768,"line_end":768,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":103908,"byte_end":103923,"line_start":787,"line_end":787,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":105262,"byte_end":105267,"line_start":828,"line_end":828,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":105808,"byte_end":105813,"line_start":846,"line_end":846,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":105851,"byte_end":105856,"line_start":847,"line_end":847,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108970,"byte_end":108977,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109281,"byte_end":109289,"line_start":35,"line_end":35,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109716,"byte_end":109724,"line_start":51,"line_end":51,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":110018,"byte_end":110035,"line_start":66,"line_end":66,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111404,"byte_end":111414,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111968,"byte_end":111978,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116425,"byte_end":116430,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116467,"byte_end":116472,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116488,"byte_end":116492,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116685,"byte_end":116690,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":119631,"byte_end":119636,"line_start":171,"line_end":171,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68273,"byte_end":68285,"line_start":30,"line_end":30,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68430,"byte_end":68442,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68723,"byte_end":68735,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68748,"byte_end":68757,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68929,"byte_end":68938,"line_start":55,"line_end":55,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68969,"byte_end":68978,"line_start":57,"line_end":57,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69259,"byte_end":69268,"line_start":66,"line_end":66,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69674,"byte_end":69678,"line_start":81,"line_end":81,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71922,"byte_end":71926,"line_start":160,"line_end":160,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72061,"byte_end":72065,"line_start":168,"line_end":168,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72171,"byte_end":72175,"line_start":174,"line_end":174,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72207,"byte_end":72211,"line_start":176,"line_end":176,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72449,"byte_end":72457,"line_start":188,"line_end":188,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73203,"byte_end":73211,"line_start":217,"line_end":217,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73691,"byte_end":73700,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75119,"byte_end":75128,"line_start":285,"line_end":285,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75320,"byte_end":75329,"line_start":296,"line_end":296,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75517,"byte_end":75526,"line_start":308,"line_end":308,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75689,"byte_end":75698,"line_start":318,"line_end":318,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75774,"byte_end":75783,"line_start":325,"line_end":325,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75953,"byte_end":75962,"line_start":335,"line_end":335,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76354,"byte_end":76367,"line_start":354,"line_end":354,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76562,"byte_end":76575,"line_start":364,"line_end":364,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":77024,"byte_end":77037,"line_start":379,"line_end":379,"column_start":63,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":77284,"byte_end":77297,"line_start":390,"line_end":390,"column_start":67,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120393,"byte_end":120400,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120660,"byte_end":120667,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120871,"byte_end":120878,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124113,"byte_end":124119,"line_start":44,"line_end":44,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124420,"byte_end":124426,"line_start":56,"line_end":56,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124476,"byte_end":124482,"line_start":57,"line_end":57,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124519,"byte_end":124525,"line_start":58,"line_end":58,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124560,"byte_end":124566,"line_start":60,"line_end":60,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124698,"byte_end":124704,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124807,"byte_end":124813,"line_start":70,"line_end":70,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","byte_start":133638,"byte_end":133644,"line_start":9,"line_end":9,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":135121,"byte_end":135124,"line_start":26,"line_end":26,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":135272,"byte_end":135275,"line_start":32,"line_end":32,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138191,"byte_end":138196,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/then.rs","byte_start":139392,"byte_end":139396,"line_start":44,"line_end":44,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/timeout.rs","byte_start":140989,"byte_end":140996,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/timeout.rs","byte_start":141190,"byte_end":141197,"line_start":36,"line_end":36,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130896,"byte_end":130897,"line_start":162,"line_end":162,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131114,"byte_end":131117,"line_start":172,"line_end":172,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131472,"byte_end":131475,"line_start":189,"line_end":189,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132354,"byte_end":132355,"line_start":223,"line_end":223,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":133176,"byte_end":133186,"line_start":264,"line_end":264,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/collect.rs","byte_start":148788,"byte_end":148795,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/collect.rs","byte_start":149000,"byte_end":149007,"line_start":38,"line_end":38,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/finish.rs","byte_start":150011,"byte_end":150017,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/finish.rs","byte_start":150129,"byte_end":150135,"line_start":26,"line_end":26,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/fold.rs","byte_start":151390,"byte_end":151394,"line_start":39,"line_end":39,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/map.rs","byte_start":153236,"byte_end":153239,"line_start":30,"line_end":30,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/skip_while.rs","byte_start":154666,"byte_end":154675,"line_start":41,"line_end":41,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/take_while.rs","byte_start":156818,"byte_end":156827,"line_start":41,"line_end":41,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/then.rs","byte_start":158817,"byte_end":158821,"line_start":37,"line_end":37,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/timeout.rs","byte_start":160237,"byte_end":160244,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/timeout.rs","byte_start":160493,"byte_end":160500,"line_start":37,"line_end":37,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146793,"byte_end":146794,"line_start":164,"line_end":164,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147323,"byte_end":147324,"line_start":187,"line_end":187,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147985,"byte_end":147995,"line_start":228,"line_end":228,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":163192,"byte_end":163204,"line_start":64,"line_end":64,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":163550,"byte_end":163556,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":165498,"byte_end":165507,"line_start":150,"line_end":150,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":168632,"byte_end":168643,"line_start":247,"line_end":247,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":170635,"byte_end":170646,"line_start":308,"line_end":308,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":173382,"byte_end":173393,"line_start":401,"line_end":401,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174039,"byte_end":174048,"line_start":419,"line_end":419,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":176118,"byte_end":176133,"line_start":496,"line_end":496,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181262,"byte_end":181270,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":185590,"byte_end":185604,"line_start":266,"line_end":266,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190726,"byte_end":190737,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":191880,"byte_end":191891,"line_start":141,"line_end":141,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":192014,"byte_end":192025,"line_start":149,"line_end":149,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":192861,"byte_end":192872,"line_start":180,"line_end":180,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":194250,"byte_end":194261,"line_start":232,"line_end":232,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":196034,"byte_end":196045,"line_start":297,"line_end":297,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":196833,"byte_end":196852,"line_start":329,"line_end":329,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":197053,"byte_end":197072,"line_start":339,"line_end":339,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199291,"byte_end":199300,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199630,"byte_end":199639,"line_start":42,"line_end":42,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201169,"byte_end":201178,"line_start":97,"line_end":97,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201509,"byte_end":201518,"line_start":110,"line_end":110,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203431,"byte_end":203443,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203791,"byte_end":203803,"line_start":191,"line_end":191,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1403,"byte_end":1409,"line_start":46,"line_end":46,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1322}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mod.rs","byte_start":122341,"byte_end":122347,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1323}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1419,"byte_end":1424,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1361}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1434,"byte_end":1437,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1363}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125695,"byte_end":125701,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1364}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":126255,"byte_end":126261,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1467}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/mod.rs","byte_start":125711,"byte_end":125717,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1634}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1447,"byte_end":1449,"line_start":49,"line_end":49,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2092}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1459,"byte_end":1467,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2284}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1477,"byte_end":1481,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2365}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/lib.rs","byte_start":1491,"byte_end":1496,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2497}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8456,"byte_end":8461,"line_start":73,"line_end":73,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":8464,"byte_end":8469,"line_start":73,"line_end":73,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":12588,"byte_end":12593,"line_start":210,"line_end":210,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":63},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13069,"byte_end":13079,"line_start":234,"line_end":234,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":13785,"byte_end":13790,"line_start":253,"line_end":253,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":80}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":14373,"byte_end":14385,"line_start":269,"line_end":269,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":80},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20380,"byte_end":20391,"line_start":469,"line_end":469,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actor.rs","byte_start":20600,"byte_end":20611,"line_start":480,"line_end":480,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":21159,"byte_end":21166,"line_start":18,"line_end":18,"column_start":53,"column_end":60},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":21405,"byte_end":21412,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":80}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":21720,"byte_end":21727,"line_start":45,"line_end":45,"column_start":29,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":22388,"byte_end":22395,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24311,"byte_end":24318,"line_start":156,"line_end":156,"column_start":34,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/context.rs","byte_start":24955,"byte_end":24956,"line_start":182,"line_end":182,"column_start":40,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26031,"byte_end":26043,"line_start":31,"line_end":31,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":80},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26046,"byte_end":26058,"line_start":31,"line_end":31,"column_start":48,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":84},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26440,"byte_end":26452,"line_start":50,"line_end":50,"column_start":24,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":26697,"byte_end":26709,"line_start":62,"line_end":62,"column_start":9,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30516,"byte_end":30526,"line_start":206,"line_end":206,"column_start":27,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":30753,"byte_end":30763,"line_start":216,"line_end":216,"column_start":21,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":31127,"byte_end":31137,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextimpl.rs","byte_start":34326,"byte_end":34336,"line_start":348,"line_end":348,"column_start":23,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":40369,"byte_end":40382,"line_start":16,"line_end":16,"column_start":9,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":41255,"byte_end":41278,"line_start":56,"line_end":56,"column_start":18,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":41481,"byte_end":41504,"line_start":65,"line_end":65,"column_start":31,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3075},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42091,"byte_end":42107,"line_start":91,"line_end":91,"column_start":28,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42132,"byte_end":42148,"line_start":93,"line_end":93,"column_start":18,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42258,"byte_end":42274,"line_start":99,"line_end":99,"column_start":31,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42839,"byte_end":42861,"line_start":127,"line_end":127,"column_start":9,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/contextitems.rs","byte_start":42966,"byte_end":42988,"line_start":133,"line_end":133,"column_start":31,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3112},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":44856,"byte_end":44859,"line_start":39,"line_end":39,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":5619},"to":{"krate":0,"index":465}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":45020,"byte_end":45023,"line_start":47,"line_end":47,"column_start":21,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":465}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47562,"byte_end":47576,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":47714,"byte_end":47728,"line_start":143,"line_end":143,"column_start":38,"column_end":52},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":477},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51635,"byte_end":51648,"line_start":255,"line_end":255,"column_start":38,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":473},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":51846,"byte_end":51852,"line_start":265,"line_end":265,"column_start":44,"column_end":50},"kind":{"Impl":{"id":28}},"from":{"krate":2,"index":37485},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52090,"byte_end":52093,"line_start":277,"line_end":277,"column_start":41,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":5619},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52312,"byte_end":52318,"line_start":288,"line_end":288,"column_start":41,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":37335},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52537,"byte_end":52541,"line_start":299,"line_end":299,"column_start":41,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3362},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":52755,"byte_end":52772,"line_start":310,"line_end":310,"column_start":38,"column_end":55},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":491},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":54831,"byte_end":54845,"line_start":377,"line_end":377,"column_start":38,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":494},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55279,"byte_end":55287,"line_start":397,"line_end":397,"column_start":24,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":55651,"byte_end":55659,"line_start":408,"line_end":408,"column_start":9,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":56069,"byte_end":56077,"line_start":427,"line_end":427,"column_start":38,"column_end":46},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":56710,"byte_end":56723,"line_start":452,"line_end":452,"column_start":27,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57115,"byte_end":57128,"line_start":463,"line_end":463,"column_start":19,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":57563,"byte_end":57576,"line_start":482,"line_end":482,"column_start":38,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":496}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/handler.rs","byte_start":58843,"byte_end":58849,"line_start":535,"line_end":535,"column_start":28,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":2,"index":37335},"to":{"krate":0,"index":588}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":61534,"byte_end":61545,"line_start":98,"line_end":98,"column_start":9,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/stream.rs","byte_start":61701,"byte_end":61712,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3205},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":65225,"byte_end":65235,"line_start":80,"line_end":80,"column_start":9,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/supervisor.rs","byte_start":67004,"byte_end":67014,"line_start":144,"line_end":144,"column_start":20,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3247},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80140,"byte_end":80144,"line_start":29,"line_end":29,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":810}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":80541,"byte_end":80544,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":810}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":81199,"byte_end":81203,"line_start":78,"line_end":78,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":827}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82166,"byte_end":82179,"line_start":107,"line_end":107,"column_start":31,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82645,"byte_end":82662,"line_start":123,"line_end":123,"column_start":26,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":82830,"byte_end":82847,"line_start":131,"line_end":131,"column_start":31,"column_end":48},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83001,"byte_end":83005,"line_start":137,"line_end":137,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":848}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83008,"byte_end":83012,"line_start":137,"line_end":137,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":848}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":83015,"byte_end":83020,"line_start":137,"line_end":137,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2447},"to":{"krate":0,"index":848}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":84361,"byte_end":84366,"line_start":184,"line_end":184,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":85186,"byte_end":85196,"line_start":211,"line_end":211,"column_start":6,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":87145,"byte_end":87158,"line_start":274,"line_end":274,"column_start":16,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":93789,"byte_end":93802,"line_start":466,"line_end":466,"column_start":26,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":831},"to":{"krate":0,"index":810}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":94514,"byte_end":94527,"line_start":496,"line_end":496,"column_start":26,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":95770,"byte_end":95783,"line_start":529,"line_end":529,"column_start":25,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96091,"byte_end":96104,"line_start":540,"line_end":540,"column_start":30,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96229,"byte_end":96242,"line_start":546,"line_end":546,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96274,"byte_end":96287,"line_start":548,"line_end":548,"column_start":25,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":8907}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96490,"byte_end":96507,"line_start":560,"line_end":560,"column_start":16,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":96921,"byte_end":96938,"line_start":572,"line_end":572,"column_start":30,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":827}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":97425,"byte_end":97446,"line_start":597,"line_end":597,"column_start":16,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":99262,"byte_end":99277,"line_start":658,"line_end":658,"column_start":16,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":103178,"byte_end":103193,"line_start":768,"line_end":768,"column_start":27,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":849},"to":{"krate":38,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":103908,"byte_end":103923,"line_start":787,"line_end":787,"column_start":25,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":105262,"byte_end":105267,"line_start":828,"line_end":828,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":105808,"byte_end":105813,"line_start":846,"line_end":846,"column_start":32,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/channel.rs","byte_start":105851,"byte_end":105856,"line_start":847,"line_end":847,"column_start":32,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":108970,"byte_end":108977,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":978}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109281,"byte_end":109289,"line_start":35,"line_end":35,"column_start":16,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":109716,"byte_end":109724,"line_start":51,"line_end":51,"column_start":37,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":982}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/envelope.rs","byte_start":110018,"byte_end":110035,"line_start":66,"line_end":66,"column_start":33,"column_end":50},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1001},"to":{"krate":0,"index":982}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111404,"byte_end":111414,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/message.rs","byte_start":111968,"byte_end":111978,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116425,"byte_end":116430,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3347},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116467,"byte_end":116472,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3347},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116488,"byte_end":116492,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":116685,"byte_end":116690,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/queue.rs","byte_start":119631,"byte_end":119636,"line_start":171,"line_end":171,"column_start":18,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3347},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68273,"byte_end":68285,"line_start":30,"line_end":30,"column_start":21,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3354},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68430,"byte_end":68442,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3354},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68723,"byte_end":68735,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3354},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68748,"byte_end":68757,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68929,"byte_end":68938,"line_start":55,"line_end":55,"column_start":26,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":68969,"byte_end":68978,"line_start":57,"line_end":57,"column_start":24,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69259,"byte_end":69268,"line_start":66,"line_end":66,"column_start":26,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":69674,"byte_end":69678,"line_start":81,"line_end":81,"column_start":16,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":71922,"byte_end":71926,"line_start":160,"line_end":160,"column_start":26,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3362},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72061,"byte_end":72065,"line_start":168,"line_end":168,"column_start":30,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3362},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72171,"byte_end":72175,"line_start":174,"line_end":174,"column_start":23,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3362},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72207,"byte_end":72211,"line_start":176,"line_end":176,"column_start":25,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3362},"to":{"krate":2,"index":8907}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":72449,"byte_end":72457,"line_start":188,"line_end":188,"column_start":16,"column_end":24},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73203,"byte_end":73211,"line_start":217,"line_end":217,"column_start":26,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":73691,"byte_end":73700,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75119,"byte_end":75128,"line_start":285,"line_end":285,"column_start":63,"column_end":72},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75320,"byte_end":75329,"line_start":296,"line_end":296,"column_start":19,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75517,"byte_end":75526,"line_start":308,"line_end":308,"column_start":23,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75689,"byte_end":75698,"line_start":318,"line_end":318,"column_start":16,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75774,"byte_end":75783,"line_start":325,"line_end":325,"column_start":18,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":8907}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":75953,"byte_end":75962,"line_start":335,"line_end":335,"column_start":24,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76354,"byte_end":76367,"line_start":354,"line_end":354,"column_start":24,"column_end":37},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":76562,"byte_end":76575,"line_start":364,"line_end":364,"column_start":9,"column_end":22},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":77024,"byte_end":77037,"line_start":379,"line_end":379,"column_start":63,"column_end":76},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/address/mod.rs","byte_start":77284,"byte_end":77297,"line_start":390,"line_end":390,"column_start":67,"column_end":80},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120393,"byte_end":120400,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1304},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120660,"byte_end":120667,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1304},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/mailbox.rs","byte_start":120871,"byte_end":120878,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124113,"byte_end":124119,"line_start":44,"line_end":44,"column_start":16,"column_end":22},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124420,"byte_end":124426,"line_start":56,"line_end":56,"column_start":42,"column_end":48},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1337},"to":{"krate":0,"index":2350}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124476,"byte_end":124482,"line_start":57,"line_end":57,"column_start":44,"column_end":50},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1337},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124519,"byte_end":124525,"line_start":58,"line_end":58,"column_start":31,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1337},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124560,"byte_end":124566,"line_start":60,"line_end":60,"column_start":28,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124698,"byte_end":124704,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1337},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/actors/mocker.rs","byte_start":124807,"byte_end":124813,"line_start":70,"line_end":70,"column_start":61,"column_end":67},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1337},"to":{"krate":0,"index":461}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/either.rs","byte_start":133638,"byte_end":133644,"line_start":9,"line_end":9,"column_start":38,"column_end":44},"kind":{"Impl":{"id":127}},"from":{"krate":40,"index":10582},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":135121,"byte_end":135124,"line_start":26,"line_end":26,"column_start":14,"column_end":17},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/map.rs","byte_start":135272,"byte_end":135275,"line_start":32,"line_end":32,"column_start":39,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3378},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/result.rs","byte_start":138191,"byte_end":138196,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":40,"index":9878},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/then.rs","byte_start":139392,"byte_end":139396,"line_start":44,"line_end":44,"column_start":41,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3432},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/timeout.rs","byte_start":140989,"byte_end":140996,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/timeout.rs","byte_start":141190,"byte_end":141197,"line_start":36,"line_end":36,"column_start":31,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":129980,"byte_end":129991,"line_start":129,"line_end":129,"column_start":37,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":1586},"to":{"krate":0,"index":1590}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":130896,"byte_end":130897,"line_start":162,"line_end":162,"column_start":34,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1600},"to":{"krate":0,"index":1590}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131114,"byte_end":131117,"line_start":172,"line_end":172,"column_start":31,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":131472,"byte_end":131475,"line_start":189,"line_end":189,"column_start":31,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":2,"index":37471},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":132354,"byte_end":132355,"line_start":223,"line_end":223,"column_start":45,"column_end":46},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1621},"to":{"krate":0,"index":1615}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/future/mod.rs","byte_start":133176,"byte_end":133186,"line_start":264,"line_end":264,"column_start":31,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3523},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/collect.rs","byte_start":148788,"byte_end":148795,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/collect.rs","byte_start":149000,"byte_end":149007,"line_start":38,"line_end":38,"column_start":34,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3575},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/finish.rs","byte_start":150011,"byte_end":150017,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/finish.rs","byte_start":150129,"byte_end":150135,"line_start":26,"line_end":26,"column_start":31,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3622},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/fold.rs","byte_start":151390,"byte_end":151394,"line_start":39,"line_end":39,"column_start":39,"column_end":43},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3664},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/map.rs","byte_start":153236,"byte_end":153239,"line_start":30,"line_end":30,"column_start":37,"column_end":40},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3735},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/skip_while.rs","byte_start":154666,"byte_end":154675,"line_start":41,"line_end":41,"column_start":39,"column_end":48},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3788},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/take_while.rs","byte_start":156818,"byte_end":156827,"line_start":41,"line_end":41,"column_start":39,"column_end":48},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3867},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/then.rs","byte_start":158817,"byte_end":158821,"line_start":37,"line_end":37,"column_start":39,"column_end":43},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3944},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/timeout.rs","byte_start":160237,"byte_end":160244,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/timeout.rs","byte_start":160493,"byte_end":160500,"line_start":37,"line_end":37,"column_start":31,"column_end":38},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4002},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":142666,"byte_end":142677,"line_start":48,"line_end":48,"column_start":37,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2000},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":146793,"byte_end":146794,"line_start":164,"line_end":164,"column_start":34,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2027},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147323,"byte_end":147324,"line_start":187,"line_end":187,"column_start":30,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2034},"to":{"krate":0,"index":2028}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/fut/stream/mod.rs","byte_start":147985,"byte_end":147995,"line_start":228,"line_end":228,"column_start":31,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4045},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":163192,"byte_end":163204,"line_start":64,"line_end":64,"column_start":51,"column_end":63},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2173},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":163550,"byte_end":163556,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":165498,"byte_end":165507,"line_start":150,"line_end":150,"column_start":52,"column_end":61},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2203},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":168632,"byte_end":168643,"line_start":247,"line_end":247,"column_start":34,"column_end":45},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2213},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":170635,"byte_end":170646,"line_start":308,"line_end":308,"column_start":47,"column_end":58},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":173382,"byte_end":173393,"line_start":401,"line_end":401,"column_start":56,"column_end":67},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2223},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":174039,"byte_end":174048,"line_start":419,"line_end":419,"column_start":48,"column_end":57},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/io.rs","byte_start":176118,"byte_end":176133,"line_start":496,"line_end":496,"column_start":52,"column_end":67},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2274},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180717,"byte_end":180722,"line_start":100,"line_end":100,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":63},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180750,"byte_end":180760,"line_start":100,"line_end":100,"column_start":60,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":180763,"byte_end":180770,"line_start":100,"line_end":100,"column_start":73,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":181262,"byte_end":181270,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184474,"byte_end":184479,"line_start":231,"line_end":231,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":63},"to":{"krate":0,"index":2350}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184507,"byte_end":184517,"line_start":231,"line_end":231,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":2350}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":184520,"byte_end":184527,"line_start":231,"line_end":231,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":2350}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/registry.rs","byte_start":185590,"byte_end":185604,"line_start":266,"line_end":266,"column_start":6,"column_end":20},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":190726,"byte_end":190737,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":191880,"byte_end":191891,"line_start":141,"line_end":141,"column_start":19,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2448},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":192014,"byte_end":192025,"line_start":149,"line_end":149,"column_start":20,"column_end":31},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2448},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":192861,"byte_end":192872,"line_start":180,"line_end":180,"column_start":33,"column_end":44},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":978}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":194250,"byte_end":194261,"line_start":232,"line_end":232,"column_start":9,"column_end":20},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":196034,"byte_end":196045,"line_start":297,"line_end":297,"column_start":26,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2468},"to":{"krate":0,"index":80}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":196833,"byte_end":196852,"line_start":329,"line_end":329,"column_start":9,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/sync.rs","byte_start":197053,"byte_end":197072,"line_start":339,"line_end":339,"column_start":33,"column_end":52},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2486},"to":{"krate":0,"index":982}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199291,"byte_end":199300,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":199630,"byte_end":199639,"line_start":42,"line_end":42,"column_start":21,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2540},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201169,"byte_end":201178,"line_start":97,"line_end":97,"column_start":16,"column_end":25},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":201509,"byte_end":201518,"line_start":110,"line_end":110,"column_start":28,"column_end":37},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4190},"to":{"krate":0,"index":1586}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203431,"byte_end":203443,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.11.1/src/utils.rs","byte_start":203791,"byte_end":203803,"line_start":191,"line_end":191,"column_start":35,"column_end":47},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4227},"to":{"krate":0,"index":2000}}]}