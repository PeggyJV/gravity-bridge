{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bytes","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=7a6e657daebb7eb8","-C","extra-filename=-7a6e657daebb7eb8","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbytes-7a6e657daebb7eb8.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[16605158223807296615,2139309927205400556]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":0,"byte_end":3535,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4472,"byte_end":4475,"line_start":32,"line_end":32,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4500,"byte_end":4506,"line_start":33,"line_end":33,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4529,"byte_end":4534,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4556,"byte_end":4564,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4587,"byte_end":4592,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4614,"byte_end":4618,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4648,"byte_end":4659,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"alias_span":null,"name":"UninitSlice","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1239},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4709,"byte_end":4715,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4725,"byte_end":4731,"line_start":41,"line_end":41,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":85,"line_end":85,"column_start":22,"column_end":25},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":3005,"byte_end":3011,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":3082,"byte_end":3087,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":3115,"byte_end":3123,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":0,"byte_end":3535,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":670},{"krate":0,"index":967},{"krate":0,"index":1028},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":244,"byte_end":254,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/ Provides abstractions for working with bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":256,"byte_end":305,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":306,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `bytes` crate provides an efficient byte buffer structure","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":310,"byte_end":375,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ ([`Bytes`](struct.Bytes.html)) and traits for working with buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":376,"byte_end":445,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ implementations ([`Buf`], [`BufMut`]).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":446,"byte_end":488,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":489,"byte_end":492,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":493,"byte_end":520,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":521,"byte_end":554,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":555,"byte_end":558,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # `Bytes`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":559,"byte_end":572,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":573,"byte_end":576,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":577,"byte_end":654,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":655,"byte_end":733,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":734,"byte_end":780,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":781,"byte_end":784,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":785,"byte_end":865,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":866,"byte_end":944,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":945,"byte_end":1025,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ be freed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1026,"byte_end":1039,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1044,"byte_end":1133,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/ or `Vec<u8>`), but usually a `BytesMut` is used first and written to. For","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1134,"byte_end":1211,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ example:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1212,"byte_end":1224,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1225,"byte_end":1228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1229,"byte_end":1240,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1241,"byte_end":1275,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1276,"byte_end":1279,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1280,"byte_end":1328,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1329,"byte_end":1362,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ buf.put_u16(1234);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1363,"byte_end":1385,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1386,"byte_end":1389,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let a = buf.split();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1390,"byte_end":1414,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(a, b\"hello world\\x04\\xD2\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1415,"byte_end":1461,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1462,"byte_end":1465,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"goodbye world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1466,"byte_end":1501,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1502,"byte_end":1505,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let b = buf.split();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1506,"byte_end":1530,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(b, b\"goodbye world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1531,"byte_end":1571,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1572,"byte_end":1575,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf.capacity(), 998);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1576,"byte_end":1612,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1613,"byte_end":1620,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1621,"byte_end":1624,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ In the above example, only a single buffer of 1024 is allocated. The handles","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1625,"byte_end":1705,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ `a` and `b` will share the underlying buffer and maintain indices tracking","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1706,"byte_end":1784,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ the view into the buffer represented by the handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1785,"byte_end":1840,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1841,"byte_end":1844,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ See the [struct docs] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1845,"byte_end":1888,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [struct docs]: struct.Bytes.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1893,"byte_end":1929,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1930,"byte_end":1933,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1934,"byte_end":1955,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1956,"byte_end":1959,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ These two traits provide read and write access to buffers. The underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":1960,"byte_end":2037,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ storage may or may not be in contiguous memory. For example, `Bytes` is a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2038,"byte_end":2115,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ buffer that guarantees contiguous memory, but a [rope] stores the bytes in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2116,"byte_end":2194,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ disjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2195,"byte_end":2272,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ position in the underlying byte storage. When bytes are read or written, the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2273,"byte_end":2353,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ cursor is advanced.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2354,"byte_end":2377,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2378,"byte_end":2381,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2382,"byte_end":2445,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2446,"byte_end":2449,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Relation with `Read` and `Write`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2450,"byte_end":2489,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ At first glance, it may seem that `Buf` and `BufMut` overlap in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2494,"byte_end":2561,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ functionality with `std::io::Read` and `std::io::Write`. However, they","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2562,"byte_end":2636,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ serve different purposes. A buffer is the value that is provided as an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2637,"byte_end":2711,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ argument to `Read::read` and `Write::write`. `Read` and `Write` may then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2712,"byte_end":2788,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ perform a syscall, which has the potential of failing. Operations on `Buf`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2789,"byte_end":2867,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ and `BufMut` are infallible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2868,"byte_end":2900,"line_start":77,"line_end":77,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":99},{"krate":0,"index":195},{"krate":0,"index":242},{"krate":0,"index":259},{"krate":0,"index":283},{"krate":0,"index":308},{"krate":0,"index":329},{"krate":0,"index":377},{"krate":0,"index":388},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":435}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[{"value":"/ Utilities for working with buffers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3537,"byte_end":3576,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3577,"byte_end":3580,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A buffer is any structure that contains a sequence of bytes. The bytes may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3581,"byte_end":3659,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ or may not be stored in contiguous memory. This module contains traits used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3660,"byte_end":3739,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ to abstract over buffers as well as utilities for working with buffer types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3740,"byte_end":3820,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3821,"byte_end":3824,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3825,"byte_end":3846,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3847,"byte_end":3850,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These are the two foundational traits for abstractly working with buffers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3851,"byte_end":3929,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ They can be thought as iterators for byte structures. They offer additional","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":3930,"byte_end":4009,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ performance over `Iterator` by providing an API optimized for byte slices.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4010,"byte_end":4088,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4089,"byte_end":4092,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Buf`] and [`BufMut`] for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4093,"byte_end":4141,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4142,"byte_end":4145,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4146,"byte_end":4209,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4210,"byte_end":4237,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/mod.rs","byte_start":4238,"byte_end":4271,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7281,"byte_end":7284,"line_start":76,"line_end":76,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[{"value":"/ Read bytes from a buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6564,"byte_end":6593,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6594,"byte_end":6597,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that read operations are infallible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6598,"byte_end":6675,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `Buf` value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6676,"byte_end":6756,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ is a cursor into the buffer. Reading from `Buf` advances the cursor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6757,"byte_end":6828,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ position. It can be thought of as an efficient `Iterator` for collections of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6829,"byte_end":6909,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6910,"byte_end":6920,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6921,"byte_end":6924,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The simplest `Buf` is a `&[u8]`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6925,"byte_end":6961,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6962,"byte_end":6965,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6966,"byte_end":6973,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6974,"byte_end":6993,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6994,"byte_end":6997,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":6998,"byte_end":7036,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7037,"byte_end":7040,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7041,"byte_end":7076,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'e', buf.get_u8());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7077,"byte_end":7112,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'l', buf.get_u8());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7113,"byte_end":7148,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7149,"byte_end":7152,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let mut rest = [0; 8];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7153,"byte_end":7179,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ buf.copy_to_slice(&mut rest);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7180,"byte_end":7213,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7214,"byte_end":7217,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&rest[..], &b\"lo world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7218,"byte_end":7262,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7263,"byte_end":7270,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8033,"byte_end":8042,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"pub fn remaining(&Self) -> usize","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[{"value":"/ Returns the number of bytes between the current position and the end of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7291,"byte_end":7366,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7371,"byte_end":7386,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7391,"byte_end":7394,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7399,"byte_end":7474,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ by `chunk()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7479,"byte_end":7496,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7501,"byte_end":7504,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7509,"byte_end":7523,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7528,"byte_end":7531,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7536,"byte_end":7543,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7548,"byte_end":7567,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7572,"byte_end":7575,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7580,"byte_end":7618,"line_start":88,"line_end":88,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7623,"byte_end":7626,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 11);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7631,"byte_end":7667,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7672,"byte_end":7675,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7680,"byte_end":7697,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7702,"byte_end":7705,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 10);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7710,"byte_end":7746,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7751,"byte_end":7758,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7763,"byte_end":7766,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7771,"byte_end":7794,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7799,"byte_end":7802,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining` should ensure that the return value does","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7807,"byte_end":7882,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ not change unless a call is made to `advance` or any other function that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7887,"byte_end":7963,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ is documented to change the `Buf`'s current position.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":7968,"byte_end":8025,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8896,"byte_end":8901,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"chunk","qualname":"::buf::buf_impl::Buf::chunk","value":"pub fn chunk(&Self) -> &[u8]","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[{"value":"/ Returns a slice starting at the current position and of length between 0","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8065,"byte_end":8141,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ and `Buf::remaining()`. Note that this *can* return shorter slice (this allows","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8146,"byte_end":8228,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/ non-continuous internal representation).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8233,"byte_end":8277,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8282,"byte_end":8285,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8290,"byte_end":8361,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8366,"byte_end":8380,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8385,"byte_end":8388,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8393,"byte_end":8407,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8412,"byte_end":8415,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8420,"byte_end":8427,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8432,"byte_end":8451,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8456,"byte_end":8459,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8464,"byte_end":8502,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8507,"byte_end":8510,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8515,"byte_end":8564,"line_start":118,"line_end":118,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8569,"byte_end":8572,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8577,"byte_end":8596,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8601,"byte_end":8604,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8609,"byte_end":8652,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8657,"byte_end":8664,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8669,"byte_end":8672,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8677,"byte_end":8700,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8705,"byte_end":8708,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8713,"byte_end":8789,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `chunk()` should return an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8794,"byte_end":8867,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ empty slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8872,"byte_end":8888,"line_start":129,"line_end":129,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10272,"byte_end":10287,"line_start":160,"line_end":160,"column_start":8,"column_end":23},"name":"chunks_vectored","qualname":"::buf::buf_impl::Buf::chunks_vectored","value":"pub fn chunks_vectored<'a>(&'a Self, &mut [IoSlice]) -> usize","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple slices starting at `self`'s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8924,"byte_end":8993,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ current position.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":8998,"byte_end":9019,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9024,"byte_end":9027,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9032,"byte_end":9112,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ fetching more than one slice at once. `dst` is a slice of `IoSlice`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9117,"byte_end":9188,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ references, enabling the slice to be directly used with [`writev`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9193,"byte_end":9263,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ without any further conversion. The sum of the lengths of all the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9268,"byte_end":9337,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ buffers in `dst` will be less than or equal to `Buf::remaining()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9342,"byte_end":9412,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9417,"byte_end":9420,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9425,"byte_end":9500,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `chunk_vectored` does not fill every","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9505,"byte_end":9585,"line_start":142,"line_end":142,"column_start":5,"column_end":85}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9590,"byte_end":9666,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9671,"byte_end":9684,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9689,"byte_end":9692,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9697,"byte_end":9768,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9773,"byte_end":9787,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9792,"byte_end":9795,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9800,"byte_end":9823,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9828,"byte_end":9831,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9836,"byte_end":9912,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9917,"byte_end":9994,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/ without mutating `dst`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":9999,"byte_end":10026,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10031,"byte_end":10034,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10039,"byte_end":10112,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10117,"byte_end":10158,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10163,"byte_end":10166,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10171,"byte_end":10236,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10241,"byte_end":10264,"line_start":159,"line_end":159,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11431,"byte_end":11438,"line_start":203,"line_end":203,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"pub fn advance(&mut Self, usize)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the Buf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10548,"byte_end":10590,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10595,"byte_end":10598,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The next call to `chunk()` will return a slice starting `cnt` bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10603,"byte_end":10674,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10679,"byte_end":10718,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10723,"byte_end":10726,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10731,"byte_end":10745,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10750,"byte_end":10753,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10758,"byte_end":10765,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10770,"byte_end":10789,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10794,"byte_end":10797,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10802,"byte_end":10840,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10845,"byte_end":10848,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10853,"byte_end":10902,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10907,"byte_end":10910,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10915,"byte_end":10934,"line_start":187,"line_end":187,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10939,"byte_end":10942,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10947,"byte_end":10990,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":10995,"byte_end":11002,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11007,"byte_end":11010,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11015,"byte_end":11027,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11032,"byte_end":11035,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11040,"byte_end":11100,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11105,"byte_end":11108,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11113,"byte_end":11136,"line_start":196,"line_end":196,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11141,"byte_end":11144,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance` to panic if `cnt >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11149,"byte_end":11222,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ self.remaining()`. If the implementation does not panic, the call must","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11227,"byte_end":11301,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ behave as if `cnt == self.remaining()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11306,"byte_end":11349,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11354,"byte_end":11357,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11362,"byte_end":11423,"line_start":202,"line_end":202,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11841,"byte_end":11854,"line_start":222,"line_end":222,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"pub fn has_remaining(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[{"value":"/ Returns true if there are any more bytes to consume","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11468,"byte_end":11523,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11528,"byte_end":11531,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining() != 0`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11536,"byte_end":11586,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11591,"byte_end":11594,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11599,"byte_end":11613,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11618,"byte_end":11621,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11626,"byte_end":11633,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11638,"byte_end":11657,"line_start":212,"line_end":212,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11662,"byte_end":11665,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"a\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11670,"byte_end":11698,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11703,"byte_end":11706,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11711,"byte_end":11744,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11749,"byte_end":11752,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11757,"byte_end":11774,"line_start":218,"line_end":218,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11779,"byte_end":11782,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11787,"byte_end":11821,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11826,"byte_end":11833,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12479,"byte_end":12492,"line_start":247,"line_end":247,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"pub fn copy_to_slice(&mut Self, &mut [u8])","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[{"value":"/ Copies bytes from `self` into `dst`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11912,"byte_end":11952,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11957,"byte_end":11960,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The cursor is advanced by the number of bytes copied. `self` must have","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":11965,"byte_end":12039,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ enough remaining bytes to fill `dst`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12044,"byte_end":12085,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12090,"byte_end":12093,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12098,"byte_end":12112,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12117,"byte_end":12120,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12125,"byte_end":12132,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12137,"byte_end":12156,"line_start":234,"line_end":234,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12161,"byte_end":12164,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12169,"byte_end":12207,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12212,"byte_end":12237,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12242,"byte_end":12245,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ buf.copy_to_slice(&mut dst);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12250,"byte_end":12282,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(&b\"hello\"[..], &dst);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12287,"byte_end":12323,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(6, buf.remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12328,"byte_end":12363,"line_start":241,"line_end":241,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12368,"byte_end":12375,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12380,"byte_end":12383,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12388,"byte_end":12400,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12405,"byte_end":12408,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This function panics if `self.remaining() < dst.len()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12413,"byte_end":12471,"line_start":246,"line_end":246,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13343,"byte_end":13349,"line_start":284,"line_end":284,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"pub fn get_u8(&mut Self) -> u8","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets an unsigned 8 bit integer from `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":12955,"byte_end":13002,"line_start":268,"line_end":268,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13007,"byte_end":13010,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13015,"byte_end":13057,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13062,"byte_end":13065,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13070,"byte_end":13084,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13089,"byte_end":13092,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13097,"byte_end":13104,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13109,"byte_end":13128,"line_start":275,"line_end":275,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13133,"byte_end":13136,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13141,"byte_end":13178,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_u8());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13183,"byte_end":13215,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13220,"byte_end":13227,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13232,"byte_end":13235,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13240,"byte_end":13252,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13257,"byte_end":13260,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13265,"byte_end":13335,"line_start":283,"line_end":283,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13877,"byte_end":13883,"line_start":307,"line_end":307,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"pub fn get_i8(&mut Self) -> i8","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets a signed 8 bit integer from `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13492,"byte_end":13536,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13541,"byte_end":13544,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13549,"byte_end":13591,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13596,"byte_end":13599,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13604,"byte_end":13618,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13623,"byte_end":13626,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13631,"byte_end":13638,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13643,"byte_end":13662,"line_start":298,"line_end":298,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13667,"byte_end":13670,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13675,"byte_end":13712,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_i8());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13717,"byte_end":13749,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13754,"byte_end":13761,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13766,"byte_end":13769,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13774,"byte_end":13786,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13791,"byte_end":13794,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":13799,"byte_end":13869,"line_start":306,"line_end":306,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14459,"byte_end":14466,"line_start":330,"line_end":330,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"pub fn get_u16(&mut Self) -> u16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14032,"byte_end":14105,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14110,"byte_end":14113,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14118,"byte_end":14160,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14165,"byte_end":14168,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14173,"byte_end":14187,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14192,"byte_end":14195,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14200,"byte_end":14207,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14212,"byte_end":14231,"line_start":321,"line_end":321,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14236,"byte_end":14239,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14244,"byte_end":14285,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14290,"byte_end":14328,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14333,"byte_end":14340,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14345,"byte_end":14348,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14353,"byte_end":14365,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14370,"byte_end":14373,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14378,"byte_end":14451,"line_start":329,"line_end":329,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14980,"byte_end":14990,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"pub fn get_u16_le(&mut Self) -> u16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14547,"byte_end":14623,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14628,"byte_end":14631,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14636,"byte_end":14678,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14683,"byte_end":14686,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14691,"byte_end":14705,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14710,"byte_end":14713,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14718,"byte_end":14725,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14730,"byte_end":14749,"line_start":341,"line_end":341,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14754,"byte_end":14757,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14762,"byte_end":14803,"line_start":343,"line_end":343,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14808,"byte_end":14849,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14854,"byte_end":14861,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14866,"byte_end":14869,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14874,"byte_end":14886,"line_start":347,"line_end":347,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14891,"byte_end":14894,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":14899,"byte_end":14972,"line_start":349,"line_end":349,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15495,"byte_end":15502,"line_start":370,"line_end":370,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"pub fn get_i16(&mut Self) -> i16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15071,"byte_end":15141,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15146,"byte_end":15149,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15154,"byte_end":15196,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15201,"byte_end":15204,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15209,"byte_end":15223,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15228,"byte_end":15231,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15236,"byte_end":15243,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15248,"byte_end":15267,"line_start":361,"line_end":361,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15272,"byte_end":15275,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15280,"byte_end":15321,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15326,"byte_end":15364,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15369,"byte_end":15376,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15381,"byte_end":15384,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15389,"byte_end":15401,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15406,"byte_end":15409,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15414,"byte_end":15487,"line_start":369,"line_end":369,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16013,"byte_end":16023,"line_start":390,"line_end":390,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"pub fn get_i16_le(&mut Self) -> i16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15583,"byte_end":15656,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15661,"byte_end":15664,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15669,"byte_end":15711,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15716,"byte_end":15719,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15724,"byte_end":15738,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15743,"byte_end":15746,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15751,"byte_end":15758,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15763,"byte_end":15782,"line_start":381,"line_end":381,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15787,"byte_end":15790,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15795,"byte_end":15836,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15841,"byte_end":15882,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15887,"byte_end":15894,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15899,"byte_end":15902,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15907,"byte_end":15919,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15924,"byte_end":15927,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":15932,"byte_end":16005,"line_start":389,"line_end":389,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16547,"byte_end":16554,"line_start":410,"line_end":410,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"pub fn get_u32(&mut Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16104,"byte_end":16181,"line_start":394,"line_end":394,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16186,"byte_end":16189,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16194,"byte_end":16236,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16241,"byte_end":16244,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16249,"byte_end":16263,"line_start":398,"line_end":398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16268,"byte_end":16271,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16276,"byte_end":16283,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16288,"byte_end":16307,"line_start":401,"line_end":401,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16312,"byte_end":16315,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16320,"byte_end":16369,"line_start":403,"line_end":403,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16374,"byte_end":16416,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16421,"byte_end":16428,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16433,"byte_end":16436,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16441,"byte_end":16453,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16458,"byte_end":16461,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16466,"byte_end":16539,"line_start":409,"line_end":409,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17084,"byte_end":17094,"line_start":430,"line_end":430,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"pub fn get_u32_le(&mut Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16635,"byte_end":16715,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16720,"byte_end":16723,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16728,"byte_end":16770,"line_start":416,"line_end":416,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16775,"byte_end":16778,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16783,"byte_end":16797,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16802,"byte_end":16805,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16810,"byte_end":16817,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16822,"byte_end":16841,"line_start":421,"line_end":421,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16846,"byte_end":16849,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16854,"byte_end":16903,"line_start":423,"line_end":423,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16908,"byte_end":16953,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16958,"byte_end":16965,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16970,"byte_end":16973,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16978,"byte_end":16990,"line_start":427,"line_end":427,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":16995,"byte_end":16998,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17003,"byte_end":17076,"line_start":429,"line_end":429,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17611,"byte_end":17618,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"pub fn get_i32(&mut Self) -> i32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17175,"byte_end":17245,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17250,"byte_end":17253,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17258,"byte_end":17300,"line_start":436,"line_end":436,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17305,"byte_end":17308,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17313,"byte_end":17327,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17332,"byte_end":17335,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17340,"byte_end":17347,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17352,"byte_end":17371,"line_start":441,"line_end":441,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17376,"byte_end":17379,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17384,"byte_end":17433,"line_start":443,"line_end":443,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17438,"byte_end":17480,"line_start":444,"line_end":444,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17485,"byte_end":17492,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17497,"byte_end":17500,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17505,"byte_end":17517,"line_start":447,"line_end":447,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17522,"byte_end":17525,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17530,"byte_end":17603,"line_start":449,"line_end":449,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18141,"byte_end":18151,"line_start":470,"line_end":470,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"pub fn get_i32_le(&mut Self) -> i32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17699,"byte_end":17772,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17777,"byte_end":17780,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17785,"byte_end":17827,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17832,"byte_end":17835,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17840,"byte_end":17854,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17859,"byte_end":17862,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17867,"byte_end":17874,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17879,"byte_end":17898,"line_start":461,"line_end":461,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17903,"byte_end":17906,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17911,"byte_end":17960,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":17965,"byte_end":18010,"line_start":464,"line_end":464,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18015,"byte_end":18022,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18027,"byte_end":18030,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18035,"byte_end":18047,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18052,"byte_end":18055,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18060,"byte_end":18133,"line_start":469,"line_end":469,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18695,"byte_end":18702,"line_start":490,"line_end":490,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"pub fn get_u64(&mut Self) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18232,"byte_end":18305,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18310,"byte_end":18313,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18318,"byte_end":18360,"line_start":476,"line_end":476,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18365,"byte_end":18368,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18373,"byte_end":18387,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18392,"byte_end":18395,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18400,"byte_end":18407,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18412,"byte_end":18431,"line_start":481,"line_end":481,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18436,"byte_end":18439,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18444,"byte_end":18509,"line_start":483,"line_end":483,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18514,"byte_end":18564,"line_start":484,"line_end":484,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18569,"byte_end":18576,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18581,"byte_end":18584,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18589,"byte_end":18601,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18606,"byte_end":18609,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18614,"byte_end":18687,"line_start":489,"line_end":489,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19252,"byte_end":19262,"line_start":510,"line_end":510,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"pub fn get_u64_le(&mut Self) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18783,"byte_end":18859,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18864,"byte_end":18867,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18872,"byte_end":18914,"line_start":496,"line_end":496,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18919,"byte_end":18922,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18927,"byte_end":18941,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18946,"byte_end":18949,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18954,"byte_end":18961,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18966,"byte_end":18985,"line_start":501,"line_end":501,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18990,"byte_end":18993,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":18998,"byte_end":19063,"line_start":503,"line_end":503,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19068,"byte_end":19121,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19126,"byte_end":19133,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19138,"byte_end":19141,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19146,"byte_end":19158,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19163,"byte_end":19166,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19171,"byte_end":19244,"line_start":509,"line_end":509,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19803,"byte_end":19810,"line_start":530,"line_end":530,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"pub fn get_i64(&mut Self) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19343,"byte_end":19413,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19418,"byte_end":19421,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19426,"byte_end":19468,"line_start":516,"line_end":516,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19473,"byte_end":19476,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19481,"byte_end":19495,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19500,"byte_end":19503,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19508,"byte_end":19515,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19520,"byte_end":19539,"line_start":521,"line_end":521,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19544,"byte_end":19547,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19552,"byte_end":19617,"line_start":523,"line_end":523,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19622,"byte_end":19672,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19677,"byte_end":19684,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19689,"byte_end":19692,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19697,"byte_end":19709,"line_start":527,"line_end":527,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19714,"byte_end":19717,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19722,"byte_end":19795,"line_start":529,"line_end":529,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20357,"byte_end":20367,"line_start":550,"line_end":550,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"pub fn get_i64_le(&mut Self) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19891,"byte_end":19964,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19969,"byte_end":19972,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":19977,"byte_end":20019,"line_start":536,"line_end":536,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20024,"byte_end":20027,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20032,"byte_end":20046,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20051,"byte_end":20054,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20059,"byte_end":20066,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20071,"byte_end":20090,"line_start":541,"line_end":541,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20095,"byte_end":20098,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20103,"byte_end":20168,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20173,"byte_end":20226,"line_start":544,"line_end":544,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20231,"byte_end":20238,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20243,"byte_end":20246,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20251,"byte_end":20263,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20268,"byte_end":20271,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20276,"byte_end":20349,"line_start":549,"line_end":549,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20962,"byte_end":20970,"line_start":570,"line_end":570,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"pub fn get_u128(&mut Self) -> u128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20448,"byte_end":20522,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20527,"byte_end":20530,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20535,"byte_end":20578,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20583,"byte_end":20586,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20591,"byte_end":20605,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20610,"byte_end":20613,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20618,"byte_end":20625,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20630,"byte_end":20649,"line_start":561,"line_end":561,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20654,"byte_end":20657,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20662,"byte_end":20759,"line_start":563,"line_end":563,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20764,"byte_end":20831,"line_start":564,"line_end":564,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20836,"byte_end":20843,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20848,"byte_end":20851,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20856,"byte_end":20868,"line_start":567,"line_end":567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20873,"byte_end":20876,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":20881,"byte_end":20954,"line_start":569,"line_end":569,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21573,"byte_end":21584,"line_start":590,"line_end":590,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"pub fn get_u128_le(&mut Self) -> u128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21053,"byte_end":21130,"line_start":574,"line_end":574,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21135,"byte_end":21138,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21143,"byte_end":21186,"line_start":576,"line_end":576,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21191,"byte_end":21194,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21199,"byte_end":21213,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21218,"byte_end":21221,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21226,"byte_end":21233,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21238,"byte_end":21257,"line_start":581,"line_end":581,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21262,"byte_end":21265,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21270,"byte_end":21367,"line_start":583,"line_end":583,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21372,"byte_end":21442,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21447,"byte_end":21454,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21459,"byte_end":21462,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21467,"byte_end":21479,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21484,"byte_end":21487,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21492,"byte_end":21565,"line_start":589,"line_end":589,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22178,"byte_end":22186,"line_start":610,"line_end":610,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"pub fn get_i128(&mut Self) -> i128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21667,"byte_end":21738,"line_start":594,"line_end":594,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21743,"byte_end":21746,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21751,"byte_end":21794,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21799,"byte_end":21802,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21807,"byte_end":21821,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21826,"byte_end":21829,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21834,"byte_end":21841,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21846,"byte_end":21865,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21870,"byte_end":21873,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21878,"byte_end":21975,"line_start":603,"line_end":603,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":21980,"byte_end":22047,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22052,"byte_end":22059,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22064,"byte_end":22067,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22072,"byte_end":22084,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22089,"byte_end":22092,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22097,"byte_end":22170,"line_start":609,"line_end":609,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22786,"byte_end":22797,"line_start":630,"line_end":630,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"pub fn get_i128_le(&mut Self) -> i128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22269,"byte_end":22343,"line_start":614,"line_end":614,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22348,"byte_end":22351,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22356,"byte_end":22399,"line_start":616,"line_end":616,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22404,"byte_end":22407,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22412,"byte_end":22426,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22431,"byte_end":22434,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22439,"byte_end":22446,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22451,"byte_end":22470,"line_start":621,"line_end":621,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22475,"byte_end":22478,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22483,"byte_end":22580,"line_start":623,"line_end":623,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22585,"byte_end":22655,"line_start":624,"line_end":624,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22660,"byte_end":22667,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22672,"byte_end":22675,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22680,"byte_end":22692,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22697,"byte_end":22700,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22705,"byte_end":22778,"line_start":629,"line_end":629,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23322,"byte_end":23330,"line_start":650,"line_end":650,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"pub fn get_uint(&mut Self, usize) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22880,"byte_end":22953,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22958,"byte_end":22961,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":22966,"byte_end":23015,"line_start":636,"line_end":636,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23020,"byte_end":23023,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23028,"byte_end":23042,"line_start":638,"line_end":638,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23047,"byte_end":23050,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23055,"byte_end":23062,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23067,"byte_end":23086,"line_start":641,"line_end":641,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23091,"byte_end":23094,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23099,"byte_end":23144,"line_start":643,"line_end":643,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint(3));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23149,"byte_end":23191,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23196,"byte_end":23203,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23208,"byte_end":23211,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23216,"byte_end":23228,"line_start":647,"line_end":647,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23233,"byte_end":23236,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23241,"byte_end":23314,"line_start":649,"line_end":649,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23873,"byte_end":23884,"line_start":670,"line_end":670,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"pub fn get_uint_le(&mut Self, usize) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23425,"byte_end":23501,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23506,"byte_end":23509,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23514,"byte_end":23563,"line_start":656,"line_end":656,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23568,"byte_end":23571,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23576,"byte_end":23590,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23595,"byte_end":23598,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23603,"byte_end":23610,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23615,"byte_end":23634,"line_start":661,"line_end":661,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23639,"byte_end":23642,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23647,"byte_end":23692,"line_start":663,"line_end":663,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint_le(3));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23697,"byte_end":23742,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23747,"byte_end":23754,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23759,"byte_end":23762,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23767,"byte_end":23779,"line_start":667,"line_end":667,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23784,"byte_end":23787,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23792,"byte_end":23865,"line_start":669,"line_end":669,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24417,"byte_end":24424,"line_start":690,"line_end":690,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"pub fn get_int(&mut Self, usize) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":23979,"byte_end":24049,"line_start":674,"line_end":674,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24054,"byte_end":24057,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24062,"byte_end":24111,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24116,"byte_end":24119,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24124,"byte_end":24138,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24143,"byte_end":24146,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24151,"byte_end":24158,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24163,"byte_end":24182,"line_start":681,"line_end":681,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24187,"byte_end":24190,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24195,"byte_end":24240,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int(3));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24245,"byte_end":24286,"line_start":684,"line_end":684,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24291,"byte_end":24298,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24303,"byte_end":24306,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24311,"byte_end":24323,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24328,"byte_end":24331,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24336,"byte_end":24409,"line_start":689,"line_end":689,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24963,"byte_end":24973,"line_start":710,"line_end":710,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"pub fn get_int_le(&mut Self, usize) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24519,"byte_end":24592,"line_start":694,"line_end":694,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24597,"byte_end":24600,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24605,"byte_end":24654,"line_start":696,"line_end":696,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24659,"byte_end":24662,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24667,"byte_end":24681,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24686,"byte_end":24689,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24694,"byte_end":24701,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24706,"byte_end":24725,"line_start":701,"line_end":701,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24730,"byte_end":24733,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24738,"byte_end":24783,"line_start":703,"line_end":703,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int_le(3));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24788,"byte_end":24832,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24837,"byte_end":24844,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24849,"byte_end":24852,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24857,"byte_end":24869,"line_start":707,"line_end":707,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24874,"byte_end":24877,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":24882,"byte_end":24955,"line_start":709,"line_end":709,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25544,"byte_end":25551,"line_start":731,"line_end":731,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"pub fn get_f32(&mut Self) -> f32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25068,"byte_end":25141,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25146,"byte_end":25182,"line_start":715,"line_end":715,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25187,"byte_end":25190,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25195,"byte_end":25237,"line_start":717,"line_end":717,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25242,"byte_end":25245,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25250,"byte_end":25264,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25269,"byte_end":25272,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25277,"byte_end":25284,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25289,"byte_end":25308,"line_start":722,"line_end":722,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25313,"byte_end":25316,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25321,"byte_end":25370,"line_start":724,"line_end":724,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25375,"byte_end":25413,"line_start":725,"line_end":725,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25418,"byte_end":25425,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25430,"byte_end":25433,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25438,"byte_end":25450,"line_start":728,"line_end":728,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25455,"byte_end":25458,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25463,"byte_end":25536,"line_start":730,"line_end":730,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26109,"byte_end":26119,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"pub fn get_f32_le(&mut Self) -> f32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25627,"byte_end":25700,"line_start":735,"line_end":735,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25705,"byte_end":25744,"line_start":736,"line_end":736,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25749,"byte_end":25752,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25757,"byte_end":25799,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25804,"byte_end":25807,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25812,"byte_end":25826,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25831,"byte_end":25834,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25839,"byte_end":25846,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25851,"byte_end":25870,"line_start":743,"line_end":743,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25875,"byte_end":25878,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25883,"byte_end":25932,"line_start":745,"line_end":745,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25937,"byte_end":25978,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25983,"byte_end":25990,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":25995,"byte_end":25998,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26003,"byte_end":26015,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26020,"byte_end":26023,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26028,"byte_end":26101,"line_start":751,"line_end":751,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26690,"byte_end":26697,"line_start":773,"line_end":773,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"pub fn get_f64(&mut Self) -> f64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26198,"byte_end":26271,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26276,"byte_end":26312,"line_start":757,"line_end":757,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26317,"byte_end":26320,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26325,"byte_end":26367,"line_start":759,"line_end":759,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26372,"byte_end":26375,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26380,"byte_end":26394,"line_start":761,"line_end":761,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26399,"byte_end":26402,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26407,"byte_end":26414,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26419,"byte_end":26438,"line_start":764,"line_end":764,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26443,"byte_end":26446,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26451,"byte_end":26516,"line_start":766,"line_end":766,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26521,"byte_end":26559,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26564,"byte_end":26571,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26576,"byte_end":26579,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26584,"byte_end":26596,"line_start":770,"line_end":770,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26601,"byte_end":26604,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26609,"byte_end":26682,"line_start":772,"line_end":772,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27271,"byte_end":27281,"line_start":794,"line_end":794,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"pub fn get_f64_le(&mut Self) -> f64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26773,"byte_end":26846,"line_start":777,"line_end":777,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26851,"byte_end":26890,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26895,"byte_end":26898,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26903,"byte_end":26945,"line_start":780,"line_end":780,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26950,"byte_end":26953,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26958,"byte_end":26972,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26977,"byte_end":26980,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26985,"byte_end":26992,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":26997,"byte_end":27016,"line_start":785,"line_end":785,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27021,"byte_end":27024,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27029,"byte_end":27094,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_le());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27099,"byte_end":27140,"line_start":788,"line_end":788,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27145,"byte_end":27152,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27157,"byte_end":27160,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27165,"byte_end":27177,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27182,"byte_end":27185,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27190,"byte_end":27263,"line_start":793,"line_end":793,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27854,"byte_end":27867,"line_start":813,"line_end":813,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"::buf::buf_impl::Buf::copy_to_bytes","value":"pub fn copy_to_bytes(&mut Self, usize) -> crate::Bytes","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Consumes `len` bytes inside self and returns new instance of `Bytes`\n with this data.","sig":null,"attributes":[{"value":"/ Consumes `len` bytes inside self and returns new instance of `Bytes`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27360,"byte_end":27432,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ with this data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27437,"byte_end":27456,"line_start":799,"line_end":799,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27461,"byte_end":27464,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ This function may be optimized by the underlying type to avoid actual","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27469,"byte_end":27542,"line_start":801,"line_end":801,"column_start":5,"column_end":78}},{"value":"/ copies. For example, `Bytes` implementation will do a shallow copy","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27547,"byte_end":27617,"line_start":802,"line_end":802,"column_start":5,"column_end":75}},{"value":"/ (ref-count increment).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27622,"byte_end":27648,"line_start":803,"line_end":803,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27653,"byte_end":27656,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27661,"byte_end":27675,"line_start":805,"line_end":805,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27680,"byte_end":27683,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27688,"byte_end":27695,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27700,"byte_end":27719,"line_start":808,"line_end":808,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27724,"byte_end":27727,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let bytes = (&b\"hello world\"[..]).copy_to_bytes(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27732,"byte_end":27787,"line_start":810,"line_end":810,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&bytes[..], &b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27792,"byte_end":27834,"line_start":811,"line_end":811,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":27839,"byte_end":27846,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28709,"byte_end":28713,"line_start":844,"line_end":844,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::buf_impl::Buf::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28136,"byte_end":28209,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28214,"byte_end":28217,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Buf` which will read at most","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28222,"byte_end":28295,"line_start":825,"line_end":825,"column_start":5,"column_end":78}},{"value":"/ `limit` bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28300,"byte_end":28318,"line_start":826,"line_end":826,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28323,"byte_end":28326,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28331,"byte_end":28345,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28350,"byte_end":28353,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28358,"byte_end":28365,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28370,"byte_end":28399,"line_start":831,"line_end":831,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28404,"byte_end":28407,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\"[..].take(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28412,"byte_end":28457,"line_start":833,"line_end":833,"column_start":5,"column_end":50}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28462,"byte_end":28487,"line_start":834,"line_end":834,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28492,"byte_end":28495,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28500,"byte_end":28522,"line_start":836,"line_end":836,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28527,"byte_end":28557,"line_start":837,"line_end":837,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28562,"byte_end":28565,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28570,"byte_end":28605,"line_start":839,"line_end":839,"column_start":5,"column_end":40}},{"value":"/ dst.clear();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28610,"byte_end":28626,"line_start":840,"line_end":840,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28631,"byte_end":28653,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\" world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28658,"byte_end":28689,"line_start":842,"line_end":842,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28694,"byte_end":28701,"line_start":843,"line_end":843,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29306,"byte_end":29311,"line_start":866,"line_end":866,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::buf_impl::Buf::chain","value":"pub fn chain<U: Buf>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this buffer with another.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28827,"byte_end":28892,"line_start":851,"line_end":851,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28897,"byte_end":28900,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ The returned `Buf` instance will first consume all bytes from `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28905,"byte_end":28978,"line_start":853,"line_end":853,"column_start":5,"column_end":78}},{"value":"/ Afterwards the output is equivalent to the output of next.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":28983,"byte_end":29045,"line_start":854,"line_end":854,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29050,"byte_end":29053,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29058,"byte_end":29072,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29077,"byte_end":29080,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29085,"byte_end":29092,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29097,"byte_end":29116,"line_start":859,"line_end":859,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29121,"byte_end":29124,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29129,"byte_end":29184,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29189,"byte_end":29192,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ let full = chain.copy_to_bytes(11);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29197,"byte_end":29236,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(full.chunk(), b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29241,"byte_end":29286,"line_start":864,"line_end":864,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29291,"byte_end":29298,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30201,"byte_end":30207,"line_start":897,"line_end":897,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::buf_impl::Buf::reader","value":"pub fn reader(Self) -> Reader<Self> where Self: Sized","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Read` trait for `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29432,"byte_end":29500,"line_start":873,"line_end":873,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29505,"byte_end":29508,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Read` by adapting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29513,"byte_end":29586,"line_start":875,"line_end":875,"column_start":5,"column_end":78}},{"value":"/ the `Read` trait functions to the `Buf` trait functions. Given that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29591,"byte_end":29662,"line_start":876,"line_end":876,"column_start":5,"column_end":76}},{"value":"/ `Buf` operations are infallible, none of the `Read` functions will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29667,"byte_end":29737,"line_start":877,"line_end":877,"column_start":5,"column_end":75}},{"value":"/ return with `Err`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29742,"byte_end":29764,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29769,"byte_end":29772,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29777,"byte_end":29791,"line_start":880,"line_end":880,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29796,"byte_end":29799,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29804,"byte_end":29811,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29816,"byte_end":29844,"line_start":883,"line_end":883,"column_start":5,"column_end":33}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29849,"byte_end":29871,"line_start":884,"line_end":884,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29876,"byte_end":29879,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29884,"byte_end":29925,"line_start":886,"line_end":886,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29930,"byte_end":29933,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut reader = buf.reader();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29938,"byte_end":29972,"line_start":888,"line_end":888,"column_start":5,"column_end":39}},{"value":"/ let mut dst = [0; 1024];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":29977,"byte_end":30005,"line_start":889,"line_end":889,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30010,"byte_end":30013,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ let num = reader.read(&mut dst).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30018,"byte_end":30063,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30068,"byte_end":30071,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30076,"byte_end":30100,"line_start":893,"line_end":893,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&dst[..11], &b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30105,"byte_end":30153,"line_start":894,"line_end":894,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30158,"byte_end":30165,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":30170,"byte_end":30193,"line_start":896,"line_end":896,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34736,"byte_end":34742,"line_start":29,"line_end":29,"column_start":18,"column_end":24},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[{"value":"/ A trait for values that provide sequential write access to bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34165,"byte_end":34234,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34235,"byte_end":34238,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Write bytes to a buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34239,"byte_end":34266,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34267,"byte_end":34270,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that write operations are infallible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34271,"byte_end":34349,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `BufMut`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34350,"byte_end":34427,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ value is a cursor into the buffer. Writing to `BufMut` advances the cursor","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34428,"byte_end":34506,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ position.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34507,"byte_end":34520,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34521,"byte_end":34524,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The simplest `BufMut` is a `Vec<u8>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34525,"byte_end":34566,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34567,"byte_end":34570,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34571,"byte_end":34578,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34579,"byte_end":34601,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34602,"byte_end":34605,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34606,"byte_end":34631,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34632,"byte_end":34635,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34636,"byte_end":34669,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34670,"byte_end":34673,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34674,"byte_end":34710,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34711,"byte_end":34718,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35602,"byte_end":35615,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"pub fn remaining_mut(&Self) -> usize","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be written from the current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34749,"byte_end":34817,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ position until the end of the buffer is reached.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34822,"byte_end":34874,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34879,"byte_end":34882,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34887,"byte_end":34962,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ by `chunk_mut()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34967,"byte_end":34988,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":34993,"byte_end":34996,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35001,"byte_end":35015,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35020,"byte_end":35023,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35028,"byte_end":35035,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35040,"byte_end":35062,"line_start":39,"line_end":39,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35067,"byte_end":35070,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 10];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35075,"byte_end":35101,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35106,"byte_end":35137,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35142,"byte_end":35145,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let original_remaining = buf.remaining_mut();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35150,"byte_end":35199,"line_start":44,"line_end":44,"column_start":5,"column_end":54}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35204,"byte_end":35231,"line_start":45,"line_end":45,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35236,"byte_end":35239,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(original_remaining - 5, buf.remaining_mut());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35244,"byte_end":35304,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35309,"byte_end":35316,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35321,"byte_end":35324,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35329,"byte_end":35352,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35357,"byte_end":35360,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining_mut` should ensure that the return value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35365,"byte_end":35439,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ does not change unless a call is made to `advance_mut` or any other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35444,"byte_end":35515,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ function that is documented to change the `BufMut`'s current position.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35520,"byte_end":35594,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36884,"byte_end":36895,"line_start":96,"line_end":96,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"pub unsafe fn advance_mut(&mut Self, usize)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the BufMut","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35638,"byte_end":35683,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35688,"byte_end":35691,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The next call to `chunk_mut` will return a slice starting `cnt` bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35696,"byte_end":35769,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35774,"byte_end":35813,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35818,"byte_end":35821,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because there is no guarantee that the bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35826,"byte_end":35898,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ being advanced past have been initialized.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35903,"byte_end":35949,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35954,"byte_end":35957,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35962,"byte_end":35976,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35981,"byte_end":35984,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":35989,"byte_end":35996,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36001,"byte_end":36023,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36028,"byte_end":36031,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36036,"byte_end":36077,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36082,"byte_end":36085,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ // Write some data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36090,"byte_end":36112,"line_start":72,"line_end":72,"column_start":5,"column_end":27}},{"value":"/ buf.chunk_mut()[0..2].copy_from_slice(b\"he\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36117,"byte_end":36166,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/ unsafe { buf.advance_mut(2) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36171,"byte_end":36205,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36210,"byte_end":36213,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // write more bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36218,"byte_end":36241,"line_start":76,"line_end":76,"column_start":5,"column_end":28}},{"value":"/ buf.chunk_mut()[0..3].copy_from_slice(b\"llo\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36246,"byte_end":36296,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36301,"byte_end":36304,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ unsafe { buf.advance_mut(3); }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36309,"byte_end":36343,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36348,"byte_end":36351,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36356,"byte_end":36385,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36390,"byte_end":36420,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36425,"byte_end":36432,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36437,"byte_end":36440,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36445,"byte_end":36457,"line_start":85,"line_end":85,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36462,"byte_end":36465,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining_mut()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36470,"byte_end":36534,"line_start":87,"line_end":87,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36539,"byte_end":36542,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36547,"byte_end":36570,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36575,"byte_end":36578,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance_mut` to panic if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36583,"byte_end":36653,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ `cnt > self.remaining_mut()`. If the implementation does not panic,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36658,"byte_end":36729,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ the call must behave as if `cnt == self.remaining_mut()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36734,"byte_end":36795,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36800,"byte_end":36803,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36808,"byte_end":36869,"line_start":95,"line_end":95,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37361,"byte_end":37378,"line_start":116,"line_end":116,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"pub fn has_remaining_mut(&Self) -> bool","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[{"value":"/ Returns true if there is space in `self` for more bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36925,"byte_end":36985,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36990,"byte_end":36993,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining_mut() != 0`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":36998,"byte_end":37052,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37057,"byte_end":37060,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37065,"byte_end":37079,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37084,"byte_end":37087,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37092,"byte_end":37099,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37104,"byte_end":37126,"line_start":105,"line_end":105,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37131,"byte_end":37134,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37139,"byte_end":37164,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37169,"byte_end":37200,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37205,"byte_end":37208,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining_mut());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37213,"byte_end":37250,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37255,"byte_end":37258,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37263,"byte_end":37290,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37295,"byte_end":37298,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining_mut());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37303,"byte_end":37341,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37346,"byte_end":37353,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38951,"byte_end":38960,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"::buf::buf_mut::BufMut::chunk_mut","value":"pub fn chunk_mut(&mut Self) -> &mut UninitSlice","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[{"value":"/ Returns a mutable slice starting at the current BufMut position and of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37440,"byte_end":37514,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37519,"byte_end":37611,"line_start":121,"line_end":121,"column_start":5,"column_end":97}},{"value":"/ whole remainder of the buffer (this allows non-continuous implementation).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37616,"byte_end":37694,"line_start":122,"line_end":122,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37699,"byte_end":37702,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37707,"byte_end":37778,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37783,"byte_end":37797,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37802,"byte_end":37805,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned byte slice may represent uninitialized memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37810,"byte_end":37873,"line_start":127,"line_end":127,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37878,"byte_end":37881,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37886,"byte_end":37900,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37905,"byte_end":37908,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37913,"byte_end":37920,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37925,"byte_end":37947,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37952,"byte_end":37955,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":37960,"byte_end":38001,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38006,"byte_end":38009,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38014,"byte_end":38026,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38031,"byte_end":38065,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/     buf.chunk_mut()[0..].as_mut_ptr().write(b'h');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38070,"byte_end":38124,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[1..].as_mut_ptr().write(b'e');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38129,"byte_end":38183,"line_start":139,"line_end":139,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38188,"byte_end":38191,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38196,"byte_end":38223,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38228,"byte_end":38231,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     buf.chunk_mut()[0..].as_mut_ptr().write(b'l');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38236,"byte_end":38290,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[1..].as_mut_ptr().write(b'l');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38295,"byte_end":38349,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[2..].as_mut_ptr().write(b'o');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38354,"byte_end":38408,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38413,"byte_end":38416,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38421,"byte_end":38448,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38453,"byte_end":38458,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38463,"byte_end":38466,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38471,"byte_end":38500,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38505,"byte_end":38535,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38540,"byte_end":38547,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38552,"byte_end":38555,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38560,"byte_end":38583,"line_start":154,"line_end":154,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38588,"byte_end":38591,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. `chunk_mut` should return an empty","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38596,"byte_end":38668,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ slice **if and only if** `remaining_mut()` returns 0. In other words,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38673,"byte_end":38746,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ `chunk_mut()` returning an empty slice implies that `remaining_mut()` will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38751,"byte_end":38829,"line_start":158,"line_end":158,"column_start":5,"column_end":83}},{"value":"/ return 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38834,"byte_end":38912,"line_start":159,"line_end":159,"column_start":5,"column_end":83}},{"value":"/ return an empty slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38917,"byte_end":38943,"line_start":160,"line_end":160,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39487,"byte_end":39490,"line_start":183,"line_end":183,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"pub fn put<T: super::Buf>(&mut Self, T) where Self: Sized","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":38998,"byte_end":39069,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39074,"byte_end":39102,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39107,"byte_end":39110,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39115,"byte_end":39129,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39134,"byte_end":39137,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39142,"byte_end":39149,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39154,"byte_end":39176,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39181,"byte_end":39184,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39189,"byte_end":39214,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39219,"byte_end":39222,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39227,"byte_end":39248,"line_start":173,"line_end":173,"column_start":5,"column_end":26}},{"value":"/ buf.put(&b\"ello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39253,"byte_end":39279,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ buf.put(&b\" world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39284,"byte_end":39312,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39317,"byte_end":39320,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39325,"byte_end":39361,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39366,"byte_end":39373,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39378,"byte_end":39381,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39386,"byte_end":39398,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39403,"byte_end":39406,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` does not have enough capacity to contain `src`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":39411,"byte_end":39479,"line_start":182,"line_end":182,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40550,"byte_end":40559,"line_start":226,"line_end":226,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40050,"byte_end":40121,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40126,"byte_end":40154,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40159,"byte_end":40162,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ `self` must have enough remaining capacity to contain all of `src`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40167,"byte_end":40238,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40243,"byte_end":40246,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40251,"byte_end":40258,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40263,"byte_end":40285,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40290,"byte_end":40293,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40298,"byte_end":40323,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40328,"byte_end":40331,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40336,"byte_end":40341,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40346,"byte_end":40381,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/     buf.put_slice(b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40386,"byte_end":40418,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40423,"byte_end":40426,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, buf.remaining_mut());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40431,"byte_end":40474,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40479,"byte_end":40484,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40489,"byte_end":40492,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello\\0\", &dst);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40497,"byte_end":40530,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":40535,"byte_end":40542,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41633,"byte_end":41639,"line_start":272,"line_end":272,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"pub fn put_u8(&mut Self, u8)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 8 bit integer to `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41216,"byte_end":41263,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41268,"byte_end":41271,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41276,"byte_end":41318,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41323,"byte_end":41326,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41331,"byte_end":41345,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41350,"byte_end":41353,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41358,"byte_end":41365,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41370,"byte_end":41392,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41397,"byte_end":41400,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41405,"byte_end":41430,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/ buf.put_u8(0x01);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41435,"byte_end":41456,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41461,"byte_end":41490,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41495,"byte_end":41502,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41507,"byte_end":41510,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41515,"byte_end":41527,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41532,"byte_end":41535,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41540,"byte_end":41609,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41614,"byte_end":41625,"line_start":271,"line_end":271,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42138,"byte_end":42144,"line_start":295,"line_end":295,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"pub fn put_i8(&mut Self, i8)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes a signed 8 bit integer to `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41724,"byte_end":41768,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41773,"byte_end":41776,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41781,"byte_end":41823,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41828,"byte_end":41831,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41836,"byte_end":41850,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41855,"byte_end":41858,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41863,"byte_end":41870,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41875,"byte_end":41897,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41902,"byte_end":41905,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41910,"byte_end":41935,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ buf.put_i8(0x01);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41940,"byte_end":41961,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":41966,"byte_end":41995,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42000,"byte_end":42007,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42012,"byte_end":42015,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42020,"byte_end":42032,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42037,"byte_end":42040,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42045,"byte_end":42114,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42119,"byte_end":42130,"line_start":294,"line_end":294,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42684,"byte_end":42691,"line_start":318,"line_end":318,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"pub fn put_u16(&mut Self, u16)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42234,"byte_end":42307,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42312,"byte_end":42315,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42320,"byte_end":42362,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42367,"byte_end":42370,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42375,"byte_end":42389,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42394,"byte_end":42397,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42402,"byte_end":42409,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42414,"byte_end":42436,"line_start":307,"line_end":307,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42441,"byte_end":42444,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42449,"byte_end":42474,"line_start":309,"line_end":309,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16(0x0809);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42479,"byte_end":42503,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42508,"byte_end":42541,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42546,"byte_end":42553,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42558,"byte_end":42561,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42566,"byte_end":42578,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42583,"byte_end":42586,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42591,"byte_end":42660,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42665,"byte_end":42676,"line_start":317,"line_end":317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43221,"byte_end":43231,"line_start":340,"line_end":340,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"pub fn put_u16_le(&mut Self, u16)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42765,"byte_end":42841,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42846,"byte_end":42849,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42854,"byte_end":42896,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42901,"byte_end":42904,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42909,"byte_end":42923,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42928,"byte_end":42931,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42936,"byte_end":42943,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42948,"byte_end":42970,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42975,"byte_end":42978,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":42983,"byte_end":43008,"line_start":331,"line_end":331,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_le(0x0809);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43013,"byte_end":43040,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43045,"byte_end":43078,"line_start":333,"line_end":333,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43083,"byte_end":43090,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43095,"byte_end":43098,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43103,"byte_end":43115,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43120,"byte_end":43123,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43128,"byte_end":43197,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43202,"byte_end":43213,"line_start":339,"line_end":339,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43752,"byte_end":43759,"line_start":362,"line_end":362,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"pub fn put_i16(&mut Self, i16)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43305,"byte_end":43375,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43380,"byte_end":43383,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43388,"byte_end":43430,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43435,"byte_end":43438,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43443,"byte_end":43457,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43462,"byte_end":43465,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43470,"byte_end":43477,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43482,"byte_end":43504,"line_start":351,"line_end":351,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43509,"byte_end":43512,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43517,"byte_end":43542,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16(0x0809);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43547,"byte_end":43571,"line_start":354,"line_end":354,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43576,"byte_end":43609,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43614,"byte_end":43621,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43626,"byte_end":43629,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43634,"byte_end":43646,"line_start":358,"line_end":358,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43651,"byte_end":43654,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43659,"byte_end":43728,"line_start":360,"line_end":360,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43733,"byte_end":43744,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44286,"byte_end":44296,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"pub fn put_i16_le(&mut Self, i16)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43833,"byte_end":43906,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43911,"byte_end":43914,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43919,"byte_end":43961,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43966,"byte_end":43969,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43974,"byte_end":43988,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":43993,"byte_end":43996,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44001,"byte_end":44008,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44013,"byte_end":44035,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44040,"byte_end":44043,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44048,"byte_end":44073,"line_start":375,"line_end":375,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_le(0x0809);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44078,"byte_end":44105,"line_start":376,"line_end":376,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44110,"byte_end":44143,"line_start":377,"line_end":377,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44148,"byte_end":44155,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44160,"byte_end":44163,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44168,"byte_end":44180,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44185,"byte_end":44188,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44193,"byte_end":44262,"line_start":382,"line_end":382,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44267,"byte_end":44278,"line_start":383,"line_end":383,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44832,"byte_end":44839,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"pub fn put_u32(&mut Self, u32)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44370,"byte_end":44443,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44448,"byte_end":44451,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44456,"byte_end":44498,"line_start":390,"line_end":390,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44503,"byte_end":44506,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44511,"byte_end":44525,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44530,"byte_end":44533,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44538,"byte_end":44545,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44550,"byte_end":44572,"line_start":395,"line_end":395,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44577,"byte_end":44580,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44585,"byte_end":44610,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32(0x0809A0A1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44615,"byte_end":44643,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44648,"byte_end":44689,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44694,"byte_end":44701,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44706,"byte_end":44709,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44714,"byte_end":44726,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44731,"byte_end":44734,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44739,"byte_end":44808,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44813,"byte_end":44824,"line_start":405,"line_end":405,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45381,"byte_end":45391,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"pub fn put_u32_le(&mut Self, u32)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44913,"byte_end":44989,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":44994,"byte_end":44997,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45002,"byte_end":45044,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45049,"byte_end":45052,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45057,"byte_end":45071,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45076,"byte_end":45079,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45084,"byte_end":45091,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45096,"byte_end":45118,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45123,"byte_end":45126,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45131,"byte_end":45156,"line_start":419,"line_end":419,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_le(0x0809A0A1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45161,"byte_end":45192,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45197,"byte_end":45238,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45243,"byte_end":45250,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45255,"byte_end":45258,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45263,"byte_end":45275,"line_start":424,"line_end":424,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45280,"byte_end":45283,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45288,"byte_end":45357,"line_start":426,"line_end":426,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45362,"byte_end":45373,"line_start":427,"line_end":427,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45924,"byte_end":45931,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"pub fn put_i32(&mut Self, i32)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45465,"byte_end":45535,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45540,"byte_end":45543,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45548,"byte_end":45590,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45595,"byte_end":45598,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45603,"byte_end":45617,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45622,"byte_end":45625,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45630,"byte_end":45637,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45642,"byte_end":45664,"line_start":439,"line_end":439,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45669,"byte_end":45672,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45677,"byte_end":45702,"line_start":441,"line_end":441,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32(0x0809A0A1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45707,"byte_end":45735,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45740,"byte_end":45781,"line_start":443,"line_end":443,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45786,"byte_end":45793,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45798,"byte_end":45801,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45806,"byte_end":45818,"line_start":446,"line_end":446,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45823,"byte_end":45826,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45831,"byte_end":45900,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":45905,"byte_end":45916,"line_start":449,"line_end":449,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46470,"byte_end":46480,"line_start":472,"line_end":472,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"pub fn put_i32_le(&mut Self, i32)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46005,"byte_end":46078,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46083,"byte_end":46086,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46091,"byte_end":46133,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46138,"byte_end":46141,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46146,"byte_end":46160,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46165,"byte_end":46168,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46173,"byte_end":46180,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46185,"byte_end":46207,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46212,"byte_end":46215,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46220,"byte_end":46245,"line_start":463,"line_end":463,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_le(0x0809A0A1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46250,"byte_end":46281,"line_start":464,"line_end":464,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46286,"byte_end":46327,"line_start":465,"line_end":465,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46332,"byte_end":46339,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46344,"byte_end":46347,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46352,"byte_end":46364,"line_start":468,"line_end":468,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46369,"byte_end":46372,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46377,"byte_end":46446,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46451,"byte_end":46462,"line_start":471,"line_end":471,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47044,"byte_end":47051,"line_start":494,"line_end":494,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"pub fn put_u64(&mut Self, u64)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46554,"byte_end":46631,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46636,"byte_end":46639,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46644,"byte_end":46686,"line_start":478,"line_end":478,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46691,"byte_end":46694,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46699,"byte_end":46713,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46718,"byte_end":46721,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46726,"byte_end":46733,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46738,"byte_end":46760,"line_start":483,"line_end":483,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46765,"byte_end":46768,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46773,"byte_end":46798,"line_start":485,"line_end":485,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64(0x0102030405060708);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46803,"byte_end":46839,"line_start":486,"line_end":486,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46844,"byte_end":46901,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46906,"byte_end":46913,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46918,"byte_end":46921,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46926,"byte_end":46938,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46943,"byte_end":46946,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":46951,"byte_end":47020,"line_start":492,"line_end":492,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47025,"byte_end":47036,"line_start":493,"line_end":493,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47617,"byte_end":47627,"line_start":516,"line_end":516,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"pub fn put_u64_le(&mut Self, u64)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47125,"byte_end":47201,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47206,"byte_end":47209,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47214,"byte_end":47256,"line_start":500,"line_end":500,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47261,"byte_end":47264,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47269,"byte_end":47283,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47288,"byte_end":47291,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47296,"byte_end":47303,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47308,"byte_end":47330,"line_start":505,"line_end":505,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47335,"byte_end":47338,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47343,"byte_end":47368,"line_start":507,"line_end":507,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_le(0x0102030405060708);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47373,"byte_end":47412,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47417,"byte_end":47474,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47479,"byte_end":47486,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47491,"byte_end":47494,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47499,"byte_end":47511,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47516,"byte_end":47519,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47524,"byte_end":47593,"line_start":514,"line_end":514,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47598,"byte_end":47609,"line_start":515,"line_end":515,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48188,"byte_end":48195,"line_start":538,"line_end":538,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"pub fn put_i64(&mut Self, i64)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47701,"byte_end":47775,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47780,"byte_end":47783,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47788,"byte_end":47830,"line_start":522,"line_end":522,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47835,"byte_end":47838,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47843,"byte_end":47857,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47862,"byte_end":47865,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47870,"byte_end":47877,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47882,"byte_end":47904,"line_start":527,"line_end":527,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47909,"byte_end":47912,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47917,"byte_end":47942,"line_start":529,"line_end":529,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64(0x0102030405060708);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47947,"byte_end":47983,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":47988,"byte_end":48045,"line_start":531,"line_end":531,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48050,"byte_end":48057,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48062,"byte_end":48065,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48070,"byte_end":48082,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48087,"byte_end":48090,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48095,"byte_end":48164,"line_start":536,"line_end":536,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48169,"byte_end":48180,"line_start":537,"line_end":537,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48758,"byte_end":48768,"line_start":560,"line_end":560,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"pub fn put_i64_le(&mut Self, i64)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48269,"byte_end":48342,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48347,"byte_end":48350,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48355,"byte_end":48397,"line_start":544,"line_end":544,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48402,"byte_end":48405,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48410,"byte_end":48424,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48429,"byte_end":48432,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48437,"byte_end":48444,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48449,"byte_end":48471,"line_start":549,"line_end":549,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48476,"byte_end":48479,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48484,"byte_end":48509,"line_start":551,"line_end":551,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_le(0x0102030405060708);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48514,"byte_end":48553,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48558,"byte_end":48615,"line_start":553,"line_end":553,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48620,"byte_end":48627,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48632,"byte_end":48635,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48640,"byte_end":48652,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48657,"byte_end":48660,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48665,"byte_end":48734,"line_start":558,"line_end":558,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48739,"byte_end":48750,"line_start":559,"line_end":559,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49383,"byte_end":49391,"line_start":582,"line_end":582,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"pub fn put_u128(&mut Self, u128)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48842,"byte_end":48920,"line_start":564,"line_end":564,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48925,"byte_end":48928,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48933,"byte_end":48976,"line_start":566,"line_end":566,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48981,"byte_end":48984,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":48989,"byte_end":49003,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49008,"byte_end":49011,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49016,"byte_end":49023,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49028,"byte_end":49050,"line_start":571,"line_end":571,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49055,"byte_end":49058,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49063,"byte_end":49088,"line_start":573,"line_end":573,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128(0x01020304050607080910111213141516);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49093,"byte_end":49146,"line_start":574,"line_end":574,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49151,"byte_end":49240,"line_start":575,"line_end":575,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49245,"byte_end":49252,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49257,"byte_end":49260,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49265,"byte_end":49277,"line_start":578,"line_end":578,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49282,"byte_end":49285,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49290,"byte_end":49359,"line_start":580,"line_end":580,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49364,"byte_end":49375,"line_start":581,"line_end":581,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50009,"byte_end":50020,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"pub fn put_u128_le(&mut Self, u128)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49466,"byte_end":49543,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49548,"byte_end":49551,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49556,"byte_end":49599,"line_start":588,"line_end":588,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49604,"byte_end":49607,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49612,"byte_end":49626,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49631,"byte_end":49634,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49639,"byte_end":49646,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49651,"byte_end":49673,"line_start":593,"line_end":593,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49678,"byte_end":49681,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49686,"byte_end":49711,"line_start":595,"line_end":595,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_le(0x01020304050607080910111213141516);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49716,"byte_end":49772,"line_start":596,"line_end":596,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49777,"byte_end":49866,"line_start":597,"line_end":597,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49871,"byte_end":49878,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49883,"byte_end":49886,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49891,"byte_end":49903,"line_start":600,"line_end":600,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49908,"byte_end":49911,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49916,"byte_end":49985,"line_start":602,"line_end":602,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":49990,"byte_end":50001,"line_start":603,"line_end":603,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50633,"byte_end":50641,"line_start":626,"line_end":626,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"pub fn put_i128(&mut Self, i128)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50095,"byte_end":50170,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50175,"byte_end":50178,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50183,"byte_end":50226,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50231,"byte_end":50234,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50239,"byte_end":50253,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50258,"byte_end":50261,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50266,"byte_end":50273,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50278,"byte_end":50300,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50305,"byte_end":50308,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50313,"byte_end":50338,"line_start":617,"line_end":617,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128(0x01020304050607080910111213141516);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50343,"byte_end":50396,"line_start":618,"line_end":618,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50401,"byte_end":50490,"line_start":619,"line_end":619,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50495,"byte_end":50502,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50507,"byte_end":50510,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50515,"byte_end":50527,"line_start":622,"line_end":622,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50532,"byte_end":50535,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50540,"byte_end":50609,"line_start":624,"line_end":624,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50614,"byte_end":50625,"line_start":625,"line_end":625,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51256,"byte_end":51267,"line_start":648,"line_end":648,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"pub fn put_i128_le(&mut Self, i128)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50716,"byte_end":50790,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50795,"byte_end":50798,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50803,"byte_end":50846,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50851,"byte_end":50854,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50859,"byte_end":50873,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50878,"byte_end":50881,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50886,"byte_end":50893,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50898,"byte_end":50920,"line_start":637,"line_end":637,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50925,"byte_end":50928,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50933,"byte_end":50958,"line_start":639,"line_end":639,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_le(0x01020304050607080910111213141516);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":50963,"byte_end":51019,"line_start":640,"line_end":640,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51024,"byte_end":51113,"line_start":641,"line_end":641,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51118,"byte_end":51125,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51130,"byte_end":51133,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51138,"byte_end":51150,"line_start":644,"line_end":644,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51155,"byte_end":51158,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51163,"byte_end":51232,"line_start":646,"line_end":646,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51237,"byte_end":51248,"line_start":647,"line_end":647,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51809,"byte_end":51817,"line_start":670,"line_end":670,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"pub fn put_uint(&mut Self, u64, usize)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51342,"byte_end":51415,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51420,"byte_end":51423,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51428,"byte_end":51477,"line_start":654,"line_end":654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51482,"byte_end":51485,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51490,"byte_end":51504,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51509,"byte_end":51512,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51517,"byte_end":51524,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51529,"byte_end":51551,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51556,"byte_end":51559,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51564,"byte_end":51589,"line_start":661,"line_end":661,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint(0x010203, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51594,"byte_end":51624,"line_start":662,"line_end":662,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51629,"byte_end":51666,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51671,"byte_end":51678,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51683,"byte_end":51686,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51691,"byte_end":51703,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51708,"byte_end":51711,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51716,"byte_end":51785,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51790,"byte_end":51801,"line_start":669,"line_end":669,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52417,"byte_end":52428,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"pub fn put_uint_le(&mut Self, u64, usize)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":51940,"byte_end":52020,"line_start":674,"line_end":674,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52025,"byte_end":52028,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52033,"byte_end":52082,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52087,"byte_end":52090,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52095,"byte_end":52109,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52114,"byte_end":52117,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52122,"byte_end":52129,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52134,"byte_end":52156,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52161,"byte_end":52164,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52169,"byte_end":52194,"line_start":683,"line_end":683,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_le(0x010203, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52199,"byte_end":52232,"line_start":684,"line_end":684,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52237,"byte_end":52274,"line_start":685,"line_end":685,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52279,"byte_end":52286,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52291,"byte_end":52294,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52299,"byte_end":52311,"line_start":688,"line_end":688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52316,"byte_end":52319,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52324,"byte_end":52393,"line_start":690,"line_end":690,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52398,"byte_end":52409,"line_start":691,"line_end":691,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52992,"byte_end":52999,"line_start":714,"line_end":714,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"pub fn put_int(&mut Self, i64, usize)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52529,"byte_end":52599,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52604,"byte_end":52607,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52612,"byte_end":52661,"line_start":698,"line_end":698,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52666,"byte_end":52669,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52674,"byte_end":52688,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52693,"byte_end":52696,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52701,"byte_end":52708,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52713,"byte_end":52735,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52740,"byte_end":52743,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52748,"byte_end":52773,"line_start":705,"line_end":705,"column_start":5,"column_end":30}},{"value":"/ buf.put_int(0x010203, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52778,"byte_end":52807,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52812,"byte_end":52849,"line_start":707,"line_end":707,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52854,"byte_end":52861,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52866,"byte_end":52869,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52874,"byte_end":52886,"line_start":710,"line_end":710,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52891,"byte_end":52894,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52899,"byte_end":52968,"line_start":712,"line_end":712,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":52973,"byte_end":52984,"line_start":713,"line_end":713,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53591,"byte_end":53601,"line_start":736,"line_end":736,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"pub fn put_int_le(&mut Self, i64, usize)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53122,"byte_end":53195,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53200,"byte_end":53203,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53208,"byte_end":53257,"line_start":720,"line_end":720,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53262,"byte_end":53265,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53270,"byte_end":53284,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53289,"byte_end":53292,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53297,"byte_end":53304,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53309,"byte_end":53331,"line_start":725,"line_end":725,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53336,"byte_end":53339,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53344,"byte_end":53369,"line_start":727,"line_end":727,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_le(0x010203, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53374,"byte_end":53406,"line_start":728,"line_end":728,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53411,"byte_end":53448,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53453,"byte_end":53460,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53465,"byte_end":53468,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53473,"byte_end":53485,"line_start":732,"line_end":732,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53490,"byte_end":53493,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53498,"byte_end":53567,"line_start":734,"line_end":734,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53572,"byte_end":53583,"line_start":735,"line_end":735,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54202,"byte_end":54209,"line_start":759,"line_end":759,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"pub fn put_f32(&mut Self, f32)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53702,"byte_end":53776,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53781,"byte_end":53817,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53822,"byte_end":53825,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53830,"byte_end":53872,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53877,"byte_end":53880,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53885,"byte_end":53899,"line_start":745,"line_end":745,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53904,"byte_end":53907,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53912,"byte_end":53919,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53924,"byte_end":53946,"line_start":748,"line_end":748,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53951,"byte_end":53954,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53959,"byte_end":53984,"line_start":750,"line_end":750,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32(1.2f32);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":53989,"byte_end":54013,"line_start":751,"line_end":751,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54018,"byte_end":54059,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54064,"byte_end":54071,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54076,"byte_end":54079,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54084,"byte_end":54096,"line_start":755,"line_end":755,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54101,"byte_end":54104,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54109,"byte_end":54178,"line_start":757,"line_end":757,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54183,"byte_end":54194,"line_start":758,"line_end":758,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54783,"byte_end":54793,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"pub fn put_f32_le(&mut Self, f32)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54277,"byte_end":54351,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54356,"byte_end":54395,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54400,"byte_end":54403,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54408,"byte_end":54450,"line_start":766,"line_end":766,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54455,"byte_end":54458,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54463,"byte_end":54477,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54482,"byte_end":54485,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54490,"byte_end":54497,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54502,"byte_end":54524,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54529,"byte_end":54532,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54537,"byte_end":54562,"line_start":773,"line_end":773,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_le(1.2f32);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54567,"byte_end":54594,"line_start":774,"line_end":774,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54599,"byte_end":54640,"line_start":775,"line_end":775,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54645,"byte_end":54652,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54657,"byte_end":54660,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54665,"byte_end":54677,"line_start":778,"line_end":778,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54682,"byte_end":54685,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54690,"byte_end":54759,"line_start":780,"line_end":780,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54764,"byte_end":54775,"line_start":781,"line_end":781,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55380,"byte_end":55387,"line_start":805,"line_end":805,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"pub fn put_f64(&mut Self, f64)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54864,"byte_end":54938,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54943,"byte_end":54979,"line_start":787,"line_end":787,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54984,"byte_end":54987,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":54992,"byte_end":55034,"line_start":789,"line_end":789,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55039,"byte_end":55042,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55047,"byte_end":55061,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55066,"byte_end":55069,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55074,"byte_end":55081,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55086,"byte_end":55108,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55113,"byte_end":55116,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55121,"byte_end":55146,"line_start":796,"line_end":796,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64(1.2f64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55151,"byte_end":55175,"line_start":797,"line_end":797,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55180,"byte_end":55237,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55242,"byte_end":55249,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55254,"byte_end":55257,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55262,"byte_end":55274,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55279,"byte_end":55282,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55287,"byte_end":55356,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55361,"byte_end":55372,"line_start":804,"line_end":804,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55977,"byte_end":55987,"line_start":828,"line_end":828,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"pub fn put_f64_le(&mut Self, f64)","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55455,"byte_end":55529,"line_start":809,"line_end":809,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55534,"byte_end":55573,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55578,"byte_end":55581,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55586,"byte_end":55628,"line_start":812,"line_end":812,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55633,"byte_end":55636,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55641,"byte_end":55655,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55660,"byte_end":55663,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55668,"byte_end":55675,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55680,"byte_end":55702,"line_start":817,"line_end":817,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55707,"byte_end":55710,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55715,"byte_end":55740,"line_start":819,"line_end":819,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_le(1.2f64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55745,"byte_end":55772,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55777,"byte_end":55834,"line_start":821,"line_end":821,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55839,"byte_end":55846,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55851,"byte_end":55854,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55859,"byte_end":55871,"line_start":824,"line_end":824,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55876,"byte_end":55879,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55884,"byte_end":55953,"line_start":826,"line_end":826,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":55958,"byte_end":55969,"line_start":827,"line_end":827,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56402,"byte_end":56407,"line_start":845,"line_end":845,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::buf_mut::BufMut::limit","value":"pub fn limit(Self, usize) -> Limit<Self> where Self: Sized","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which can write at most `limit` bytes to `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56058,"byte_end":56129,"line_start":832,"line_end":832,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56134,"byte_end":56137,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56142,"byte_end":56156,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56161,"byte_end":56164,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56169,"byte_end":56176,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56181,"byte_end":56203,"line_start":837,"line_end":837,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56208,"byte_end":56211,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let arr = &mut [0u8; 128][..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56216,"byte_end":56250,"line_start":839,"line_end":839,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(arr.remaining_mut(), 128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56255,"byte_end":56296,"line_start":840,"line_end":840,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56301,"byte_end":56304,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let dst = arr.limit(10);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56309,"byte_end":56337,"line_start":842,"line_end":842,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(dst.remaining_mut(), 10);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56342,"byte_end":56382,"line_start":843,"line_end":843,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56387,"byte_end":56394,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57256,"byte_end":57262,"line_start":875,"line_end":875,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::buf_mut::BufMut::writer","value":"pub fn writer(Self) -> Writer<Self> where Self: Sized","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Write` trait for `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56523,"byte_end":56592,"line_start":852,"line_end":852,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56597,"byte_end":56600,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Write` by adapting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56605,"byte_end":56679,"line_start":854,"line_end":854,"column_start":5,"column_end":79}},{"value":"/ the `Write` trait functions to the `BufMut` trait functions. Given that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56684,"byte_end":56759,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ `BufMut` operations are infallible, none of the `Write` functions will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56764,"byte_end":56838,"line_start":856,"line_end":856,"column_start":5,"column_end":79}},{"value":"/ return with `Err`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56843,"byte_end":56865,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56870,"byte_end":56873,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56878,"byte_end":56892,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56897,"byte_end":56900,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56905,"byte_end":56912,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56917,"byte_end":56939,"line_start":862,"line_end":862,"column_start":5,"column_end":27}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56944,"byte_end":56967,"line_start":863,"line_end":863,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56972,"byte_end":56975,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":56980,"byte_end":57014,"line_start":865,"line_end":865,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57019,"byte_end":57022,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ let num = buf.write(&b\"hello world\"[..]).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57027,"byte_end":57081,"line_start":867,"line_end":867,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57086,"byte_end":57110,"line_start":868,"line_end":868,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57115,"byte_end":57118,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57123,"byte_end":57154,"line_start":870,"line_end":870,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57159,"byte_end":57162,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57167,"byte_end":57208,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57213,"byte_end":57220,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57225,"byte_end":57248,"line_start":874,"line_end":874,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57923,"byte_end":57932,"line_start":902,"line_end":902,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::buf_mut::BufMut::chain_mut","value":"pub fn chain_mut<U: BufMut>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adapter which will chain this buffer with another.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57359,"byte_end":57424,"line_start":882,"line_end":882,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57429,"byte_end":57432,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ The returned `BufMut` instance will first write to all bytes from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57437,"byte_end":57506,"line_start":884,"line_end":884,"column_start":5,"column_end":74}},{"value":"/ `self`. Afterwards, it will write to `next`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57511,"byte_end":57559,"line_start":885,"line_end":885,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57564,"byte_end":57567,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57572,"byte_end":57586,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57591,"byte_end":57594,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57599,"byte_end":57606,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57611,"byte_end":57633,"line_start":890,"line_end":890,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57638,"byte_end":57641,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 5];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57646,"byte_end":57671,"line_start":892,"line_end":892,"column_start":5,"column_end":30}},{"value":"/ let mut b = [0u8; 6];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57676,"byte_end":57701,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57706,"byte_end":57709,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ let mut chain = (&mut a[..]).chain_mut(&mut b[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57714,"byte_end":57769,"line_start":895,"line_end":895,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57774,"byte_end":57777,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ chain.put_slice(b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57782,"byte_end":57818,"line_start":897,"line_end":897,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57823,"byte_end":57826,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57831,"byte_end":57864,"line_start":899,"line_end":899,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57869,"byte_end":57903,"line_start":900,"line_end":900,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":57908,"byte_end":57915,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62937,"byte_end":62942,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[{"value":"/ A `Chain` sequences two buffers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62166,"byte_end":62202,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62203,"byte_end":62206,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Chain` is an adapter that links two underlying buffers and provides a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62207,"byte_end":62281,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ continuous view across both buffers. It is able to sequence either immutable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62282,"byte_end":62362,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ buffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62363,"byte_end":62431,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62432,"byte_end":62435,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`Buf::chain`]. Please see that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62436,"byte_end":62515,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ function's documentation for more detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62516,"byte_end":62561,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62562,"byte_end":62565,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62566,"byte_end":62580,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62581,"byte_end":62584,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62585,"byte_end":62592,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62593,"byte_end":62621,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62622,"byte_end":62625,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62626,"byte_end":62660,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62661,"byte_end":62691,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62692,"byte_end":62695,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let full: Bytes = buf.copy_to_bytes(11);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62696,"byte_end":62740,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(full[..], b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62741,"byte_end":62786,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62787,"byte_end":62794,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62795,"byte_end":62798,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Buf::chain`]: trait.Buf.html#method.chain","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62799,"byte_end":62846,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62847,"byte_end":62874,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62875,"byte_end":62908,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63432,"byte_end":63441,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"pub fn first_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the first underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63146,"byte_end":63197,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63202,"byte_end":63205,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63210,"byte_end":63224,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63229,"byte_end":63232,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63237,"byte_end":63244,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63249,"byte_end":63268,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63273,"byte_end":63276,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63281,"byte_end":63310,"line_start":50,"line_end":50,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63315,"byte_end":63345,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63350,"byte_end":63353,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.first_ref()[..], b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63358,"byte_end":63408,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63413,"byte_end":63420,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63856,"byte_end":63865,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"pub fn first_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63484,"byte_end":63543,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63548,"byte_end":63551,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63556,"byte_end":63570,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63575,"byte_end":63578,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63583,"byte_end":63590,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63595,"byte_end":63614,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63619,"byte_end":63622,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello\"[..])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63627,"byte_end":63660,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63665,"byte_end":63695,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63700,"byte_end":63703,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ buf.first_mut().advance(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63708,"byte_end":63739,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63744,"byte_end":63747,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(9);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63752,"byte_end":63788,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(full, b\"elloworld\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63793,"byte_end":63832,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63837,"byte_end":63844,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64204,"byte_end":64212,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"pub fn last_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the last underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63920,"byte_end":63970,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63975,"byte_end":63978,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":63983,"byte_end":63997,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64002,"byte_end":64005,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64010,"byte_end":64017,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64022,"byte_end":64041,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64046,"byte_end":64049,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64054,"byte_end":64083,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64088,"byte_end":64118,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64123,"byte_end":64126,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.last_ref()[..], b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64131,"byte_end":64180,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64185,"byte_end":64192,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64628,"byte_end":64636,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"pub fn last_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64255,"byte_end":64313,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64318,"byte_end":64321,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64326,"byte_end":64340,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64345,"byte_end":64348,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64353,"byte_end":64360,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64365,"byte_end":64384,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64389,"byte_end":64392,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64397,"byte_end":64431,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64436,"byte_end":64466,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64471,"byte_end":64474,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ buf.last_mut().advance(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64479,"byte_end":64509,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64514,"byte_end":64517,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(10);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64522,"byte_end":64559,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(full, b\"hello orld\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64564,"byte_end":64604,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64609,"byte_end":64616,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":65069,"byte_end":65079,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[{"value":"/ Consumes this `Chain`, returning the underlying values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64691,"byte_end":64750,"line_start":113,"line_end":113,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64755,"byte_end":64758,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64763,"byte_end":64777,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64782,"byte_end":64785,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64790,"byte_end":64797,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64802,"byte_end":64821,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64826,"byte_end":64829,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let chain = (&b\"hello\"[..])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64834,"byte_end":64865,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64870,"byte_end":64900,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64905,"byte_end":64908,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let (first, last) = chain.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64913,"byte_end":64956,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(first[..], b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":64961,"byte_end":65001,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(last[..], b\"world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":65006,"byte_end":65045,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":65050,"byte_end":65057,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1226},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67564,"byte_end":67572,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1228}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Iterator over the bytes contained by the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67020,"byte_end":67072,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67073,"byte_end":67076,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Buf`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67077,"byte_end":67138,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67139,"byte_end":67142,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67143,"byte_end":67157,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67158,"byte_end":67161,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67162,"byte_end":67178,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67179,"byte_end":67182,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67183,"byte_end":67190,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67191,"byte_end":67212,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67213,"byte_end":67216,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67217,"byte_end":67256,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67257,"byte_end":67292,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67293,"byte_end":67296,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67297,"byte_end":67337,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67338,"byte_end":67378,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67379,"byte_end":67419,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67420,"byte_end":67454,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67455,"byte_end":67462,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67463,"byte_end":67466,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: trait.Buf.html#method.iter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67467,"byte_end":67507,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67508,"byte_end":67535,"line_start":24,"line_end":24,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68532,"byte_end":68542,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `IntoIter`, returning the underlying value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68133,"byte_end":68194,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68199,"byte_end":68202,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68207,"byte_end":68221,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68226,"byte_end":68229,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68234,"byte_end":68245,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68250,"byte_end":68278,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68283,"byte_end":68286,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68291,"byte_end":68330,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68335,"byte_end":68370,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68375,"byte_end":68378,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68383,"byte_end":68423,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68428,"byte_end":68431,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let buf = iter.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68436,"byte_end":68468,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(2, buf.remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68473,"byte_end":68508,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68513,"byte_end":68520,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69021,"byte_end":69028,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68586,"byte_end":68631,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68636,"byte_end":68639,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68644,"byte_end":68709,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68714,"byte_end":68717,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68722,"byte_end":68736,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68741,"byte_end":68744,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68749,"byte_end":68760,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68765,"byte_end":68793,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68798,"byte_end":68801,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68806,"byte_end":68845,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68850,"byte_end":68885,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68890,"byte_end":68893,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68898,"byte_end":68938,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68943,"byte_end":68946,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, iter.get_ref().remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":68951,"byte_end":68997,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69002,"byte_end":69009,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69561,"byte_end":69568,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69075,"byte_end":69128,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69133,"byte_end":69136,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69141,"byte_end":69206,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69211,"byte_end":69214,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69219,"byte_end":69233,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69238,"byte_end":69241,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69246,"byte_end":69257,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BytesMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69262,"byte_end":69293,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69298,"byte_end":69301,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let buf = BytesMut::from(&b\"abc\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69306,"byte_end":69348,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69353,"byte_end":69388,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69393,"byte_end":69396,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69401,"byte_end":69441,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69446,"byte_end":69449,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ iter.get_mut().advance(1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69454,"byte_end":69484,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69489,"byte_end":69492,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69497,"byte_end":69537,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69542,"byte_end":69549,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1232},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70273,"byte_end":70278,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which limits the amount of bytes that can be written","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70140,"byte_end":70215,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ to an underlying buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70216,"byte_end":70244,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70501,"byte_end":70511,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this `Limit`, returning the underlying value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70431,"byte_end":70489,"line_start":19,"line_end":19,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70695,"byte_end":70702,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70555,"byte_end":70603,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70608,"byte_end":70611,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70616,"byte_end":70683,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70897,"byte_end":70904,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70749,"byte_end":70805,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70810,"byte_end":70813,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70818,"byte_end":70885,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71200,"byte_end":71205,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be written","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70963,"byte_end":71022,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71027,"byte_end":71030,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71035,"byte_end":71045,"line_start":40,"line_end":40,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71050,"byte_end":71053,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than indicated by this method then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71058,"byte_end":71134,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71139,"byte_end":71188,"line_start":43,"line_end":43,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71470,"byte_end":71479,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be written.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71254,"byte_end":71311,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71316,"byte_end":71319,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71324,"byte_end":71334,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71339,"byte_end":71342,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71347,"byte_end":71423,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ number of available bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71428,"byte_end":71458,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72325,"byte_end":72331,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":1241}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which implements `io::Read` for the inner value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72065,"byte_end":72133,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72134,"byte_end":72137,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `reader()` on `Buf`. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72138,"byte_end":72210,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ documentation of [`reader()`](trait.Buf.html#method.reader) for more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72211,"byte_end":72283,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72284,"byte_end":72296,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72772,"byte_end":72779,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72440,"byte_end":72485,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72490,"byte_end":72493,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72498,"byte_end":72563,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72568,"byte_end":72571,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72576,"byte_end":72590,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72595,"byte_end":72598,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72603,"byte_end":72614,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72619,"byte_end":72638,"line_start":27,"line_end":27,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72643,"byte_end":72646,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".reader();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72651,"byte_end":72689,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72694,"byte_end":72697,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello world\", buf.get_ref());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72702,"byte_end":72748,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72753,"byte_end":72760,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72967,"byte_end":72974,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72824,"byte_end":72877,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72882,"byte_end":72885,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72890,"byte_end":72955,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73434,"byte_end":73444,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Reader`, returning the underlying value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73031,"byte_end":73090,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73095,"byte_end":73098,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73103,"byte_end":73117,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73122,"byte_end":73125,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73130,"byte_end":73141,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73146,"byte_end":73165,"line_start":49,"line_end":49,"column_start":5,"column_end":24}},{"value":"/ use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73170,"byte_end":73186,"line_start":50,"line_end":50,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73191,"byte_end":73194,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73199,"byte_end":73241,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73246,"byte_end":73271,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73276,"byte_end":73279,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut buf, &mut dst).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73284,"byte_end":73326,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73331,"byte_end":73334,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73339,"byte_end":73370,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(0, buf.remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73375,"byte_end":73410,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73415,"byte_end":73422,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74245,"byte_end":74249,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which limits the bytes read from an underlying buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":73986,"byte_end":74060,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74061,"byte_end":74064,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `take()` on `Buf`. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74065,"byte_end":74135,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ documentation of [`take()`](trait.BufExt.html#method.take) for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74136,"byte_end":74216,"line_start":8,"line_end":8,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74862,"byte_end":74872,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Take`, returning the underlying value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74392,"byte_end":74449,"line_start":20,"line_end":20,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74454,"byte_end":74457,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74462,"byte_end":74476,"line_start":22,"line_end":22,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74481,"byte_end":74484,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74489,"byte_end":74500,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74505,"byte_end":74534,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74539,"byte_end":74542,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74547,"byte_end":74588,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74593,"byte_end":74618,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74623,"byte_end":74626,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74631,"byte_end":74653,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74658,"byte_end":74690,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74695,"byte_end":74698,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74703,"byte_end":74738,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74743,"byte_end":74746,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74751,"byte_end":74767,"line_start":35,"line_end":35,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74772,"byte_end":74794,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74799,"byte_end":74838,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74843,"byte_end":74850,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75247,"byte_end":75254,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74916,"byte_end":74961,"line_start":43,"line_end":43,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74966,"byte_end":74969,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74974,"byte_end":75039,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75044,"byte_end":75047,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75052,"byte_end":75066,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75071,"byte_end":75074,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75079,"byte_end":75090,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75095,"byte_end":75114,"line_start":50,"line_end":50,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75119,"byte_end":75122,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".take(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75127,"byte_end":75164,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75169,"byte_end":75172,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, buf.get_ref().remaining());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75177,"byte_end":75223,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75228,"byte_end":75235,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75739,"byte_end":75746,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75301,"byte_end":75354,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75359,"byte_end":75362,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75367,"byte_end":75432,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75437,"byte_end":75440,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75445,"byte_end":75459,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75464,"byte_end":75467,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75472,"byte_end":75483,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75488,"byte_end":75517,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75522,"byte_end":75525,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75530,"byte_end":75571,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75576,"byte_end":75601,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75606,"byte_end":75609,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().advance(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75614,"byte_end":75643,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75648,"byte_end":75651,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75656,"byte_end":75678,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"ll\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75683,"byte_end":75715,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75720,"byte_end":75727,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76298,"byte_end":76303,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75805,"byte_end":75862,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75867,"byte_end":75870,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75875,"byte_end":75885,"line_start":83,"line_end":83,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75890,"byte_end":75893,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than indicated by this method then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75898,"byte_end":75971,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":75976,"byte_end":76025,"line_start":86,"line_end":86,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76030,"byte_end":76033,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76038,"byte_end":76052,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76057,"byte_end":76060,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76065,"byte_end":76076,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76081,"byte_end":76100,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76105,"byte_end":76108,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76113,"byte_end":76154,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76159,"byte_end":76162,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, buf.limit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76167,"byte_end":76198,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76203,"byte_end":76238,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(1, buf.limit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76243,"byte_end":76274,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76279,"byte_end":76286,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76943,"byte_end":76952,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76352,"byte_end":76406,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76411,"byte_end":76414,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76419,"byte_end":76429,"line_start":105,"line_end":105,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76434,"byte_end":76437,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76442,"byte_end":76515,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ number of available bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76520,"byte_end":76550,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76555,"byte_end":76558,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76563,"byte_end":76577,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76582,"byte_end":76585,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76590,"byte_end":76601,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76606,"byte_end":76635,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76640,"byte_end":76643,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76648,"byte_end":76689,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76694,"byte_end":76719,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76724,"byte_end":76727,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76732,"byte_end":76754,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76759,"byte_end":76791,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76796,"byte_end":76799,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76804,"byte_end":76820,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76825,"byte_end":76828,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buf.set_limit(3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76833,"byte_end":76854,"line_start":123,"line_end":123,"column_start":5,"column_end":26}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76859,"byte_end":76881,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76886,"byte_end":76919,"line_start":125,"line_end":125,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":76924,"byte_end":76931,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78210,"byte_end":78221,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"UninitSlice","qualname":"::buf::uninit_slice::UninitSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uninitialized byte slice.","sig":null,"attributes":[{"value":"/ Uninitialized byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77570,"byte_end":77599,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77600,"byte_end":77603,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returned by `BufMut::chunk_mut()`, the referenced byte slice may be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77604,"byte_end":77675,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ uninitialized. The wrapper provides safe access without introducing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77676,"byte_end":77747,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77748,"byte_end":77771,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77772,"byte_end":77775,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The safety invariants of this wrapper are:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77776,"byte_end":77822,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77823,"byte_end":77826,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/  1. Reading from an `UninitSlice` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77827,"byte_end":77887,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/  2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77888,"byte_end":77966,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77967,"byte_end":77970,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":77971,"byte_end":78048,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ that it is possible in safe code to write uninitialized bytes to an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78049,"byte_end":78120,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ `&mut [MaybeUninit<u8>]`, which this type prohibits.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78121,"byte_end":78177,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"repr(transparent)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78178,"byte_end":78198,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78839,"byte_end":78857,"line_start":43,"line_end":43,"column_start":19,"column_end":37},"name":"from_raw_parts_mut","qualname":"<UninitSlice>::from_raw_parts_mut","value":"pub unsafe fn from_raw_parts_mut<'a>(*mut u8, usize) -> &'a mut UninitSlice","parent":null,"children":[],"decl_id":null,"docs":" Create a `&mut UninitSlice` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Create a `&mut UninitSlice` from a pointer and a length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78266,"byte_end":78326,"line_start":25,"line_end":25,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78331,"byte_end":78334,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78339,"byte_end":78351,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78356,"byte_end":78359,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `ptr` references a valid memory region owned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78364,"byte_end":78440,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ by the caller representing a byte slice for the duration of `'a`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78445,"byte_end":78514,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78519,"byte_end":78522,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78527,"byte_end":78541,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78546,"byte_end":78549,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78554,"byte_end":78561,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78566,"byte_end":78598,"line_start":35,"line_end":35,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78603,"byte_end":78606,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\".to_vec();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78611,"byte_end":78651,"line_start":37,"line_end":37,"column_start":5,"column_end":45}},{"value":"/ let ptr = bytes.as_ptr() as *mut _;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78656,"byte_end":78695,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ let len = bytes.len();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78700,"byte_end":78726,"line_start":39,"line_end":39,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78731,"byte_end":78734,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78739,"byte_end":78808,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78813,"byte_end":78820,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79584,"byte_end":79594,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"write_byte","qualname":"<UninitSlice>::write_byte","value":"pub fn write_byte(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Write a single byte at the specified offset.","sig":null,"attributes":[{"value":"/ Write a single byte at the specified offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79111,"byte_end":79159,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79164,"byte_end":79167,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79172,"byte_end":79184,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79189,"byte_end":79192,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The function panics if `index` is out of bounds.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79197,"byte_end":79249,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79254,"byte_end":79257,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79262,"byte_end":79276,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79281,"byte_end":79284,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79289,"byte_end":79296,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79301,"byte_end":79333,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79338,"byte_end":79341,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79346,"byte_end":79384,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79389,"byte_end":79470,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79475,"byte_end":79478,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ slice.write_byte(0, b'b');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79483,"byte_end":79513,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79518,"byte_end":79521,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"boo\", &data[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79526,"byte_end":79560,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79565,"byte_end":79572,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80289,"byte_end":80304,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<UninitSlice>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Copies bytes  from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies bytes  from `src` into `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79739,"byte_end":79780,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79785,"byte_end":79788,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The length of `src` must be the same as `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79793,"byte_end":79844,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79849,"byte_end":79852,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79857,"byte_end":79869,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79874,"byte_end":79877,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The function panics if `src` has a different length than `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79882,"byte_end":79950,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79955,"byte_end":79958,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79963,"byte_end":79977,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79982,"byte_end":79985,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":79990,"byte_end":79997,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80002,"byte_end":80034,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80039,"byte_end":80042,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80047,"byte_end":80085,"line_start":86,"line_end":86,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80090,"byte_end":80171,"line_start":87,"line_end":87,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80176,"byte_end":80179,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ slice.copy_from_slice(b\"bar\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80184,"byte_end":80218,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80223,"byte_end":80226,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"bar\", &data[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80231,"byte_end":80265,"line_start":91,"line_end":91,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80270,"byte_end":80277,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80980,"byte_end":80990,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<UninitSlice>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Return a raw pointer to the slice's buffer.","sig":null,"attributes":[{"value":"/ Return a raw pointer to the slice's buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80519,"byte_end":80566,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80571,"byte_end":80574,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80579,"byte_end":80591,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80596,"byte_end":80599,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The caller **must not** read from the referenced memory and **must not**","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80604,"byte_end":80680,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ write **uninitialized** bytes to the slice either.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80685,"byte_end":80739,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80744,"byte_end":80747,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80752,"byte_end":80766,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80771,"byte_end":80774,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80779,"byte_end":80786,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80791,"byte_end":80813,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80818,"byte_end":80821,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80826,"byte_end":80855,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80860,"byte_end":80894,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/ let ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80899,"byte_end":80956,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":80961,"byte_end":80968,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81379,"byte_end":81382,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"len","qualname":"<UninitSlice>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the slice.","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81064,"byte_end":81109,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81114,"byte_end":81117,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81122,"byte_end":81136,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81141,"byte_end":81144,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81149,"byte_end":81156,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81161,"byte_end":81183,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81188,"byte_end":81191,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81196,"byte_end":81225,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81230,"byte_end":81264,"line_start":131,"line_end":131,"column_start":5,"column_end":39}},{"value":"/ let len = BufMut::chunk_mut(&mut slice).len();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81269,"byte_end":81319,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81324,"byte_end":81327,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(len, 3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81332,"byte_end":81355,"line_start":134,"line_end":134,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81360,"byte_end":81367,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83201,"byte_end":83207,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1284}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which implements `io::Write` for the inner value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":82931,"byte_end":83003,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83004,"byte_end":83007,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `writer()` on `BufMut`. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83008,"byte_end":83083,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ documentation of [`writer()`](trait.BufMut.html#method.writer) for more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83084,"byte_end":83159,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83160,"byte_end":83172,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83670,"byte_end":83677,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83319,"byte_end":83367,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83372,"byte_end":83375,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83380,"byte_end":83447,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83452,"byte_end":83455,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83460,"byte_end":83474,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83479,"byte_end":83482,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83487,"byte_end":83498,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83503,"byte_end":83525,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83530,"byte_end":83533,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let buf = Vec::with_capacity(1024).writer();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83538,"byte_end":83586,"line_start":29,"line_end":29,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83591,"byte_end":83594,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83599,"byte_end":83646,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83651,"byte_end":83658,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84112,"byte_end":84119,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83722,"byte_end":83778,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83783,"byte_end":83786,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83791,"byte_end":83858,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83863,"byte_end":83866,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83871,"byte_end":83885,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83890,"byte_end":83893,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83898,"byte_end":83909,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83914,"byte_end":83936,"line_start":44,"line_end":44,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83941,"byte_end":83944,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83949,"byte_end":83983,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83988,"byte_end":83991,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().reserve(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83996,"byte_end":84028,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84033,"byte_end":84036,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84041,"byte_end":84088,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84093,"byte_end":84100,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84593,"byte_end":84603,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84176,"byte_end":84235,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84240,"byte_end":84243,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84248,"byte_end":84262,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84267,"byte_end":84270,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84275,"byte_end":84286,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84291,"byte_end":84313,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/ use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84318,"byte_end":84334,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84339,"byte_end":84342,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84347,"byte_end":84381,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ let mut src = &b\"hello world\"[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84386,"byte_end":84424,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84429,"byte_end":84432,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut src, &mut buf).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84437,"byte_end":84479,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84484,"byte_end":84487,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84492,"byte_end":84523,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84528,"byte_end":84569,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84574,"byte_end":84581,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88635,"byte_end":88640,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"decl_id":null,"docs":" A cheaply cloneable and sliceable chunk of contiguous memory.","sig":null,"attributes":[{"value":"/ A cheaply cloneable and sliceable chunk of contiguous memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85302,"byte_end":85367,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85368,"byte_end":85371,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85372,"byte_end":85449,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85450,"byte_end":85528,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85529,"byte_end":85575,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85576,"byte_end":85579,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85580,"byte_end":85660,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85661,"byte_end":85720,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85721,"byte_end":85724,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `Bytes` does not have a single implementation. It is an interface, whose","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85725,"byte_end":85801,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ exact behavior is implemented through dynamic dispatch in several underlying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85802,"byte_end":85882,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ implementations of `Bytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85883,"byte_end":85914,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85915,"byte_end":85918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ All `Bytes` implementations must fulfill the following requirements:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85919,"byte_end":85991,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ - They are cheaply cloneable and thereby shareable between an unlimited amount","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":85992,"byte_end":86074,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/   of components, for example by modifying a reference count.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86075,"byte_end":86139,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ - Instances can be sliced to refer to a subset of the the original buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86140,"byte_end":86218,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86219,"byte_end":86222,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86223,"byte_end":86230,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86231,"byte_end":86252,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86253,"byte_end":86256,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut mem = Bytes::from(\"Hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86257,"byte_end":86302,"line_start":34,"line_end":34,"column_start":1,"column_end":46}},{"value":"/ let a = mem.slice(0..5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86303,"byte_end":86331,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86332,"byte_end":86335,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, \"Hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86336,"byte_end":86363,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86364,"byte_end":86367,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let b = mem.split_to(6);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86368,"byte_end":86396,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86397,"byte_end":86400,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem, \"world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86401,"byte_end":86430,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(b, \"Hello \");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86431,"byte_end":86459,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86460,"byte_end":86467,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86468,"byte_end":86471,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Memory layout","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86472,"byte_end":86491,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86492,"byte_end":86495,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The `Bytes` struct itself is fairly small, limited to 4 `usize` fields used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86496,"byte_end":86575,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ to track information about which segment of the underlying memory the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86576,"byte_end":86649,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ `Bytes` handle has access to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86650,"byte_end":86683,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86684,"byte_end":86687,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `Bytes` keeps both a pointer to the shared state containing the full memory","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86688,"byte_end":86767,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ slice and a pointer to the start of the region visible by the handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86768,"byte_end":86841,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ `Bytes` also tracks the length of its view into the memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86842,"byte_end":86905,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86906,"byte_end":86909,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Sharing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86910,"byte_end":86923,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86924,"byte_end":86927,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `Bytes` contains a vtable, which allows implementations of `Bytes` to define","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":86928,"byte_end":87008,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ how sharing/cloneing is implemented in detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87009,"byte_end":87059,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ When `Bytes::clone()` is called, `Bytes` will call the vtable function for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87060,"byte_end":87138,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ cloning the backing storage in order to share it behind between multiple","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87139,"byte_end":87215,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ `Bytes` instances.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87216,"byte_end":87238,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87239,"byte_end":87242,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which refer to constant memory (e.g. created","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87243,"byte_end":87319,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ via `Bytes::from_static()`) the cloning implementation will be a no-op.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87320,"byte_end":87395,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87396,"byte_end":87399,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which point to a reference counted shared storage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87400,"byte_end":87481,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ (e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87482,"byte_end":87554,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ the reference count.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87555,"byte_end":87579,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87580,"byte_end":87583,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Due to this mechanism, multiple `Bytes` instances may point to the same","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87584,"byte_end":87659,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ shared memory region.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87660,"byte_end":87685,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ Each `Bytes` instance can point to different sections within that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87686,"byte_end":87755,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/ memory region, and `Bytes` instances may or may not have overlapping views","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87756,"byte_end":87834,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ into the memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87835,"byte_end":87855,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87856,"byte_end":87859,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The following diagram visualizes a scenario where 2 `Bytes` instances make","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87860,"byte_end":87938,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ use of an `Arc`-based backing storage, and provide access to different views:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":87939,"byte_end":88020,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88021,"byte_end":88024,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88025,"byte_end":88036,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88037,"byte_end":88040,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/    Arc ptrs                   +---------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88041,"byte_end":88086,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/    ________________________ / | Bytes 2 |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88087,"byte_end":88132,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/   /                           +---------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88133,"byte_end":88178,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/  /          +-----------+     |         |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88179,"byte_end":88224,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ |_________/ |  Bytes 1  |     |         |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88225,"byte_end":88270,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ |           +-----------+     |         |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88271,"byte_end":88316,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/ |           |           | ___/ data     | tail","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88317,"byte_end":88367,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ |      data |      tail |/              |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88368,"byte_end":88413,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/ v           v           v               v","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88414,"byte_end":88459,"line_start":89,"line_end":89,"column_start":1,"column_end":46}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88460,"byte_end":88511,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/ | Arc |     |           |               |     |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88512,"byte_end":88563,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88564,"byte_end":88615,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88616,"byte_end":88623,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89338,"byte_end":89341,"line_start":124,"line_end":124,"column_start":18,"column_end":21},"name":"new","qualname":"<Bytes>::new","value":"pub const fn new() -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"/ Creates a new empty `Bytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88999,"byte_end":89031,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89036,"byte_end":89039,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This will not allocate and the returned `Bytes` handle will be empty.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89044,"byte_end":89117,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89122,"byte_end":89125,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89130,"byte_end":89144,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89149,"byte_end":89152,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89157,"byte_end":89164,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89169,"byte_end":89190,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89195,"byte_end":89198,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89203,"byte_end":89228,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&b[..], b\"\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89233,"byte_end":89261,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89266,"byte_end":89273,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89278,"byte_end":89287,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89292,"byte_end":89320,"line_start":123,"line_end":123,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90078,"byte_end":90089,"line_start":152,"line_end":152,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"pub const fn from_static(&'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"/ Creates a new `Bytes` from a static slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89669,"byte_end":89715,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89720,"byte_end":89723,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned `Bytes` will point directly to the static slice. There is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89728,"byte_end":89802,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ no allocating or copying.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89807,"byte_end":89836,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89841,"byte_end":89844,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89849,"byte_end":89863,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89868,"byte_end":89871,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89876,"byte_end":89883,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89888,"byte_end":89909,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89914,"byte_end":89917,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from_static(b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89922,"byte_end":89963,"line_start":147,"line_end":147,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":89968,"byte_end":90001,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90006,"byte_end":90013,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90018,"byte_end":90027,"line_start":150,"line_end":150,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90032,"byte_end":90060,"line_start":151,"line_end":151,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90830,"byte_end":90833,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `Bytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90577,"byte_end":90635,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90640,"byte_end":90643,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90648,"byte_end":90662,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90667,"byte_end":90670,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90675,"byte_end":90682,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90687,"byte_end":90708,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90713,"byte_end":90716,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from(&b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90721,"byte_end":90760,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90765,"byte_end":90792,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90797,"byte_end":90804,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90809,"byte_end":90818,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91110,"byte_end":91118,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `Bytes` has a length of 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90880,"byte_end":90930,"line_start":186,"line_end":186,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90935,"byte_end":90938,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90943,"byte_end":90957,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90962,"byte_end":90965,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90970,"byte_end":90977,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":90982,"byte_end":91003,"line_start":191,"line_end":191,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91008,"byte_end":91011,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91016,"byte_end":91041,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91046,"byte_end":91072,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91077,"byte_end":91084,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91089,"byte_end":91098,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91236,"byte_end":91251,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"pub fn copy_from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[{"value":"/ Creates `Bytes` instance from slice, by copying it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91169,"byte_end":91224,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91911,"byte_end":91916,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"pub fn slice<impl RangeBounds<usize>: RangeBounds<usize>>(&Self,\n                                                          impl RangeBounds<usize>)\n-> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[{"value":"/ Returns a slice of self for the provided range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91315,"byte_end":91366,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91371,"byte_end":91374,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This will increment the reference count for the underlying memory and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91379,"byte_end":91452,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ return a new `Bytes` handle set to the slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91457,"byte_end":91506,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91511,"byte_end":91514,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91519,"byte_end":91548,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91553,"byte_end":91556,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91561,"byte_end":91575,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91580,"byte_end":91583,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91588,"byte_end":91595,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91600,"byte_end":91621,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91626,"byte_end":91629,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91634,"byte_end":91679,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let b = a.slice(2..5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91684,"byte_end":91710,"line_start":219,"line_end":219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91715,"byte_end":91718,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"llo\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91723,"byte_end":91754,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91759,"byte_end":91766,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91771,"byte_end":91774,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91779,"byte_end":91791,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91796,"byte_end":91799,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Requires that `begin <= end` and `end <= self.len()`, otherwise slicing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91804,"byte_end":91879,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ will panic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":91884,"byte_end":91899,"line_start":227,"line_end":227,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93856,"byte_end":93865,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"pub fn slice_ref(&Self, &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[{"value":"/ Returns a slice of self that is equivalent to the given `subset`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":92934,"byte_end":93003,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93008,"byte_end":93011,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ When processing a `Bytes` buffer with other tools, one often gets a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93016,"byte_end":93087,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ `&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93092,"byte_end":93165,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ This function turns that `&[u8]` into another `Bytes`, as if one had","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93170,"byte_end":93242,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ called `self.slice()` with the offsets that correspond to `subset`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93247,"byte_end":93318,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93323,"byte_end":93326,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93331,"byte_end":93360,"line_start":277,"line_end":277,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93365,"byte_end":93368,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93373,"byte_end":93387,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93392,"byte_end":93395,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93400,"byte_end":93407,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93412,"byte_end":93433,"line_start":282,"line_end":282,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93438,"byte_end":93441,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = Bytes::from(&b\"012345678\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93446,"byte_end":93493,"line_start":284,"line_end":284,"column_start":5,"column_end":52}},{"value":"/ let as_slice = bytes.as_ref();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93498,"byte_end":93532,"line_start":285,"line_end":285,"column_start":5,"column_end":39}},{"value":"/ let subset = &as_slice[2..6];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93537,"byte_end":93570,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/ let subslice = bytes.slice_ref(&subset);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93575,"byte_end":93619,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&subslice[..], b\"2345\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93624,"byte_end":93663,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93668,"byte_end":93675,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93680,"byte_end":93683,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93688,"byte_end":93700,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93705,"byte_end":93708,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Requires that the given `sub` slice is in fact contained within the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93713,"byte_end":93784,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ `Bytes` buffer; otherwise this function will panic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":93789,"byte_end":93844,"line_start":294,"line_end":294,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95568,"byte_end":95577,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"pub fn split_off(&mut Self, usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":94859,"byte_end":94908,"line_start":328,"line_end":328,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":94913,"byte_end":94916,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `Bytes`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":94921,"byte_end":94996,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95001,"byte_end":95035,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95040,"byte_end":95043,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95048,"byte_end":95123,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95128,"byte_end":95151,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95156,"byte_end":95159,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95164,"byte_end":95178,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95183,"byte_end":95186,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95191,"byte_end":95198,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95203,"byte_end":95224,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95229,"byte_end":95232,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95237,"byte_end":95286,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_off(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95291,"byte_end":95318,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95323,"byte_end":95326,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95331,"byte_end":95364,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95369,"byte_end":95403,"line_start":345,"line_end":345,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95408,"byte_end":95415,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95420,"byte_end":95423,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95428,"byte_end":95440,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95445,"byte_end":95448,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95453,"byte_end":95478,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":95483,"byte_end":95556,"line_start":351,"line_end":351,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96752,"byte_end":96760,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"pub fn split_to(&mut Self, usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96045,"byte_end":96094,"line_start":377,"line_end":377,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96099,"byte_end":96102,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96107,"byte_end":96176,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ `Bytes` contains elements `[0, at)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96181,"byte_end":96221,"line_start":380,"line_end":380,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96226,"byte_end":96229,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96234,"byte_end":96309,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96314,"byte_end":96337,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96342,"byte_end":96345,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96350,"byte_end":96364,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96369,"byte_end":96372,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96377,"byte_end":96384,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96389,"byte_end":96410,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96415,"byte_end":96418,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96423,"byte_end":96472,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_to(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96477,"byte_end":96503,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96508,"byte_end":96511,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\" world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96516,"byte_end":96550,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96555,"byte_end":96588,"line_start":394,"line_end":394,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96593,"byte_end":96600,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96605,"byte_end":96608,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96613,"byte_end":96625,"line_start":397,"line_end":397,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96630,"byte_end":96633,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96638,"byte_end":96663,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":96668,"byte_end":96740,"line_start":400,"line_end":400,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97838,"byte_end":97846,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97226,"byte_end":97297,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97302,"byte_end":97311,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97316,"byte_end":97319,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97324,"byte_end":97393,"line_start":428,"line_end":428,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97398,"byte_end":97409,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97414,"byte_end":97417,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97422,"byte_end":97494,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97499,"byte_end":97550,"line_start":432,"line_end":432,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97555,"byte_end":97558,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97563,"byte_end":97577,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97582,"byte_end":97585,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97590,"byte_end":97597,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97602,"byte_end":97623,"line_start":437,"line_end":437,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97628,"byte_end":97631,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97636,"byte_end":97687,"line_start":439,"line_end":439,"column_start":5,"column_end":56}},{"value":"/ buf.truncate(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97692,"byte_end":97712,"line_start":440,"line_end":440,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97717,"byte_end":97751,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97756,"byte_end":97763,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97768,"byte_end":97771,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97776,"byte_end":97812,"line_start":444,"line_end":444,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":97817,"byte_end":97826,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98676,"byte_end":98681,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98406,"byte_end":98447,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98452,"byte_end":98455,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98460,"byte_end":98474,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98479,"byte_end":98482,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98487,"byte_end":98494,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98499,"byte_end":98520,"line_start":466,"line_end":466,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98525,"byte_end":98528,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98533,"byte_end":98584,"line_start":468,"line_end":468,"column_start":5,"column_end":56}},{"value":"/ buf.clear();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98589,"byte_end":98605,"line_start":469,"line_end":469,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98610,"byte_end":98638,"line_start":470,"line_end":470,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98643,"byte_end":98650,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":98655,"byte_end":98664,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117804,"byte_end":117812,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A unique reference to a contiguous slice of memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116574,"byte_end":116629,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116630,"byte_end":116633,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` represents a unique view into a potentially shared memory region.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116634,"byte_end":116714,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ Given the uniqueness guarantee, owners of `BytesMut` handles are able to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116715,"byte_end":116791,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ mutate the memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116792,"byte_end":116814,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116815,"byte_end":116818,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116819,"byte_end":116898,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ into `buf`, a slice length, and a guarantee that no other `BytesMut` for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116899,"byte_end":116979,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ same `buf` overlaps with its slice. That guarantee means that a write lock","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":116980,"byte_end":117058,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ is not required.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117059,"byte_end":117079,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117080,"byte_end":117083,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Growth","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117084,"byte_end":117096,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117097,"byte_end":117100,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `BytesMut`'s `BufMut` implementation will implicitly grow its buffer as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117101,"byte_end":117176,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ necessary. However, explicitly reserving the required space up-front before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117177,"byte_end":117256,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a series of inserts will be more efficient.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117257,"byte_end":117304,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117305,"byte_end":117308,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117309,"byte_end":117323,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117324,"byte_end":117327,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117328,"byte_end":117335,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117336,"byte_end":117370,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117371,"byte_end":117374,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117375,"byte_end":117421,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117422,"byte_end":117425,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117426,"byte_end":117447,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ buf.put_u8(b'e');","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117448,"byte_end":117469,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ buf.put(&b\"llo\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117470,"byte_end":117495,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117496,"byte_end":117499,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buf[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117500,"byte_end":117535,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117536,"byte_end":117539,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Freeze the buffer so that it can be shared","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117540,"byte_end":117589,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"/ let a = buf.freeze();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117590,"byte_end":117615,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117616,"byte_end":117619,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // This does not allocate, instead `b` points to the same memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117620,"byte_end":117689,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ let b = a.clone();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117690,"byte_end":117712,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117713,"byte_end":117716,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117717,"byte_end":117750,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117751,"byte_end":117784,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":117785,"byte_end":117792,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120536,"byte_end":120549,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"pub fn with_capacity(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with the specified capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119816,"byte_end":119873,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119878,"byte_end":119881,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The returned `BytesMut` will be able to hold at least `capacity` bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119886,"byte_end":119960,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ without reallocating.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119965,"byte_end":119990,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119995,"byte_end":119998,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120003,"byte_end":120077,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ of the returned `BytesMut`, but only the capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120082,"byte_end":120136,"line_start":124,"line_end":124,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120141,"byte_end":120144,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120149,"byte_end":120163,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120168,"byte_end":120171,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120176,"byte_end":120183,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120188,"byte_end":120222,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120227,"byte_end":120230,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::with_capacity(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120235,"byte_end":120283,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120288,"byte_end":120291,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ // `bytes` contains no data, even though there is capacity","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120296,"byte_end":120358,"line_start":133,"line_end":133,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(bytes.len(), 0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120363,"byte_end":120394,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120399,"byte_end":120402,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ bytes.put(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120407,"byte_end":120442,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120447,"byte_end":120450,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&bytes[..], b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120455,"byte_end":120498,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120503,"byte_end":120510,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120515,"byte_end":120524,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121148,"byte_end":121151,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"pub fn new() -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with default capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120649,"byte_end":120700,"line_start":145,"line_end":145,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120705,"byte_end":120708,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Resulting object has length 0 and unspecified capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120713,"byte_end":120772,"line_start":147,"line_end":147,"column_start":5,"column_end":64}},{"value":"/ This function does not allocate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120777,"byte_end":120813,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120818,"byte_end":120821,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120826,"byte_end":120840,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120845,"byte_end":120848,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120853,"byte_end":120860,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120865,"byte_end":120899,"line_start":153,"line_end":153,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120904,"byte_end":120907,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120912,"byte_end":120948,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120953,"byte_end":120956,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, bytes.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120961,"byte_end":120992,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":120997,"byte_end":121000,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ bytes.reserve(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121005,"byte_end":121026,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/ bytes.put_slice(b\"xy\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121031,"byte_end":121058,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121063,"byte_end":121066,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"xy\"[..], &bytes[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121071,"byte_end":121110,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121115,"byte_end":121122,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121127,"byte_end":121136,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121476,"byte_end":121479,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121214,"byte_end":121275,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121280,"byte_end":121283,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121288,"byte_end":121302,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121307,"byte_end":121310,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121315,"byte_end":121322,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121327,"byte_end":121351,"line_start":174,"line_end":174,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121356,"byte_end":121359,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121364,"byte_end":121406,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121411,"byte_end":121438,"line_start":177,"line_end":177,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121443,"byte_end":121450,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121455,"byte_end":121464,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121777,"byte_end":121785,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `BytesMut` has a length of 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121526,"byte_end":121579,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121584,"byte_end":121587,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121592,"byte_end":121606,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121611,"byte_end":121614,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121619,"byte_end":121626,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121631,"byte_end":121655,"line_start":189,"line_end":189,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121660,"byte_end":121663,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121668,"byte_end":121708,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121713,"byte_end":121739,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121744,"byte_end":121751,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121756,"byte_end":121765,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122118,"byte_end":122126,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the `BytesMut` can hold without reallocating.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121836,"byte_end":121913,"line_start":199,"line_end":199,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121918,"byte_end":121921,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121926,"byte_end":121940,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121945,"byte_end":121948,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121953,"byte_end":121960,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121965,"byte_end":121989,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":121994,"byte_end":121997,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122002,"byte_end":122042,"line_start":206,"line_end":206,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b.capacity(), 64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122047,"byte_end":122080,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122085,"byte_end":122092,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122097,"byte_end":122106,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122942,"byte_end":122948,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"pub fn freeze(Self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"/ Converts `self` into an immutable `Bytes`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122173,"byte_end":122219,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122224,"byte_end":122227,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The conversion is zero cost and is used to indicate that the slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122232,"byte_end":122302,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ referenced by the handle will no longer be mutated. Once the conversion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122307,"byte_end":122382,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ is done, the handle can be cloned and shared across threads.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122387,"byte_end":122451,"line_start":218,"line_end":218,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122456,"byte_end":122459,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122464,"byte_end":122478,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122483,"byte_end":122486,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122491,"byte_end":122498,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122503,"byte_end":122537,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ use std::thread;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122542,"byte_end":122562,"line_start":224,"line_end":224,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122567,"byte_end":122570,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::with_capacity(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122575,"byte_end":122619,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ b.put(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122624,"byte_end":122655,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ let b1 = b.freeze();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122660,"byte_end":122684,"line_start":228,"line_end":228,"column_start":5,"column_end":29}},{"value":"/ let b2 = b1.clone();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122689,"byte_end":122713,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122718,"byte_end":122721,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ let th = thread::spawn(move || {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122726,"byte_end":122762,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(&b1[..], b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122767,"byte_end":122811,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122816,"byte_end":122823,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122828,"byte_end":122831,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b2[..], b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122836,"byte_end":122876,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/ th.join().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122881,"byte_end":122904,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122909,"byte_end":122916,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":122921,"byte_end":122930,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124473,"byte_end":124482,"line_start":288,"line_end":288,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"pub fn split_off(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123688,"byte_end":123737,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123742,"byte_end":123745,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123750,"byte_end":123817,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ `BytesMut` contains elements `[at, capacity)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123822,"byte_end":123872,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123877,"byte_end":123880,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123885,"byte_end":123956,"line_start":266,"line_end":266,"column_start":5,"column_end":76}},{"value":"/ and sets a few indices.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123961,"byte_end":123988,"line_start":267,"line_end":267,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":123993,"byte_end":123996,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124001,"byte_end":124015,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124020,"byte_end":124023,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124028,"byte_end":124035,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124040,"byte_end":124064,"line_start":272,"line_end":272,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124069,"byte_end":124072,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124077,"byte_end":124129,"line_start":274,"line_end":274,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_off(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124134,"byte_end":124165,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124170,"byte_end":124173,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'j';","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124178,"byte_end":124194,"line_start":277,"line_end":277,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'!';","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124199,"byte_end":124215,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124220,"byte_end":124223,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"jello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124228,"byte_end":124261,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\"!world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124266,"byte_end":124300,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124305,"byte_end":124312,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124317,"byte_end":124320,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124325,"byte_end":124337,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124342,"byte_end":124345,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > capacity`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124350,"byte_end":124380,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124385,"byte_end":124461,"line_start":287,"line_end":287,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125725,"byte_end":125730,"line_start":329,"line_end":329,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"pub fn split(&mut Self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"/ Removes the bytes from the current view, returning them in a new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124849,"byte_end":124917,"line_start":303,"line_end":303,"column_start":5,"column_end":73}},{"value":"/ `BytesMut` handle.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124922,"byte_end":124944,"line_start":304,"line_end":304,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124949,"byte_end":124952,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will be empty, but will retain any additional","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":124957,"byte_end":125025,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/ capacity that it had before the operation. This is identical to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125030,"byte_end":125097,"line_start":307,"line_end":307,"column_start":5,"column_end":72}},{"value":"/ `self.split_to(self.len())`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125102,"byte_end":125134,"line_start":308,"line_end":308,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125139,"byte_end":125142,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125147,"byte_end":125222,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125227,"byte_end":125250,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125255,"byte_end":125258,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125263,"byte_end":125277,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125282,"byte_end":125285,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125290,"byte_end":125297,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125302,"byte_end":125336,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125341,"byte_end":125344,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125349,"byte_end":125397,"line_start":318,"line_end":318,"column_start":5,"column_end":53}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125402,"byte_end":125435,"line_start":319,"line_end":319,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125440,"byte_end":125443,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let other = buf.split();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125448,"byte_end":125476,"line_start":321,"line_end":321,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125481,"byte_end":125484,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125489,"byte_end":125517,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(1013, buf.capacity());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125522,"byte_end":125559,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125564,"byte_end":125567,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(other, b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125572,"byte_end":125614,"line_start":326,"line_end":326,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125619,"byte_end":125626,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125631,"byte_end":125713,"line_start":328,"line_end":328,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126598,"byte_end":126606,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"pub fn split_to(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125824,"byte_end":125874,"line_start":334,"line_end":334,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125879,"byte_end":125882,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125887,"byte_end":125967,"line_start":336,"line_end":336,"column_start":5,"column_end":85}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":125972,"byte_end":126004,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126009,"byte_end":126012,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126017,"byte_end":126092,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126097,"byte_end":126120,"line_start":340,"line_end":340,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126125,"byte_end":126128,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126133,"byte_end":126147,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126152,"byte_end":126155,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126160,"byte_end":126167,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126172,"byte_end":126196,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126201,"byte_end":126204,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126209,"byte_end":126261,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_to(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126266,"byte_end":126296,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126301,"byte_end":126304,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'!';","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126309,"byte_end":126325,"line_start":350,"line_end":350,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'j';","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126330,"byte_end":126346,"line_start":351,"line_end":351,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126351,"byte_end":126354,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"!world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126359,"byte_end":126393,"line_start":353,"line_end":353,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"jello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126398,"byte_end":126431,"line_start":354,"line_end":354,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126436,"byte_end":126443,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126448,"byte_end":126451,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126456,"byte_end":126468,"line_start":357,"line_end":357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126473,"byte_end":126476,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126481,"byte_end":126506,"line_start":359,"line_end":359,"column_start":5,"column_end":30}},{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126511,"byte_end":126586,"line_start":360,"line_end":360,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127567,"byte_end":127575,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":126963,"byte_end":127034,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127039,"byte_end":127048,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127053,"byte_end":127056,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127061,"byte_end":127130,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127135,"byte_end":127146,"line_start":381,"line_end":381,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127151,"byte_end":127154,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127159,"byte_end":127231,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127236,"byte_end":127287,"line_start":384,"line_end":384,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127292,"byte_end":127295,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127300,"byte_end":127314,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127319,"byte_end":127322,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127327,"byte_end":127334,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127339,"byte_end":127363,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127368,"byte_end":127371,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127376,"byte_end":127430,"line_start":391,"line_end":391,"column_start":5,"column_end":59}},{"value":"/ buf.truncate(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127435,"byte_end":127455,"line_start":392,"line_end":392,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127460,"byte_end":127494,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127499,"byte_end":127506,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127511,"byte_end":127514,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127519,"byte_end":127555,"line_start":396,"line_end":396,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127985,"byte_end":127990,"line_start":416,"line_end":416,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127723,"byte_end":127764,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127769,"byte_end":127772,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127777,"byte_end":127791,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127796,"byte_end":127799,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127804,"byte_end":127811,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127816,"byte_end":127840,"line_start":410,"line_end":410,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127845,"byte_end":127848,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127853,"byte_end":127907,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/ buf.clear();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127912,"byte_end":127928,"line_start":413,"line_end":413,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127933,"byte_end":127961,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":127966,"byte_end":127973,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128715,"byte_end":128721,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"pub fn resize(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the buffer so that `len` is equal to `new_len`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128041,"byte_end":128100,"line_start":420,"line_end":420,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128105,"byte_end":128108,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the buffer is extended by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128113,"byte_end":128182,"line_start":422,"line_end":422,"column_start":5,"column_end":74}},{"value":"/ difference with each additional byte set to `value`. If `new_len` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128187,"byte_end":128259,"line_start":423,"line_end":423,"column_start":5,"column_end":77}},{"value":"/ less than `len`, the buffer is simply truncated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128264,"byte_end":128316,"line_start":424,"line_end":424,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128321,"byte_end":128324,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128329,"byte_end":128343,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128348,"byte_end":128351,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128356,"byte_end":128363,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128368,"byte_end":128392,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128397,"byte_end":128400,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128405,"byte_end":128439,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128444,"byte_end":128447,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ buf.resize(3, 0x1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128452,"byte_end":128475,"line_start":433,"line_end":433,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x1]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128480,"byte_end":128523,"line_start":434,"line_end":434,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128528,"byte_end":128531,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ buf.resize(2, 0x2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128536,"byte_end":128559,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128564,"byte_end":128602,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128607,"byte_end":128610,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ buf.resize(4, 0x3);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128615,"byte_end":128638,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128643,"byte_end":128691,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":128696,"byte_end":128703,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129794,"byte_end":129801,"line_start":483,"line_end":483,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[{"value":"/ Sets the length of the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129164,"byte_end":129198,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129203,"byte_end":129206,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the buffer without actually","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129211,"byte_end":129279,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ modifying the data, so it is up to the caller to ensure that the data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129284,"byte_end":129357,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ has been initialized.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129362,"byte_end":129387,"line_start":461,"line_end":461,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129392,"byte_end":129395,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129400,"byte_end":129414,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129419,"byte_end":129422,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129427,"byte_end":129434,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129439,"byte_end":129463,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129468,"byte_end":129471,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129476,"byte_end":129528,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129533,"byte_end":129536,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129541,"byte_end":129553,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/     b.set_len(5);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129558,"byte_end":129579,"line_start":471,"line_end":471,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129584,"byte_end":129589,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129594,"byte_end":129597,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129602,"byte_end":129635,"line_start":474,"line_end":474,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129640,"byte_end":129643,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129648,"byte_end":129660,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/     b.set_len(11);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129665,"byte_end":129687,"line_start":477,"line_end":477,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129692,"byte_end":129697,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129702,"byte_end":129705,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129710,"byte_end":129749,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129754,"byte_end":129761,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129766,"byte_end":129775,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131597,"byte_end":131604,"line_start":538,"line_end":538,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":129927,"byte_end":130000,"line_start":488,"line_end":488,"column_start":5,"column_end":78}},{"value":"/ into the given `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130005,"byte_end":130035,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130040,"byte_end":130043,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130048,"byte_end":130123,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130128,"byte_end":130195,"line_start":492,"line_end":492,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130200,"byte_end":130203,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Before allocating new buffer space, the function will attempt to reclaim","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130208,"byte_end":130284,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ space in the existing buffer. If the current handle references a small","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130289,"byte_end":130363,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ view in the original buffer and all other handles have been dropped,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130368,"byte_end":130440,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/ and the requested capacity is less than or equal to the existing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130445,"byte_end":130513,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ buffer's capacity, then the current view will be copied to the front of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130518,"byte_end":130593,"line_start":498,"line_end":498,"column_start":5,"column_end":80}},{"value":"/ the buffer and the handle will take ownership of the full buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130598,"byte_end":130667,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130672,"byte_end":130675,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130680,"byte_end":130694,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130699,"byte_end":130702,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ In the following example, a new buffer is allocated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130707,"byte_end":130763,"line_start":503,"line_end":503,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130768,"byte_end":130771,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130776,"byte_end":130783,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130788,"byte_end":130812,"line_start":506,"line_end":506,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130817,"byte_end":130820,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130825,"byte_end":130873,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/ buf.reserve(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130878,"byte_end":130898,"line_start":509,"line_end":509,"column_start":5,"column_end":25}},{"value":"/ assert!(buf.capacity() >= 69);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130903,"byte_end":130937,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130942,"byte_end":130949,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130954,"byte_end":130957,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ In the following example, the existing buffer is reclaimed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":130962,"byte_end":131025,"line_start":513,"line_end":513,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131030,"byte_end":131033,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131038,"byte_end":131045,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131050,"byte_end":131084,"line_start":516,"line_end":516,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131089,"byte_end":131092,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131097,"byte_end":131144,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ buf.put(&[0; 64][..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131149,"byte_end":131175,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131180,"byte_end":131183,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let ptr = buf.as_ptr();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131188,"byte_end":131215,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/ let other = buf.split();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131220,"byte_end":131248,"line_start":522,"line_end":522,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131253,"byte_end":131256,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131261,"byte_end":131289,"line_start":524,"line_end":524,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf.capacity(), 64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131294,"byte_end":131329,"line_start":525,"line_end":525,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131334,"byte_end":131337,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ drop(other);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131342,"byte_end":131358,"line_start":527,"line_end":527,"column_start":5,"column_end":21}},{"value":"/ buf.reserve(128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131363,"byte_end":131384,"line_start":528,"line_end":528,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131389,"byte_end":131392,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.capacity(), 128);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131397,"byte_end":131433,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf.as_ptr(), ptr);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131438,"byte_end":131472,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131477,"byte_end":131484,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131489,"byte_end":131492,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131497,"byte_end":131509,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131514,"byte_end":131517,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131522,"byte_end":131571,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":131576,"byte_end":131585,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137026,"byte_end":137043,"line_start":682,"line_end":682,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this `BytesMut`.","sig":null,"attributes":[{"value":"/ Appends given bytes to this `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136584,"byte_end":136627,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136632,"byte_end":136635,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If this `BytesMut` object does not have enough capacity, it is resized","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136640,"byte_end":136714,"line_start":668,"line_end":668,"column_start":5,"column_end":79}},{"value":"/ first.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136719,"byte_end":136729,"line_start":669,"line_end":669,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136734,"byte_end":136737,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136742,"byte_end":136756,"line_start":671,"line_end":671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136761,"byte_end":136764,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136769,"byte_end":136776,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136781,"byte_end":136805,"line_start":674,"line_end":674,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136810,"byte_end":136813,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136818,"byte_end":136863,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/ buf.extend_from_slice(b\"aaabbb\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136868,"byte_end":136905,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ buf.extend_from_slice(b\"cccddd\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136910,"byte_end":136947,"line_start":678,"line_end":678,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136952,"byte_end":136955,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":136960,"byte_end":137002,"line_start":680,"line_end":680,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137007,"byte_end":137014,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138268,"byte_end":138275,"line_start":722,"line_end":722,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"pub fn unsplit(&mut Self, BytesMut)","parent":null,"children":[],"decl_id":null,"docs":" Absorbs a `BytesMut` that was previously split off.","sig":null,"attributes":[{"value":"/ Absorbs a `BytesMut` that was previously split off.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137441,"byte_end":137496,"line_start":699,"line_end":699,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137501,"byte_end":137504,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ If the two `BytesMut` objects were previously contiguous, i.e., if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137509,"byte_end":137579,"line_start":701,"line_end":701,"column_start":5,"column_end":75}},{"value":"/ `other` was created by calling `split_off` on this `BytesMut`, then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137584,"byte_end":137655,"line_start":702,"line_end":702,"column_start":5,"column_end":76}},{"value":"/ this is an `O(1)` operation that just decreases a reference","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137660,"byte_end":137723,"line_start":703,"line_end":703,"column_start":5,"column_end":68}},{"value":"/ count and sets a few indices. Otherwise this method degenerates to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137728,"byte_end":137798,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ `self.extend_from_slice(other.as_ref())`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137803,"byte_end":137848,"line_start":705,"line_end":705,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137853,"byte_end":137856,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137861,"byte_end":137875,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137880,"byte_end":137883,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137888,"byte_end":137895,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137900,"byte_end":137924,"line_start":710,"line_end":710,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137929,"byte_end":137932,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137937,"byte_end":137983,"line_start":712,"line_end":712,"column_start":5,"column_end":51}},{"value":"/ buf.extend_from_slice(b\"aaabbbcccddd\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":137988,"byte_end":138031,"line_start":713,"line_end":713,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138036,"byte_end":138039,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let split = buf.split_off(6);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138044,"byte_end":138077,"line_start":715,"line_end":715,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b\"aaabbb\", &buf[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138082,"byte_end":138118,"line_start":716,"line_end":716,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"cccddd\", &split[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138123,"byte_end":138161,"line_start":717,"line_end":717,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138166,"byte_end":138169,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ buf.unsplit(split);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138174,"byte_end":138197,"line_start":719,"line_end":719,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138202,"byte_end":138244,"line_start":720,"line_end":720,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":138249,"byte_end":138256,"line_start":721,"line_end":721,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":32763,"byte_end":32766,"line_start":1014,"line_end":1014,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":33117,"byte_end":33123,"line_start":1036,"line_end":1036,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":59816,"byte_end":59819,"line_start":990,"line_end":990,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":60419,"byte_end":60422,"line_start":1014,"line_end":1014,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62985,"byte_end":62990,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":65151,"byte_end":65156,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":66055,"byte_end":66060,"line_start":175,"line_end":175,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":66815,"byte_end":66820,"line_start":211,"line_end":211,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67603,"byte_end":67611,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69651,"byte_end":69659,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":70059,"byte_end":70067,"line_start":132,"line_end":132,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70416,"byte_end":70421,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71573,"byte_end":71578,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72424,"byte_end":72430,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73518,"byte_end":73524,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73777,"byte_end":73783,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74378,"byte_end":74382,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":77033,"byte_end":77037,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78248,"byte_end":78259,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81451,"byte_end":81462,"line_start":141,"line_end":141,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/vec_deque.rs","byte_start":82575,"byte_end":82583,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83303,"byte_end":83309,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84681,"byte_end":84687,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88987,"byte_end":88992,"line_start":109,"line_end":109,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99484,"byte_end":99489,"line_start":509,"line_end":509,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99514,"byte_end":99519,"line_start":510,"line_end":510,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99538,"byte_end":99543,"line_start":512,"line_end":512,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99683,"byte_end":99688,"line_start":519,"line_end":519,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99829,"byte_end":99834,"line_start":526,"line_end":526,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100560,"byte_end":100565,"line_start":562,"line_end":562,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100692,"byte_end":100697,"line_start":571,"line_end":571,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100799,"byte_end":100804,"line_start":578,"line_end":578,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100953,"byte_end":100958,"line_start":587,"line_end":587,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101048,"byte_end":101053,"line_start":593,"line_end":593,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101418,"byte_end":101423,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101576,"byte_end":101581,"line_start":619,"line_end":619,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101699,"byte_end":101704,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101851,"byte_end":101856,"line_start":631,"line_end":631,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101978,"byte_end":101983,"line_start":637,"line_end":637,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102013,"byte_end":102018,"line_start":639,"line_end":639,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102130,"byte_end":102135,"line_start":645,"line_end":645,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102561,"byte_end":102566,"line_start":663,"line_end":663,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102687,"byte_end":102692,"line_start":669,"line_end":669,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103141,"byte_end":103146,"line_start":687,"line_end":687,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103259,"byte_end":103264,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103420,"byte_end":103423,"line_start":699,"line_end":699,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103532,"byte_end":103535,"line_start":705,"line_end":705,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103707,"byte_end":103712,"line_start":711,"line_end":711,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103823,"byte_end":103828,"line_start":717,"line_end":717,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103989,"byte_end":103995,"line_start":723,"line_end":723,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":104100,"byte_end":104106,"line_start":729,"line_end":729,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":104872,"byte_end":104877,"line_start":759,"line_end":759,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105029,"byte_end":105034,"line_start":768,"line_end":768,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105212,"byte_end":105217,"line_start":779,"line_end":779,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105321,"byte_end":105326,"line_start":786,"line_end":786,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105445,"byte_end":105450,"line_start":792,"line_end":792,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105574,"byte_end":105579,"line_start":798,"line_end":798,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":106490,"byte_end":106495,"line_start":830,"line_end":830,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":106625,"byte_end":106631,"line_start":838,"line_end":838,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119801,"byte_end":119809,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":144766,"byte_end":144774,"line_start":923,"line_end":923,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":145208,"byte_end":145216,"line_start":940,"line_end":940,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":145794,"byte_end":145802,"line_start":969,"line_end":969,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":146843,"byte_end":146851,"line_start":1015,"line_end":1015,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":146948,"byte_end":146956,"line_start":1022,"line_end":1022,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147081,"byte_end":147089,"line_start":1031,"line_end":1031,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147201,"byte_end":147209,"line_start":1038,"line_end":1038,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147328,"byte_end":147336,"line_start":1045,"line_end":1045,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147457,"byte_end":147465,"line_start":1051,"line_end":1051,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147580,"byte_end":147585,"line_start":1057,"line_end":1057,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147675,"byte_end":147683,"line_start":1063,"line_end":1063,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147804,"byte_end":147812,"line_start":1069,"line_end":1069,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147962,"byte_end":147970,"line_start":1075,"line_end":1075,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148095,"byte_end":148103,"line_start":1081,"line_end":1081,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148125,"byte_end":148133,"line_start":1083,"line_end":1083,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148234,"byte_end":148242,"line_start":1090,"line_end":1090,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148415,"byte_end":148423,"line_start":1100,"line_end":1100,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148514,"byte_end":148522,"line_start":1106,"line_end":1106,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148620,"byte_end":148628,"line_start":1112,"line_end":1112,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149007,"byte_end":149015,"line_start":1129,"line_end":1129,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149117,"byte_end":149125,"line_start":1135,"line_end":1135,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149488,"byte_end":149496,"line_start":1153,"line_end":1153,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149952,"byte_end":149960,"line_start":1173,"line_end":1173,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":150141,"byte_end":150149,"line_start":1182,"line_end":1182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":150318,"byte_end":150326,"line_start":1188,"line_end":1188,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":151964,"byte_end":151970,"line_start":1237,"line_end":1237,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":154834,"byte_end":154842,"line_start":1320,"line_end":1320,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":154867,"byte_end":154875,"line_start":1321,"line_end":1321,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":154957,"byte_end":154965,"line_start":1329,"line_end":1329,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":155069,"byte_end":155077,"line_start":1335,"line_end":1335,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":155508,"byte_end":155516,"line_start":1353,"line_end":1353,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":155629,"byte_end":155637,"line_start":1359,"line_end":1359,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156091,"byte_end":156099,"line_start":1377,"line_end":1377,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156212,"byte_end":156220,"line_start":1383,"line_end":1383,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156372,"byte_end":156375,"line_start":1389,"line_end":1389,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156490,"byte_end":156493,"line_start":1395,"line_end":1395,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156639,"byte_end":156647,"line_start":1401,"line_end":1401,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156758,"byte_end":156766,"line_start":1407,"line_end":1407,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156923,"byte_end":156929,"line_start":1413,"line_end":1413,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":157040,"byte_end":157046,"line_start":1419,"line_end":1419,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":157242,"byte_end":157250,"line_start":1425,"line_end":1425,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":157405,"byte_end":157413,"line_start":1434,"line_end":1434,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":158147,"byte_end":158152,"line_start":1467,"line_end":1467,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":158267,"byte_end":158275,"line_start":1473,"line_end":1473,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/debug.rs","byte_start":161406,"byte_end":161414,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/debug.rs","byte_start":162248,"byte_end":162253,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/debug.rs","byte_start":162382,"byte_end":162390,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/hex.rs","byte_start":162631,"byte_end":162639,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/hex.rs","byte_start":162815,"byte_end":162823,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/loom.rs","byte_start":163694,"byte_end":163703,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/lib.rs","byte_start":2974,"byte_end":2977,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":32763,"byte_end":32766,"line_start":1014,"line_end":1014,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":195},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_impl.rs","byte_start":33117,"byte_end":33123,"line_start":1036,"line_end":1036,"column_start":39,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":9407},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":59816,"byte_end":59819,"line_start":990,"line_end":990,"column_start":44,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":4,"index":195},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/buf_mut.rs","byte_start":60419,"byte_end":60422,"line_start":1014,"line_end":1014,"column_start":24,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":6703},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":62985,"byte_end":62990,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":65151,"byte_end":65156,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":66055,"byte_end":66060,"line_start":175,"line_end":175,"column_start":30,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/chain.rs","byte_start":66815,"byte_end":66820,"line_start":211,"line_end":211,"column_start":29,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1217},"to":{"krate":1,"index":6998}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":67603,"byte_end":67611,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":69651,"byte_end":69659,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":7161}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/iter.rs","byte_start":70059,"byte_end":70067,"line_start":132,"line_end":132,"column_start":36,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":7050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":70416,"byte_end":70421,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/limit.rs","byte_start":71573,"byte_end":71578,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":72424,"byte_end":72430,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73518,"byte_end":73524,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1239},"to":{"krate":5,"index":4249}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/reader.rs","byte_start":73777,"byte_end":73783,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1239},"to":{"krate":5,"index":4334}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":74378,"byte_end":74382,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/take.rs","byte_start":77033,"byte_end":77037,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":78248,"byte_end":78259,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/uninit_slice.rs","byte_start":81451,"byte_end":81462,"line_start":141,"line_end":141,"column_start":21,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/vec_deque.rs","byte_start":82575,"byte_end":82583,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":4,"index":3772},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":83303,"byte_end":83309,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/buf/writer.rs","byte_start":84681,"byte_end":84687,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1282},"to":{"krate":5,"index":4310}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":88987,"byte_end":88992,"line_start":109,"line_end":109,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99484,"byte_end":99489,"line_start":509,"line_end":509,"column_start":22,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99514,"byte_end":99519,"line_start":510,"line_end":510,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99538,"byte_end":99543,"line_start":512,"line_end":512,"column_start":15,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99683,"byte_end":99688,"line_start":519,"line_end":519,"column_start":16,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":99829,"byte_end":99834,"line_start":526,"line_end":526,"column_start":14,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100560,"byte_end":100565,"line_start":562,"line_end":562,"column_start":16,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100692,"byte_end":100697,"line_start":571,"line_end":571,"column_start":22,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100799,"byte_end":100804,"line_start":578,"line_end":578,"column_start":21,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":8907}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":100953,"byte_end":100958,"line_start":587,"line_end":587,"column_start":23,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2425}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101048,"byte_end":101053,"line_start":593,"line_end":593,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":6998}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101418,"byte_end":101423,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101576,"byte_end":101581,"line_start":619,"line_end":619,"column_start":20,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101699,"byte_end":101704,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101851,"byte_end":101856,"line_start":631,"line_end":631,"column_start":14,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2509}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":101978,"byte_end":101983,"line_start":637,"line_end":637,"column_start":13,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102013,"byte_end":102018,"line_start":639,"line_end":639,"column_start":26,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102130,"byte_end":102135,"line_start":645,"line_end":645,"column_start":27,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102561,"byte_end":102566,"line_start":663,"line_end":663,"column_start":25,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":102687,"byte_end":102692,"line_start":669,"line_end":669,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103141,"byte_end":103146,"line_start":687,"line_end":687,"column_start":29,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103259,"byte_end":103264,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103420,"byte_end":103423,"line_start":699,"line_end":699,"column_start":27,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":4,"index":6703},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103532,"byte_end":103535,"line_start":705,"line_end":705,"column_start":28,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":4,"index":6703},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103707,"byte_end":103712,"line_start":711,"line_end":711,"column_start":28,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103823,"byte_end":103828,"line_start":717,"line_end":717,"column_start":29,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":103989,"byte_end":103995,"line_start":723,"line_end":723,"column_start":27,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":4,"index":7216},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":104100,"byte_end":104106,"line_start":729,"line_end":729,"column_start":28,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":4,"index":7216},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":104872,"byte_end":104877,"line_start":759,"line_end":759,"column_start":42,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105029,"byte_end":105034,"line_start":768,"line_end":768,"column_start":43,"column_end":48},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105212,"byte_end":105217,"line_start":779,"line_end":779,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105321,"byte_end":105326,"line_start":786,"line_end":786,"column_start":30,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105445,"byte_end":105450,"line_start":792,"line_end":792,"column_start":29,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":105574,"byte_end":105579,"line_start":798,"line_end":798,"column_start":24,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":106490,"byte_end":106495,"line_start":830,"line_end":830,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes.rs","byte_start":106625,"byte_end":106631,"line_start":838,"line_end":838,"column_start":21,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":518},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":119801,"byte_end":119809,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":144766,"byte_end":144774,"line_start":923,"line_end":923,"column_start":15,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":145208,"byte_end":145216,"line_start":940,"line_end":940,"column_start":14,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":145794,"byte_end":145802,"line_start":969,"line_end":969,"column_start":24,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":146843,"byte_end":146851,"line_start":1015,"line_end":1015,"column_start":22,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":146948,"byte_end":146956,"line_start":1022,"line_end":1022,"column_start":16,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147081,"byte_end":147089,"line_start":1031,"line_end":1031,"column_start":22,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2722}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147201,"byte_end":147209,"line_start":1038,"line_end":1038,"column_start":19,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":3039}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147328,"byte_end":147336,"line_start":1045,"line_end":1045,"column_start":29,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147457,"byte_end":147465,"line_start":1051,"line_end":1051,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147580,"byte_end":147585,"line_start":1057,"line_end":1057,"column_start":25,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147675,"byte_end":147683,"line_start":1063,"line_end":1063,"column_start":20,"column_end":28},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147804,"byte_end":147812,"line_start":1069,"line_end":1069,"column_start":21,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":147962,"byte_end":147970,"line_start":1075,"line_end":1075,"column_start":14,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2509}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148095,"byte_end":148103,"line_start":1081,"line_end":1081,"column_start":13,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148125,"byte_end":148133,"line_start":1083,"line_end":1083,"column_start":18,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148234,"byte_end":148242,"line_start":1090,"line_end":1090,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":8907}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148415,"byte_end":148423,"line_start":1100,"line_end":1100,"column_start":23,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2425}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148514,"byte_end":148522,"line_start":1106,"line_end":1106,"column_start":26,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2428}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":148620,"byte_end":148628,"line_start":1112,"line_end":1112,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":8659}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149007,"byte_end":149015,"line_start":1129,"line_end":1129,"column_start":16,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149117,"byte_end":149125,"line_start":1135,"line_end":1135,"column_start":23,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":6998}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149488,"byte_end":149496,"line_start":1153,"line_end":1153,"column_start":21,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":7007}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":149952,"byte_end":149960,"line_start":1173,"line_end":1173,"column_start":29,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":7007}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":150141,"byte_end":150149,"line_start":1182,"line_end":1182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":150318,"byte_end":150326,"line_start":1188,"line_end":1188,"column_start":35,"column_end":43},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":151964,"byte_end":151970,"line_start":1237,"line_end":1237,"column_start":6,"column_end":12},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":154834,"byte_end":154842,"line_start":1320,"line_end":1320,"column_start":22,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":154867,"byte_end":154875,"line_start":1321,"line_end":1321,"column_start":22,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":154957,"byte_end":154965,"line_start":1329,"line_end":1329,"column_start":26,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":155069,"byte_end":155077,"line_start":1335,"line_end":1335,"column_start":27,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":155508,"byte_end":155516,"line_start":1353,"line_end":1353,"column_start":25,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":155629,"byte_end":155637,"line_start":1359,"line_end":1359,"column_start":26,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156091,"byte_end":156099,"line_start":1377,"line_end":1377,"column_start":29,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156212,"byte_end":156220,"line_start":1383,"line_end":1383,"column_start":30,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156372,"byte_end":156375,"line_start":1389,"line_end":1389,"column_start":30,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":4,"index":6703},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156490,"byte_end":156493,"line_start":1395,"line_end":1395,"column_start":31,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":6703},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156639,"byte_end":156647,"line_start":1401,"line_end":1401,"column_start":28,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156758,"byte_end":156766,"line_start":1407,"line_end":1407,"column_start":29,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":156923,"byte_end":156929,"line_start":1413,"line_end":1413,"column_start":30,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":4,"index":7216},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":157040,"byte_end":157046,"line_start":1419,"line_end":1419,"column_start":31,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":7216},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":157242,"byte_end":157250,"line_start":1425,"line_end":1425,"column_start":42,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":157405,"byte_end":157413,"line_start":1434,"line_end":1434,"column_start":43,"column_end":51},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":158147,"byte_end":158152,"line_start":1467,"line_end":1467,"column_start":30,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/bytes_mut.rs","byte_start":158267,"byte_end":158275,"line_start":1473,"line_end":1473,"column_start":27,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/debug.rs","byte_start":161406,"byte_end":161414,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1024},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/debug.rs","byte_start":162248,"byte_end":162253,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/debug.rs","byte_start":162382,"byte_end":162390,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/hex.rs","byte_start":162631,"byte_end":162639,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1024},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/fmt/hex.rs","byte_start":162815,"byte_end":162823,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1024},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-1.0.1/src/loom.rs","byte_start":163694,"byte_end":163703,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"kind":{"Impl":{"id":117}},"from":{"krate":1,"index":8256},"to":{"krate":0,"index":1044}}]}