{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","zeroize","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"zeroize_derive\"","-C","metadata=9efa0d1fc54d6e36","-C","extra-filename=-9efa0d1fc54d6e36","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","zeroize_derive=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libzeroize_derive-426355e22542ed33.so","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libzeroize-9efa0d1fc54d6e36.rmeta"},"prelude":{"crate_id":{"name":"zeroize","disambiguator":[744669072465224746,17473627246014046881]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","num":5,"id":{"name":"zeroize_derive","disambiguator":[18017864088066273931,9406744853062868551]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":0,"byte_end":19608,"line_start":1,"line_end":588,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":37},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9330,"byte_end":9337,"line_start":220,"line_end":220,"column_start":25,"column_end":32},"alias_span":null,"name":"Zeroize","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":0,"byte_end":19608,"line_start":1,"line_end":588,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":364},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":368},{"krate":0,"index":386},{"krate":0,"index":383},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88}],"decl_id":null,"docs":" Securely zero memory with a simple trait ([Zeroize]) built on stable Rust\n primitives which guarantee the operation will not be \"optimized away\".","sig":null,"attributes":[{"value":"/ Securely zero memory with a simple trait ([Zeroize]) built on stable Rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ primitives which guarantee the operation will not be \"optimized away\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":78,"byte_end":152,"line_start":2,"line_end":2,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":153,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ## About","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":157,"byte_end":169,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":170,"byte_end":173,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [Zeroing memory securely is hard] - compilers optimize for performance, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":174,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ in doing so they love to \"optimize away\" unnecessary zeroing calls. There are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":254,"byte_end":335,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/ many documented \"tricks\" to attempt to avoid these optimizations and ensure","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":336,"byte_end":415,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ that a zeroing routine is performed reliably.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":416,"byte_end":465,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":466,"byte_end":469,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This crate isn't about tricks: it uses [core::ptr::write_volatile]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":470,"byte_end":540,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ and [core::sync::atomic] memory fences to provide easy-to-use, portable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":541,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ zeroing behavior which works on all of Rust's core number types and slices","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":617,"byte_end":695,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ thereof, implemented in pure Rust with no usage of FFI or assembly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":696,"byte_end":767,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":768,"byte_end":771,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - No insecure fallbacks!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":772,"byte_end":800,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/ - No dependencies!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":801,"byte_end":823,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/ - No FFI or inline assembly! **WASM friendly** (and tested)!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":824,"byte_end":888,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ - `#![no_std]` i.e. **embedded-friendly**!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":889,"byte_end":935,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ - No functionality besides securely zeroing memory!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":936,"byte_end":991,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ - (Optional) Custom derive support for zeroing complex structures","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":992,"byte_end":1061,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1062,"byte_end":1065,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1066,"byte_end":1103,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1104,"byte_end":1107,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Requires Rust **1.44** or newer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1108,"byte_end":1144,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1145,"byte_end":1148,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ In the future, we reserve the right to change MSRV (i.e. MSRV is out-of-scope","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1149,"byte_end":1230,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ for this crate's SemVer guarantees), however when we do it will be accompanied","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1231,"byte_end":1313,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ with a minor version bump.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1314,"byte_end":1344,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1345,"byte_end":1348,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1349,"byte_end":1361,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1362,"byte_end":1365,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1366,"byte_end":1373,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1374,"byte_end":1399,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1400,"byte_end":1403,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1404,"byte_end":1419,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     // Protip: don't embed secrets in your source code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1420,"byte_end":1479,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/     // This is just an example.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1480,"byte_end":1515,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/     let mut secret = b\"Air shield password: 1,2,3,4,5\".to_vec();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1516,"byte_end":1584,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/     // [ ... ] open the air shield here","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1585,"byte_end":1628,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1629,"byte_end":1632,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // Now that we're done using the secret, zero it out.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1633,"byte_end":1694,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/     secret.zeroize();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1695,"byte_end":1720,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1721,"byte_end":1726,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1727,"byte_end":1734,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [Zeroize] trait is impl'd on all of Rust's core scalar types including","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1739,"byte_end":1817,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ integers, floats, `bool`, and `char`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1818,"byte_end":1859,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1860,"byte_end":1863,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Additionally, it's implemented on slices and `IterMut`s of the above types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1864,"byte_end":1943,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1944,"byte_end":1947,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ When the `alloc` feature is enabled (which it is by default), it's also","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":1948,"byte_end":2023,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ impl'd for `Vec<T>` for the above types as well as `String`, where it provides","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2024,"byte_end":2106,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/ [Vec::clear()] / [String::clear()]-like behavior (truncating to zero-length)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2107,"byte_end":2187,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ but ensures the backing memory is securely zeroed with some caveats.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2188,"byte_end":2260,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ (NOTE: see \"Stack/Heap Zeroing Notes\" for important `Vec`/`String` details)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2261,"byte_end":2340,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2341,"byte_end":2344,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The [DefaultIsZeroes] marker trait can be impl'd on types which also","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2345,"byte_end":2417,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ impl [Default], which implements [Zeroize] by overwriting a value with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2418,"byte_end":2492,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ the default value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2493,"byte_end":2515,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2516,"byte_end":2519,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Custom Derive Support","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2520,"byte_end":2548,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2549,"byte_end":2552,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This crate has custom derive support for the `Zeroize` trait,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2553,"byte_end":2618,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/ gated under the `zeroize` crate's `zeroize_derive` Cargo feature,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2619,"byte_end":2688,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ which automatically calls `zeroize()` on all members of a struct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2689,"byte_end":2757,"line_start":66,"line_end":66,"column_start":1,"column_end":69}},{"value":"/ or tuple struct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2758,"byte_end":2778,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2779,"byte_end":2782,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Additionally it supports the following attribute:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2783,"byte_end":2836,"line_start":69,"line_end":69,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2837,"byte_end":2840,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ - `#[zeroize(drop)]`: call `zeroize()` when this item is dropped","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2841,"byte_end":2909,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2910,"byte_end":2913,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Example which derives `Drop`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2914,"byte_end":2947,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2948,"byte_end":2951,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2952,"byte_end":2959,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"derive\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2960,"byte_end":2992,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":2993,"byte_end":3000,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3001,"byte_end":3026,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3027,"byte_end":3030,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // This struct will be zeroized on drop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3031,"byte_end":3074,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"/ #[derive(Zeroize)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3075,"byte_end":3097,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/ #[zeroize(drop)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3098,"byte_end":3118,"line_start":82,"line_end":82,"column_start":1,"column_end":21}},{"value":"/ struct MyStruct([u8; 32]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3119,"byte_end":3149,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3150,"byte_end":3157,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3158,"byte_end":3165,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3166,"byte_end":3169,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Example which does not derive `Drop` (useful for e.g. `Copy` types)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3170,"byte_end":3241,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3242,"byte_end":3245,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3246,"byte_end":3253,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ #[cfg(feature = \"derive\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3254,"byte_end":3284,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/ # {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3285,"byte_end":3292,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3293,"byte_end":3318,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3319,"byte_end":3322,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // This struct will *NOT* be zeroized on drop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3323,"byte_end":3372,"line_start":94,"line_end":94,"column_start":1,"column_end":50}},{"value":"/ #[derive(Copy, Clone, Zeroize)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3373,"byte_end":3408,"line_start":95,"line_end":95,"column_start":1,"column_end":36}},{"value":"/ struct MyStruct([u8; 32]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3409,"byte_end":3439,"line_start":96,"line_end":96,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3440,"byte_end":3447,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3448,"byte_end":3455,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3456,"byte_end":3459,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## `Zeroizing<Z>`: wrapper for zeroizing arbitrary values on drop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3460,"byte_end":3529,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3530,"byte_end":3533,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ `Zeroizing<Z: Zeroize>` is a generic wrapper type that impls `Deref`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3534,"byte_end":3606,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ and `DerefMut`, allowing access to an inner value of type `Z`, and also","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3607,"byte_end":3682,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ impls a `Drop` handler which calls `zeroize()` on its contents:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3683,"byte_end":3750,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3751,"byte_end":3754,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3755,"byte_end":3762,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroizing;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3763,"byte_end":3790,"line_start":107,"line_end":107,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3791,"byte_end":3794,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3795,"byte_end":3810,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/     let mut secret = Zeroizing::new([0u8; 5]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3811,"byte_end":3861,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3862,"byte_end":3865,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     // Set the air shield password","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3866,"byte_end":3904,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"/     // Protip (again): don't embed secrets in your source code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3905,"byte_end":3972,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/     secret.copy_from_slice(&[1, 2, 3, 4, 5]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":3973,"byte_end":4022,"line_start":114,"line_end":114,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(secret.as_ref(), &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4023,"byte_end":4077,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4078,"byte_end":4081,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // The contents of `secret` will be automatically zeroized on drop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4082,"byte_end":4156,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4157,"byte_end":4162,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4163,"byte_end":4170,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4171,"byte_end":4174,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ## What guarantees does this crate provide?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4175,"byte_end":4222,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4223,"byte_end":4226,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This crate guarantees the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4227,"byte_end":4267,"line_start":123,"line_end":123,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4268,"byte_end":4271,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ 1. The zeroing operation can't be \"optimized away\" by the compiler.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4272,"byte_end":4343,"line_start":125,"line_end":125,"column_start":1,"column_end":72}},{"value":"/ 2. All subsequent reads to memory will see \"zeroized\" values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4344,"byte_end":4409,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4410,"byte_end":4413,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ LLVM's volatile semantics ensure #1 is true.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4414,"byte_end":4462,"line_start":128,"line_end":128,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4463,"byte_end":4466,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Additionally, thanks to work by the [Unsafe Code Guidelines Working Group],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4467,"byte_end":4546,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ we can now fairly confidently say #2 is true as well. Previously there were","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4547,"byte_end":4626,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ worries that the approach used by this crate (mixing volatile and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4627,"byte_end":4696,"line_start":132,"line_end":132,"column_start":1,"column_end":70}},{"value":"/ non-volatile accesses) was undefined behavior due to language contained","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4697,"byte_end":4772,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/ in the documentation for `write_volatile`, however after some discussion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4773,"byte_end":4849,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ [these remarks have been removed] and the specific usage pattern in this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4850,"byte_end":4926,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ crate is considered to be well-defined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4927,"byte_end":4970,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4971,"byte_end":4974,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Additionally this crate leverages [compiler_fence] from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":4975,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":60}},{"value":"/ [core::sync::atomic] with the strictest ordering ([Ordering::SeqCst])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5035,"byte_end":5108,"line_start":139,"line_end":139,"column_start":1,"column_end":74}},{"value":"/ as a precaution to help ensure reads are not reordered before memory has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5109,"byte_end":5185,"line_start":140,"line_end":140,"column_start":1,"column_end":77}},{"value":"/ been zeroed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5186,"byte_end":5202,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5203,"byte_end":5206,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ All of that said, there is still potential for microarchitectural attacks","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5207,"byte_end":5284,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/ (ala Spectre/Meltdown) to leak \"zeroized\" secrets through covert channels.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5285,"byte_end":5363,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ This crate makes no guarantees that zeroized values cannot be leaked","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5364,"byte_end":5436,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/ through such channels, as they represent flaws in the underlying hardware.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5437,"byte_end":5515,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5516,"byte_end":5519,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ## Stack/Heap Zeroing Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5520,"byte_end":5551,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5552,"byte_end":5555,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ This crate can be used to zero values from either the stack or the heap.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5556,"byte_end":5632,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5633,"byte_end":5636,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ However, be aware several operations in Rust can unintentionally leave","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5637,"byte_end":5711,"line_start":152,"line_end":152,"column_start":1,"column_end":75}},{"value":"/ copies of data in memory. This includes but is not limited to:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5712,"byte_end":5778,"line_start":153,"line_end":153,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5779,"byte_end":5782,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ - Moves and `Copy`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5783,"byte_end":5805,"line_start":155,"line_end":155,"column_start":1,"column_end":23}},{"value":"/ - Heap reallocation when using `Vec` and `String`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5806,"byte_end":5859,"line_start":156,"line_end":156,"column_start":1,"column_end":54}},{"value":"/ - Borrowers of a reference making copies of the data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5860,"byte_end":5916,"line_start":157,"line_end":157,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5917,"byte_end":5920,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`Pin`][pin] can be leveraged in conjunction with this crate to ensure","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5921,"byte_end":5995,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ data kept on the stack isn't moved.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":5996,"byte_end":6035,"line_start":160,"line_end":160,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6036,"byte_end":6039,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ The `Zeroize` impls for `Vec` and `String` zeroize the entire capacity of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6040,"byte_end":6117,"line_start":162,"line_end":162,"column_start":1,"column_end":78}},{"value":"/ their backing buffer, but cannot guarantee copies of the data were not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6118,"byte_end":6192,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ previously made by buffer reallocation. It's therefore important when","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6193,"byte_end":6266,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ attempting to zeroize such buffers to initialize them to the correct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6267,"byte_end":6339,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/ capacity, and take care to prevent subsequent reallocation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6340,"byte_end":6403,"line_start":166,"line_end":166,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6404,"byte_end":6407,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ The `secrecy` crate provides higher-level abstractions for eliminating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6408,"byte_end":6482,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ usage patterns which can cause reallocations:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6483,"byte_end":6532,"line_start":169,"line_end":169,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6533,"byte_end":6536,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ <https://crates.io/crates/secrecy>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6537,"byte_end":6575,"line_start":171,"line_end":171,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6576,"byte_end":6579,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ## What about: clearing registers, mlock, mprotect, etc?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6580,"byte_end":6640,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6641,"byte_end":6644,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ This crate is focused on providing simple, unobtrusive support for reliably","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6645,"byte_end":6724,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/ zeroing memory using the best approach possible on stable Rust.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6725,"byte_end":6792,"line_start":176,"line_end":176,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6793,"byte_end":6796,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Clearing registers is a difficult problem that can't easily be solved by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6797,"byte_end":6873,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ something like a crate, and requires either inline ASM or rustc support.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6874,"byte_end":6950,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ See <https://github.com/rust-lang/rust/issues/17046> for background on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":6951,"byte_end":7025,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ this particular problem.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7026,"byte_end":7054,"line_start":181,"line_end":181,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7055,"byte_end":7058,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Other memory protection mechanisms are interesting and useful, but often","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7059,"byte_end":7135,"line_start":183,"line_end":183,"column_start":1,"column_end":77}},{"value":"/ overkill (e.g. defending against RAM scraping or attackers with swap access).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7136,"byte_end":7217,"line_start":184,"line_end":184,"column_start":1,"column_end":82}},{"value":"/ In as much as there may be merit to these approaches, there are also many","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7218,"byte_end":7295,"line_start":185,"line_end":185,"column_start":1,"column_end":78}},{"value":"/ other crates that already implement more sophisticated memory protections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7296,"byte_end":7374,"line_start":186,"line_end":186,"column_start":1,"column_end":79}},{"value":"/ Such protections are explicitly out-of-scope for this crate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7375,"byte_end":7439,"line_start":187,"line_end":187,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7440,"byte_end":7443,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ Zeroing memory is [good cryptographic hygiene] and this crate seeks to promote","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7444,"byte_end":7526,"line_start":189,"line_end":189,"column_start":1,"column_end":83}},{"value":"/ it in the most unobtrusive manner possible. This includes omitting complex","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7527,"byte_end":7605,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ `unsafe` memory protection systems and just trying to make the best memory","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7606,"byte_end":7684,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ zeroing crate available.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7685,"byte_end":7713,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7714,"byte_end":7717,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ [Zeroize]: https://docs.rs/zeroize/latest/zeroize/trait.Zeroize.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7718,"byte_end":7790,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ [Zeroing memory securely is hard]: http://www.daemonology.net/blog/2014-09-04-how-to-zero-a-buffer.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7791,"byte_end":7898,"line_start":195,"line_end":195,"column_start":1,"column_end":108}},{"value":"/ [Vec::clear()]: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.clear","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7899,"byte_end":7981,"line_start":196,"line_end":196,"column_start":1,"column_end":83}},{"value":"/ [String::clear()]: https://doc.rust-lang.org/std/string/struct.String.html#method.clear","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":7982,"byte_end":8073,"line_start":197,"line_end":197,"column_start":1,"column_end":92}},{"value":"/ [DefaultIsZeroes]: https://docs.rs/zeroize/latest/zeroize/trait.DefaultIsZeroes.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8074,"byte_end":8162,"line_start":198,"line_end":198,"column_start":1,"column_end":89}},{"value":"/ [Default]: https://doc.rust-lang.org/std/default/trait.Default.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8163,"byte_end":8234,"line_start":199,"line_end":199,"column_start":1,"column_end":72}},{"value":"/ [core::ptr::write_volatile]: https://doc.rust-lang.org/core/ptr/fn.write_volatile.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8235,"byte_end":8325,"line_start":200,"line_end":200,"column_start":1,"column_end":91}},{"value":"/ [Unsafe Code Guidelines Working Group]: https://github.com/rust-lang/unsafe-code-guidelines","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8326,"byte_end":8421,"line_start":201,"line_end":201,"column_start":1,"column_end":96}},{"value":"/ [these remarks have been removed]: https://github.com/rust-lang/rust/pull/60972","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8422,"byte_end":8505,"line_start":202,"line_end":202,"column_start":1,"column_end":84}},{"value":"/ [core::sync::atomic]: https://doc.rust-lang.org/stable/core/sync/atomic/index.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8506,"byte_end":8592,"line_start":203,"line_end":203,"column_start":1,"column_end":87}},{"value":"/ [Ordering::SeqCst]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html#variant.SeqCst","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8593,"byte_end":8692,"line_start":204,"line_end":204,"column_start":1,"column_end":100}},{"value":"/ [compiler_fence]: https://doc.rust-lang.org/stable/core/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8693,"byte_end":8787,"line_start":205,"line_end":205,"column_start":1,"column_end":95}},{"value":"/ [pin]: https://doc.rust-lang.org/std/pin/struct.Pin.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8788,"byte_end":8848,"line_start":206,"line_end":206,"column_start":1,"column_end":61}},{"value":"/ [good cryptographic hygiene]: https://github.com/veorq/cryptocoding#clean-memory-of-secret-data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8849,"byte_end":8948,"line_start":207,"line_end":207,"column_start":1,"column_end":100}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":8950,"byte_end":8960,"line_start":209,"line_end":209,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms, trivial_casts, unused_qualifications)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9057,"byte_end":9135,"line_start":212,"line_end":212,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9585,"byte_end":9592,"line_start":231,"line_end":231,"column_start":11,"column_end":18},"name":"Zeroize","qualname":"::Zeroize","value":"Zeroize","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" Trait for securely erasing types from memory\n","sig":null,"attributes":[{"value":"/ Trait for securely erasing types from memory","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9526,"byte_end":9574,"line_start":230,"line_end":230,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9753,"byte_end":9760,"line_start":234,"line_end":234,"column_start":8,"column_end":15},"name":"zeroize","qualname":"::Zeroize::zeroize","value":"pub fn zeroize(&mut Self)","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Zero out this object from memory using Rust intrinsics which ensure the\n zeroization operation is not \"optimized away\" by the compiler.\n","sig":null,"attributes":[{"value":"/ Zero out this object from memory using Rust intrinsics which ensure the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9599,"byte_end":9674,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ zeroization operation is not \"optimized away\" by the compiler.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9679,"byte_end":9745,"line_start":233,"line_end":233,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9863,"byte_end":9878,"line_start":238,"line_end":238,"column_start":11,"column_end":26},"name":"DefaultIsZeroes","qualname":"::DefaultIsZeroes","value":"DefaultIsZeroes: Copy + Default + Sized","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types whose `Default` is the desired zeroization result\n","sig":null,"attributes":[{"value":"/ Marker trait for types whose `Default` is the desired zeroization result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9776,"byte_end":9852,"line_start":237,"line_end":237,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14642,"byte_end":14652,"line_start":389,"line_end":389,"column_start":11,"column_end":21},"name":"TryZeroize","qualname":"::TryZeroize","value":"TryZeroize","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" Fallible trait for representing cases where zeroization may or may not be\n possible.","sig":null,"attributes":[{"value":"/ Fallible trait for representing cases where zeroization may or may not be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14389,"byte_end":14466,"line_start":384,"line_end":384,"column_start":1,"column_end":78}},{"value":"/ possible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14467,"byte_end":14480,"line_start":385,"line_end":385,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14481,"byte_end":14484,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This is primarily useful for scenarios like reference counted data, where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14485,"byte_end":14562,"line_start":387,"line_end":387,"column_start":1,"column_end":78}},{"value":"/ zeroization is only possible when the last reference is dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14563,"byte_end":14631,"line_start":388,"line_end":388,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14844,"byte_end":14855,"line_start":394,"line_end":394,"column_start":8,"column_end":19},"name":"try_zeroize","qualname":"::TryZeroize::try_zeroize","value":"pub fn try_zeroize(&mut Self) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Try to zero out this object from memory using Rust intrinsics which\n ensure the zeroization operation is not \"optimized away\" by the\n compiler.\n","sig":null,"attributes":[{"value":"/ Try to zero out this object from memory using Rust intrinsics which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14659,"byte_end":14730,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ ensure the zeroization operation is not \"optimized away\" by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14735,"byte_end":14802,"line_start":391,"line_end":391,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14807,"byte_end":14820,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"must_use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14825,"byte_end":14836,"line_start":393,"line_end":393,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15055,"byte_end":15064,"line_start":400,"line_end":400,"column_start":12,"column_end":21},"name":"Zeroizing","qualname":"::Zeroizing","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Zeroizing` is a a wrapper for any `Z: Zeroize` type which implements a\n `Drop` handler which zeroizes dropped values.\n","sig":null,"attributes":[{"value":"/ `Zeroizing` is a a wrapper for any `Z: Zeroize` type which implements a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14879,"byte_end":14954,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/ `Drop` handler which zeroizes dropped values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14955,"byte_end":15004,"line_start":398,"line_end":398,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15247,"byte_end":15250,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"new","qualname":"<Zeroizing<Z>>::new","value":"pub fn new(Z) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Move value inside a `Zeroizing` wrapper which ensures it will be\n zeroized when it's dropped.\n","sig":null,"attributes":[{"value":"/ Move value inside a `Zeroizing` wrapper which ensures it will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15131,"byte_end":15199,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/ zeroized when it's dropped.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15204,"byte_end":15235,"line_start":407,"line_end":407,"column_start":5,"column_end":36}}]}],"impls":[{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9927,"byte_end":9928,"line_start":240,"line_end":240,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":11086,"byte_end":11093,"line_start":283,"line_end":283,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":11247,"byte_end":11253,"line_start":294,"line_end":294,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":12525,"byte_end":12528,"line_start":333,"line_end":333,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14295,"byte_end":14301,"line_start":378,"line_end":378,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15090,"byte_end":15099,"line_start":402,"line_end":402,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15321,"byte_end":15330,"line_start":413,"line_end":413,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15455,"byte_end":15464,"line_start":422,"line_end":422,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15593,"byte_end":15602,"line_start":433,"line_end":433,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15719,"byte_end":15728,"line_start":442,"line_end":442,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15836,"byte_end":15845,"line_start":451,"line_end":451,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9880,"byte_end":9884,"line_start":238,"line_end":238,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9887,"byte_end":9894,"line_start":238,"line_end":238,"column_start":35,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2800},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9897,"byte_end":9902,"line_start":238,"line_end":238,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":9927,"byte_end":9928,"line_start":240,"line_end":240,"column_start":21,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":45},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":11086,"byte_end":11093,"line_start":283,"line_end":283,"column_start":25,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":9407},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":11247,"byte_end":11253,"line_start":294,"line_end":294,"column_start":21,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":37335},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":12525,"byte_end":12528,"line_start":333,"line_end":333,"column_start":21,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":4,"index":6703},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":14295,"byte_end":14301,"line_start":378,"line_end":378,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":4,"index":7216},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15090,"byte_end":15099,"line_start":402,"line_end":402,"column_start":9,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15321,"byte_end":15330,"line_start":413,"line_end":413,"column_start":21,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":368},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15455,"byte_end":15464,"line_start":422,"line_end":422,"column_start":24,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":368},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15593,"byte_end":15602,"line_start":433,"line_end":433,"column_start":27,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":368},"to":{"krate":1,"index":3039}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15719,"byte_end":15728,"line_start":442,"line_end":442,"column_start":21,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":368},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.2.0/src/lib.rs","byte_start":15836,"byte_end":15845,"line_start":451,"line_end":451,"column_start":18,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":368},"to":{"krate":1,"index":3050}}]}