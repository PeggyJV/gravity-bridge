{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","docopt","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9303152303765d58","-C","extra-filename=-9303152303765d58","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","lazy_static=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/liblazy_static-500bd8c69761d1b0.rmeta","--extern","regex=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libregex-e2d54b470b766fe3.rmeta","--extern","serde=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libserde-85a75bbc8b1c033c.rmeta","--extern","strsim=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libstrsim-07efecce98f721bb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libdocopt-9303152303765d58.rmeta"},"prelude":{"crate_id":{"name":"docopt","disambiguator":[12434656549981000193,9456884257219790418]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":18,"id":{"name":"lazy_static","disambiguator":[9131932799642439997,5737279247675587365]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":19,"id":{"name":"regex","disambiguator":[12049170922970997228,2147398766918334017]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":20,"id":{"name":"regex_syntax","disambiguator":[17633715069625647235,16743625408057147991]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":21,"id":{"name":"aho_corasick","disambiguator":[8038226322884879067,12094872422713145066]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":22,"id":{"name":"memchr","disambiguator":[13309440065246054461,9623703849673585728]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":23,"id":{"name":"serde","disambiguator":[10046370283642847503,3691239908664621752]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","num":24,"id":{"name":"serde_derive","disambiguator":[15453067340294867731,17590767171064247847]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","num":25,"id":{"name":"strsim","disambiguator":[8901158957489244204,14752278731310286103]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":0,"byte_end":6874,"line_start":1,"line_end":209,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6412,"byte_end":6419,"line_start":187,"line_end":187,"column_start":23,"column_end":30},"alias_span":null,"name":"ArgvMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6421,"byte_end":6433,"line_start":187,"line_end":187,"column_start":32,"column_end":44},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6435,"byte_end":6441,"line_start":187,"line_end":187,"column_start":46,"column_end":52},"alias_span":null,"name":"Docopt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6443,"byte_end":6448,"line_start":187,"line_end":187,"column_start":54,"column_end":59},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6450,"byte_end":6455,"line_start":187,"line_end":187,"column_start":61,"column_end":66},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":0,"byte_end":6874,"line_start":1,"line_end":209,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":271},{"krate":0,"index":502}],"decl_id":null,"docs":" Docopt for Rust. This implementation conforms to the\n [official description of Docopt](http://docopt.org/) and\n [passes its test suite](https://github.com/docopt/docopt/pull/201).","sig":null,"attributes":[{"value":"/ Docopt for Rust. This implementation conforms to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/ [official description of Docopt](http://docopt.org/) and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":57,"byte_end":117,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/ [passes its test suite](https://github.com/docopt/docopt/pull/201).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":118,"byte_end":189,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":190,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This library is [on GitHub](https://github.com/docopt/docopt.rs).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":194,"byte_end":263,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":264,"byte_end":267,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Fundamentally, Docopt is a command line argument parser. The detail that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":268,"byte_end":344,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ distinguishes it from most parsers is that the parser is derived from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":345,"byte_end":422,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ usage string. Here's a simple example:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":423,"byte_end":465,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":466,"byte_end":469,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":470,"byte_end":481,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use docopt::Docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":482,"byte_end":505,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":506,"byte_end":509,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ // Write the Docopt usage string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":510,"byte_end":547,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ const USAGE: &'static str = \"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":548,"byte_end":581,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ Usage: cp [-a] <source> <dest>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":582,"byte_end":616,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/        cp [-a] <source>... <dir>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":617,"byte_end":653,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":654,"byte_end":657,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Options:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":658,"byte_end":670,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/     -a, --archive  Copy everything.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":671,"byte_end":710,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ \";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":711,"byte_end":717,"line_start":21,"line_end":21,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":718,"byte_end":721,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // The argv. Normally you'd just use `parse` which will automatically","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":722,"byte_end":795,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ // use `std::env::args()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":796,"byte_end":826,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ let argv = || vec![\"cp\", \"-a\", \"file1\", \"file2\", \"dest/\"];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":827,"byte_end":889,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":890,"byte_end":893,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Parse argv and exit the program with an error message if it fails.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":894,"byte_end":967,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ let args = Docopt::new(USAGE)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":968,"byte_end":1001,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/                   .and_then(|d| d.argv(argv().into_iter()).parse())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1002,"byte_end":1073,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/                   .unwrap_or_else(|e| e.exit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1074,"byte_end":1126,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Now access your argv values. Synonyms work just fine!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1131,"byte_end":1191,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/ assert!(args.get_bool(\"-a\") && args.get_bool(\"--archive\"));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1192,"byte_end":1255,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(args.get_vec(\"<source>\"), vec![\"file1\", \"file2\"]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1256,"byte_end":1321,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(args.get_str(\"<dir>\"), \"dest/\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1322,"byte_end":1369,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(args.get_str(\"<dest>\"), \"\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1370,"byte_end":1413,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1414,"byte_end":1421,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1422,"byte_end":1425,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Type based decoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1426,"byte_end":1451,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1452,"byte_end":1455,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Often, command line values aren't just strings or booleans---sometimes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1456,"byte_end":1530,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ they are integers, or enums, or something more elaborate. Using the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1531,"byte_end":1602,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ standard Docopt interface can be inconvenient for this purpose, because","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1603,"byte_end":1678,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ you'll need to convert all of the values explicitly. Instead, this crate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1679,"byte_end":1755,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ provides a `Decoder` that converts an `ArgvMap` to your custom struct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1756,"byte_end":1830,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ Here is the same example as above using type based decoding:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1831,"byte_end":1895,"line_start":46,"line_end":46,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1896,"byte_end":1899,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1900,"byte_end":1911,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1912,"byte_end":1929,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ use docopt::Docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1930,"byte_end":1953,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1954,"byte_end":1981,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1982,"byte_end":1985,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Write the Docopt usage string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":1986,"byte_end":2023,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ const USAGE: &'static str = \"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2024,"byte_end":2057,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/ Usage: cp [-a] <source> <dest>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2058,"byte_end":2092,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/        cp [-a] <source>... <dir>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2093,"byte_end":2129,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2130,"byte_end":2133,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Options:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2134,"byte_end":2146,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/     -a, --archive  Copy everything.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2147,"byte_end":2186,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"/ \";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2187,"byte_end":2193,"line_start":60,"line_end":60,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2194,"byte_end":2197,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2198,"byte_end":2224,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ struct Args {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2225,"byte_end":2242,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/     arg_source: Vec<String>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2243,"byte_end":2275,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/     arg_dest: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2276,"byte_end":2301,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     arg_dir: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2302,"byte_end":2326,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/     flag_archive: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2327,"byte_end":2354,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2355,"byte_end":2360,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2361,"byte_end":2364,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let argv = || vec![\"cp\", \"-a\", \"file1\", \"file2\", \"dest/\"];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2365,"byte_end":2427,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ let args: Args = Docopt::new(USAGE)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2428,"byte_end":2467,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/     .and_then(|d| d.argv(argv().into_iter()).deserialize())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2468,"byte_end":2531,"line_start":72,"line_end":72,"column_start":1,"column_end":64}},{"value":"/     .unwrap_or_else(|e| e.exit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2532,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2571,"byte_end":2574,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // Now access your argv values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2575,"byte_end":2610,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ fn s(x: &str) -> String { x.to_string() }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2611,"byte_end":2656,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/ assert!(args.flag_archive);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2657,"byte_end":2688,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(args.arg_source, vec![s(\"file1\"), s(\"file2\")]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2689,"byte_end":2751,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(args.arg_dir, s(\"dest/\"));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2752,"byte_end":2793,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(args.arg_dest, s(\"\"));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2794,"byte_end":2831,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2832,"byte_end":2839,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2840,"byte_end":2847,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2848,"byte_end":2851,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Command line arguments for `rustc`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2852,"byte_end":2892,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Here's an example with a subset of `rustc`'s command line arguments that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2897,"byte_end":2973,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ shows more of Docopt and some of the benefits of type based decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":2974,"byte_end":3047,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3048,"byte_end":3051,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3052,"byte_end":3063,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3064,"byte_end":3081,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/ # #![allow(non_snake_case)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3082,"byte_end":3113,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"/ use std::fmt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3114,"byte_end":3131,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3132,"byte_end":3135,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3136,"byte_end":3163,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3164,"byte_end":3167,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ use docopt::Docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3168,"byte_end":3191,"line_start":96,"line_end":96,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3192,"byte_end":3195,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Write the Docopt usage string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3196,"byte_end":3233,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/ const USAGE: &'static str = \"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3234,"byte_end":3267,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/ Usage: rustc [options] [--cfg SPEC... -L PATH...] INPUT","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3268,"byte_end":3327,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/        rustc (--help | --version)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3328,"byte_end":3365,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3366,"byte_end":3369,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Options:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3370,"byte_end":3382,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/     -h, --help         Show this message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3383,"byte_end":3428,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/     --version          Show the version of rustc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3429,"byte_end":3482,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/     --cfg SPEC         Configure the compilation environment.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3483,"byte_end":3548,"line_start":106,"line_end":106,"column_start":1,"column_end":66}},{"value":"/     -L PATH            Add a directory to the library search path.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3549,"byte_end":3619,"line_start":107,"line_end":107,"column_start":1,"column_end":71}},{"value":"/     --emit TYPE        Configure the output that rustc will produce.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3620,"byte_end":3692,"line_start":108,"line_end":108,"column_start":1,"column_end":73}},{"value":"/                        Valid values: asm, ir, bc, obj, link.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3693,"byte_end":3757,"line_start":109,"line_end":109,"column_start":1,"column_end":65}},{"value":"/     --opt-level LEVEL  Optimize with possible levels 0-3.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3758,"byte_end":3819,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/ \";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3820,"byte_end":3826,"line_start":111,"line_end":111,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3827,"byte_end":3830,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3831,"byte_end":3857,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/ struct Args {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3858,"byte_end":3875,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/     arg_INPUT: String,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3876,"byte_end":3902,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/     flag_emit: Option<Emit>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3903,"byte_end":3935,"line_start":116,"line_end":116,"column_start":1,"column_end":33}},{"value":"/     flag_opt_level: Option<OptLevel>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3936,"byte_end":3977,"line_start":117,"line_end":117,"column_start":1,"column_end":42}},{"value":"/     flag_cfg: Vec<String>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":3978,"byte_end":4008,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"/     flag_L: Vec<String>,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4009,"byte_end":4037,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/     flag_help: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4038,"byte_end":4062,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/     flag_version: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4063,"byte_end":4090,"line_start":121,"line_end":121,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4091,"byte_end":4096,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4097,"byte_end":4100,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // This is easy. The decoder will automatically restrict values to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4101,"byte_end":4171,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/ // strings that match one of the enum variants.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4172,"byte_end":4223,"line_start":125,"line_end":125,"column_start":1,"column_end":52}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4224,"byte_end":4250,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4251,"byte_end":4284,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ enum Emit { Asm, Ir, Bc, Obj, Link }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4285,"byte_end":4325,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4326,"byte_end":4329,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ // This one is harder because we want the user to specify an integer,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4330,"byte_end":4403,"line_start":130,"line_end":130,"column_start":1,"column_end":74}},{"value":"/ // but restrict it to a specific range. So we implement `Deserialize`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4404,"byte_end":4477,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/ // ourselves.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4478,"byte_end":4495,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4496,"byte_end":4529,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/ enum OptLevel { Zero, One, Two, Three }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4530,"byte_end":4573,"line_start":134,"line_end":134,"column_start":1,"column_end":44}},{"value":"/ struct OptLevelVisitor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4574,"byte_end":4601,"line_start":135,"line_end":135,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4602,"byte_end":4605,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ impl<'de> serde::de::Visitor<'de> for OptLevelVisitor {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4606,"byte_end":4665,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/     type Value = OptLevel;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4666,"byte_end":4696,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4697,"byte_end":4700,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4701,"byte_end":4777,"line_start":140,"line_end":140,"column_start":1,"column_end":77}},{"value":"/         formatter.write_str(\"a number from range 0..3\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4778,"byte_end":4837,"line_start":141,"line_end":141,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4838,"byte_end":4847,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4848,"byte_end":4851,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/     fn visit_u8<E>(self, n: u8) -> Result<Self::Value, E>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4852,"byte_end":4913,"line_start":144,"line_end":144,"column_start":1,"column_end":62}},{"value":"/         where E: serde::de::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4914,"byte_end":4951,"line_start":145,"line_end":145,"column_start":1,"column_end":38}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4952,"byte_end":4961,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/         Ok(match n {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4962,"byte_end":4986,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/             0 => OptLevel::Zero, 1 => OptLevel::One,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":4987,"byte_end":5043,"line_start":148,"line_end":148,"column_start":1,"column_end":57}},{"value":"/             2 => OptLevel::Two, 3 => OptLevel::Three,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5044,"byte_end":5101,"line_start":149,"line_end":149,"column_start":1,"column_end":58}},{"value":"/             n => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5102,"byte_end":5124,"line_start":150,"line_end":150,"column_start":1,"column_end":23}},{"value":"/                 let err = format!(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5125,"byte_end":5163,"line_start":151,"line_end":151,"column_start":1,"column_end":39}},{"value":"/                     \"Could not deserialize '{}' as opt-level.\", n);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5164,"byte_end":5235,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/                 return Err(E::custom(err));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5236,"byte_end":5283,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5284,"byte_end":5301,"line_start":154,"line_end":154,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5302,"byte_end":5316,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5317,"byte_end":5326,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5327,"byte_end":5332,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5333,"byte_end":5336,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl<'de> serde::de::Deserialize<'de> for OptLevel {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5337,"byte_end":5393,"line_start":159,"line_end":159,"column_start":1,"column_end":57}},{"value":"/     fn deserialize<D>(d: D) -> Result<OptLevel, D::Error>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5394,"byte_end":5455,"line_start":160,"line_end":160,"column_start":1,"column_end":62}},{"value":"/         where D: serde::de::Deserializer<'de>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5456,"byte_end":5505,"line_start":161,"line_end":161,"column_start":1,"column_end":50}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5506,"byte_end":5515,"line_start":162,"line_end":162,"column_start":1,"column_end":10}},{"value":"/         d.deserialize_u8(OptLevelVisitor)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5516,"byte_end":5561,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5562,"byte_end":5571,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5572,"byte_end":5577,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5578,"byte_end":5581,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ let argv = || vec![\"rustc\", \"-L\", \".\", \"-L\", \"..\", \"--cfg\", \"a\",","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5582,"byte_end":5650,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/                             \"--opt-level\", \"2\", \"--emit=ir\", \"docopt.rs\"];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5651,"byte_end":5729,"line_start":168,"line_end":168,"column_start":1,"column_end":79}},{"value":"/ let args: Args = Docopt::new(USAGE)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5730,"byte_end":5769,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/                         .and_then(|d| d.argv(argv().into_iter()).deserialize())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5770,"byte_end":5853,"line_start":170,"line_end":170,"column_start":1,"column_end":84}},{"value":"/                         .unwrap_or_else(|e| e.exit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5854,"byte_end":5912,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5913,"byte_end":5916,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Now access your argv values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5917,"byte_end":5952,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/ fn s(x: &str) -> String { x.to_string() }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5953,"byte_end":5998,"line_start":174,"line_end":174,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(args.arg_INPUT, \"docopt.rs\".to_string());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":5999,"byte_end":6055,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(args.flag_L, vec![s(\".\"), s(\"..\")]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6056,"byte_end":6107,"line_start":176,"line_end":176,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(args.flag_cfg, vec![s(\"a\")]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6108,"byte_end":6152,"line_start":177,"line_end":177,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(args.flag_opt_level, Some(OptLevel::Two));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6153,"byte_end":6210,"line_start":178,"line_end":178,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(args.flag_emit, Some(Emit::Ir));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6211,"byte_end":6258,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6259,"byte_end":6266,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6267,"byte_end":6274,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"crate_name = \"docopt\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6276,"byte_end":6301,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"deny(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6366,"byte_end":6388,"line_start":185,"line_end":185,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8586,"byte_end":8591,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Usage","qualname":"::dopt::Error::Usage","value":"Error::Usage(String)","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Parsing the usage string failed.","sig":null,"attributes":[{"value":"/ Parsing the usage string failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8357,"byte_end":8393,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8398,"byte_end":8401,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This error can only be triggered by the programmer, i.e., the writer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8406,"byte_end":8478,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ of the Docopt usage string. This error is usually indicative of a bug","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8483,"byte_end":8556,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ in your program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8561,"byte_end":8581,"line_start":53,"line_end":53,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8899,"byte_end":8903,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Argv","qualname":"::dopt::Error::Argv","value":"Error::Argv(String)","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Parsing the argv specified failed.","sig":null,"attributes":[{"value":"/ Parsing the argv specified failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8606,"byte_end":8644,"line_start":56,"line_end":56,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8649,"byte_end":8652,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The payload is a string describing why the arguments provided could not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8657,"byte_end":8732,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ be parsed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8737,"byte_end":8751,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8756,"byte_end":8759,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This is distinct from `NoMatch` because it will catch errors like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8764,"byte_end":8833,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ using flags that aren't defined in the usage string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8838,"byte_end":8894,"line_start":62,"line_end":62,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9165,"byte_end":9172,"line_start":70,"line_end":70,"column_start":5,"column_end":12},"name":"NoMatch","qualname":"::dopt::Error::NoMatch","value":"Error::NoMatch","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The given argv parsed successfully, but it did not match any example\n usage of the program.","sig":null,"attributes":[{"value":"/ The given argv parsed successfully, but it did not match any example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8918,"byte_end":8990,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ usage of the program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8995,"byte_end":9020,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9025,"byte_end":9028,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Regrettably, there is no descriptive message describing *why* the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9033,"byte_end":9102,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ given argv didn't match any of the usage strings.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9107,"byte_end":9160,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9287,"byte_end":9298,"line_start":74,"line_end":74,"column_start":5,"column_end":16},"name":"Deserialize","qualname":"::dopt::Error::Deserialize","value":"Error::Deserialize(String)","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" This indicates a problem deserializing a successful argv match into a\n deserializable value.\n","sig":null,"attributes":[{"value":"/ This indicates a problem deserializing a successful argv match into a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9179,"byte_end":9252,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ deserializable value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9257,"byte_end":9282,"line_start":73,"line_end":73,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9464,"byte_end":9480,"line_start":78,"line_end":78,"column_start":5,"column_end":21},"name":"WithProgramUsage","qualname":"::dopt::Error::WithProgramUsage","value":"Error::WithProgramUsage(Box<Error>, String)","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Parsing failed, and the program usage should be printed next to the\n failure message. Typically this wraps `Argv` and `NoMatch` errors.\n","sig":null,"attributes":[{"value":"/ Parsing failed, and the program usage should be printed next to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9313,"byte_end":9384,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ failure message. Typically this wraps `Argv` and `NoMatch` errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9389,"byte_end":9459,"line_start":77,"line_end":77,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9626,"byte_end":9630,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Help","qualname":"::dopt::Error::Help","value":"Error::Help","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Decoding or parsing failed because the command line specified that the\n help message should be printed.\n","sig":null,"attributes":[{"value":"/ Decoding or parsing failed because the command line specified that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9507,"byte_end":9581,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ help message should be printed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9586,"byte_end":9621,"line_start":81,"line_end":81,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9820,"byte_end":9827,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Version","qualname":"::dopt::Error::Version","value":"Error::Version(String)","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Decoding or parsing failed because the command line specified that the\n version should be printed","sig":null,"attributes":[{"value":"/ Decoding or parsing failed because the command line specified that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9637,"byte_end":9711,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ version should be printed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9716,"byte_end":9745,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9750,"byte_end":9753,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The version is included as a payload to this variant.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9758,"byte_end":9815,"line_start":87,"line_end":87,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":565},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8345,"byte_end":8350,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Error","qualname":"::dopt::Error","value":"pub enum Error {\n    Usage(String),\n    Argv(String),\n    NoMatch,\n    Deserialize(String),\n    WithProgramUsage(Box<Error>, String),\n    Help,\n    Version(String),\n}","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":581},{"krate":0,"index":583}],"decl_id":null,"docs":" Represents the different types of Docopt errors.","sig":null,"attributes":[{"value":"/ Represents the different types of Docopt errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7371,"byte_end":7423,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7424,"byte_end":7427,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This error type has a lot of variants. In the common case, you probably","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7428,"byte_end":7503,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ don't care why Docopt has failed, and would rather just quit the program","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7504,"byte_end":7580,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ and show an error message instead. The `exit` method defined on the `Error`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7581,"byte_end":7660,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ type will do just that. It will also set the exit code appropriately","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7661,"byte_end":7733,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ (no error for `--help` or `--version`, but an error code for bad usage,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7734,"byte_end":7809,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ bad argv, no match or bad decode).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7810,"byte_end":7848,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7849,"byte_end":7852,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7853,"byte_end":7868,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7869,"byte_end":7872,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Generally, you want to parse the usage string, try to match the argv","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7873,"byte_end":7945,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ and then quit the program if there was an error reported at any point","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":7946,"byte_end":8019,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ in that process. This can be achieved like so:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8020,"byte_end":8070,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8071,"byte_end":8074,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8075,"byte_end":8088,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ use docopt::Docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8089,"byte_end":8112,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8113,"byte_end":8116,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ const USAGE: &'static str = \"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8117,"byte_end":8150,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ Usage: ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8151,"byte_end":8165,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/ \";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8166,"byte_end":8172,"line_start":41,"line_end":41,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8173,"byte_end":8176,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let args = Docopt::new(USAGE)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8177,"byte_end":8210,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/                   .and_then(|d| d.parse())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8211,"byte_end":8257,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/                   .unwrap_or_else(|e| e.exit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8258,"byte_end":8310,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":8311,"byte_end":8318,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10108,"byte_end":10113,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"fatal","qualname":"<Error>::fatal","value":"pub fn fatal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this was a fatal error or not.","sig":null,"attributes":[{"value":"/ Return whether this was a fatal error or not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9857,"byte_end":9906,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9911,"byte_end":9914,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Non-fatal errors include requests to print the help or version","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9919,"byte_end":9985,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ information of a program, while fatal errors include those such as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9990,"byte_end":10060,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ failing to decode or parse.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10065,"byte_end":10096,"line_start":96,"line_end":96,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10668,"byte_end":10672,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"exit","qualname":"<Error>::exit","value":"pub fn exit(&Self) -> !","parent":null,"children":[],"decl_id":null,"docs":" Print this error and immediately exit the program.","sig":null,"attributes":[{"value":"/ Print this error and immediately exit the program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10338,"byte_end":10392,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10397,"byte_end":10400,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the error is non-fatal (e.g., `Help` or `Version`), then the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10405,"byte_end":10472,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/ error is printed to stdout and the exit status will be `0`. Otherwise,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10477,"byte_end":10551,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ when the error is fatal, the error is printed to stderr and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10556,"byte_end":10623,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ exit status will be `1`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10628,"byte_end":10656,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12149,"byte_end":12155,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"Docopt","qualname":"::dopt::Docopt","value":"Docopt {  }","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"decl_id":null,"docs":" The main Docopt type, which is constructed with a Docopt usage string.","sig":null,"attributes":[{"value":"/ The main Docopt type, which is constructed with a Docopt usage string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":11958,"byte_end":12032,"line_start":160,"line_end":160,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12033,"byte_end":12036,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This can be used to match command line arguments to produce a `ArgvMap`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12037,"byte_end":12113,"line_start":162,"line_end":162,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12587,"byte_end":12590,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<Docopt>::new","value":"pub fn new<S>(S) -> Result<Docopt> where S: ::std::ops::Deref<Target = str>","parent":null,"children":[],"decl_id":null,"docs":" Parse the Docopt usage string given.","sig":null,"attributes":[{"value":"/ Parse the Docopt usage string given.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12295,"byte_end":12335,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12340,"byte_end":12343,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The `Docopt` value returned may be used immediately to parse command","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12348,"byte_end":12420,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ line arguments with a default configuration.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12425,"byte_end":12473,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12478,"byte_end":12481,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ If there was a problem parsing the usage string, a `Usage` error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12486,"byte_end":12554,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12559,"byte_end":12575,"line_start":179,"line_end":179,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13226,"byte_end":13237,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Docopt>::deserialize","value":"pub fn deserialize<'a, 'de:'a, D>(&'a Self) -> Result<D> where\nD: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Parse and deserialize the given argv.","sig":null,"attributes":[{"value":"/ Parse and deserialize the given argv.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12966,"byte_end":13007,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13012,"byte_end":13015,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13020,"byte_end":13056,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/ `parse().and_then(|vals| vals.deserialize())`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13061,"byte_end":13111,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13116,"byte_end":13119,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ For details on how decoding works, please see the documentation for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13124,"byte_end":13195,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ `ArgvMap`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13200,"byte_end":13214,"line_start":199,"line_end":199,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":14127,"byte_end":14132,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"parse","qualname":"<Docopt>::parse","value":"pub fn parse(&Self) -> Result<ArgvMap>","parent":null,"children":[],"decl_id":null,"docs":" Parse command line arguments and try to match them against a usage\n pattern specified in the Docopt string.","sig":null,"attributes":[{"value":"/ Parse command line arguments and try to match them against a usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13389,"byte_end":13459,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"/ pattern specified in the Docopt string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13464,"byte_end":13507,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13512,"byte_end":13515,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If there is a match, then an `ArgvMap` is returned, which maps","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13520,"byte_end":13586,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/ flags, commands and arguments to values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13591,"byte_end":13635,"line_start":210,"line_end":210,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13640,"byte_end":13643,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If parsing the command line arguments fails, then an `Argv` error is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13648,"byte_end":13720,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ returned. If parsing succeeds but there is no match, then a `NoMatch`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13725,"byte_end":13798,"line_start":213,"line_end":213,"column_start":5,"column_end":78}},{"value":"/ error is returned. Both of these errors are always returned inside a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13803,"byte_end":13875,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ `WithProgramUsage` error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13880,"byte_end":13909,"line_start":215,"line_end":215,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13914,"byte_end":13917,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If special handling of `help` or `version` is enabled (the former is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13922,"byte_end":13994,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ enabled by default), then `Help` or `Version` errors are returned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":13999,"byte_end":14068,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/ if `--help` or `--version` is present.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":14073,"byte_end":14115,"line_start":219,"line_end":219,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15271,"byte_end":15275,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"argv","qualname":"<Docopt>::argv","value":"pub fn argv<I, S>(Self, I) -> Docopt where I: IntoIterator<Item = S>,\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Set the argv to be used for Docopt parsing.","sig":null,"attributes":[{"value":"/ Set the argv to be used for Docopt parsing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":14922,"byte_end":14969,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":14974,"byte_end":14977,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ By default, when no argv is set, and it is automatically taken from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":14982,"byte_end":15053,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ `std::env::args()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15058,"byte_end":15081,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15086,"byte_end":15089,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The `argv` given *must* be the full set of `argv` passed to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15094,"byte_end":15161,"line_start":247,"line_end":247,"column_start":5,"column_end":72}},{"value":"/ program. e.g., `[\"cp\", \"src\", \"dest\"]` is right while `[\"src\", \"dest\"]`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15166,"byte_end":15241,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ is wrong.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15246,"byte_end":15259,"line_start":249,"line_end":249,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15835,"byte_end":15848,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"options_first","qualname":"<Docopt>::options_first","value":"pub fn options_first(Self, bool) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Enables the \"options first\" Docopt behavior.","sig":null,"attributes":[{"value":"/ Enables the \"options first\" Docopt behavior.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15512,"byte_end":15560,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15565,"byte_end":15568,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The options first behavior means that all flags *must* appear before","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15573,"byte_end":15645,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ position arguments. That is, after the first position argument is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15650,"byte_end":15719,"line_start":261,"line_end":261,"column_start":5,"column_end":74}},{"value":"/ seen, all proceeding arguments are interpreted as positional","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15724,"byte_end":15788,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/ arguments unconditionally.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15793,"byte_end":15823,"line_start":263,"line_end":263,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16432,"byte_end":16436,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"help","qualname":"<Docopt>::help","value":"pub fn help(Self, bool) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Enables automatic handling of `--help`.","sig":null,"attributes":[{"value":"/ Enables automatic handling of `--help`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15940,"byte_end":15983,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15988,"byte_end":15991,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ When this is enabled and `--help` appears anywhere in the arguments,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":15996,"byte_end":16068,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ then a `Help` error will be returned. You may then use the `exit`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16073,"byte_end":16142,"line_start":272,"line_end":272,"column_start":5,"column_end":74}},{"value":"/ method on the error value to conveniently quit the program (which will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16147,"byte_end":16221,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ print the full usage string to stdout).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16226,"byte_end":16269,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16274,"byte_end":16277,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that for this to work, `--help` must be a valid pattern.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16282,"byte_end":16347,"line_start":276,"line_end":276,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16352,"byte_end":16355,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ When disabled, there is no special handling of `--help`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16360,"byte_end":16420,"line_start":278,"line_end":278,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16997,"byte_end":17004,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"version","qualname":"<Docopt>::version","value":"pub fn version(Self, Option<String>) -> Docopt","parent":null,"children":[],"decl_id":null,"docs":" Enables automatic handling of `--version`.","sig":null,"attributes":[{"value":"/ Enables automatic handling of `--version`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16519,"byte_end":16565,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16570,"byte_end":16573,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ When this is enabled and `--version` appears anywhere in the arguments,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16578,"byte_end":16653,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ then a `Version(s)` error will be returned, where `s` is the string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16658,"byte_end":16729,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ given here. You may then use the `exit` method on the error value to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16734,"byte_end":16806,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ convenient quit the program (which will print the version to stdout).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16811,"byte_end":16884,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16889,"byte_end":16892,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ When disabled (a `None` value), there is no special handling of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16897,"byte_end":16964,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ `--version`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":16969,"byte_end":16985,"line_start":292,"line_end":292,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17134,"byte_end":17140,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"parser","qualname":"<Docopt>::parser","value":"pub fn parser(&Self) -> &Parser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17978,"byte_end":17985,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"ArgvMap","qualname":"::dopt::ArgvMap","value":"ArgvMap { map }","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" A map containing matched values from command line arguments.","sig":null,"attributes":[{"value":"/ A map containing matched values from command line arguments.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17630,"byte_end":17694,"line_start":319,"line_end":319,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17695,"byte_end":17698,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ The keys are just as specified in Docopt: `--flag` for a long flag or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17699,"byte_end":17772,"line_start":321,"line_end":321,"column_start":1,"column_end":74}},{"value":"/ `-f` for a short flag. (If `-f` is a synonym for `--flag`, then either","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17773,"byte_end":17847,"line_start":322,"line_end":322,"column_start":1,"column_end":75}},{"value":"/ key will work.) `ARG` or `<arg>` specify a positional argument and `cmd`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17848,"byte_end":17924,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/ specifies a command.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":17925,"byte_end":17949,"line_start":324,"line_end":324,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18015,"byte_end":18018,"line_start":328,"line_end":328,"column_start":9,"column_end":12},"name":"map","qualname":"::dopt::ArgvMap::map","value":"synonym::SynonymMap<std::string::String, dopt::Value>","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19832,"byte_end":19843,"line_start":381,"line_end":381,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<ArgvMap>::deserialize","value":"pub fn deserialize<'de, T: de::Deserialize>(Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to deserialize the map of values into a struct.","sig":null,"attributes":[{"value":"/ Tries to deserialize the map of values into a struct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18069,"byte_end":18126,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18131,"byte_end":18134,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This method should always be called to deserialize a `ArgvMap` into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18139,"byte_end":18210,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/ a struct. All fields of the struct must map to a corresponding key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18215,"byte_end":18285,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ in the `ArgvMap`. To this end, each member must have a special prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18290,"byte_end":18363,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ corresponding to the different kinds of patterns in Docopt. There are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18368,"byte_end":18441,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ three prefixes: `flag_`, `arg_` and `cmd_` which respectively","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18446,"byte_end":18511,"line_start":338,"line_end":338,"column_start":5,"column_end":70}},{"value":"/ correspond to short/long flags, positional arguments and commands.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18516,"byte_end":18586,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18591,"byte_end":18594,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If a Docopt item has a `-` in its name, then it is converted to an `_`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18599,"byte_end":18674,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18679,"byte_end":18682,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18687,"byte_end":18700,"line_start":343,"line_end":343,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18705,"byte_end":18708,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18713,"byte_end":18724,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18729,"byte_end":18746,"line_start":346,"line_end":346,"column_start":5,"column_end":22}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18751,"byte_end":18778,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18783,"byte_end":18786,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ use docopt::Docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18791,"byte_end":18814,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18819,"byte_end":18822,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ const USAGE: &'static str = \"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18827,"byte_end":18860,"line_start":351,"line_end":351,"column_start":5,"column_end":38}},{"value":"/ Usage: cargo [options] (build | test)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18865,"byte_end":18906,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/        cargo --help","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18911,"byte_end":18934,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18939,"byte_end":18942,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Options: -v, --verbose","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18947,"byte_end":18973,"line_start":355,"line_end":355,"column_start":5,"column_end":31}},{"value":"/          -h, --help","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18978,"byte_end":19001,"line_start":356,"line_end":356,"column_start":5,"column_end":28}},{"value":"/ \";","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19006,"byte_end":19012,"line_start":357,"line_end":357,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19017,"byte_end":19020,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19025,"byte_end":19051,"line_start":359,"line_end":359,"column_start":5,"column_end":31}},{"value":"/ struct Args {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19056,"byte_end":19073,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/   cmd_build: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19078,"byte_end":19100,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/   cmd_test: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19105,"byte_end":19126,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/   flag_verbose: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19131,"byte_end":19156,"line_start":363,"line_end":363,"column_start":5,"column_end":30}},{"value":"/   flag_h: bool,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19161,"byte_end":19180,"line_start":364,"line_end":364,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19185,"byte_end":19190,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19195,"byte_end":19198,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let argv = || vec![\"cargo\", \"build\", \"-v\"].into_iter();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19203,"byte_end":19262,"line_start":367,"line_end":367,"column_start":5,"column_end":64}},{"value":"/ let args: Args = Docopt::new(USAGE)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19267,"byte_end":19306,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/     .and_then(|d| d.argv(argv()).deserialize())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19311,"byte_end":19362,"line_start":369,"line_end":369,"column_start":5,"column_end":56}},{"value":"/     .unwrap_or_else(|e| e.exit());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19367,"byte_end":19405,"line_start":370,"line_end":370,"column_start":5,"column_end":43}},{"value":"/ assert!(args.cmd_build && !args.cmd_test","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19410,"byte_end":19454,"line_start":371,"line_end":371,"column_start":5,"column_end":49}},{"value":"/         && args.flag_verbose && !args.flag_h);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19459,"byte_end":19509,"line_start":372,"line_end":372,"column_start":5,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19514,"byte_end":19521,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19526,"byte_end":19533,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19538,"byte_end":19541,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Note that in the above example, `flag_h` is used but `flag_help`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19546,"byte_end":19614,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/ could also be used. (In fact, both could be used at the same time.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19619,"byte_end":19690,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19695,"byte_end":19698,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ In this example, only the `bool` type was used, but any type satisfying","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19703,"byte_end":19778,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ the `Deserialize` trait is valid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":19783,"byte_end":19820,"line_start":380,"line_end":380,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20266,"byte_end":20274,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<ArgvMap>::get_bool","value":"pub fn get_bool(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_bool()` on it.\n If the key does not exist, `false` is returned.\n","sig":null,"attributes":[{"value":"/ Finds the value corresponding to `key` and calls `as_bool()` on it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20127,"byte_end":20198,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ If the key does not exist, `false` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20203,"byte_end":20254,"line_start":389,"line_end":389,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20504,"byte_end":20513,"line_start":396,"line_end":396,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ArgvMap>::get_count","value":"pub fn get_count(&Self, &str) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_count()` on it.\n If the key does not exist, `0` is returned.\n","sig":null,"attributes":[{"value":"/ Finds the value corresponding to `key` and calls `as_count()` on it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20368,"byte_end":20440,"line_start":394,"line_end":394,"column_start":5,"column_end":77}},{"value":"/ If the key does not exist, `0` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20445,"byte_end":20492,"line_start":395,"line_end":395,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20738,"byte_end":20745,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"get_str","qualname":"<ArgvMap>::get_str","value":"pub fn get_str(&Self, &str) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_str()` on it.\n If the key does not exist, `\"\"` is returned.\n","sig":null,"attributes":[{"value":"/ Finds the value corresponding to `key` and calls `as_str()` on it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20603,"byte_end":20673,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ If the key does not exist, `\"\"` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20678,"byte_end":20726,"line_start":401,"line_end":401,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20974,"byte_end":20981,"line_start":408,"line_end":408,"column_start":12,"column_end":19},"name":"get_vec","qualname":"<ArgvMap>::get_vec","value":"pub fn get_vec(&Self, &str) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Finds the value corresponding to `key` and calls `as_vec()` on it.\n If the key does not exist, `vec!()` is returned.\n","sig":null,"attributes":[{"value":"/ Finds the value corresponding to `key` and calls `as_vec()` on it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20835,"byte_end":20905,"line_start":406,"line_end":406,"column_start":5,"column_end":75}},{"value":"/ If the key does not exist, `vec!()` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":20910,"byte_end":20962,"line_start":407,"line_end":407,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21262,"byte_end":21266,"line_start":416,"line_end":416,"column_start":12,"column_end":16},"name":"find","qualname":"<ArgvMap>::find","value":"pub fn find(&Self, &str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw value corresponding to some `key`.","sig":null,"attributes":[{"value":"/ Return the raw value corresponding to some `key`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21087,"byte_end":21140,"line_start":412,"line_end":412,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21145,"byte_end":21148,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ `key` should be a string in the traditional Docopt format. e.g.,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21153,"byte_end":21221,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/ `<arg>` or `--flag`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21226,"byte_end":21250,"line_start":415,"line_end":415,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21419,"byte_end":21422,"line_start":421,"line_end":421,"column_start":12,"column_end":15},"name":"len","qualname":"<ArgvMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of values, not including synonyms.\n","sig":null,"attributes":[{"value":"/ Return the number of values, not including synonyms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21351,"byte_end":21407,"line_start":420,"line_end":420,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21770,"byte_end":21789,"line_start":430,"line_end":430,"column_start":12,"column_end":31},"name":"key_to_struct_field","qualname":"<ArgvMap>::key_to_struct_field","value":"pub fn key_to_struct_field(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a Docopt key to a struct field name.\n This makes a half-hearted attempt at making the key a valid struct\n field name (like replacing `-` with `_`), but it does not otherwise\n guarantee that the result is a valid struct field name.\n","sig":null,"attributes":[{"value":"/ Converts a Docopt key to a struct field name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21475,"byte_end":21524,"line_start":425,"line_end":425,"column_start":5,"column_end":54}},{"value":"/ This makes a half-hearted attempt at making the key a valid struct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21529,"byte_end":21599,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/ field name (like replacing `-` with `_`), but it does not otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21604,"byte_end":21675,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ guarantee that the result is a valid struct field name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":21680,"byte_end":21739,"line_start":428,"line_end":428,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":23083,"byte_end":23102,"line_start":469,"line_end":469,"column_start":12,"column_end":31},"name":"struct_field_to_key","qualname":"<ArgvMap>::struct_field_to_key","value":"pub fn struct_field_to_key(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a struct field name to a Docopt key.\n","sig":null,"attributes":[{"value":"/ Converts a struct field name to a Docopt key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":23003,"byte_end":23052,"line_start":467,"line_end":467,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":665},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25844,"byte_end":25850,"line_start":546,"line_end":546,"column_start":5,"column_end":11},"name":"Switch","qualname":"::dopt::Value::Switch","value":"Value::Switch(bool)","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" A boolean value from a flag that has no argument.","sig":null,"attributes":[{"value":"/ A boolean value from a flag that has no argument.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25685,"byte_end":25738,"line_start":542,"line_end":542,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25743,"byte_end":25746,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The presence of a flag means `true` and the absence of a flag","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25751,"byte_end":25816,"line_start":544,"line_end":544,"column_start":5,"column_end":70}},{"value":"/ means `false`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25821,"byte_end":25839,"line_start":545,"line_end":545,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":668},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25917,"byte_end":25924,"line_start":549,"line_end":549,"column_start":5,"column_end":12},"name":"Counted","qualname":"::dopt::Value::Counted","value":"Value::Counted(u64)","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" The number of occurrences of a repeated flag.\n","sig":null,"attributes":[{"value":"/ The number of occurrences of a repeated flag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25863,"byte_end":25912,"line_start":548,"line_end":548,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26153,"byte_end":26158,"line_start":556,"line_end":556,"column_start":5,"column_end":10},"name":"Plain","qualname":"::dopt::Value::Plain","value":"Value::Plain(Option<String>)","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" A positional or flag argument.","sig":null,"attributes":[{"value":"/ A positional or flag argument.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25936,"byte_end":25970,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25975,"byte_end":25978,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This is `None` when the positional argument or flag is not present.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25983,"byte_end":26054,"line_start":553,"line_end":553,"column_start":5,"column_end":76}},{"value":"/ Note that it is possible to have `Some(\"\")` for a present but empty","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26059,"byte_end":26130,"line_start":554,"line_end":554,"column_start":5,"column_end":76}},{"value":"/ argument.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26135,"byte_end":26148,"line_start":555,"line_end":555,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":674},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26308,"byte_end":26312,"line_start":561,"line_end":561,"column_start":5,"column_end":9},"name":"List","qualname":"::dopt::Value::List","value":"Value::List(Vec<String>)","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" A List of positional or flag arguments.","sig":null,"attributes":[{"value":"/ A List of positional or flag arguments.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26181,"byte_end":26224,"line_start":558,"line_end":558,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26229,"byte_end":26232,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This list may be empty when no arguments or flags are present.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26237,"byte_end":26303,"line_start":560,"line_end":560,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25673,"byte_end":25678,"line_start":541,"line_end":541,"column_start":10,"column_end":15},"name":"Value","qualname":"::dopt::Value","value":"pub enum Value {\n    Switch(bool),\n    Counted(u64),\n    Plain(Option<String>),\n    List(Vec<String>),\n}","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674}],"decl_id":null,"docs":" A matched command line value.","sig":null,"attributes":[{"value":"/ A matched command line value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25372,"byte_end":25405,"line_start":533,"line_end":533,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25406,"byte_end":25409,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ The value can be a boolean, counted repetition, a plain string or a list","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25410,"byte_end":25486,"line_start":535,"line_end":535,"column_start":1,"column_end":77}},{"value":"/ of strings.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25487,"byte_end":25502,"line_start":536,"line_end":536,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25503,"byte_end":25506,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ The various `as_{bool,count,str,vec}` methods provide convenient access","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25507,"byte_end":25582,"line_start":538,"line_end":538,"column_start":1,"column_end":76}},{"value":"/ to values without destructuring manually.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":25583,"byte_end":25628,"line_start":539,"line_end":539,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26596,"byte_end":26603,"line_start":570,"line_end":570,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"pub fn as_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a bool.","sig":null,"attributes":[{"value":"/ Returns the value as a bool.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26347,"byte_end":26379,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26384,"byte_end":26387,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Counted repetitions are `false` if `0` and `true` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26392,"byte_end":26456,"line_start":567,"line_end":567,"column_start":5,"column_end":69}},{"value":"/ Plain strings are `true` if present and `false` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26461,"byte_end":26523,"line_start":568,"line_end":568,"column_start":5,"column_end":67}},{"value":"/ Lists are `true` if non-empty and `false` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26528,"byte_end":26584,"line_start":569,"line_end":569,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27081,"byte_end":27089,"line_start":585,"line_end":585,"column_start":12,"column_end":20},"name":"as_count","qualname":"<Value>::as_count","value":"pub fn as_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a count of the number of times it occurred.","sig":null,"attributes":[{"value":"/ Returns the value as a count of the number of times it occurred.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26839,"byte_end":26907,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26912,"byte_end":26915,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Booleans are `1` if `true` and `0` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26920,"byte_end":26969,"line_start":582,"line_end":582,"column_start":5,"column_end":54}},{"value":"/ Plain strings are `1` if present and `0` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26974,"byte_end":27029,"line_start":583,"line_end":583,"column_start":5,"column_end":60}},{"value":"/ Lists correspond to its length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27034,"byte_end":27069,"line_start":584,"line_end":584,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27467,"byte_end":27473,"line_start":598,"line_end":598,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a string.","sig":null,"attributes":[{"value":"/ Returns the value as a string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27334,"byte_end":27368,"line_start":595,"line_end":595,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27373,"byte_end":27376,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ All values return an empty string except for a non-empty plain string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27381,"byte_end":27455,"line_start":597,"line_end":597,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27838,"byte_end":27844,"line_start":609,"line_end":609,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<Value>::as_vec","value":"pub fn as_vec(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value as a list of strings.","sig":null,"attributes":[{"value":"/ Returns the value as a list of strings.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27640,"byte_end":27683,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27688,"byte_end":27691,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Booleans, repetitions and empty strings correspond to an empty list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27696,"byte_end":27768,"line_start":607,"line_end":607,"column_start":5,"column_end":77}},{"value":"/ Plain strings correspond to a list of length `1`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":27773,"byte_end":27826,"line_start":608,"line_end":608,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28817,"byte_end":28829,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::dopt::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Deserializer for `ArgvMap` into your own `Deserialize`able types.","sig":null,"attributes":[{"value":"/ Deserializer for `ArgvMap` into your own `Deserialize`able types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28077,"byte_end":28146,"line_start":618,"line_end":618,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28147,"byte_end":28150,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ In general, you shouldn't have to use this type directly. It is exposed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28151,"byte_end":28226,"line_start":620,"line_end":620,"column_start":1,"column_end":76}},{"value":"/ in case you want to write a generic function that produces a deserializable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28227,"byte_end":28306,"line_start":621,"line_end":621,"column_start":1,"column_end":80}},{"value":"/ value. For example, here's a function that takes a usage string, an argv","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28307,"byte_end":28383,"line_start":622,"line_end":622,"column_start":1,"column_end":77}},{"value":"/ and produces a deserializable value:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28384,"byte_end":28424,"line_start":623,"line_end":623,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28425,"byte_end":28428,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28429,"byte_end":28440,"line_start":625,"line_end":625,"column_start":1,"column_end":12}},{"value":"/ # extern crate docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28441,"byte_end":28467,"line_start":626,"line_end":626,"column_start":1,"column_end":27}},{"value":"/ extern crate serde;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28468,"byte_end":28491,"line_start":627,"line_end":627,"column_start":1,"column_end":24}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28492,"byte_end":28509,"line_start":628,"line_end":628,"column_start":1,"column_end":18}},{"value":"/ use docopt::Docopt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28510,"byte_end":28533,"line_start":629,"line_end":629,"column_start":1,"column_end":24}},{"value":"/ use serde::de::Deserialize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28534,"byte_end":28565,"line_start":630,"line_end":630,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28566,"byte_end":28569,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ fn deserialize<'de, D: Deserialize<'de>>(usage: &str, argv: &[&str])","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28570,"byte_end":28642,"line_start":632,"line_end":632,"column_start":1,"column_end":73}},{"value":"/                         -> Result<D, docopt::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28643,"byte_end":28700,"line_start":633,"line_end":633,"column_start":1,"column_end":58}},{"value":"/     Docopt::new(usage)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28701,"byte_end":28727,"line_start":634,"line_end":634,"column_start":1,"column_end":27}},{"value":"/            .and_then(|d| d.argv(argv.iter()).deserialize())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28728,"byte_end":28791,"line_start":635,"line_end":635,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28792,"byte_end":28797,"line_start":636,"line_end":636,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":28798,"byte_end":28805,"line_start":637,"line_end":637,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":271},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse","qualname":"::parse","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":717},{"krate":0,"index":724},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":391},{"krate":0,"index":803},{"krate":0,"index":821},{"krate":0,"index":819},{"krate":0,"index":823},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":843},{"krate":0,"index":840},{"krate":0,"index":838},{"krate":0,"index":836},{"krate":0,"index":852},{"krate":0,"index":858},{"krate":0,"index":856},{"krate":0,"index":860},{"krate":0,"index":872},{"krate":0,"index":870},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":410},{"krate":0,"index":418},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":929},{"krate":0,"index":934},{"krate":0,"index":932},{"krate":0,"index":444},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":936},{"krate":0,"index":947},{"krate":0,"index":945},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":464},{"krate":0,"index":470},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":717},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":41947,"byte_end":41953,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parse::Parser","value":"Parser { program, full_doc, usage, descs }","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":41964,"byte_end":41971,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"program","qualname":"::parse::Parser::program","value":"std::string::String","parent":{"krate":0,"index":717},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":719},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":41989,"byte_end":41997,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"full_doc","qualname":"::parse::Parser::full_doc","value":"std::string::String","parent":{"krate":0,"index":717},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42015,"byte_end":42020,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"name":"usage","qualname":"::parse::Parser::usage","value":"std::string::String","parent":{"krate":0,"index":717},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42038,"byte_end":42043,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"descs","qualname":"::parse::Parser::descs","value":"synonym::SynonymMap<parse::Atom, parse::Options>","parent":{"krate":0,"index":717},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42191,"byte_end":42194,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new(&str) -> Result<Parser, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42534,"byte_end":42541,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"matches","qualname":"<Parser>::matches","value":"pub fn matches(&Self, &Argv) -> Option<SynonymMap<String, Value>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42829,"byte_end":42839,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"parse_argv","qualname":"<Parser>::parse_argv","value":"pub fn parse_argv(&Self, Vec<String>, bool) -> Result<Argv, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":824},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63038,"byte_end":63043,"line_start":644,"line_end":644,"column_start":5,"column_end":10},"name":"Short","qualname":"::parse::Atom::Short","value":"Atom::Short(char)","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":827},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63055,"byte_end":63059,"line_start":645,"line_end":645,"column_start":5,"column_end":9},"name":"Long","qualname":"::parse::Atom::Long","value":"Atom::Long(String)","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":830},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63073,"byte_end":63080,"line_start":646,"line_end":646,"column_start":5,"column_end":12},"name":"Command","qualname":"::parse::Atom::Command","value":"Atom::Command(String)","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":833},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63094,"byte_end":63104,"line_start":647,"line_end":647,"column_start":5,"column_end":15},"name":"Positional","qualname":"::parse::Atom::Positional","value":"Atom::Positional(String)","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":823},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63027,"byte_end":63031,"line_start":643,"line_end":643,"column_start":10,"column_end":14},"name":"Atom","qualname":"::parse::Atom","value":"pub enum Atom {\n    Short(char),\n    Long(String),\n    Command(String),\n    Positional(String),\n}","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":852},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63152,"byte_end":63159,"line_start":651,"line_end":651,"column_start":12,"column_end":19},"name":"Options","qualname":"::parse::Options","value":"Options { repeats, arg, is_desc }","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":853},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63489,"byte_end":63496,"line_start":657,"line_end":657,"column_start":9,"column_end":16},"name":"repeats","qualname":"::parse::Options::repeats","value":"bool","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" Set to true if this atom is ever repeated in any context.\n For positional arguments, non-argument flags and commands, repetition\n means that they become countable.\n For flags with arguments, repetition means multiple distinct values\n can be specified (and are represented as a Vec).\n","sig":null,"attributes":[{"value":"/ Set to true if this atom is ever repeated in any context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63166,"byte_end":63227,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/ For positional arguments, non-argument flags and commands, repetition","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63232,"byte_end":63305,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/ means that they become countable.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63310,"byte_end":63347,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/ For flags with arguments, repetition means multiple distinct values","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63352,"byte_end":63423,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/ can be specified (and are represented as a Vec).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63428,"byte_end":63480,"line_start":656,"line_end":656,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":854},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63720,"byte_end":63723,"line_start":662,"line_end":662,"column_start":9,"column_end":12},"name":"arg","qualname":"::parse::Options::arg","value":"parse::Argument","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" This specifies whether this atom has any arguments.\n For commands and positional arguments, this is always Zero.\n Flags can have zero or one argument, with an optionally default value.\n","sig":null,"attributes":[{"value":"/ This specifies whether this atom has any arguments.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63509,"byte_end":63564,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/ For commands and positional arguments, this is always Zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63569,"byte_end":63632,"line_start":660,"line_end":660,"column_start":5,"column_end":68}},{"value":"/ Flags can have zero or one argument, with an optionally default value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63637,"byte_end":63711,"line_start":661,"line_end":661,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63809,"byte_end":63816,"line_start":665,"line_end":665,"column_start":9,"column_end":16},"name":"is_desc","qualname":"::parse::Options::is_desc","value":"bool","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" Whether it shows up in the \"options description\" second.\n","sig":null,"attributes":[{"value":"/ Whether it shows up in the \"options description\" second.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63740,"byte_end":63800,"line_start":664,"line_end":664,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63886,"byte_end":63890,"line_start":670,"line_end":670,"column_start":5,"column_end":9},"name":"Zero","qualname":"::parse::Argument::Zero","value":"Argument::Zero","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63896,"byte_end":63899,"line_start":671,"line_end":671,"column_start":5,"column_end":8},"name":"One","qualname":"::parse::Argument::One","value":"Argument::One(Option<String>)","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":860},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63871,"byte_end":63879,"line_start":669,"line_end":669,"column_start":10,"column_end":18},"name":"Argument","qualname":"::parse::Argument","value":"pub enum Argument { Zero, One(Option<String>), }","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":863}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":67612,"byte_end":67615,"line_start":771,"line_end":771,"column_start":12,"column_end":15},"name":"new","qualname":"<Atom>::new","value":"pub fn new(&str) -> Atom","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":70527,"byte_end":70531,"line_start":881,"line_end":881,"column_start":12,"column_end":16},"name":"Argv","qualname":"::parse::Argv","value":"Argv {  }","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93183,"byte_end":93193,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SynonymMap","qualname":"::synonym::SynonymMap","value":"SynonymMap {  }","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93307,"byte_end":93310,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<SynonymMap<K, V>>::new","value":"pub fn new() -> SynonymMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93452,"byte_end":93466,"line_start":22,"line_end":22,"column_start":12,"column_end":26},"name":"insert_synonym","qualname":"<SynonymMap<K, V>>::insert_synonym","value":"pub fn insert_synonym(&mut Self, K, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93613,"byte_end":93617,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"keys","qualname":"<SynonymMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93688,"byte_end":93692,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"iter","qualname":"<SynonymMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93763,"byte_end":93771,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"synonyms","qualname":"<SynonymMap<K, V>>::synonyms","value":"pub fn synonyms(&Self) -> Iter<, K, K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93842,"byte_end":93846,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"find","qualname":"<SynonymMap<K, V>>::find","value":"pub fn find(&Self, &K) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93942,"byte_end":93954,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<SynonymMap<K, V>>::contains_key","value":"pub fn contains_key(&Self, &K) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94053,"byte_end":94056,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SynonymMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94370,"byte_end":94377,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"resolve","qualname":"<SynonymMap<K, V>>::resolve","value":"pub fn resolve(&Self, &K) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94457,"byte_end":94460,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"get","qualname":"<SynonymMap<K, V>>::get","value":"pub fn get<'a>(&'a Self, &K) -> &'a V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94541,"byte_end":94549,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<SynonymMap<K, V>>::find_mut","value":"pub fn find_mut<'a>(&'a mut Self, &K) -> Option<&'a mut V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94760,"byte_end":94764,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"swap","qualname":"<SynonymMap<K, V>>::swap","value":"pub fn swap(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":95045,"byte_end":95051,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"insert","qualname":"<SynonymMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9845,"byte_end":9850,"line_start":91,"line_end":91,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10981,"byte_end":10986,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":11635,"byte_end":11640,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":11848,"byte_end":11853,"line_start":154,"line_end":154,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12282,"byte_end":12288,"line_start":172,"line_end":172,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18055,"byte_end":18062,"line_start":331,"line_end":331,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":24444,"byte_end":24451,"line_start":505,"line_end":505,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26335,"byte_end":26340,"line_start":564,"line_end":564,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":29117,"byte_end":29129,"line_start":654,"line_end":654,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":37972,"byte_end":37987,"line_start":937,"line_end":937,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":38154,"byte_end":38169,"line_start":943,"line_end":943,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":38689,"byte_end":38707,"line_start":966,"line_end":966,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":38937,"byte_end":38955,"line_start":975,"line_end":975,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42171,"byte_end":42177,"line_start":74,"line_end":74,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":43001,"byte_end":43007,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":51982,"byte_end":51988,"line_start":333,"line_end":333,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":53065,"byte_end":53074,"line_start":370,"line_end":370,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63951,"byte_end":63958,"line_start":674,"line_end":674,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":67594,"byte_end":67598,"line_start":770,"line_end":770,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":69244,"byte_end":69248,"line_start":835,"line_end":835,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":69738,"byte_end":69742,"line_start":847,"line_end":847,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":70228,"byte_end":70235,"line_start":865,"line_end":865,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":70362,"byte_end":70370,"line_start":871,"line_end":871,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":71142,"byte_end":71146,"line_start":904,"line_end":904,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":76658,"byte_end":76662,"line_start":1055,"line_end":1055,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":77264,"byte_end":77270,"line_start":1076,"line_end":1076,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":80785,"byte_end":80792,"line_start":1180,"line_end":1180,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93277,"byte_end":93287,"line_start":14,"line_end":14,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94340,"byte_end":94350,"line_start":60,"line_end":60,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":95183,"byte_end":95193,"line_start":92,"line_end":92,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":95458,"byte_end":95468,"line_start":102,"line_end":102,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/lib.rs","byte_start":6832,"byte_end":6837,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":271}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":9845,"byte_end":9850,"line_start":91,"line_end":91,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":10981,"byte_end":10986,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":565},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":11635,"byte_end":11640,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":11848,"byte_end":11853,"line_start":154,"line_end":154,"column_start":20,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":565},"to":{"krate":23,"index":8604}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":12282,"byte_end":12288,"line_start":172,"line_end":172,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":18055,"byte_end":18062,"line_start":331,"line_end":331,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":24444,"byte_end":24451,"line_start":505,"line_end":505,"column_start":21,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":26335,"byte_end":26340,"line_start":564,"line_end":564,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":29117,"byte_end":29129,"line_start":654,"line_end":654,"column_start":11,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":37972,"byte_end":37987,"line_start":937,"line_end":937,"column_start":15,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":38154,"byte_end":38169,"line_start":943,"line_end":943,"column_start":38,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":239},"to":{"krate":23,"index":1675}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":38689,"byte_end":38707,"line_start":966,"line_end":966,"column_start":15,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/dopt.rs","byte_start":38937,"byte_end":38955,"line_start":975,"line_end":975,"column_start":38,"column_end":56},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":255},"to":{"krate":23,"index":1675}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":42171,"byte_end":42177,"line_start":74,"line_end":74,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":43001,"byte_end":43007,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":51982,"byte_end":51988,"line_start":333,"line_end":333,"column_start":21,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":717},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":53065,"byte_end":53074,"line_start":370,"line_end":370,"column_start":10,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":63951,"byte_end":63958,"line_start":674,"line_end":674,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":67594,"byte_end":67598,"line_start":770,"line_end":770,"column_start":6,"column_end":10},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":69244,"byte_end":69248,"line_start":835,"line_end":835,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":823},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":69738,"byte_end":69742,"line_start":847,"line_end":847,"column_start":23,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":823},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":70228,"byte_end":70235,"line_start":865,"line_end":865,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":70362,"byte_end":70370,"line_start":871,"line_end":871,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":71142,"byte_end":71146,"line_start":904,"line_end":904,"column_start":10,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":76658,"byte_end":76662,"line_start":1055,"line_end":1055,"column_start":25,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":77264,"byte_end":77270,"line_start":1076,"line_end":1076,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/parse.rs","byte_start":80785,"byte_end":80792,"line_start":1180,"line_end":1180,"column_start":14,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":93277,"byte_end":93287,"line_start":14,"line_end":14,"column_start":23,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":94340,"byte_end":94350,"line_start":60,"line_end":60,"column_start":31,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":95183,"byte_end":95193,"line_start":92,"line_end":92,"column_start":56,"column_end":66},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/docopt-1.1.1/src/synonym.rs","byte_start":95458,"byte_end":95468,"line_start":102,"line_end":102,"column_start":48,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1004},"to":{"krate":2,"index":8701}}]}