{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ecdsa","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"der\"","--cfg","feature=\"digest\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"hmac\"","--cfg","feature=\"sign\"","--cfg","feature=\"std\"","--cfg","feature=\"verify\"","--cfg","feature=\"zeroize\"","-C","metadata=4ac7c989e18deb5d","-C","extra-filename=-4ac7c989e18deb5d","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","der=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libder-50b39d3c07313199.rmeta","--extern","elliptic_curve=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libelliptic_curve-75b4212f54417adb.rmeta","--extern","hmac=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libhmac-d470cf24dc521e75.rmeta","--extern","signature=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsignature-920f7aecf03c434a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libecdsa-4ac7c989e18deb5d.rmeta"},"prelude":{"crate_id":{"name":"ecdsa","disambiguator":[10696157505278090643,10729871682303194269]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":5,"id":{"name":"der","disambiguator":[16533849354334248908,4897884399637859936]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":6,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":7,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":8,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":9,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":10,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":13,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":14,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":15,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":17,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":19,"id":{"name":"const_oid","disambiguator":[229544138340359289,14689160280420259787]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":20,"id":{"name":"elliptic_curve","disambiguator":[8722838712850708487,14216125233081741416]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":21,"id":{"name":"subtle","disambiguator":[16473552840971905471,13383263026665092334]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":22,"id":{"name":"generic_array","disambiguator":[11660036351344994564,3930594429372963592]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":23,"id":{"name":"typenum","disambiguator":[15996057349867460478,6617918932531464244]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":24,"id":{"name":"zeroize","disambiguator":[744669072465224746,17473627246014046881]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":25,"id":{"name":"zeroize_derive","disambiguator":[18017864088066273931,9406744853062868551]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":26,"id":{"name":"ff","disambiguator":[10772863217640197424,18295049454361394925]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":27,"id":{"name":"rand_core","disambiguator":[8139118517281542286,12191278135173016247]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":28,"id":{"name":"getrandom","disambiguator":[13811811233254902674,13880380393548880828]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":29,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":30,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":31,"id":{"name":"group","disambiguator":[14759585461006320763,12950180433182515839]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":32,"id":{"name":"pkcs8","disambiguator":[14119616878716928870,2709589127819395639]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":33,"id":{"name":"base64ct","disambiguator":[559631286589222384,4087918704850658821]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":34,"id":{"name":"spki","disambiguator":[7904644845798324688,16626291071510500833]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","num":35,"id":{"name":"crypto_bigint","disambiguator":[414956437230983376,8115537097476538402]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","num":36,"id":{"name":"signature","disambiguator":[15382111409520748529,8455399083572772702]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","num":37,"id":{"name":"digest","disambiguator":[15437924665489029698,8650536242085247057]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","num":38,"id":{"name":"hmac","disambiguator":[15294886789366223087,6131833804343143221]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","num":39,"id":{"name":"crypto_mac","disambiguator":[6494323612098482869,693981281286547434]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":303,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2825,"byte_end":2839,"line_start":81,"line_end":81,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":941},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2854,"byte_end":2866,"line_start":81,"line_end":81,"column_start":38,"column_end":50},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":200},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2881,"byte_end":2886,"line_start":81,"line_end":81,"column_start":65,"column_end":70},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2952,"byte_end":2961,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":130},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2970,"byte_end":2975,"line_start":84,"line_end":84,"column_start":27,"column_end":32},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3066,"byte_end":3076,"line_start":88,"line_end":88,"column_start":15,"column_end":25},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":625},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3172,"byte_end":3184,"line_start":92,"line_end":92,"column_start":17,"column_end":29},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":303,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":99},{"krate":0,"index":168},{"krate":0,"index":241},{"krate":0,"index":386},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":634},{"krate":0,"index":648},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":592},{"krate":0,"index":599},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":623}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in\n [FIPS 186-4] (Digital Signature Standard)","sig":null,"attributes":[{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ [FIPS 186-4] (Digital Signature Standard)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":71,"byte_end":116,"line_start":2,"line_end":2,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":117,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ## About","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":121,"byte_end":133,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":134,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate provides generic ECDSA support which can be used in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":138,"byte_end":208,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ following ways:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":209,"byte_end":228,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":229,"byte_end":232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - Generic implementation of ECDSA usable with the following crates:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":233,"byte_end":304,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/   - [`k256`] (secp256k1)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":305,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/   - [`p256`] (NIST P-256)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":334,"byte_end":363,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ - ECDSA signature types alone which can be used to provide interoperability","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":364,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   between other crates that provide an ECDSA implementation:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":444,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/   - [`p384`] (NIST P-384)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":509,"byte_end":538,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":539,"byte_end":542,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Any crates which provide an implementation of ECDSA for a particular","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":543,"byte_end":615,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ elliptic curve can leverage the types from this crate, along with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":616,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ [`k256`], [`p256`], and/or [`p384`] crates to expose ECDSA functionality in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":690,"byte_end":769,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a generic, interoperable way by leveraging the [`Signature`] type with in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":770,"byte_end":847,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ conjunction with the [`signature::Signer`] and [`signature::Verifier`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":848,"byte_end":922,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ traits.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":923,"byte_end":934,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":935,"byte_end":938,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For example, the [`ring-compat`] crate implements the [`signature::Signer`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":939,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ and [`signature::Verifier`] traits in conjunction with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1019,"byte_end":1081,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/ [`p256::ecdsa::Signature`] and [`p384::ecdsa::Signature`] types to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1082,"byte_end":1152,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ wrap the ECDSA implementations from [*ring*] in a generic, interoperable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1153,"byte_end":1229,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ API.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1230,"byte_end":1238,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1243,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1281,"byte_end":1284,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Rust **1.51** or higher.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1285,"byte_end":1313,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1314,"byte_end":1317,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Minimum supported Rust version may be changed in the future, but it will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1318,"byte_end":1397,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ accompanied with a minor version bump.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1398,"byte_end":1440,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1441,"byte_end":1444,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [FIPS 186-4]: https://csrc.nist.gov/publications/detail/fips/186/4/final","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1445,"byte_end":1521,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ [`k256`]: https://docs.rs/k256","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1522,"byte_end":1556,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ [`p256`]: https://docs.rs/p256","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1557,"byte_end":1591,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ [`p256::ecdsa::Signature`]: https://docs.rs/p256/latest/p256/ecdsa/type.Signature.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1592,"byte_end":1682,"line_start":39,"line_end":39,"column_start":1,"column_end":91}},{"value":"/ [`p384`]: https://docs.rs/p384","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1683,"byte_end":1717,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ [`p384::ecdsa::Signature`]: https://docs.rs/p384/latest/p384/ecdsa/type.Signature.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1718,"byte_end":1808,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ [`ring-compat`]: https://docs.rs/ring-compat","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1809,"byte_end":1857,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ [*ring*]: https://docs.rs/ring","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1858,"byte_end":1892,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1894,"byte_end":1904,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1944,"byte_end":1988,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":1989,"byte_end":2029,"line_start":48,"line_end":48,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"der","qualname":"::der","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" Support for ECDSA signatures encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"cfg(feature = \"der\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2327,"byte_end":2350,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ Support for ECDSA signatures encoded as ASN.1 DER.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":9515,"byte_end":9569,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10381,"byte_end":10392,"line_start":35,"line_end":35,"column_start":10,"column_end":21},"name":"MaxOverhead","qualname":"::der::MaxOverhead","value":"U9","parent":null,"children":[],"decl_id":null,"docs":" Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:\n 9-bytes.","sig":null,"attributes":[{"value":"/ Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":9914,"byte_end":9993,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ 9-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":9994,"byte_end":10006,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10007,"byte_end":10010,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Includes 3-byte ASN.1 DER header:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10011,"byte_end":10048,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10049,"byte_end":10052,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `SEQUENCE` tag (0x30)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10053,"byte_end":10094,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/ - 2-byte: length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10095,"byte_end":10115,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10116,"byte_end":10119,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ...followed by two ASN.1 `INTEGER` values, which each have a header whose","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10120,"byte_end":10197,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ maximum length is the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10198,"byte_end":10234,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10235,"byte_end":10238,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `INTEGER` tag (0x02)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10239,"byte_end":10279,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ - 1-byte: length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10280,"byte_end":10300,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/ - 1-byte: zero to indicate value is positive (`INTEGER` is signed)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10301,"byte_end":10371,"line_start":34,"line_end":34,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10490,"byte_end":10497,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"name":"MaxSize","qualname":"::der::MaxSize","value":"<<FieldSize<C> as Add>::Output as Add<MaxOverhead>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10400,"byte_end":10480,"line_start":37,"line_end":37,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10780,"byte_end":10789,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"Signature","qualname":"::der::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" ASN.1 DER-encoded signature.","sig":null,"attributes":[{"value":"/ ASN.1 DER-encoded signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10676,"byte_end":10708,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10709,"byte_end":10712,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Generic over the scalar size of the elliptic curve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":10713,"byte_end":10768,"line_start":45,"line_end":45,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11731,"byte_end":11734,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"len","qualname":"<Signature<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the signature in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the signature in bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11675,"byte_end":11719,"line_start":81,"line_end":81,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11842,"byte_end":11850,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature<C>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this signature as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow this signature as a byte slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11789,"byte_end":11830,"line_start":86,"line_end":86,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":12017,"byte_end":12025,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Signature<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as a boxed byte slice\n","sig":null,"attributes":[{"value":"/ Serialize this signature as a boxed byte slice","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11925,"byte_end":11975,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11980,"byte_end":12005,"line_start":92,"line_end":92,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":99},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hazmat","qualname":"::hazmat","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":165}],"decl_id":null,"docs":" Low-level ECDSA primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"hazmat\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2497,"byte_end":2523,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ Low-level ECDSA primitives.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18501,"byte_end":18532,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18533,"byte_end":18536,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Warning: Hazmat!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18537,"byte_end":18566,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18567,"byte_end":18570,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ YOU PROBABLY DON'T WANT TO USE THESE!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18571,"byte_end":18612,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18613,"byte_end":18616,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These primitives are easy-to-misuse low-level interfaces intended to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18617,"byte_end":18692,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ implemented by elliptic curve crates and consumed only by this crate!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18693,"byte_end":18766,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18767,"byte_end":18770,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If you are an end user / non-expert in cryptography, do not use these!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18771,"byte_end":18845,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ Failure to use them correctly can lead to catastrophic failures including","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18846,"byte_end":18923,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ FULL PRIVATE KEY RECOVERY!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":18924,"byte_end":18954,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19777,"byte_end":19790,"line_start":41,"line_end":41,"column_start":11,"column_end":24},"name":"SignPrimitive","qualname":"::hazmat::SignPrimitive","value":"SignPrimitive<C>","parent":null,"children":[{"krate":0,"index":144}],"decl_id":null,"docs":" Try to sign the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Try to sign the given prehashed message using ECDSA.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19420,"byte_end":19476,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19477,"byte_end":19480,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on a type with access","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19481,"byte_end":19547,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ to the secret scalar via `&self`, such as particular curve's `Scalar` type,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19548,"byte_end":19627,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ or potentially a key handle to a hardware device.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19628,"byte_end":19681,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19682,"byte_end":19712,"line_start":39,"line_end":39,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20218,"byte_end":20236,"line_start":53,"line_end":53,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"::hazmat::SignPrimitive::try_sign_prehashed","value":"pub fn try_sign_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                          Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<Signature<C>, Error>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19882,"byte_end":19920,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19925,"byte_end":19928,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19933,"byte_end":19969,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19974,"byte_end":19977,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ - `ephemeral_scalar`: ECDSA `k` value. MUST BE UNIFORMLY RANDOM!!!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":19982,"byte_end":20052,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ - `hashed_msg`: scalar computed from a hashed message digest to be signed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20057,"byte_end":20135,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/   MUST BE OUTPUT OF A CRYPTOGRAPHICALLY SECURE DIGEST ALGORITHM!!!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20140,"byte_end":20210,"line_start":52,"line_end":52,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":146},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20611,"byte_end":20635,"line_start":64,"line_end":64,"column_start":11,"column_end":35},"name":"RecoverableSignPrimitive","qualname":"::hazmat::RecoverableSignPrimitive","value":"RecoverableSignPrimitive<C>","parent":null,"children":[{"krate":0,"index":148}],"decl_id":null,"docs":" [`SignPrimitive`] for signature implementations that can provide public key\n recovery implementation.\n","sig":null,"attributes":[{"value":"/ [`SignPrimitive`] for signature implementations that can provide public key","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20407,"byte_end":20486,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ recovery implementation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20487,"byte_end":20515,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20516,"byte_end":20546,"line_start":62,"line_end":62,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21059,"byte_end":21089,"line_start":75,"line_end":75,"column_start":8,"column_end":38},"name":"try_sign_recoverable_prehashed","qualname":"::hazmat::RecoverableSignPrimitive::try_sign_recoverable_prehashed","value":"pub fn try_sign_recoverable_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                                      Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<(Signature<C>, bool), Error>","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20727,"byte_end":20765,"line_start":69,"line_end":69,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20770,"byte_end":20773,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Accepts the same arguments as [`SignPrimitive::try_sign_prehashed`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20778,"byte_end":20849,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ but returns a boolean flag which indicates whether or not the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20854,"byte_end":20919,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ y-coordinate of the computed 𝐑 = 𝑘×𝑮 point is odd, which can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":20924,"byte_end":21001,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ incorporated into recoverable signatures.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21006,"byte_end":21051,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22095,"byte_end":22110,"line_start":106,"line_end":106,"column_start":11,"column_end":26},"name":"VerifyPrimitive","qualname":"::hazmat::VerifyPrimitive","value":"VerifyPrimitive<C>","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" Verify the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Verify the given prehashed message using ECDSA.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21760,"byte_end":21811,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21812,"byte_end":21815,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on type which can access","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21816,"byte_end":21885,"line_start":101,"line_end":101,"column_start":1,"column_end":70}},{"value":"/ the affine point represeting the public key via `&self`, such as a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21886,"byte_end":21956,"line_start":102,"line_end":102,"column_start":1,"column_end":71}},{"value":"/ particular curve's `AffinePoint` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21957,"byte_end":21999,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22000,"byte_end":22030,"line_start":104,"line_end":104,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22463,"byte_end":22479,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"::hazmat::VerifyPrimitive::verify_prehashed","value":"pub fn verify_prehashed(&Self, &Scalar<C>, &Signature<C>) -> Result<(), Error>","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Verify the prehashed message against the provided signature","sig":null,"attributes":[{"value":"/ Verify the prehashed message against the provided signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22202,"byte_end":22265,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22270,"byte_end":22273,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22278,"byte_end":22314,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22319,"byte_end":22322,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ - `hashed_msg`: prehashed message to be verified","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22327,"byte_end":22379,"line_start":115,"line_end":115,"column_start":5,"column_end":57}},{"value":"/ - `signature`: signature to be verified against the key and message","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22384,"byte_end":22455,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23155,"byte_end":23170,"line_start":136,"line_end":136,"column_start":11,"column_end":26},"name":"DigestPrimitive","qualname":"::hazmat::DigestPrimitive","value":"DigestPrimitive: Curve","parent":null,"children":[{"krate":0,"index":160}],"decl_id":null,"docs":" Bind a preferred [`Digest`] algorithm to an elliptic curve type.","sig":null,"attributes":[{"value":"/ Bind a preferred [`Digest`] algorithm to an elliptic curve type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22593,"byte_end":22661,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22662,"byte_end":22665,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Generally there is a preferred variety of the SHA-2 family used with ECDSA","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22666,"byte_end":22744,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ for a particular elliptic curve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22745,"byte_end":22781,"line_start":127,"line_end":127,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22782,"byte_end":22785,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to specify it, and with it receive a blanket impl of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22786,"byte_end":22865,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/ [`PrehashSignature`], used by [`signature_derive`][1]) for the [`Signature`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22866,"byte_end":22946,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ type for a particular elliptic curve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22947,"byte_end":22988,"line_start":131,"line_end":131,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22989,"byte_end":22992,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/RustCrypto/traits/tree/master/signature/derive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":22993,"byte_end":23067,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23068,"byte_end":23094,"line_start":134,"line_end":134,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23331,"byte_end":23337,"line_start":139,"line_end":139,"column_start":10,"column_end":16},"name":"Digest","qualname":"::hazmat::DigestPrimitive::Digest","value":"type Digest: Digest;","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Preferred digest to use when computing ECDSA signatures for this\n elliptic curve. This should be a member of the SHA-2 family.\n","sig":null,"attributes":[{"value":"/ Preferred digest to use when computing ECDSA signatures for this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23184,"byte_end":23252,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ elliptic curve. This should be a member of the SHA-2 family.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23257,"byte_end":23321,"line_start":138,"line_end":138,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23803,"byte_end":23813,"line_start":152,"line_end":152,"column_start":11,"column_end":21},"name":"FromDigest","qualname":"::hazmat::FromDigest","value":"FromDigest<C: Curve>","parent":null,"children":[{"krate":0,"index":163}],"decl_id":null,"docs":" Instantiate this type from the output of a digest.","sig":null,"attributes":[{"value":"/ Instantiate this type from the output of a digest.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23350,"byte_end":23404,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23405,"byte_end":23408,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This trait is intended for use in ECDSA and should perform a conversion","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23409,"byte_end":23484,"line_start":144,"line_end":144,"column_start":1,"column_end":76}},{"value":"/ which is compatible with the rules for calculating `h` from `H(M)` set out","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23485,"byte_end":23563,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ in RFC6979 section 2.4. This conversion cannot fail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23564,"byte_end":23620,"line_start":146,"line_end":146,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23621,"byte_end":23624,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This trait may also be useful for other hash-to-scalar or hash-to-curve","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23625,"byte_end":23700,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/ use cases.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23701,"byte_end":23715,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23716,"byte_end":23742,"line_start":150,"line_end":150,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23890,"byte_end":23901,"line_start":154,"line_end":154,"column_start":8,"column_end":19},"name":"from_digest","qualname":"::hazmat::FromDigest::from_digest","value":"pub fn from_digest<D>(D) -> Self where D: Digest<OutputSize = FieldSize<C>>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Instantiate this type from a [`Digest`] instance\n","sig":null,"attributes":[{"value":"/ Instantiate this type from a [`Digest`] instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23830,"byte_end":23882,"line_start":153,"line_end":153,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc6979","qualname":"::rfc6979","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":237}],"decl_id":null,"docs":" Support for computing deterministic ECDSA ephemeral scalar (`k`).","sig":null,"attributes":[{"value":"cfg(feature = \"sign\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2591,"byte_end":2615,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/ Support for computing deterministic ECDSA ephemeral scalar (`k`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24179,"byte_end":24248,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24249,"byte_end":24252,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implementation of the algorithm described in RFC 6979 (Section 3.2):","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24253,"byte_end":24325,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ <https://tools.ietf.org/html/rfc6979#section-3>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24326,"byte_end":24377,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":230},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24843,"byte_end":24853,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"generate_k","qualname":"::rfc6979::generate_k","value":"pub fn generate_k<C, D>(&NonZeroScalar<C>, D, &[u8])\n-> Zeroizing<NonZeroScalar<C>> where C: Curve + ProjectiveArithmetic,\nD: FixedOutput<OutputSize = FieldSize<C>> + BlockInput + Clone + Default +\nReset + Update, Scalar<C>: FromDigest<C> + Invert<Output = Scalar<C>> +\nZeroize","parent":null,"children":[],"decl_id":null,"docs":" Generate ephemeral scalar `k` from the secret scalar and a digest of the\n input message.\n","sig":null,"attributes":[{"value":"/ Generate ephemeral scalar `k` from the secret scalar and a digest of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24740,"byte_end":24816,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ input message.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":24817,"byte_end":24835,"line_start":19,"line_end":19,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29657,"byte_end":29667,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" ECDSA signing key. Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA signing key. Generic over elliptic curves.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29399,"byte_end":29451,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29452,"byte_end":29455,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29456,"byte_end":29537,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ [`SignPrimitive`] impl on its associated `Scalar` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29538,"byte_end":29597,"line_start":41,"line_end":41,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30140,"byte_end":30146,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\n              RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30073,"byte_end":30128,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30355,"byte_end":30365,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey<C>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize signing key from a raw scalar serialized as a byte slice.\n","sig":null,"attributes":[{"value":"/ Initialize signing key from a raw scalar serialized as a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30271,"byte_end":30343,"line_start":65,"line_end":65,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30745,"byte_end":30758,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey<C>>::verifying_key","value":"pub fn verifying_key(&Self) -> VerifyingKey<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30579,"byte_end":30648,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"verify\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30653,"byte_end":30679,"line_start":75,"line_end":75,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30948,"byte_end":30956,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":30894,"byte_end":30936,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37698,"byte_end":37710,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":627}],"decl_id":null,"docs":" ECDSA verification key (i.e. public key). Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA verification key (i.e. public key). Generic over elliptic curves.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37384,"byte_end":37459,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37460,"byte_end":37463,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37464,"byte_end":37545,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ [`VerifyPrimitive`] impl on its associated `AffinePoint` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37546,"byte_end":37612,"line_start":31,"line_end":31,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38107,"byte_end":38122,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38032,"byte_end":38095,"line_start":48,"line_end":48,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38365,"byte_end":38383,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey<C>>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an [`EncodedPoint`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38296,"byte_end":38353,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38721,"byte_end":38737,"line_start":64,"line_end":64,"column_start":12,"column_end":28},"name":"to_encoded_point","qualname":"<VerifyingKey<C>>::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally\n applying point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38599,"byte_end":38673,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ applying point compression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38678,"byte_end":38709,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":588},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3637,"byte_end":3650,"line_start":109,"line_end":109,"column_start":10,"column_end":23},"name":"SignatureSize","qualname":"::SignatureSize","value":"<FieldSize<C> as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a fixed sized signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of a fixed sized signature for the given elliptic curve.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3562,"byte_end":3627,"line_start":108,"line_end":108,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3753,"byte_end":3767,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"name":"SignatureBytes","qualname":"::SignatureBytes","value":"GenericArray<u8, SignatureSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size byte array containing an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Fixed-size byte array containing an ECDSA signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3688,"byte_end":3743,"line_start":111,"line_end":111,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4434,"byte_end":4443,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":636}],"decl_id":null,"docs":" ECDSA signature (fixed-size). Generic over elliptic curve types.","sig":null,"attributes":[{"value":"/ ECDSA signature (fixed-size). Generic over elliptic curve types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3810,"byte_end":3878,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3879,"byte_end":3882,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Serialized as fixed-sized big endian scalar values with no added framing:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3883,"byte_end":3960,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3961,"byte_end":3964,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ - `r`: field element size for the given curve, big-endian","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":3965,"byte_end":4026,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/ - `s`: field element size for the given curve, big-endian","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4027,"byte_end":4088,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4089,"byte_end":4092,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ For example, in a curve with a 256-bit modulus like NIST P-256 or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4093,"byte_end":4162,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ secp256k1, `r` and `s` will both be 32-bytes, resulting in a signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4163,"byte_end":4237,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ with a total of 64-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4238,"byte_end":4267,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4268,"byte_end":4271,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ASN.1 DER-encoded signatures also supported via the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4272,"byte_end":4327,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ [`Signature::from_der`] and [`Signature::to_der`] methods.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4328,"byte_end":4390,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4742,"byte_end":4754,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"from_scalars","qualname":"<Signature<C>>::from_scalars","value":"pub fn from_scalars<impl Into<FieldBytes<C>>: Into<FieldBytes<C>>,\n                    impl Into<FieldBytes<C>>: Into<FieldBytes<C>>>(impl Into<FieldBytes<C>>,\n                                                                   impl Into<FieldBytes<C>>)\n-> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Signature`] from the serialized `r` and `s` scalar values\n which comprise the signature.\n","sig":null,"attributes":[{"value":"/ Create a [`Signature`] from the serialized `r` and `s` scalar values","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4620,"byte_end":4692,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ which comprise the signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4697,"byte_end":4730,"line_start":141,"line_end":141,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5060,"byte_end":5068,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature<C>>::from_der","value":"pub fn from_der(&[u8]) -> Result<Self, Error> where\nder::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature from ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Parse a signature from ASN.1 DER","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4933,"byte_end":4969,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4974,"byte_end":4997,"line_start":150,"line_end":150,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5457,"byte_end":5463,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"to_der","qualname":"<Signature<C>>::to_der","value":"pub fn to_der(&Self) -> der::Signature<C> where\nder::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Serialize this signature as ASN.1 DER","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5325,"byte_end":5366,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5371,"byte_end":5394,"line_start":161,"line_end":161,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6027,"byte_end":6028,"line_start":181,"line_end":181,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature<C>>::r","value":"pub fn r(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `r` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `r` component of this signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5972,"byte_end":6015,"line_start":180,"line_end":180,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6344,"byte_end":6345,"line_start":188,"line_end":188,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature<C>>::s","value":"pub fn s(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `s` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `s` component of this signature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6289,"byte_end":6332,"line_start":187,"line_end":187,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6809,"byte_end":6820,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature<C>>::normalize_s","value":"pub fn normalize_s(&mut Self) -> Result<bool, Error> where\nScalar<C>: NormalizeLow","parent":null,"children":[],"decl_id":null,"docs":" Normalize signature into \"low S\" form as described in\n [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize signature into \"low S\" form as described in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6606,"byte_end":6663,"line_start":194,"line_end":194,"column_start":5,"column_end":62}},{"value":"/ [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6668,"byte_end":6713,"line_start":195,"line_end":195,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6718,"byte_end":6721,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":6726,"byte_end":6797,"line_start":197,"line_end":197,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9133,"byte_end":9145,"line_start":295,"line_end":295,"column_start":11,"column_end":23},"name":"NormalizeLow","qualname":"::NormalizeLow","value":"NormalizeLow: Sized","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described\n in [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":8918,"byte_end":8997,"line_start":291,"line_end":291,"column_start":1,"column_end":80}},{"value":"/ in [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":8998,"byte_end":9046,"line_start":292,"line_end":292,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9047,"byte_end":9050,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9051,"byte_end":9122,"line_start":294,"line_end":294,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9474,"byte_end":9487,"line_start":302,"line_end":302,"column_start":8,"column_end":21},"name":"normalize_low","qualname":"::NormalizeLow::normalize_low","value":"pub fn normalize_low(&Self) -> (Self, bool)","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Normalize scalar to the lower half of the field (i.e. negate it if it's\n larger than half the curve's order).\n Returns a tuple with the new scalar and a boolean indicating whether the given scalar\n was in the higher half.","sig":null,"attributes":[{"value":"/ Normalize scalar to the lower half of the field (i.e. negate it if it's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9159,"byte_end":9234,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ larger than half the curve's order).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9239,"byte_end":9279,"line_start":297,"line_end":297,"column_start":5,"column_end":45}},{"value":"/ Returns a tuple with the new scalar and a boolean indicating whether the given scalar","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9284,"byte_end":9373,"line_start":298,"line_end":298,"column_start":5,"column_end":94}},{"value":"/ was in the higher half.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9378,"byte_end":9405,"line_start":299,"line_end":299,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9410,"byte_end":9413,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ May be implemented to work in variable time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9418,"byte_end":9466,"line_start":301,"line_end":301,"column_start":5,"column_end":53}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11186,"byte_end":11195,"line_start":62,"line_end":62,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11532,"byte_end":11541,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":12915,"byte_end":12924,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":13142,"byte_end":13151,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":13514,"byte_end":13523,"line_start":143,"line_end":143,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":14533,"byte_end":14542,"line_start":178,"line_end":178,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":15686,"byte_end":15695,"line_start":208,"line_end":208,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21331,"byte_end":21332,"line_start":83,"line_end":83,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":24039,"byte_end":24048,"line_start":160,"line_end":160,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":26231,"byte_end":26239,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29883,"byte_end":29893,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31038,"byte_end":31048,"line_start":89,"line_end":89,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31319,"byte_end":31329,"line_start":100,"line_end":100,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31626,"byte_end":31636,"line_start":111,"line_end":111,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31990,"byte_end":32000,"line_start":124,"line_end":124,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":32789,"byte_end":32799,"line_start":141,"line_end":141,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":33243,"byte_end":33253,"line_start":153,"line_end":153,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":34209,"byte_end":34219,"line_start":177,"line_end":177,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":34727,"byte_end":34737,"line_start":193,"line_end":193,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":35096,"byte_end":35108,"line_start":207,"line_end":207,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37806,"byte_end":37818,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38854,"byte_end":38866,"line_start":69,"line_end":69,"column_start":18,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38959,"byte_end":38971,"line_start":71,"line_end":71,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":39434,"byte_end":39446,"line_start":86,"line_end":86,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":39865,"byte_end":39877,"line_start":99,"line_end":99,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40271,"byte_end":40283,"line_start":111,"line_end":111,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40475,"byte_end":40487,"line_start":120,"line_end":120,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40673,"byte_end":40682,"line_start":129,"line_end":129,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40865,"byte_end":40874,"line_start":138,"line_end":138,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41047,"byte_end":41059,"line_start":147,"line_end":147,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41294,"byte_end":41306,"line_start":156,"line_end":156,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41625,"byte_end":41637,"line_start":168,"line_end":168,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41979,"byte_end":41991,"line_start":180,"line_end":180,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4542,"byte_end":4551,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5871,"byte_end":5880,"line_start":175,"line_end":175,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7356,"byte_end":7365,"line_start":217,"line_end":217,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7550,"byte_end":7559,"line_start":227,"line_end":227,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7712,"byte_end":7721,"line_start":237,"line_end":237,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7867,"byte_end":7876,"line_start":245,"line_end":245,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":8177,"byte_end":8186,"line_start":260,"line_end":260,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2406,"byte_end":2409,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2582,"byte_end":2588,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":99}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":2672,"byte_end":2679,"line_start":72,"line_end":72,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":168}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11186,"byte_end":11195,"line_start":62,"line_end":62,"column_start":34,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":62},"to":{"krate":36,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":11532,"byte_end":11541,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":12915,"byte_end":12924,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":62},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":13142,"byte_end":13151,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":62},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":13514,"byte_end":13523,"line_start":143,"line_end":143,"column_start":28,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":62},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":14533,"byte_end":14542,"line_start":178,"line_end":178,"column_start":42,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/der.rs","byte_start":15686,"byte_end":15695,"line_start":208,"line_end":208,"column_start":41,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":62},"to":{"krate":36,"index":65}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":21331,"byte_end":21332,"line_start":83,"line_end":83,"column_start":33,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":152},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":23172,"byte_end":23177,"line_start":136,"line_end":136,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":20,"index":200},"to":{"krate":0,"index":159}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/hazmat.rs","byte_start":24039,"byte_end":24048,"line_start":160,"line_end":160,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":634},"to":{"krate":36,"index":65}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/rfc6979.rs","byte_start":26231,"byte_end":26239,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":29883,"byte_end":29893,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31038,"byte_end":31048,"line_start":89,"line_end":89,"column_start":18,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":343},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31319,"byte_end":31329,"line_start":100,"line_end":100,"column_start":32,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":343},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31626,"byte_end":31636,"line_start":111,"line_end":111,"column_start":33,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":343},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":31990,"byte_end":32000,"line_start":124,"line_end":124,"column_start":46,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":343},"to":{"krate":36,"index":89}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":32789,"byte_end":32799,"line_start":141,"line_end":141,"column_start":45,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":343},"to":{"krate":36,"index":85}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":33243,"byte_end":33253,"line_start":153,"line_end":153,"column_start":56,"column_end":66},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":343},"to":{"krate":36,"index":100}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":34209,"byte_end":34219,"line_start":177,"line_end":177,"column_start":44,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":343},"to":{"krate":36,"index":94}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":34727,"byte_end":34737,"line_start":193,"line_end":193,"column_start":36,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":343},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/sign.rs","byte_start":35096,"byte_end":35108,"line_start":207,"line_end":207,"column_start":34,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":37806,"byte_end":37818,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38854,"byte_end":38866,"line_start":69,"line_end":69,"column_start":18,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":38959,"byte_end":38971,"line_start":71,"line_end":71,"column_start":48,"column_end":60},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":625},"to":{"krate":36,"index":121}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":39434,"byte_end":39446,"line_start":86,"line_end":86,"column_start":47,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":625},"to":{"krate":36,"index":118}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":39865,"byte_end":39877,"line_start":99,"line_end":99,"column_start":36,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":20,"index":941},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40271,"byte_end":40283,"line_start":111,"line_end":111,"column_start":32,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40475,"byte_end":40487,"line_start":120,"line_end":120,"column_start":33,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40673,"byte_end":40682,"line_start":129,"line_end":129,"column_start":35,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":20,"index":1066},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":40865,"byte_end":40874,"line_start":138,"line_end":138,"column_start":36,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":20,"index":1066},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41047,"byte_end":41059,"line_start":147,"line_end":147,"column_start":16,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41294,"byte_end":41306,"line_start":156,"line_end":156,"column_start":23,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41625,"byte_end":41637,"line_start":168,"line_end":168,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/verify.rs","byte_start":41979,"byte_end":41991,"line_start":180,"line_end":180,"column_start":17,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2509}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":4542,"byte_end":4551,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":5871,"byte_end":5880,"line_start":175,"line_end":175,"column_start":9,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7356,"byte_end":7365,"line_start":217,"line_end":217,"column_start":34,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":634},"to":{"krate":36,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7550,"byte_end":7559,"line_start":227,"line_end":227,"column_start":25,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7712,"byte_end":7721,"line_start":237,"line_end":237,"column_start":18,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":7867,"byte_end":7876,"line_start":245,"line_end":245,"column_start":19,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":8177,"byte_end":8186,"line_start":260,"line_end":260,"column_start":28,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.12.2/src/lib.rs","byte_start":9147,"byte_end":9152,"line_start":295,"line_end":295,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":2827},"to":{"krate":0,"index":623}}]}