{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","indenter","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=31c77696a79535be","-C","extra-filename=-31c77696a79535be","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libindenter-31c77696a79535be.rmeta"},"prelude":{"crate_id":{"name":"indenter","disambiguator":[3585425146046987699,16446320087286736219]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":0,"byte_end":14302,"line_start":1,"line_end":542,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":0,"byte_end":14302,"line_start":1,"line_end":542,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":15},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":30},{"krate":0,"index":33}],"decl_id":null,"docs":" A few wrappers for the `fmt::Write` objects that efficiently appends and remove\n common indentation after every newline","sig":null,"attributes":[{"value":"/ A few wrappers for the `fmt::Write` objects that efficiently appends and remove","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":0,"byte_end":83,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/ common indentation after every newline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":84,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":127,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Setup","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":131,"byte_end":142,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":143,"byte_end":146,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":147,"byte_end":181,"line_start":6,"line_end":6,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":182,"byte_end":185,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":186,"byte_end":197,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":198,"byte_end":216,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ indenter = \"0.2\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":217,"byte_end":237,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":238,"byte_end":245,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":246,"byte_end":249,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":250,"byte_end":264,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":265,"byte_end":268,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Indentation only","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":269,"byte_end":292,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":293,"byte_end":296,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type is intended primarily for writing error reporters that gracefully","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":297,"byte_end":376,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ format error messages that span multiple lines.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":377,"byte_end":428,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":429,"byte_end":432,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":433,"byte_end":444,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":445,"byte_end":471,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use core::fmt::{self, Write};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":472,"byte_end":505,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use indenter::indented;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":506,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":534,"byte_end":537,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ struct ErrorReporter<'a>(&'a dyn Error);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":538,"byte_end":582,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":583,"byte_end":586,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ impl fmt::Debug for ErrorReporter<'_> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":587,"byte_end":630,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":631,"byte_end":697,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/         let mut source = Some(self.0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":698,"byte_end":740,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":741,"byte_end":767,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":768,"byte_end":771,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         while let Some(error) = source {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":772,"byte_end":816,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/             writeln!(f)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":817,"byte_end":846,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/             write!(indented(f).ind(i), \"{}\", error)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":847,"byte_end":904,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":905,"byte_end":908,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             source = error.source();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":909,"byte_end":949,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/             i += 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":950,"byte_end":973,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":974,"byte_end":987,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":988,"byte_end":991,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/         Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":992,"byte_end":1010,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1011,"byte_end":1020,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1021,"byte_end":1026,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1027,"byte_end":1034,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1035,"byte_end":1038,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## \"Dedenting\" (removing common leading indendation)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1039,"byte_end":1095,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This type is intended primarily for formatting source code. For example, when","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1100,"byte_end":1181,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/ generating code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1182,"byte_end":1202,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1203,"byte_end":1206,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This type requires the feature `std`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1207,"byte_end":1248,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1249,"byte_end":1252,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1253,"byte_end":1264,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1265,"byte_end":1294,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1295,"byte_end":1312,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1313,"byte_end":1339,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/ use core::fmt::{self, Write};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1340,"byte_end":1373,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ use indenter::CodeFormatter;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1374,"byte_end":1406,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1407,"byte_end":1410,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let mut output = String::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1411,"byte_end":1446,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/ let mut f = CodeFormatter::new(&mut output, \"    \");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1447,"byte_end":1503,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1504,"byte_end":1507,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ write!(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1508,"byte_end":1519,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/     f,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1520,"byte_end":1530,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/     r#\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1531,"byte_end":1542,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/     Hello","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1543,"byte_end":1556,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         World","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1557,"byte_end":1574,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/     \"#,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1575,"byte_end":1586,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ );","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1587,"byte_end":1593,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1594,"byte_end":1597,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(output, \"Hello\\n    World\\n\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1598,"byte_end":1643,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1644,"byte_end":1647,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let mut output = String::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1648,"byte_end":1683,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ let mut f = CodeFormatter::new(&mut output, \"    \");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1684,"byte_end":1740,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1741,"byte_end":1744,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // it can also indent...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1745,"byte_end":1773,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ f.indent(2);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1774,"byte_end":1790,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1791,"byte_end":1794,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ write!(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1795,"byte_end":1806,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/     f,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1807,"byte_end":1817,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     r#\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1818,"byte_end":1829,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/     Hello","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1830,"byte_end":1843,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/         World","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1844,"byte_end":1861,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/     \"#,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1862,"byte_end":1873,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ );","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1874,"byte_end":1880,"line_start":84,"line_end":84,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1881,"byte_end":1884,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(output, \"        Hello\\n            World\\n\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1885,"byte_end":1946,"line_start":86,"line_end":86,"column_start":1,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1947,"byte_end":1954,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"std\"))]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1955,"byte_end":1989,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":1990,"byte_end":2007,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2008,"byte_end":2015,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2016,"byte_end":2023,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2058,"byte_end":2064,"line_start":92,"line_end":92,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, missing_doc_code_examples,\n       rust_2018_idioms, unreachable_pub, bad_style, const_err, dead_code,\n       improper_ctypes, non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2125,"byte_end":2618,"line_start":94,"line_end":116,"column_start":1,"column_end":3}}]},{"kind":"StructVariant","id":{"krate":0,"index":9},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2897,"byte_end":2904,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::Format::Uniform","value":"Format::Uniform { indentation }","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Insert uniform indentation before every line","sig":null,"attributes":[{"value":"/ Insert uniform indentation before every line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2750,"byte_end":2798,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2803,"byte_end":2806,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This format takes a static string as input and inserts it after every newline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2811,"byte_end":2892,"line_start":124,"line_end":124,"column_start":5,"column_end":86}}]},{"kind":"StructVariant","id":{"krate":0,"index":11},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3176,"byte_end":3184,"line_start":133,"line_end":133,"column_start":5,"column_end":13},"name":"Numbered","qualname":"::Format::Numbered","value":"Format::Numbered { ind }","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Inserts a number before the first line","sig":null,"attributes":[{"value":"/ Inserts a number before the first line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3001,"byte_end":3043,"line_start":129,"line_end":129,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3048,"byte_end":3051,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This format hard codes the indentation level to match the indentation from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3056,"byte_end":3134,"line_start":131,"line_end":131,"column_start":5,"column_end":83}},{"value":"/ `core::backtrace::Backtrace`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3139,"byte_end":3171,"line_start":132,"line_end":132,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":13},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3454,"byte_end":3460,"line_start":140,"line_end":140,"column_start":5,"column_end":11},"name":"Custom","qualname":"::Format::Custom","value":"Format::Custom { inserter }","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" A custom indenter which is executed after every newline","sig":null,"attributes":[{"value":"/ A custom indenter which is executed after every newline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3282,"byte_end":3341,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3346,"byte_end":3349,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Custom indenters are passed the current line number and the buffer to be written to as args","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3354,"byte_end":3449,"line_start":139,"line_end":139,"column_start":5,"column_end":100}}]},{"kind":"Enum","id":{"krate":0,"index":7},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2733,"byte_end":2739,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"name":"Format","qualname":"::Format","value":"pub enum Format<'a> {\n    Uniform {\n        indentation: &'static str,\n    },\n    Numbered {\n        ind: usize,\n    },\n    Custom {\n        inserter: &'a mut Inserter,\n    },\n}","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13}],"decl_id":null,"docs":" The set of supported formats for indentation\n","sig":null,"attributes":[{"value":"/ The set of supported formats for indentation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2635,"byte_end":2683,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":2684,"byte_end":2723,"line_start":120,"line_end":120,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":15},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4145,"byte_end":4153,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"Indented","qualname":"::Indented","value":"Indented {  }","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" Helper struct for efficiently indenting multi line display implementations","sig":null,"attributes":[{"value":"/ Helper struct for efficiently indenting multi line display implementations","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3541,"byte_end":3619,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3620,"byte_end":3623,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ # Explanation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3624,"byte_end":3641,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3642,"byte_end":3645,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ This type will never allocate a string to handle inserting indentation. It instead leverages","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3646,"byte_end":3742,"line_start":150,"line_end":150,"column_start":1,"column_end":97}},{"value":"/ the `write_str` function that serves as the foundation of the `core::fmt::Write` trait. This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3743,"byte_end":3839,"line_start":151,"line_end":151,"column_start":1,"column_end":97}},{"value":"/ lets it intercept each piece of output as its being written to the output buffer. It then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3840,"byte_end":3933,"line_start":152,"line_end":152,"column_start":1,"column_end":94}},{"value":"/ splits on newlines giving slices into the original string. Finally we alternate writing these","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":3934,"byte_end":4031,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ lines and the specified indentation to the output buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4032,"byte_end":4093,"line_start":154,"line_end":154,"column_start":1,"column_end":62}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4094,"byte_end":4133,"line_start":155,"line_end":155,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4413,"byte_end":4421,"line_start":165,"line_end":165,"column_start":10,"column_end":18},"name":"Inserter","qualname":"::Inserter","value":"dyn FnMut(usize, &mut dyn fmt::Write) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" A callback for `Format::Custom` used to insert indenation after a new line","sig":null,"attributes":[{"value":"/ A callback for `Format::Custom` used to insert indenation after a new line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4244,"byte_end":4322,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4323,"byte_end":4326,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ The first argument is the line number within the output, starting from 0","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4327,"byte_end":4403,"line_start":164,"line_end":164,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5095,"byte_end":5098,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"ind","qualname":"<Indented>::ind","value":"pub fn ind(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the format to `Format::Numbered` with the provided index\n","sig":null,"attributes":[{"value":"/ Sets the format to `Format::Numbered` with the provided index","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5018,"byte_end":5083,"line_start":184,"line_end":184,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5273,"byte_end":5281,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"with_str","qualname":"<Indented>::with_str","value":"pub fn with_str(Self, &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the format to `Format::Uniform` with the provided static string\n","sig":null,"attributes":[{"value":"/ Sets the format to `Format::Uniform` with the provided static string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5189,"byte_end":5261,"line_start":189,"line_end":189,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5458,"byte_end":5469,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Indented>::with_format","value":"pub fn with_format(Self, Format) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an indenter with a user defined format\n","sig":null,"attributes":[{"value":"/ Construct an indenter with a user defined format","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5394,"byte_end":5446,"line_start":194,"line_end":194,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":6355,"byte_end":6363,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"indented","qualname":"::indented","value":"pub fn indented<D: ?Sized>(&mut D) -> Indented<, D>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for creating a default indenter\n","sig":null,"attributes":[{"value":"/ Helper function for creating a default indenter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":6296,"byte_end":6347,"line_start":229,"line_end":229,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4484,"byte_end":4490,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4996,"byte_end":5004,"line_start":183,"line_end":183,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5585,"byte_end":5593,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4484,"byte_end":4490,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":7},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":4996,"byte_end":5004,"line_start":183,"line_end":183,"column_start":13,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":15},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.3/src/lib.rs","byte_start":5585,"byte_end":5593,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":15},"to":{"krate":1,"index":8659}}]}