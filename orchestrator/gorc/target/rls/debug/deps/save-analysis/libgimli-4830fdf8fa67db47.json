{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gimli","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"read\"","-C","metadata=4830fdf8fa67db47","-C","extra-filename=-4830fdf8fa67db47","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libgimli-4830fdf8fa67db47.rmeta"},"prelude":{"crate_id":{"name":"gimli","disambiguator":[16911639690014576655,6622834135414780886]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":0,"byte_end":2134,"line_start":1,"line_end":75,"column_start":1,"column_end":15}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1712,"byte_end":1713,"line_start":51,"line_end":51,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Format","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1747,"byte_end":1748,"line_start":54,"line_end":54,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1821,"byte_end":1822,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5225},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1867,"byte_end":1876,"line_start":61,"line_end":61,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5226},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1867,"byte_end":1876,"line_start":61,"line_end":61,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1878,"byte_end":1887,"line_start":61,"line_end":61,"column_start":39,"column_end":48},"alias_span":null,"name":"Endianity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5209},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1889,"byte_end":1901,"line_start":61,"line_end":61,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5210},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1889,"byte_end":1901,"line_start":61,"line_end":61,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1903,"byte_end":1915,"line_start":61,"line_end":61,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1903,"byte_end":1915,"line_start":61,"line_end":61,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1917,"byte_end":1930,"line_start":61,"line_end":61,"column_start":78,"column_end":91},"alias_span":null,"name":"RunTimeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89260,"byte_end":89261,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugAddr","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89292,"byte_end":89293,"line_start":177,"line_end":177,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"CallFrameInstruction","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89328,"byte_end":89329,"line_start":180,"line_end":180,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89378,"byte_end":89379,"line_start":183,"line_end":183,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"EndianSlice","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89536,"byte_end":89537,"line_start":191,"line_end":191,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Reader, ReaderOffset, ReaderOffsetId","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89574,"byte_end":89575,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DebugAbbrev, Abbreviation, Abbreviations, AttributeSpecification","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89614,"byte_end":89615,"line_start":197,"line_end":197,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89648,"byte_end":89649,"line_start":200,"line_end":200,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugLine, IncompleteLineProgram","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89702,"byte_end":89703,"line_start":205,"line_end":205,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"LocationLists, LocListIter","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89745,"byte_end":89746,"line_start":210,"line_end":210,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Expression","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89787,"byte_end":89788,"line_start":213,"line_end":213,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89829,"byte_end":89830,"line_start":216,"line_end":216,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89871,"byte_end":89872,"line_start":219,"line_end":219,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"RawRange, RangeLists, RngListIter, Range","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89903,"byte_end":89904,"line_start":222,"line_end":222,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"DebugLineStr, DebugStrOffsets, DebugStr","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89937,"byte_end":89938,"line_start":225,"line_end":225,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"UnitOffset, EntriesCursor, DebugInfo, DebugInfoUnitHeadersIter, DebugTypes, EntriesRaw, DebugTypesUnitHeadersIter, UnitHeader, parse_debug_info_offset, EntriesTree, DebuggingInformationEntry, AttributeValue","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89973,"byte_end":89974,"line_start":228,"line_end":228,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Value, ValueType","parent":{"krate":0,"index":143}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":2061,"byte_end":2062,"line_start":69,"line_end":69,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"CallFrameInstruction","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":0,"byte_end":2134,"line_start":1,"line_end":75,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":143},{"krate":0,"index":2687}],"decl_id":null,"docs":" `gimli` is a library for reading and writing the\n [DWARF debugging format](http://dwarfstd.org/).","sig":null,"attributes":[{"value":"/ `gimli` is a library for reading and writing the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/ [DWARF debugging format](http://dwarfstd.org/).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":53,"byte_end":104,"line_start":2,"line_end":2,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":105,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See the [read](./read/index.html) and [write](./write/index.html) modules","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":109,"byte_end":186,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ for examples and API documentation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":187,"byte_end":226,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":227,"byte_end":230,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Cargo Features","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":231,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":253,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Cargo features that can be enabled with `gimli`:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":257,"byte_end":309,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":310,"byte_end":313,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `std`: Enabled by default. Use the `std` library. Disabling this feature","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":314,"byte_end":392,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ allows using `gimli` in embedded environments that do not have access to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":393,"byte_end":469,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `std`. Note that even when `std` is disabled, `gimli` still requires an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":470,"byte_end":545,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ implementation of the `alloc` crate.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":546,"byte_end":586,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":587,"byte_end":590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `read`: Enabled by default. Enables the `read` module. Use of `std` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":591,"byte_end":667,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ optional.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":668,"byte_end":681,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":682,"byte_end":685,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `write`: Enabled by default. Enables the `write` module. Always uses","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":686,"byte_end":760,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ the `std` library.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":761,"byte_end":783,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"deny(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":784,"byte_end":806,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":807,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"warn(bare_trait_objects)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":888,"byte_end":916,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"warn(unused_extern_crates)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":917,"byte_end":947,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"warn(ellipsis_inclusive_range_patterns)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":948,"byte_end":991,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"warn(explicit_outlives_requirements)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1030,"byte_end":1070,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"allow(unknown_lints)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1133,"byte_end":1157,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1203,"byte_end":1244,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"allow(clippy :: never_loop)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1291,"byte_end":1320,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"allow(clippy :: panic_params)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1393,"byte_end":1424,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1425,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2689},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2293,"byte_end":2300,"line_start":5,"line_end":5,"column_start":5,"column_end":12},"name":"Dwarf64","qualname":"::common::Format::Dwarf64","value":"Format::Dwarf64","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" 64-bit DWARF\n","sig":null,"attributes":[{"value":"/ 64-bit DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2272,"byte_end":2288,"line_start":4,"line_end":4,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2692},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2331,"byte_end":2338,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"name":"Dwarf32","qualname":"::common::Format::Dwarf32","value":"Format::Dwarf32","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" 32-bit DWARF\n","sig":null,"attributes":[{"value":"/ 32-bit DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2310,"byte_end":2326,"line_start":6,"line_end":6,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":2688},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2259,"byte_end":2265,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Format","qualname":"::common::Format","value":"pub enum Format { Dwarf64 = , Dwarf32 = , }","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2692}],"decl_id":null,"docs":" Whether the format of a compilation unit is 32- or 64-bit.\n","sig":null,"attributes":[{"value":"/ Whether the format of a compilation unit is 32- or 64-bit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2136,"byte_end":2198,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2464,"byte_end":2483,"line_start":13,"line_end":13,"column_start":12,"column_end":31},"name":"initial_length_size","qualname":"<Format>::initial_length_size","value":"pub fn initial_length_size(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of an initial length field for the format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of an initial length field for the format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2365,"byte_end":2438,"line_start":11,"line_end":11,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2443,"byte_end":2452,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2682,"byte_end":2691,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"word_size","qualname":"<Format>::word_size","value":"pub fn word_size(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the natural word size for the format\n","sig":null,"attributes":[{"value":"/ Return the natural word size for the format","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2609,"byte_end":2656,"line_start":20,"line_end":20,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2661,"byte_end":2670,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3115,"byte_end":3123,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::common::Encoding","value":"Encoding { address_size, format, version }","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712}],"decl_id":null,"docs":" Encoding parameters that are commonly used for multiple DWARF sections.","sig":null,"attributes":[{"value":"/ Encoding parameters that are commonly used for multiple DWARF sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2814,"byte_end":2889,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2890,"byte_end":2893,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This is intended to be small enough to pass by value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2894,"byte_end":2951,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"repr(C)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3093,"byte_end":3103,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2710},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3166,"byte_end":3178,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"address_size","qualname":"::common::Encoding::address_size","value":"u8","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" The size of an address.\n","sig":null,"attributes":[{"value":"/ The size of an address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3130,"byte_end":3157,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2711},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3318,"byte_end":3324,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"format","qualname":"::common::Encoding::format","value":"common::Format","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" Whether the DWARF format is 32- or 64-bit.\n","sig":null,"attributes":[{"value":"/ Whether the DWARF format is 32- or 64-bit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3263,"byte_end":3309,"line_start":43,"line_end":43,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2712},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3384,"byte_end":3391,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"version","qualname":"::common::Encoding::version","value":"u16","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":" The DWARF version of the header.\n","sig":null,"attributes":[{"value":"/ The DWARF version of the header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3339,"byte_end":3375,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3514,"byte_end":3526,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"LineEncoding","qualname":"::common::LineEncoding","value":"LineEncoding { minimum_instruction_length, maximum_operations_per_instruction, default_is_stmt, line_base, line_range }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"decl_id":null,"docs":" Encoding parameters for a line number program.\n","sig":null,"attributes":[{"value":"/ Encoding parameters for a line number program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3401,"byte_end":3451,"line_start":50,"line_end":50,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3607,"byte_end":3633,"line_start":54,"line_end":54,"column_start":9,"column_end":35},"name":"minimum_instruction_length","qualname":"::common::LineEncoding::minimum_instruction_length","value":"u8","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" The size in bytes of the smallest target machine instruction.\n","sig":null,"attributes":[{"value":"/ The size in bytes of the smallest target machine instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3533,"byte_end":3598,"line_start":53,"line_end":53,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2730},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3747,"byte_end":3781,"line_start":58,"line_end":58,"column_start":9,"column_end":43},"name":"maximum_operations_per_instruction","qualname":"::common::LineEncoding::maximum_operations_per_instruction","value":"u8","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" The maximum number of individual operations that may be encoded in an\n instruction.\n","sig":null,"attributes":[{"value":"/ The maximum number of individual operations that may be encoded in an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3644,"byte_end":3717,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3722,"byte_end":3738,"line_start":57,"line_end":57,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2731},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3849,"byte_end":3864,"line_start":61,"line_end":61,"column_start":9,"column_end":24},"name":"default_is_stmt","qualname":"::common::LineEncoding::default_is_stmt","value":"bool","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" The initial value of the `is_stmt` register.\n","sig":null,"attributes":[{"value":"/ The initial value of the `is_stmt` register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3792,"byte_end":3840,"line_start":60,"line_end":60,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2732},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3960,"byte_end":3969,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"line_base","qualname":"::common::LineEncoding::line_base","value":"i8","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" The minimum value which a special opcode can add to the line register.\n","sig":null,"attributes":[{"value":"/ The minimum value which a special opcode can add to the line register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3877,"byte_end":3951,"line_start":63,"line_end":63,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2733},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4065,"byte_end":4075,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"name":"line_range","qualname":"::common::LineEncoding::line_range","value":"u8","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" The range of values which a special opcode can add to the line register.\n","sig":null,"attributes":[{"value":"/ The range of values which a special opcode can add to the line register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":3980,"byte_end":4056,"line_start":66,"line_end":66,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4652,"byte_end":4660,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"Register","qualname":"::common::Register","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DWARF register number.","sig":null,"attributes":[{"value":"/ A DWARF register number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4398,"byte_end":4426,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4427,"byte_end":4430,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The meaning of this value is ABI dependent. This is generally encoded as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4431,"byte_end":4507,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ a ULEB128, but supported architectures need 16 bits at most.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4508,"byte_end":4572,"line_start":86,"line_end":86,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2751},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4661,"byte_end":4668,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"name":"0","qualname":"::common::Register::0","value":"u16","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4782,"byte_end":4799,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"DebugAbbrevOffset","qualname":"::common::DebugAbbrevOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_abbrev` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4672,"byte_end":4719,"line_start":90,"line_end":90,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2774},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4811,"byte_end":4816,"line_start":92,"line_end":92,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugAbbrevOffset::0","value":"T","parent":{"krate":0,"index":2771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2798},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4940,"byte_end":4953,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"DebugAddrBase","qualname":"::common::DebugAddrBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4820,"byte_end":4883,"line_start":94,"line_end":94,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2801},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4965,"byte_end":4970,"line_start":96,"line_end":96,"column_start":37,"column_end":42},"name":"0","qualname":"::common::DebugAddrBase::0","value":"T","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2821},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5097,"byte_end":5111,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"DebugAddrIndex","qualname":"::common::DebugAddrIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of addresses in the `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4974,"byte_end":5040,"line_start":98,"line_end":98,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2824},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5123,"byte_end":5128,"line_start":100,"line_end":100,"column_start":38,"column_end":43},"name":"0","qualname":"::common::DebugAddrIndex::0","value":"T","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5257,"byte_end":5272,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"DebugInfoOffset","qualname":"::common::DebugInfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5132,"byte_end":5177,"line_start":102,"line_end":102,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2847},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5284,"byte_end":5289,"line_start":104,"line_end":104,"column_start":39,"column_end":44},"name":"0","qualname":"::common::DebugInfoOffset::0","value":"T","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5395,"byte_end":5410,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"DebugLineOffset","qualname":"::common::DebugLineOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5293,"byte_end":5338,"line_start":106,"line_end":106,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5422,"byte_end":5427,"line_start":108,"line_end":108,"column_start":39,"column_end":44},"name":"0","qualname":"::common::DebugLineOffset::0","value":"T","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2900},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5537,"byte_end":5555,"line_start":112,"line_end":112,"column_start":12,"column_end":30},"name":"DebugLineStrOffset","qualname":"::common::DebugLineStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5431,"byte_end":5480,"line_start":110,"line_end":110,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2903},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5567,"byte_end":5572,"line_start":112,"line_end":112,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugLineStrOffset::0","value":"T","parent":{"krate":0,"index":2900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2923},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5793,"byte_end":5812,"line_start":117,"line_end":117,"column_start":12,"column_end":31},"name":"LocationListsOffset","qualname":"::common::LocationListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_loc` section or the `.debug_loclists` section,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5576,"byte_end":5660,"line_start":114,"line_end":114,"column_start":1,"column_end":85}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5661,"byte_end":5730,"line_start":115,"line_end":115,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2926},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5824,"byte_end":5829,"line_start":117,"line_end":117,"column_start":43,"column_end":48},"name":"0","qualname":"::common::LocationListsOffset::0","value":"T","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2950},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5971,"byte_end":5988,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"DebugLocListsBase","qualname":"::common::DebugLocListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of location list offsets in the `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":5833,"byte_end":5914,"line_start":119,"line_end":119,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":2953},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6000,"byte_end":6005,"line_start":121,"line_end":121,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugLocListsBase::0","value":"T","parent":{"krate":0,"index":2950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2973},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6148,"byte_end":6166,"line_start":125,"line_end":125,"column_start":12,"column_end":30},"name":"DebugLocListsIndex","qualname":"::common::DebugLocListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of location list offsets in the `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6009,"byte_end":6091,"line_start":123,"line_end":123,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":2976},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6178,"byte_end":6183,"line_start":125,"line_end":125,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugLocListsIndex::0","value":"T","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2996},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6298,"byte_end":6316,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"DebugMacinfoOffset","qualname":"::common::DebugMacinfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6187,"byte_end":6235,"line_start":127,"line_end":127,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2999},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6328,"byte_end":6333,"line_start":129,"line_end":129,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugMacinfoOffset::0","value":"T","parent":{"krate":0,"index":2996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3023},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6446,"byte_end":6462,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"DebugMacroOffset","qualname":"::common::DebugMacroOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6337,"byte_end":6383,"line_start":131,"line_end":131,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3026},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6474,"byte_end":6479,"line_start":133,"line_end":133,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugMacroOffset::0","value":"T","parent":{"krate":0,"index":3023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6703,"byte_end":6719,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"RangeListsOffset","qualname":"::common::RangeListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6483,"byte_end":6570,"line_start":135,"line_end":135,"column_start":1,"column_end":88}},{"value":"/ depending on the version of the unit the offset was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6571,"byte_end":6640,"line_start":136,"line_end":136,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3053},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6731,"byte_end":6736,"line_start":138,"line_end":138,"column_start":40,"column_end":45},"name":"0","qualname":"::common::RangeListsOffset::0","value":"T","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3077},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6875,"byte_end":6892,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"DebugRngListsBase","qualname":"::common::DebugRngListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of range list offsets in the `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6740,"byte_end":6818,"line_start":140,"line_end":140,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3080},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6904,"byte_end":6909,"line_start":142,"line_end":142,"column_start":41,"column_end":46},"name":"0","qualname":"::common::DebugRngListsBase::0","value":"T","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3100},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7049,"byte_end":7067,"line_start":146,"line_end":146,"column_start":12,"column_end":30},"name":"DebugRngListsIndex","qualname":"::common::DebugRngListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of range list offsets in the `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":6913,"byte_end":6992,"line_start":144,"line_end":144,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3103},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7079,"byte_end":7084,"line_start":146,"line_end":146,"column_start":42,"column_end":47},"name":"0","qualname":"::common::DebugRngListsIndex::0","value":"T","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3123},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7189,"byte_end":7203,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"DebugStrOffset","qualname":"::common::DebugStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7088,"byte_end":7132,"line_start":148,"line_end":148,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3126},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7215,"byte_end":7220,"line_start":150,"line_end":150,"column_start":38,"column_end":43},"name":"0","qualname":"::common::DebugStrOffset::0","value":"T","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3146},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7351,"byte_end":7370,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"DebugStrOffsetsBase","qualname":"::common::DebugStrOffsetsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7224,"byte_end":7294,"line_start":152,"line_end":152,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3149},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7382,"byte_end":7387,"line_start":154,"line_end":154,"column_start":43,"column_end":48},"name":"0","qualname":"::common::DebugStrOffsetsBase::0","value":"T","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3169},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7519,"byte_end":7539,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"DebugStrOffsetsIndex","qualname":"::common::DebugStrOffsetsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7391,"byte_end":7462,"line_start":156,"line_end":156,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7551,"byte_end":7556,"line_start":158,"line_end":158,"column_start":44,"column_end":49},"name":"0","qualname":"::common::DebugStrOffsetsIndex::0","value":"T","parent":{"krate":0,"index":3169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3192},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7686,"byte_end":7702,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"DebugTypesOffset","qualname":"::common::DebugTypesOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7560,"byte_end":7606,"line_start":160,"line_end":160,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7714,"byte_end":7719,"line_start":162,"line_end":162,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugTypesOffset::0","value":"T","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3225},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7845,"byte_end":7863,"line_start":166,"line_end":166,"column_start":12,"column_end":30},"name":"DebugTypeSignature","qualname":"::common::DebugTypeSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type signature as used in the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ A type signature as used in the `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7723,"byte_end":7782,"line_start":164,"line_end":164,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3227},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7864,"byte_end":7871,"line_start":166,"line_end":166,"column_start":31,"column_end":38},"name":"0","qualname":"::common::DebugTypeSignature::0","value":"u64","parent":{"krate":0,"index":3225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3243},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7984,"byte_end":8000,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"DebugFrameOffset","qualname":"::common::DebugFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":7875,"byte_end":7921,"line_start":168,"line_end":168,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3246},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8012,"byte_end":8017,"line_start":170,"line_end":170,"column_start":40,"column_end":45},"name":"0","qualname":"::common::DebugFrameOffset::0","value":"T","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3270},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8248,"byte_end":8261,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"EhFrameOffset","qualname":"::common::EhFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.eh_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8142,"byte_end":8185,"line_start":179,"line_end":179,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8273,"byte_end":8278,"line_start":181,"line_end":181,"column_start":37,"column_end":42},"name":"0","qualname":"::common::EhFrameOffset::0","value":"T","parent":{"krate":0,"index":3270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8624,"byte_end":8639,"line_start":194,"line_end":194,"column_start":5,"column_end":20},"name":"DebugInfoOffset","qualname":"::common::UnitSectionOffset::DebugInfoOffset","value":"UnitSectionOffset::DebugInfoOffset(DebugInfoOffset<T>)","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8574,"byte_end":8619,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3302},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8716,"byte_end":8732,"line_start":196,"line_end":196,"column_start":5,"column_end":21},"name":"DebugTypesOffset","qualname":"::common::UnitSectionOffset::DebugTypesOffset","value":"UnitSectionOffset::DebugTypesOffset(DebugTypesOffset<T>)","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8665,"byte_end":8711,"line_start":195,"line_end":195,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":3297},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8539,"byte_end":8556,"line_start":192,"line_end":192,"column_start":10,"column_end":27},"name":"UnitSectionOffset","qualname":"::common::UnitSectionOffset","value":"pub enum UnitSectionOffset<T = usize> {\n    DebugInfoOffset(DebugInfoOffset<T>),\n    DebugTypesOffset(DebugTypesOffset<T>),\n}","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3302}],"decl_id":null,"docs":" An offset into the `.debug_info` or `.debug_types` sections.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` or `.debug_types` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8397,"byte_end":8461,"line_start":190,"line_end":190,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9230,"byte_end":9250,"line_start":216,"line_end":216,"column_start":12,"column_end":32},"name":"as_debug_info_offset","qualname":"<UnitSectionOffset<T>>::as_debug_info_offset","value":"pub fn as_debug_info_offset(&Self) -> Option<DebugInfoOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DebugInfoOffset` inside, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns the `DebugInfoOffset` inside, or `None` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9156,"byte_end":9218,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9546,"byte_end":9567,"line_start":223,"line_end":223,"column_start":12,"column_end":33},"name":"as_debug_types_offset","qualname":"<UnitSectionOffset<T>>::as_debug_types_offset","value":"pub fn as_debug_types_offset(&Self) -> Option<DebugTypesOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DebugTypesOffset` inside, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns the `DebugTypesOffset` inside, or `None` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9471,"byte_end":9534,"line_start":222,"line_end":222,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3335},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9957,"byte_end":9968,"line_start":235,"line_end":235,"column_start":5,"column_end":16},"name":"DebugAbbrev","qualname":"::common::SectionId::DebugAbbrev","value":"SectionId::DebugAbbrev","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9920,"byte_end":9952,"line_start":234,"line_end":234,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3337},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10009,"byte_end":10018,"line_start":237,"line_end":237,"column_start":5,"column_end":14},"name":"DebugAddr","qualname":"::common::SectionId::DebugAddr","value":"SectionId::DebugAddr","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9974,"byte_end":10004,"line_start":236,"line_end":236,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10062,"byte_end":10074,"line_start":239,"line_end":239,"column_start":5,"column_end":17},"name":"DebugAranges","qualname":"::common::SectionId::DebugAranges","value":"SectionId::DebugAranges","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_aranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10024,"byte_end":10057,"line_start":238,"line_end":238,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10116,"byte_end":10126,"line_start":241,"line_end":241,"column_start":5,"column_end":15},"name":"DebugFrame","qualname":"::common::SectionId::DebugFrame","value":"SectionId::DebugFrame","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10080,"byte_end":10111,"line_start":240,"line_end":240,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10165,"byte_end":10172,"line_start":243,"line_end":243,"column_start":5,"column_end":12},"name":"EhFrame","qualname":"::common::SectionId::EhFrame","value":"SectionId::EhFrame","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10132,"byte_end":10160,"line_start":242,"line_end":242,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3345},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10215,"byte_end":10225,"line_start":245,"line_end":245,"column_start":5,"column_end":15},"name":"EhFrameHdr","qualname":"::common::SectionId::EhFrameHdr","value":"SectionId::EhFrameHdr","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10178,"byte_end":10210,"line_start":244,"line_end":244,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3347},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10266,"byte_end":10275,"line_start":247,"line_end":247,"column_start":5,"column_end":14},"name":"DebugInfo","qualname":"::common::SectionId::DebugInfo","value":"SectionId::DebugInfo","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10231,"byte_end":10261,"line_start":246,"line_end":246,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3349},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10316,"byte_end":10325,"line_start":249,"line_end":249,"column_start":5,"column_end":14},"name":"DebugLine","qualname":"::common::SectionId::DebugLine","value":"SectionId::DebugLine","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10281,"byte_end":10311,"line_start":248,"line_end":248,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3351},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10370,"byte_end":10382,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"name":"DebugLineStr","qualname":"::common::SectionId::DebugLineStr","value":"SectionId::DebugLineStr","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10331,"byte_end":10365,"line_start":250,"line_end":250,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3353},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10422,"byte_end":10430,"line_start":253,"line_end":253,"column_start":5,"column_end":13},"name":"DebugLoc","qualname":"::common::SectionId::DebugLoc","value":"SectionId::DebugLoc","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loc` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10388,"byte_end":10417,"line_start":252,"line_end":252,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10475,"byte_end":10488,"line_start":255,"line_end":255,"column_start":5,"column_end":18},"name":"DebugLocLists","qualname":"::common::SectionId::DebugLocLists","value":"SectionId::DebugLocLists","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10436,"byte_end":10470,"line_start":254,"line_end":254,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10532,"byte_end":10544,"line_start":257,"line_end":257,"column_start":5,"column_end":17},"name":"DebugMacinfo","qualname":"::common::SectionId::DebugMacinfo","value":"SectionId::DebugMacinfo","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_macinfo` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10494,"byte_end":10527,"line_start":256,"line_end":256,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3359},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10586,"byte_end":10596,"line_start":259,"line_end":259,"column_start":5,"column_end":15},"name":"DebugMacro","qualname":"::common::SectionId::DebugMacro","value":"SectionId::DebugMacro","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_macro` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10550,"byte_end":10581,"line_start":258,"line_end":258,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10641,"byte_end":10654,"line_start":261,"line_end":261,"column_start":5,"column_end":18},"name":"DebugPubNames","qualname":"::common::SectionId::DebugPubNames","value":"SectionId::DebugPubNames","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_pubnames` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_pubnames` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10602,"byte_end":10636,"line_start":260,"line_end":260,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3363},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10699,"byte_end":10712,"line_start":263,"line_end":263,"column_start":5,"column_end":18},"name":"DebugPubTypes","qualname":"::common::SectionId::DebugPubTypes","value":"SectionId::DebugPubTypes","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_pubtypes` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_pubtypes` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10660,"byte_end":10694,"line_start":262,"line_end":262,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3365},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10755,"byte_end":10766,"line_start":265,"line_end":265,"column_start":5,"column_end":16},"name":"DebugRanges","qualname":"::common::SectionId::DebugRanges","value":"SectionId::DebugRanges","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_ranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10718,"byte_end":10750,"line_start":264,"line_end":264,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3367},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10811,"byte_end":10824,"line_start":267,"line_end":267,"column_start":5,"column_end":18},"name":"DebugRngLists","qualname":"::common::SectionId::DebugRngLists","value":"SectionId::DebugRngLists","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10772,"byte_end":10806,"line_start":266,"line_end":266,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10864,"byte_end":10872,"line_start":269,"line_end":269,"column_start":5,"column_end":13},"name":"DebugStr","qualname":"::common::SectionId::DebugStr","value":"SectionId::DebugStr","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10830,"byte_end":10859,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3371},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10920,"byte_end":10935,"line_start":271,"line_end":271,"column_start":5,"column_end":20},"name":"DebugStrOffsets","qualname":"::common::SectionId::DebugStrOffsets","value":"SectionId::DebugStrOffsets","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10878,"byte_end":10915,"line_start":270,"line_end":270,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3373},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10977,"byte_end":10987,"line_start":273,"line_end":273,"column_start":5,"column_end":15},"name":"DebugTypes","qualname":"::common::SectionId::DebugTypes","value":"SectionId::DebugTypes","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10941,"byte_end":10972,"line_start":272,"line_end":272,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":3334},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9904,"byte_end":9913,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"name":"SectionId","qualname":"::common::SectionId","value":"pub enum SectionId {\n    DebugAbbrev,\n    DebugAddr,\n    DebugAranges,\n    DebugFrame,\n    EhFrame,\n    EhFrameHdr,\n    DebugInfo,\n    DebugLine,\n    DebugLineStr,\n    DebugLoc,\n    DebugLocLists,\n    DebugMacinfo,\n    DebugMacro,\n    DebugPubNames,\n    DebugPubTypes,\n    DebugRanges,\n    DebugRngLists,\n    DebugStr,\n    DebugStrOffsets,\n    DebugTypes,\n}","parent":null,"children":[{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3373}],"decl_id":null,"docs":" An identifier for a DWARF section.\n","sig":null,"attributes":[{"value":"/ An identifier for a DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9788,"byte_end":9826,"line_start":231,"line_end":231,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":11072,"byte_end":11076,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"name","qualname":"<SectionId>::name","value":"pub fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the ELF section name for this kind.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this kind.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":11013,"byte_end":11060,"line_start":277,"line_end":277,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":12322,"byte_end":12330,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"dwo_name","qualname":"<SectionId>::dwo_name","value":"pub fn dwo_name(Self) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ELF section name for this kind, when found in a .dwo file.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this kind, when found in a .dwo file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":12236,"byte_end":12310,"line_start":303,"line_end":303,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3393},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13305,"byte_end":13310,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"DwoId","qualname":"::common::DwoId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An optionally-provided implementation-defined compilation unit ID to enable\n split DWARF and linking a split compilation unit back together.\n","sig":null,"attributes":[{"value":"/ An optionally-provided implementation-defined compilation unit ID to enable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13095,"byte_end":13174,"line_start":322,"line_end":322,"column_start":1,"column_end":80}},{"value":"/ split DWARF and linking a split compilation unit back together.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13175,"byte_end":13242,"line_start":323,"line_end":323,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3395},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13311,"byte_end":13318,"line_start":325,"line_end":325,"column_start":18,"column_end":25},"name":"0","qualname":"::common::DwoId::0","value":"u64","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3412},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13588,"byte_end":13592,"line_start":332,"line_end":332,"column_start":5,"column_end":9},"name":"Main","qualname":"::common::DwarfFileType::Main","value":"DwarfFileType::Main","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" A normal executable or object file.\n","sig":null,"attributes":[{"value":"/ A normal executable or object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13544,"byte_end":13583,"line_start":331,"line_end":331,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3414},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13631,"byte_end":13634,"line_start":334,"line_end":334,"column_start":5,"column_end":8},"name":"Dwo","qualname":"::common::DwarfFileType::Dwo","value":"DwarfFileType::Dwo","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" A .dwo split DWARF file.\n","sig":null,"attributes":[{"value":"/ A .dwo split DWARF file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13598,"byte_end":13626,"line_start":333,"line_end":333,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3411},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13524,"byte_end":13537,"line_start":330,"line_end":330,"column_start":10,"column_end":23},"name":"DwarfFileType","qualname":"::common::DwarfFileType","value":"pub enum DwarfFileType { Main, Dwo, }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3414}],"decl_id":null,"docs":" The \"type\" of file with DWARF debugging information. This determines, among other things,\n which files DWARF sections should be loaded from.\n","sig":null,"attributes":[{"value":"/ The \"type\" of file with DWARF debugging information. This determines, among other things,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13322,"byte_end":13415,"line_start":327,"line_end":327,"column_start":1,"column_end":94}},{"value":"/ which files DWARF sections should be loaded from.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13416,"byte_end":13469,"line_start":328,"line_end":328,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":14985,"byte_end":14988,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"Arm","qualname":"::arch::Arm","value":"","parent":null,"children":[],"decl_id":null,"docs":" ARM architecture specific definitions.","sig":null,"attributes":[{"value":"/ ARM architecture specific definitions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":14775,"byte_end":14817,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":14818,"byte_end":14821,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See [DWARF for the ARM Architecture](http://infocenter.arm.com/help/topic/com.arm.doc.ihi0040b/IHI0040B_aadwarf.pdf).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":14822,"byte_end":14943,"line_start":38,"line_end":38,"column_start":1,"column_end":122}}]},{"kind":"Const","id":{"krate":0,"index":3435},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15042,"byte_end":15044,"line_start":44,"line_end":44,"column_start":5,"column_end":7},"name":"R0","qualname":"::arch::Arm::R0","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3436},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15062,"byte_end":15064,"line_start":45,"line_end":45,"column_start":5,"column_end":7},"name":"R1","qualname":"::arch::Arm::R1","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3437},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15082,"byte_end":15084,"line_start":46,"line_end":46,"column_start":5,"column_end":7},"name":"R2","qualname":"::arch::Arm::R2","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3438},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15102,"byte_end":15104,"line_start":47,"line_end":47,"column_start":5,"column_end":7},"name":"R3","qualname":"::arch::Arm::R3","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3439},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15122,"byte_end":15124,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"R4","qualname":"::arch::Arm::R4","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3440},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15142,"byte_end":15144,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"R5","qualname":"::arch::Arm::R5","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3441},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15162,"byte_end":15164,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"R6","qualname":"::arch::Arm::R6","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3442},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15182,"byte_end":15184,"line_start":51,"line_end":51,"column_start":5,"column_end":7},"name":"R7","qualname":"::arch::Arm::R7","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15202,"byte_end":15204,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::Arm::R8","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3444},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15222,"byte_end":15224,"line_start":53,"line_end":53,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::Arm::R9","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3445},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15242,"byte_end":15245,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::Arm::R10","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3446},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15265,"byte_end":15268,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::Arm::R11","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3447},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15288,"byte_end":15291,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::Arm::R12","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3448},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15311,"byte_end":15314,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::Arm::R13","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3449},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15334,"byte_end":15337,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::Arm::R14","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3450},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15357,"byte_end":15360,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::Arm::R15","value":"Register","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3454},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15591,"byte_end":15594,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"X86","qualname":"::arch::X86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Intel i386 architecture specific definitions.","sig":null,"attributes":[{"value":"/ Intel i386 architecture specific definitions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15381,"byte_end":15430,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15431,"byte_end":15434,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See Intel386 psABi version 1.1 at the [X86 psABI wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15435,"byte_end":15549,"line_start":64,"line_end":64,"column_start":1,"column_end":115}}]},{"kind":"Const","id":{"krate":0,"index":3462},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15619,"byte_end":15622,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"EAX","qualname":"::arch::X86::EAX","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3463},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15641,"byte_end":15644,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"ECX","qualname":"::arch::X86::ECX","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15663,"byte_end":15666,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"EDX","qualname":"::arch::X86::EDX","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15685,"byte_end":15688,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"EBX","qualname":"::arch::X86::EBX","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3466},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15707,"byte_end":15710,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"ESP","qualname":"::arch::X86::ESP","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3467},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15729,"byte_end":15732,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"EBP","qualname":"::arch::X86::EBP","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15751,"byte_end":15754,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"ESI","qualname":"::arch::X86::ESI","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3469},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15773,"byte_end":15776,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"EDI","qualname":"::arch::X86::EDI","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3470},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15892,"byte_end":15894,"line_start":79,"line_end":79,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86::RA","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3471},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15913,"byte_end":15916,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86::ST0","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3472},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15936,"byte_end":15939,"line_start":82,"line_end":82,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86::ST1","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15959,"byte_end":15962,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86::ST2","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":15982,"byte_end":15985,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86::ST3","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3475},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16005,"byte_end":16008,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86::ST4","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3476},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16028,"byte_end":16031,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86::ST5","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16051,"byte_end":16054,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86::ST6","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3478},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16074,"byte_end":16077,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86::ST7","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3479},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16098,"byte_end":16102,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86::XMM0","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3480},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16123,"byte_end":16127,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86::XMM1","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3481},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16148,"byte_end":16152,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86::XMM2","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3482},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16173,"byte_end":16177,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86::XMM3","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3483},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16198,"byte_end":16202,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86::XMM4","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16223,"byte_end":16227,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86::XMM5","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16248,"byte_end":16252,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86::XMM6","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3486},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16273,"byte_end":16277,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86::XMM7","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3487},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16299,"byte_end":16302,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86::MM0","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16322,"byte_end":16325,"line_start":100,"line_end":100,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86::MM1","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16345,"byte_end":16348,"line_start":101,"line_end":101,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86::MM2","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3490},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16368,"byte_end":16371,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86::MM3","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16391,"byte_end":16394,"line_start":103,"line_end":103,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86::MM4","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3492},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16414,"byte_end":16417,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86::MM5","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3493},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16437,"byte_end":16440,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86::MM6","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16460,"byte_end":16463,"line_start":106,"line_end":106,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86::MM7","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16484,"byte_end":16489,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86::MXCSR","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16512,"byte_end":16514,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86::ES","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16533,"byte_end":16535,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86::CS","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16554,"byte_end":16556,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86::SS","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16575,"byte_end":16577,"line_start":113,"line_end":113,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86::DS","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3500},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16596,"byte_end":16598,"line_start":114,"line_end":114,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86::FS","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16617,"byte_end":16619,"line_start":115,"line_end":115,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86::GS","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16639,"byte_end":16641,"line_start":117,"line_end":117,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86::TR","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3503},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16660,"byte_end":16664,"line_start":118,"line_end":118,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86::LDTR","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16686,"byte_end":16693,"line_start":120,"line_end":120,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86::FS_BASE","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16717,"byte_end":16724,"line_start":121,"line_end":121,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86::GS_BASE","value":"Register","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3509},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16952,"byte_end":16958,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"X86_64","qualname":"::arch::X86_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" AMD64 architecture specific definitions.","sig":null,"attributes":[{"value":"/ AMD64 architecture specific definitions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16749,"byte_end":16793,"line_start":124,"line_end":124,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16794,"byte_end":16797,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ See x86-64 psABI version 1.0 at the [X86 psABI wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16798,"byte_end":16910,"line_start":126,"line_end":126,"column_start":1,"column_end":113}}]},{"kind":"Const","id":{"krate":0,"index":3517},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":16986,"byte_end":16989,"line_start":131,"line_end":131,"column_start":5,"column_end":8},"name":"RAX","qualname":"::arch::X86_64::RAX","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3518},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17008,"byte_end":17011,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"RDX","qualname":"::arch::X86_64::RDX","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3519},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17030,"byte_end":17033,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"RCX","qualname":"::arch::X86_64::RCX","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3520},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17052,"byte_end":17055,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"RBX","qualname":"::arch::X86_64::RBX","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3521},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17074,"byte_end":17077,"line_start":135,"line_end":135,"column_start":5,"column_end":8},"name":"RSI","qualname":"::arch::X86_64::RSI","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3522},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17096,"byte_end":17099,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"RDI","qualname":"::arch::X86_64::RDI","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3523},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17118,"byte_end":17121,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"RBP","qualname":"::arch::X86_64::RBP","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3524},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17140,"byte_end":17143,"line_start":138,"line_end":138,"column_start":5,"column_end":8},"name":"RSP","qualname":"::arch::X86_64::RSP","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3525},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17163,"byte_end":17165,"line_start":140,"line_end":140,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::X86_64::R8","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3526},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17183,"byte_end":17185,"line_start":141,"line_end":141,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::X86_64::R9","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3527},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17203,"byte_end":17206,"line_start":142,"line_end":142,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::X86_64::R10","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17226,"byte_end":17229,"line_start":143,"line_end":143,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::X86_64::R11","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3529},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17249,"byte_end":17252,"line_start":144,"line_end":144,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::X86_64::R12","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3530},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17272,"byte_end":17275,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::X86_64::R13","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3531},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17295,"byte_end":17298,"line_start":146,"line_end":146,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::X86_64::R14","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17318,"byte_end":17321,"line_start":147,"line_end":147,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::X86_64::R15","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17438,"byte_end":17440,"line_start":150,"line_end":150,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86_64::RA","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3534},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17460,"byte_end":17464,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86_64::XMM0","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3535},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17485,"byte_end":17489,"line_start":153,"line_end":153,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86_64::XMM1","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3536},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17510,"byte_end":17514,"line_start":154,"line_end":154,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86_64::XMM2","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17535,"byte_end":17539,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86_64::XMM3","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3538},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17560,"byte_end":17564,"line_start":156,"line_end":156,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86_64::XMM4","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17585,"byte_end":17589,"line_start":157,"line_end":157,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86_64::XMM5","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3540},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17610,"byte_end":17614,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86_64::XMM6","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3541},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17635,"byte_end":17639,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86_64::XMM7","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3542},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17661,"byte_end":17665,"line_start":161,"line_end":161,"column_start":5,"column_end":9},"name":"XMM8","qualname":"::arch::X86_64::XMM8","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17686,"byte_end":17690,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"XMM9","qualname":"::arch::X86_64::XMM9","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3544},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17711,"byte_end":17716,"line_start":163,"line_end":163,"column_start":5,"column_end":10},"name":"XMM10","qualname":"::arch::X86_64::XMM10","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17738,"byte_end":17743,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"XMM11","qualname":"::arch::X86_64::XMM11","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17765,"byte_end":17770,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"XMM12","qualname":"::arch::X86_64::XMM12","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3547},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17792,"byte_end":17797,"line_start":166,"line_end":166,"column_start":5,"column_end":10},"name":"XMM13","qualname":"::arch::X86_64::XMM13","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3548},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17819,"byte_end":17824,"line_start":167,"line_end":167,"column_start":5,"column_end":10},"name":"XMM14","qualname":"::arch::X86_64::XMM14","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3549},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17846,"byte_end":17851,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"XMM15","qualname":"::arch::X86_64::XMM15","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3550},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17874,"byte_end":17877,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86_64::ST0","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17897,"byte_end":17900,"line_start":171,"line_end":171,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86_64::ST1","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3552},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17920,"byte_end":17923,"line_start":172,"line_end":172,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86_64::ST2","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3553},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17943,"byte_end":17946,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86_64::ST3","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3554},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17966,"byte_end":17969,"line_start":174,"line_end":174,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86_64::ST4","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3555},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":17989,"byte_end":17992,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86_64::ST5","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3556},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18012,"byte_end":18015,"line_start":176,"line_end":176,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86_64::ST6","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18035,"byte_end":18038,"line_start":177,"line_end":177,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86_64::ST7","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3558},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18059,"byte_end":18062,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86_64::MM0","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3559},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18082,"byte_end":18085,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86_64::MM1","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3560},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18105,"byte_end":18108,"line_start":181,"line_end":181,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86_64::MM2","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3561},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18128,"byte_end":18131,"line_start":182,"line_end":182,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86_64::MM3","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3562},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18151,"byte_end":18154,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86_64::MM4","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3563},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18174,"byte_end":18177,"line_start":184,"line_end":184,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86_64::MM5","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18197,"byte_end":18200,"line_start":185,"line_end":185,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86_64::MM6","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3565},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18220,"byte_end":18223,"line_start":186,"line_end":186,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86_64::MM7","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3566},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18244,"byte_end":18250,"line_start":188,"line_end":188,"column_start":5,"column_end":11},"name":"RFLAGS","qualname":"::arch::X86_64::RFLAGS","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3567},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18273,"byte_end":18275,"line_start":189,"line_end":189,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86_64::ES","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3568},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18294,"byte_end":18296,"line_start":190,"line_end":190,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86_64::CS","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3569},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18315,"byte_end":18317,"line_start":191,"line_end":191,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86_64::SS","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3570},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18336,"byte_end":18338,"line_start":192,"line_end":192,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86_64::DS","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3571},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18357,"byte_end":18359,"line_start":193,"line_end":193,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86_64::FS","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18378,"byte_end":18380,"line_start":194,"line_end":194,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86_64::GS","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18400,"byte_end":18407,"line_start":196,"line_end":196,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86_64::FS_BASE","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3574},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18431,"byte_end":18438,"line_start":197,"line_end":197,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86_64::GS_BASE","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3575},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18463,"byte_end":18465,"line_start":199,"line_end":199,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86_64::TR","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3576},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18484,"byte_end":18488,"line_start":200,"line_end":200,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86_64::LDTR","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3577},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18509,"byte_end":18514,"line_start":201,"line_end":201,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86_64::MXCSR","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3578},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18536,"byte_end":18539,"line_start":202,"line_end":202,"column_start":5,"column_end":8},"name":"FCW","qualname":"::arch::X86_64::FCW","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3579},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18559,"byte_end":18562,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"FSW","qualname":"::arch::X86_64::FSW","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3580},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18583,"byte_end":18588,"line_start":205,"line_end":205,"column_start":5,"column_end":10},"name":"XMM16","qualname":"::arch::X86_64::XMM16","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3581},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18610,"byte_end":18615,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"XMM17","qualname":"::arch::X86_64::XMM17","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3582},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18637,"byte_end":18642,"line_start":207,"line_end":207,"column_start":5,"column_end":10},"name":"XMM18","qualname":"::arch::X86_64::XMM18","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3583},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18664,"byte_end":18669,"line_start":208,"line_end":208,"column_start":5,"column_end":10},"name":"XMM19","qualname":"::arch::X86_64::XMM19","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3584},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18691,"byte_end":18696,"line_start":209,"line_end":209,"column_start":5,"column_end":10},"name":"XMM20","qualname":"::arch::X86_64::XMM20","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3585},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18718,"byte_end":18723,"line_start":210,"line_end":210,"column_start":5,"column_end":10},"name":"XMM21","qualname":"::arch::X86_64::XMM21","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3586},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18745,"byte_end":18750,"line_start":211,"line_end":211,"column_start":5,"column_end":10},"name":"XMM22","qualname":"::arch::X86_64::XMM22","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3587},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18772,"byte_end":18777,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"XMM23","qualname":"::arch::X86_64::XMM23","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3588},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18799,"byte_end":18804,"line_start":213,"line_end":213,"column_start":5,"column_end":10},"name":"XMM24","qualname":"::arch::X86_64::XMM24","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3589},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18826,"byte_end":18831,"line_start":214,"line_end":214,"column_start":5,"column_end":10},"name":"XMM25","qualname":"::arch::X86_64::XMM25","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18853,"byte_end":18858,"line_start":215,"line_end":215,"column_start":5,"column_end":10},"name":"XMM26","qualname":"::arch::X86_64::XMM26","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3591},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18880,"byte_end":18885,"line_start":216,"line_end":216,"column_start":5,"column_end":10},"name":"XMM27","qualname":"::arch::X86_64::XMM27","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3592},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18907,"byte_end":18912,"line_start":217,"line_end":217,"column_start":5,"column_end":10},"name":"XMM28","qualname":"::arch::X86_64::XMM28","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3593},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18934,"byte_end":18939,"line_start":218,"line_end":218,"column_start":5,"column_end":10},"name":"XMM29","qualname":"::arch::X86_64::XMM29","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3594},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18961,"byte_end":18966,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"XMM30","qualname":"::arch::X86_64::XMM30","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3595},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":18988,"byte_end":18993,"line_start":220,"line_end":220,"column_start":5,"column_end":10},"name":"XMM31","qualname":"::arch::X86_64::XMM31","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3596},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19016,"byte_end":19018,"line_start":222,"line_end":222,"column_start":5,"column_end":7},"name":"K0","qualname":"::arch::X86_64::K0","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3597},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19038,"byte_end":19040,"line_start":223,"line_end":223,"column_start":5,"column_end":7},"name":"K1","qualname":"::arch::X86_64::K1","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3598},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19060,"byte_end":19062,"line_start":224,"line_end":224,"column_start":5,"column_end":7},"name":"K2","qualname":"::arch::X86_64::K2","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3599},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19082,"byte_end":19084,"line_start":225,"line_end":225,"column_start":5,"column_end":7},"name":"K3","qualname":"::arch::X86_64::K3","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3600},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19104,"byte_end":19106,"line_start":226,"line_end":226,"column_start":5,"column_end":7},"name":"K4","qualname":"::arch::X86_64::K4","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3601},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19126,"byte_end":19128,"line_start":227,"line_end":227,"column_start":5,"column_end":7},"name":"K5","qualname":"::arch::X86_64::K5","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3602},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19148,"byte_end":19150,"line_start":228,"line_end":228,"column_start":5,"column_end":7},"name":"K6","qualname":"::arch::X86_64::K6","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3603},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/arch.rs","byte_start":19170,"byte_end":19172,"line_start":229,"line_end":229,"column_start":5,"column_end":7},"name":"K7","qualname":"::arch::X86_64::K7","value":"Register","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":3619},{"krate":0,"index":3639},{"krate":0,"index":3637},{"krate":0,"index":3636},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3626},{"krate":0,"index":3624},{"krate":0,"index":3622},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3617},{"krate":0,"index":3677},{"krate":0,"index":3697},{"krate":0,"index":3695},{"krate":0,"index":3694},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3684},{"krate":0,"index":3682},{"krate":0,"index":3680},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3675},{"krate":0,"index":3705},{"krate":0,"index":3725},{"krate":0,"index":3723},{"krate":0,"index":3722},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3712},{"krate":0,"index":3710},{"krate":0,"index":3708},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3844},{"krate":0,"index":3864},{"krate":0,"index":3862},{"krate":0,"index":3861},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3851},{"krate":0,"index":3849},{"krate":0,"index":3847},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":4135},{"krate":0,"index":4155},{"krate":0,"index":4153},{"krate":0,"index":4152},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4142},{"krate":0,"index":4140},{"krate":0,"index":4138},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":4209},{"krate":0,"index":4229},{"krate":0,"index":4227},{"krate":0,"index":4226},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4216},{"krate":0,"index":4214},{"krate":0,"index":4212},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4174},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4255},{"krate":0,"index":4275},{"krate":0,"index":4273},{"krate":0,"index":4272},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4262},{"krate":0,"index":4260},{"krate":0,"index":4258},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4291},{"krate":0,"index":4311},{"krate":0,"index":4309},{"krate":0,"index":4308},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4298},{"krate":0,"index":4296},{"krate":0,"index":4294},{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4322},{"krate":0,"index":4342},{"krate":0,"index":4340},{"krate":0,"index":4339},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4329},{"krate":0,"index":4327},{"krate":0,"index":4325},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4353},{"krate":0,"index":4373},{"krate":0,"index":4371},{"krate":0,"index":4370},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4360},{"krate":0,"index":4358},{"krate":0,"index":4356},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4351},{"krate":0,"index":4382},{"krate":0,"index":4402},{"krate":0,"index":4400},{"krate":0,"index":4399},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4389},{"krate":0,"index":4387},{"krate":0,"index":4385},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4411},{"krate":0,"index":4431},{"krate":0,"index":4429},{"krate":0,"index":4428},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4418},{"krate":0,"index":4416},{"krate":0,"index":4414},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4440},{"krate":0,"index":4460},{"krate":0,"index":4458},{"krate":0,"index":4457},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4447},{"krate":0,"index":4445},{"krate":0,"index":4443},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4438},{"krate":0,"index":4510},{"krate":0,"index":4530},{"krate":0,"index":4528},{"krate":0,"index":4527},{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4520},{"krate":0,"index":4521},{"krate":0,"index":4517},{"krate":0,"index":4515},{"krate":0,"index":4513},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":44},{"krate":0,"index":4537},{"krate":0,"index":4557},{"krate":0,"index":4555},{"krate":0,"index":4554},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4544},{"krate":0,"index":4542},{"krate":0,"index":4540},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4535},{"krate":0,"index":4567},{"krate":0,"index":4587},{"krate":0,"index":4585},{"krate":0,"index":4584},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4574},{"krate":0,"index":4572},{"krate":0,"index":4570},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4565},{"krate":0,"index":4600},{"krate":0,"index":4620},{"krate":0,"index":4618},{"krate":0,"index":4617},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4607},{"krate":0,"index":4605},{"krate":0,"index":4603},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4598},{"krate":0,"index":4630},{"krate":0,"index":4650},{"krate":0,"index":4648},{"krate":0,"index":4647},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4637},{"krate":0,"index":4635},{"krate":0,"index":4633},{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4628},{"krate":0,"index":4658},{"krate":0,"index":4678},{"krate":0,"index":4676},{"krate":0,"index":4675},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4665},{"krate":0,"index":4663},{"krate":0,"index":4661},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4686},{"krate":0,"index":4706},{"krate":0,"index":4704},{"krate":0,"index":4703},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4693},{"krate":0,"index":4691},{"krate":0,"index":4689},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4719},{"krate":0,"index":4739},{"krate":0,"index":4737},{"krate":0,"index":4736},{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4726},{"krate":0,"index":4724},{"krate":0,"index":4722},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4717},{"krate":0,"index":4748},{"krate":0,"index":4768},{"krate":0,"index":4766},{"krate":0,"index":4765},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4755},{"krate":0,"index":4753},{"krate":0,"index":4751},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4746},{"krate":0,"index":4786},{"krate":0,"index":4806},{"krate":0,"index":4804},{"krate":0,"index":4803},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4793},{"krate":0,"index":4791},{"krate":0,"index":4789},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4784},{"krate":0,"index":4818},{"krate":0,"index":4838},{"krate":0,"index":4836},{"krate":0,"index":4835},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4825},{"krate":0,"index":4823},{"krate":0,"index":4821},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4816},{"krate":0,"index":4851},{"krate":0,"index":4871},{"krate":0,"index":4869},{"krate":0,"index":4868},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4858},{"krate":0,"index":4856},{"krate":0,"index":4854},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4891},{"krate":0,"index":4911},{"krate":0,"index":4909},{"krate":0,"index":4908},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4898},{"krate":0,"index":4896},{"krate":0,"index":4894},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4889},{"krate":0,"index":4925},{"krate":0,"index":4945},{"krate":0,"index":4943},{"krate":0,"index":4942},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4932},{"krate":0,"index":4930},{"krate":0,"index":4928},{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4923},{"krate":0,"index":5126},{"krate":0,"index":5146},{"krate":0,"index":5144},{"krate":0,"index":5143},{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5133},{"krate":0,"index":5131},{"krate":0,"index":5129},{"krate":0,"index":4947},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952},{"krate":0,"index":4953},{"krate":0,"index":4954},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4960},{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4963},{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5035},{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5089},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5124},{"krate":0,"index":5168},{"krate":0,"index":5188},{"krate":0,"index":5186},{"krate":0,"index":5185},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5178},{"krate":0,"index":5179},{"krate":0,"index":5175},{"krate":0,"index":5173},{"krate":0,"index":5171},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5166},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Constant definitions.","sig":null,"attributes":[{"value":"/ Constant definitions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":19927,"byte_end":19952,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":19953,"byte_end":19956,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The DWARF spec's `DW_AT_*` type is represented as `struct DwAt(u16)`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":19957,"byte_end":20030,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ `DW_FORM_*` as `DwForm(u16)`, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":20031,"byte_end":20069,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":20070,"byte_end":20073,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ There are also exported const definitions for each constant.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":20074,"byte_end":20138,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":20140,"byte_end":20173,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":20174,"byte_end":20197,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3619},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22122,"byte_end":22126,"line_start":97,"line_end":97,"column_start":1,"column_end":5},"name":"DwUt","qualname":"::constants::DwUt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The unit type field in a unit header.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3607},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22137,"byte_end":22150,"line_start":98,"line_end":98,"column_start":5,"column_end":18},"name":"DW_UT_compile","qualname":"::constants::DW_UT_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3608},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22163,"byte_end":22173,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"DW_UT_type","qualname":"::constants::DW_UT_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3609},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22186,"byte_end":22199,"line_start":100,"line_end":100,"column_start":5,"column_end":18},"name":"DW_UT_partial","qualname":"::constants::DW_UT_partial","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3610},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22212,"byte_end":22226,"line_start":101,"line_end":101,"column_start":5,"column_end":19},"name":"DW_UT_skeleton","qualname":"::constants::DW_UT_skeleton","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3611},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22239,"byte_end":22258,"line_start":102,"line_end":102,"column_start":5,"column_end":24},"name":"DW_UT_split_compile","qualname":"::constants::DW_UT_split_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3612},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22271,"byte_end":22287,"line_start":103,"line_end":103,"column_start":5,"column_end":21},"name":"DW_UT_split_type","qualname":"::constants::DW_UT_split_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3613},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22300,"byte_end":22313,"line_start":104,"line_end":104,"column_start":5,"column_end":18},"name":"DW_UT_lo_user","qualname":"::constants::DW_UT_lo_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3614},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22326,"byte_end":22339,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"DW_UT_hi_user","qualname":"::constants::DW_UT_hi_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3677},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22736,"byte_end":22741,"line_start":116,"line_end":116,"column_start":1,"column_end":6},"name":"DwCfa","qualname":"::constants::DwCfa","value":"","parent":null,"children":[],"decl_id":null,"docs":" The opcode for a call frame instruction.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3641},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22752,"byte_end":22770,"line_start":117,"line_end":117,"column_start":5,"column_end":23},"name":"DW_CFA_advance_loc","qualname":"::constants::DW_CFA_advance_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3642},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22788,"byte_end":22801,"line_start":118,"line_end":118,"column_start":5,"column_end":18},"name":"DW_CFA_offset","qualname":"::constants::DW_CFA_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3643},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22819,"byte_end":22833,"line_start":119,"line_end":119,"column_start":5,"column_end":19},"name":"DW_CFA_restore","qualname":"::constants::DW_CFA_restore","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3644},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22851,"byte_end":22861,"line_start":120,"line_end":120,"column_start":5,"column_end":15},"name":"DW_CFA_nop","qualname":"::constants::DW_CFA_nop","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3645},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22871,"byte_end":22885,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"DW_CFA_set_loc","qualname":"::constants::DW_CFA_set_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3646},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22898,"byte_end":22917,"line_start":122,"line_end":122,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc1","qualname":"::constants::DW_CFA_advance_loc1","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3647},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22930,"byte_end":22949,"line_start":123,"line_end":123,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc2","qualname":"::constants::DW_CFA_advance_loc2","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3648},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22962,"byte_end":22981,"line_start":124,"line_end":124,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc4","qualname":"::constants::DW_CFA_advance_loc4","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3649},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":22994,"byte_end":23016,"line_start":125,"line_end":125,"column_start":5,"column_end":27},"name":"DW_CFA_offset_extended","qualname":"::constants::DW_CFA_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3650},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23029,"byte_end":23052,"line_start":126,"line_end":126,"column_start":5,"column_end":28},"name":"DW_CFA_restore_extended","qualname":"::constants::DW_CFA_restore_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3651},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23065,"byte_end":23081,"line_start":127,"line_end":127,"column_start":5,"column_end":21},"name":"DW_CFA_undefined","qualname":"::constants::DW_CFA_undefined","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3652},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23094,"byte_end":23111,"line_start":128,"line_end":128,"column_start":5,"column_end":22},"name":"DW_CFA_same_value","qualname":"::constants::DW_CFA_same_value","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3653},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23124,"byte_end":23139,"line_start":129,"line_end":129,"column_start":5,"column_end":20},"name":"DW_CFA_register","qualname":"::constants::DW_CFA_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3654},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23152,"byte_end":23173,"line_start":130,"line_end":130,"column_start":5,"column_end":26},"name":"DW_CFA_remember_state","qualname":"::constants::DW_CFA_remember_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3655},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23186,"byte_end":23206,"line_start":131,"line_end":131,"column_start":5,"column_end":25},"name":"DW_CFA_restore_state","qualname":"::constants::DW_CFA_restore_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3656},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23219,"byte_end":23233,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"DW_CFA_def_cfa","qualname":"::constants::DW_CFA_def_cfa","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3657},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23246,"byte_end":23269,"line_start":133,"line_end":133,"column_start":5,"column_end":28},"name":"DW_CFA_def_cfa_register","qualname":"::constants::DW_CFA_def_cfa_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3658},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23282,"byte_end":23303,"line_start":134,"line_end":134,"column_start":5,"column_end":26},"name":"DW_CFA_def_cfa_offset","qualname":"::constants::DW_CFA_def_cfa_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3659},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23316,"byte_end":23341,"line_start":135,"line_end":135,"column_start":5,"column_end":30},"name":"DW_CFA_def_cfa_expression","qualname":"::constants::DW_CFA_def_cfa_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3660},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23354,"byte_end":23371,"line_start":136,"line_end":136,"column_start":5,"column_end":22},"name":"DW_CFA_expression","qualname":"::constants::DW_CFA_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3661},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23384,"byte_end":23409,"line_start":137,"line_end":137,"column_start":5,"column_end":30},"name":"DW_CFA_offset_extended_sf","qualname":"::constants::DW_CFA_offset_extended_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3662},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23422,"byte_end":23439,"line_start":138,"line_end":138,"column_start":5,"column_end":22},"name":"DW_CFA_def_cfa_sf","qualname":"::constants::DW_CFA_def_cfa_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3663},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23452,"byte_end":23476,"line_start":139,"line_end":139,"column_start":5,"column_end":29},"name":"DW_CFA_def_cfa_offset_sf","qualname":"::constants::DW_CFA_def_cfa_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23489,"byte_end":23506,"line_start":140,"line_end":140,"column_start":5,"column_end":22},"name":"DW_CFA_val_offset","qualname":"::constants::DW_CFA_val_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3665},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23519,"byte_end":23539,"line_start":141,"line_end":141,"column_start":5,"column_end":25},"name":"DW_CFA_val_offset_sf","qualname":"::constants::DW_CFA_val_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3666},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23552,"byte_end":23573,"line_start":142,"line_end":142,"column_start":5,"column_end":26},"name":"DW_CFA_val_expression","qualname":"::constants::DW_CFA_val_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3667},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23587,"byte_end":23601,"line_start":144,"line_end":144,"column_start":5,"column_end":19},"name":"DW_CFA_lo_user","qualname":"::constants::DW_CFA_lo_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3668},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23614,"byte_end":23628,"line_start":145,"line_end":145,"column_start":5,"column_end":19},"name":"DW_CFA_hi_user","qualname":"::constants::DW_CFA_hi_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3669},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23642,"byte_end":23666,"line_start":147,"line_end":147,"column_start":5,"column_end":29},"name":"DW_CFA_MIPS_advance_loc8","qualname":"::constants::DW_CFA_MIPS_advance_loc8","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3670},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23679,"byte_end":23701,"line_start":148,"line_end":148,"column_start":5,"column_end":27},"name":"DW_CFA_GNU_window_save","qualname":"::constants::DW_CFA_GNU_window_save","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3671},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23714,"byte_end":23734,"line_start":149,"line_end":149,"column_start":5,"column_end":25},"name":"DW_CFA_GNU_args_size","qualname":"::constants::DW_CFA_GNU_args_size","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3672},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23747,"byte_end":23782,"line_start":150,"line_end":150,"column_start":5,"column_end":40},"name":"DW_CFA_GNU_negative_offset_extended","qualname":"::constants::DW_CFA_GNU_negative_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23897,"byte_end":23907,"line_start":157,"line_end":157,"column_start":1,"column_end":11},"name":"DwChildren","qualname":"::constants::DwChildren","value":"","parent":null,"children":[],"decl_id":null,"docs":" The child determination encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3699},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23918,"byte_end":23932,"line_start":158,"line_end":158,"column_start":5,"column_end":19},"name":"DW_CHILDREN_no","qualname":"::constants::DW_CHILDREN_no","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3700},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":23942,"byte_end":23957,"line_start":159,"line_end":159,"column_start":5,"column_end":20},"name":"DW_CHILDREN_yes","qualname":"::constants::DW_CHILDREN_yes","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24053,"byte_end":24058,"line_start":166,"line_end":166,"column_start":1,"column_end":6},"name":"DwTag","qualname":"::constants::DwTag","value":"","parent":null,"children":[],"decl_id":null,"docs":" The tag encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3727},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24070,"byte_end":24081,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"DW_TAG_null","qualname":"::constants::DW_TAG_null","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24095,"byte_end":24112,"line_start":169,"line_end":169,"column_start":5,"column_end":22},"name":"DW_TAG_array_type","qualname":"::constants::DW_TAG_array_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24125,"byte_end":24142,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"DW_TAG_class_type","qualname":"::constants::DW_TAG_class_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3730},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24155,"byte_end":24173,"line_start":171,"line_end":171,"column_start":5,"column_end":23},"name":"DW_TAG_entry_point","qualname":"::constants::DW_TAG_entry_point","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3731},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24186,"byte_end":24209,"line_start":172,"line_end":172,"column_start":5,"column_end":28},"name":"DW_TAG_enumeration_type","qualname":"::constants::DW_TAG_enumeration_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3732},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24222,"byte_end":24245,"line_start":173,"line_end":173,"column_start":5,"column_end":28},"name":"DW_TAG_formal_parameter","qualname":"::constants::DW_TAG_formal_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3733},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24258,"byte_end":24285,"line_start":174,"line_end":174,"column_start":5,"column_end":32},"name":"DW_TAG_imported_declaration","qualname":"::constants::DW_TAG_imported_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3734},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24298,"byte_end":24310,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"DW_TAG_label","qualname":"::constants::DW_TAG_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3735},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24323,"byte_end":24343,"line_start":176,"line_end":176,"column_start":5,"column_end":25},"name":"DW_TAG_lexical_block","qualname":"::constants::DW_TAG_lexical_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3736},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24356,"byte_end":24369,"line_start":177,"line_end":177,"column_start":5,"column_end":18},"name":"DW_TAG_member","qualname":"::constants::DW_TAG_member","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3737},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24382,"byte_end":24401,"line_start":178,"line_end":178,"column_start":5,"column_end":24},"name":"DW_TAG_pointer_type","qualname":"::constants::DW_TAG_pointer_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3738},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24414,"byte_end":24435,"line_start":179,"line_end":179,"column_start":5,"column_end":26},"name":"DW_TAG_reference_type","qualname":"::constants::DW_TAG_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3739},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24448,"byte_end":24467,"line_start":180,"line_end":180,"column_start":5,"column_end":24},"name":"DW_TAG_compile_unit","qualname":"::constants::DW_TAG_compile_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3740},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24480,"byte_end":24498,"line_start":181,"line_end":181,"column_start":5,"column_end":23},"name":"DW_TAG_string_type","qualname":"::constants::DW_TAG_string_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3741},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24511,"byte_end":24532,"line_start":182,"line_end":182,"column_start":5,"column_end":26},"name":"DW_TAG_structure_type","qualname":"::constants::DW_TAG_structure_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3742},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24545,"byte_end":24567,"line_start":183,"line_end":183,"column_start":5,"column_end":27},"name":"DW_TAG_subroutine_type","qualname":"::constants::DW_TAG_subroutine_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3743},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24580,"byte_end":24594,"line_start":184,"line_end":184,"column_start":5,"column_end":19},"name":"DW_TAG_typedef","qualname":"::constants::DW_TAG_typedef","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3744},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24607,"byte_end":24624,"line_start":185,"line_end":185,"column_start":5,"column_end":22},"name":"DW_TAG_union_type","qualname":"::constants::DW_TAG_union_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3745},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24637,"byte_end":24666,"line_start":186,"line_end":186,"column_start":5,"column_end":34},"name":"DW_TAG_unspecified_parameters","qualname":"::constants::DW_TAG_unspecified_parameters","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3746},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24679,"byte_end":24693,"line_start":187,"line_end":187,"column_start":5,"column_end":19},"name":"DW_TAG_variant","qualname":"::constants::DW_TAG_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3747},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24706,"byte_end":24725,"line_start":188,"line_end":188,"column_start":5,"column_end":24},"name":"DW_TAG_common_block","qualname":"::constants::DW_TAG_common_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3748},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24738,"byte_end":24761,"line_start":189,"line_end":189,"column_start":5,"column_end":28},"name":"DW_TAG_common_inclusion","qualname":"::constants::DW_TAG_common_inclusion","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3749},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24774,"byte_end":24792,"line_start":190,"line_end":190,"column_start":5,"column_end":23},"name":"DW_TAG_inheritance","qualname":"::constants::DW_TAG_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3750},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24805,"byte_end":24830,"line_start":191,"line_end":191,"column_start":5,"column_end":30},"name":"DW_TAG_inlined_subroutine","qualname":"::constants::DW_TAG_inlined_subroutine","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3751},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24843,"byte_end":24856,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"DW_TAG_module","qualname":"::constants::DW_TAG_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3752},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24869,"byte_end":24894,"line_start":193,"line_end":193,"column_start":5,"column_end":30},"name":"DW_TAG_ptr_to_member_type","qualname":"::constants::DW_TAG_ptr_to_member_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3753},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24907,"byte_end":24922,"line_start":194,"line_end":194,"column_start":5,"column_end":20},"name":"DW_TAG_set_type","qualname":"::constants::DW_TAG_set_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3754},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24935,"byte_end":24955,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"DW_TAG_subrange_type","qualname":"::constants::DW_TAG_subrange_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3755},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24968,"byte_end":24984,"line_start":196,"line_end":196,"column_start":5,"column_end":21},"name":"DW_TAG_with_stmt","qualname":"::constants::DW_TAG_with_stmt","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3756},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":24997,"byte_end":25022,"line_start":197,"line_end":197,"column_start":5,"column_end":30},"name":"DW_TAG_access_declaration","qualname":"::constants::DW_TAG_access_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3757},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25035,"byte_end":25051,"line_start":198,"line_end":198,"column_start":5,"column_end":21},"name":"DW_TAG_base_type","qualname":"::constants::DW_TAG_base_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3758},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25064,"byte_end":25082,"line_start":199,"line_end":199,"column_start":5,"column_end":23},"name":"DW_TAG_catch_block","qualname":"::constants::DW_TAG_catch_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3759},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25095,"byte_end":25112,"line_start":200,"line_end":200,"column_start":5,"column_end":22},"name":"DW_TAG_const_type","qualname":"::constants::DW_TAG_const_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3760},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25125,"byte_end":25140,"line_start":201,"line_end":201,"column_start":5,"column_end":20},"name":"DW_TAG_constant","qualname":"::constants::DW_TAG_constant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3761},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25153,"byte_end":25170,"line_start":202,"line_end":202,"column_start":5,"column_end":22},"name":"DW_TAG_enumerator","qualname":"::constants::DW_TAG_enumerator","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3762},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25183,"byte_end":25199,"line_start":203,"line_end":203,"column_start":5,"column_end":21},"name":"DW_TAG_file_type","qualname":"::constants::DW_TAG_file_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3763},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25212,"byte_end":25225,"line_start":204,"line_end":204,"column_start":5,"column_end":18},"name":"DW_TAG_friend","qualname":"::constants::DW_TAG_friend","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3764},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25238,"byte_end":25253,"line_start":205,"line_end":205,"column_start":5,"column_end":20},"name":"DW_TAG_namelist","qualname":"::constants::DW_TAG_namelist","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3765},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25266,"byte_end":25286,"line_start":206,"line_end":206,"column_start":5,"column_end":25},"name":"DW_TAG_namelist_item","qualname":"::constants::DW_TAG_namelist_item","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3766},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25299,"byte_end":25317,"line_start":207,"line_end":207,"column_start":5,"column_end":23},"name":"DW_TAG_packed_type","qualname":"::constants::DW_TAG_packed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3767},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25330,"byte_end":25347,"line_start":208,"line_end":208,"column_start":5,"column_end":22},"name":"DW_TAG_subprogram","qualname":"::constants::DW_TAG_subprogram","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3768},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25360,"byte_end":25390,"line_start":209,"line_end":209,"column_start":5,"column_end":35},"name":"DW_TAG_template_type_parameter","qualname":"::constants::DW_TAG_template_type_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3769},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25403,"byte_end":25434,"line_start":210,"line_end":210,"column_start":5,"column_end":36},"name":"DW_TAG_template_value_parameter","qualname":"::constants::DW_TAG_template_value_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3770},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25447,"byte_end":25465,"line_start":211,"line_end":211,"column_start":5,"column_end":23},"name":"DW_TAG_thrown_type","qualname":"::constants::DW_TAG_thrown_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3771},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25478,"byte_end":25494,"line_start":212,"line_end":212,"column_start":5,"column_end":21},"name":"DW_TAG_try_block","qualname":"::constants::DW_TAG_try_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3772},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25507,"byte_end":25526,"line_start":213,"line_end":213,"column_start":5,"column_end":24},"name":"DW_TAG_variant_part","qualname":"::constants::DW_TAG_variant_part","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3773},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25539,"byte_end":25554,"line_start":214,"line_end":214,"column_start":5,"column_end":20},"name":"DW_TAG_variable","qualname":"::constants::DW_TAG_variable","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3774},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25567,"byte_end":25587,"line_start":215,"line_end":215,"column_start":5,"column_end":25},"name":"DW_TAG_volatile_type","qualname":"::constants::DW_TAG_volatile_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3775},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25613,"byte_end":25635,"line_start":218,"line_end":218,"column_start":5,"column_end":27},"name":"DW_TAG_dwarf_procedure","qualname":"::constants::DW_TAG_dwarf_procedure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3776},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25648,"byte_end":25668,"line_start":219,"line_end":219,"column_start":5,"column_end":25},"name":"DW_TAG_restrict_type","qualname":"::constants::DW_TAG_restrict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3777},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25681,"byte_end":25702,"line_start":220,"line_end":220,"column_start":5,"column_end":26},"name":"DW_TAG_interface_type","qualname":"::constants::DW_TAG_interface_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3778},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25715,"byte_end":25731,"line_start":221,"line_end":221,"column_start":5,"column_end":21},"name":"DW_TAG_namespace","qualname":"::constants::DW_TAG_namespace","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3779},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25744,"byte_end":25766,"line_start":222,"line_end":222,"column_start":5,"column_end":27},"name":"DW_TAG_imported_module","qualname":"::constants::DW_TAG_imported_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3780},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25779,"byte_end":25802,"line_start":223,"line_end":223,"column_start":5,"column_end":28},"name":"DW_TAG_unspecified_type","qualname":"::constants::DW_TAG_unspecified_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3781},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25815,"byte_end":25834,"line_start":224,"line_end":224,"column_start":5,"column_end":24},"name":"DW_TAG_partial_unit","qualname":"::constants::DW_TAG_partial_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3782},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25847,"byte_end":25867,"line_start":225,"line_end":225,"column_start":5,"column_end":25},"name":"DW_TAG_imported_unit","qualname":"::constants::DW_TAG_imported_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3783},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25880,"byte_end":25896,"line_start":226,"line_end":226,"column_start":5,"column_end":21},"name":"DW_TAG_condition","qualname":"::constants::DW_TAG_condition","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3784},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25909,"byte_end":25927,"line_start":227,"line_end":227,"column_start":5,"column_end":23},"name":"DW_TAG_shared_type","qualname":"::constants::DW_TAG_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3785},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25953,"byte_end":25969,"line_start":230,"line_end":230,"column_start":5,"column_end":21},"name":"DW_TAG_type_unit","qualname":"::constants::DW_TAG_type_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3786},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":25982,"byte_end":26010,"line_start":231,"line_end":231,"column_start":5,"column_end":33},"name":"DW_TAG_rvalue_reference_type","qualname":"::constants::DW_TAG_rvalue_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3787},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26023,"byte_end":26044,"line_start":232,"line_end":232,"column_start":5,"column_end":26},"name":"DW_TAG_template_alias","qualname":"::constants::DW_TAG_template_alias","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3788},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26070,"byte_end":26089,"line_start":235,"line_end":235,"column_start":5,"column_end":24},"name":"DW_TAG_coarray_type","qualname":"::constants::DW_TAG_coarray_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3789},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26102,"byte_end":26125,"line_start":236,"line_end":236,"column_start":5,"column_end":28},"name":"DW_TAG_generic_subrange","qualname":"::constants::DW_TAG_generic_subrange","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3790},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26138,"byte_end":26157,"line_start":237,"line_end":237,"column_start":5,"column_end":24},"name":"DW_TAG_dynamic_type","qualname":"::constants::DW_TAG_dynamic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3791},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26170,"byte_end":26188,"line_start":238,"line_end":238,"column_start":5,"column_end":23},"name":"DW_TAG_atomic_type","qualname":"::constants::DW_TAG_atomic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3792},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26201,"byte_end":26217,"line_start":239,"line_end":239,"column_start":5,"column_end":21},"name":"DW_TAG_call_site","qualname":"::constants::DW_TAG_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3793},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26230,"byte_end":26256,"line_start":240,"line_end":240,"column_start":5,"column_end":31},"name":"DW_TAG_call_site_parameter","qualname":"::constants::DW_TAG_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26269,"byte_end":26289,"line_start":241,"line_end":241,"column_start":5,"column_end":25},"name":"DW_TAG_skeleton_unit","qualname":"::constants::DW_TAG_skeleton_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3795},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26302,"byte_end":26323,"line_start":242,"line_end":242,"column_start":5,"column_end":26},"name":"DW_TAG_immutable_type","qualname":"::constants::DW_TAG_immutable_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3796},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26337,"byte_end":26351,"line_start":244,"line_end":244,"column_start":5,"column_end":19},"name":"DW_TAG_lo_user","qualname":"::constants::DW_TAG_lo_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3797},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26366,"byte_end":26380,"line_start":245,"line_end":245,"column_start":5,"column_end":19},"name":"DW_TAG_hi_user","qualname":"::constants::DW_TAG_hi_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3798},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26420,"byte_end":26436,"line_start":248,"line_end":248,"column_start":5,"column_end":21},"name":"DW_TAG_MIPS_loop","qualname":"::constants::DW_TAG_MIPS_loop","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3799},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26470,"byte_end":26496,"line_start":251,"line_end":251,"column_start":5,"column_end":31},"name":"DW_TAG_HP_array_descriptor","qualname":"::constants::DW_TAG_HP_array_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3800},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26511,"byte_end":26532,"line_start":252,"line_end":252,"column_start":5,"column_end":26},"name":"DW_TAG_HP_Bliss_field","qualname":"::constants::DW_TAG_HP_Bliss_field","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3801},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26547,"byte_end":26572,"line_start":253,"line_end":253,"column_start":5,"column_end":30},"name":"DW_TAG_HP_Bliss_field_set","qualname":"::constants::DW_TAG_HP_Bliss_field_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3802},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26607,"byte_end":26626,"line_start":256,"line_end":256,"column_start":5,"column_end":24},"name":"DW_TAG_format_label","qualname":"::constants::DW_TAG_format_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3803},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26641,"byte_end":26665,"line_start":257,"line_end":257,"column_start":5,"column_end":29},"name":"DW_TAG_function_template","qualname":"::constants::DW_TAG_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3804},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26680,"byte_end":26701,"line_start":258,"line_end":258,"column_start":5,"column_end":26},"name":"DW_TAG_class_template","qualname":"::constants::DW_TAG_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3805},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26716,"byte_end":26732,"line_start":259,"line_end":259,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_BINCL","qualname":"::constants::DW_TAG_GNU_BINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3806},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26747,"byte_end":26763,"line_start":260,"line_end":260,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_EINCL","qualname":"::constants::DW_TAG_GNU_EINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3807},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26778,"byte_end":26812,"line_start":261,"line_end":261,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_template_param","qualname":"::constants::DW_TAG_GNU_template_template_param","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3808},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26827,"byte_end":26861,"line_start":262,"line_end":262,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_parameter_pack","qualname":"::constants::DW_TAG_GNU_template_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3809},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26876,"byte_end":26908,"line_start":263,"line_end":263,"column_start":5,"column_end":37},"name":"DW_TAG_GNU_formal_parameter_pack","qualname":"::constants::DW_TAG_GNU_formal_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3810},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26923,"byte_end":26943,"line_start":264,"line_end":264,"column_start":5,"column_end":25},"name":"DW_TAG_GNU_call_site","qualname":"::constants::DW_TAG_GNU_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":26958,"byte_end":26988,"line_start":265,"line_end":265,"column_start":5,"column_end":35},"name":"DW_TAG_GNU_call_site_parameter","qualname":"::constants::DW_TAG_GNU_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3812},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27004,"byte_end":27025,"line_start":267,"line_end":267,"column_start":5,"column_end":26},"name":"DW_TAG_APPLE_property","qualname":"::constants::DW_TAG_APPLE_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3813},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27060,"byte_end":27088,"line_start":270,"line_end":270,"column_start":5,"column_end":33},"name":"DW_TAG_SUN_function_template","qualname":"::constants::DW_TAG_SUN_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3814},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27103,"byte_end":27128,"line_start":271,"line_end":271,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_class_template","qualname":"::constants::DW_TAG_SUN_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3815},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27143,"byte_end":27169,"line_start":272,"line_end":272,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_struct_template","qualname":"::constants::DW_TAG_SUN_struct_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3816},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27184,"byte_end":27209,"line_start":273,"line_end":273,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_union_template","qualname":"::constants::DW_TAG_SUN_union_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3817},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27224,"byte_end":27255,"line_start":274,"line_end":274,"column_start":5,"column_end":36},"name":"DW_TAG_SUN_indirect_inheritance","qualname":"::constants::DW_TAG_SUN_indirect_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3818},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27270,"byte_end":27290,"line_start":275,"line_end":275,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_codeflags","qualname":"::constants::DW_TAG_SUN_codeflags","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3819},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27305,"byte_end":27326,"line_start":276,"line_end":276,"column_start":5,"column_end":26},"name":"DW_TAG_SUN_memop_info","qualname":"::constants::DW_TAG_SUN_memop_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3820},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27341,"byte_end":27366,"line_start":277,"line_end":277,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_omp_child_func","qualname":"::constants::DW_TAG_SUN_omp_child_func","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3821},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27381,"byte_end":27407,"line_start":278,"line_end":278,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_rtti_descriptor","qualname":"::constants::DW_TAG_SUN_rtti_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3822},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27422,"byte_end":27442,"line_start":279,"line_end":279,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_dtor_info","qualname":"::constants::DW_TAG_SUN_dtor_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3823},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27457,"byte_end":27472,"line_start":280,"line_end":280,"column_start":5,"column_end":20},"name":"DW_TAG_SUN_dtor","qualname":"::constants::DW_TAG_SUN_dtor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3824},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27487,"byte_end":27511,"line_start":281,"line_end":281,"column_start":5,"column_end":29},"name":"DW_TAG_SUN_f90_interface","qualname":"::constants::DW_TAG_SUN_f90_interface","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3825},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27526,"byte_end":27558,"line_start":282,"line_end":282,"column_start":5,"column_end":37},"name":"DW_TAG_SUN_fortran_vax_structure","qualname":"::constants::DW_TAG_SUN_fortran_vax_structure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3826},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27596,"byte_end":27619,"line_start":285,"line_end":285,"column_start":5,"column_end":28},"name":"DW_TAG_ALTIUM_circ_type","qualname":"::constants::DW_TAG_ALTIUM_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3827},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27634,"byte_end":27661,"line_start":286,"line_end":286,"column_start":5,"column_end":32},"name":"DW_TAG_ALTIUM_mwa_circ_type","qualname":"::constants::DW_TAG_ALTIUM_mwa_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3828},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27676,"byte_end":27704,"line_start":287,"line_end":287,"column_start":5,"column_end":33},"name":"DW_TAG_ALTIUM_rev_carry_type","qualname":"::constants::DW_TAG_ALTIUM_rev_carry_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3829},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27719,"byte_end":27736,"line_start":288,"line_end":288,"column_start":5,"column_end":22},"name":"DW_TAG_ALTIUM_rom","qualname":"::constants::DW_TAG_ALTIUM_rom","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3830},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27775,"byte_end":27797,"line_start":291,"line_end":291,"column_start":5,"column_end":27},"name":"DW_TAG_upc_shared_type","qualname":"::constants::DW_TAG_upc_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3831},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27812,"byte_end":27834,"line_start":292,"line_end":292,"column_start":5,"column_end":27},"name":"DW_TAG_upc_strict_type","qualname":"::constants::DW_TAG_upc_strict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3832},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27849,"byte_end":27872,"line_start":293,"line_end":293,"column_start":5,"column_end":28},"name":"DW_TAG_upc_relaxed_type","qualname":"::constants::DW_TAG_upc_relaxed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3833},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27928,"byte_end":27949,"line_start":296,"line_end":296,"column_start":5,"column_end":26},"name":"DW_TAG_PGI_kanji_type","qualname":"::constants::DW_TAG_PGI_kanji_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3834},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":27964,"byte_end":27990,"line_start":297,"line_end":297,"column_start":5,"column_end":31},"name":"DW_TAG_PGI_interface_block","qualname":"::constants::DW_TAG_PGI_interface_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3835},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28029,"byte_end":28052,"line_start":300,"line_end":300,"column_start":5,"column_end":28},"name":"DW_TAG_BORLAND_property","qualname":"::constants::DW_TAG_BORLAND_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3836},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28067,"byte_end":28095,"line_start":301,"line_end":301,"column_start":5,"column_end":33},"name":"DW_TAG_BORLAND_Delphi_string","qualname":"::constants::DW_TAG_BORLAND_Delphi_string","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28110,"byte_end":28145,"line_start":302,"line_end":302,"column_start":5,"column_end":40},"name":"DW_TAG_BORLAND_Delphi_dynamic_array","qualname":"::constants::DW_TAG_BORLAND_Delphi_dynamic_array","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3838},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28160,"byte_end":28185,"line_start":303,"line_end":303,"column_start":5,"column_end":30},"name":"DW_TAG_BORLAND_Delphi_set","qualname":"::constants::DW_TAG_BORLAND_Delphi_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3839},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28200,"byte_end":28229,"line_start":304,"line_end":304,"column_start":5,"column_end":34},"name":"DW_TAG_BORLAND_Delphi_variant","qualname":"::constants::DW_TAG_BORLAND_Delphi_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4135},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28336,"byte_end":28340,"line_start":311,"line_end":311,"column_start":1,"column_end":5},"name":"DwAt","qualname":"::constants::DwAt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3866},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28352,"byte_end":28362,"line_start":312,"line_end":312,"column_start":5,"column_end":15},"name":"DW_AT_null","qualname":"::constants::DW_AT_null","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28376,"byte_end":28389,"line_start":314,"line_end":314,"column_start":5,"column_end":18},"name":"DW_AT_sibling","qualname":"::constants::DW_AT_sibling","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3868},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28402,"byte_end":28416,"line_start":315,"line_end":315,"column_start":5,"column_end":19},"name":"DW_AT_location","qualname":"::constants::DW_AT_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3869},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28429,"byte_end":28439,"line_start":316,"line_end":316,"column_start":5,"column_end":15},"name":"DW_AT_name","qualname":"::constants::DW_AT_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3870},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28452,"byte_end":28466,"line_start":317,"line_end":317,"column_start":5,"column_end":19},"name":"DW_AT_ordering","qualname":"::constants::DW_AT_ordering","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3871},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28479,"byte_end":28494,"line_start":318,"line_end":318,"column_start":5,"column_end":20},"name":"DW_AT_byte_size","qualname":"::constants::DW_AT_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28507,"byte_end":28523,"line_start":319,"line_end":319,"column_start":5,"column_end":21},"name":"DW_AT_bit_offset","qualname":"::constants::DW_AT_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3873},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28536,"byte_end":28550,"line_start":320,"line_end":320,"column_start":5,"column_end":19},"name":"DW_AT_bit_size","qualname":"::constants::DW_AT_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3874},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28563,"byte_end":28578,"line_start":321,"line_end":321,"column_start":5,"column_end":20},"name":"DW_AT_stmt_list","qualname":"::constants::DW_AT_stmt_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3875},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28591,"byte_end":28603,"line_start":322,"line_end":322,"column_start":5,"column_end":17},"name":"DW_AT_low_pc","qualname":"::constants::DW_AT_low_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28616,"byte_end":28629,"line_start":323,"line_end":323,"column_start":5,"column_end":18},"name":"DW_AT_high_pc","qualname":"::constants::DW_AT_high_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28642,"byte_end":28656,"line_start":324,"line_end":324,"column_start":5,"column_end":19},"name":"DW_AT_language","qualname":"::constants::DW_AT_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3878},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28669,"byte_end":28680,"line_start":325,"line_end":325,"column_start":5,"column_end":16},"name":"DW_AT_discr","qualname":"::constants::DW_AT_discr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3879},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28693,"byte_end":28710,"line_start":326,"line_end":326,"column_start":5,"column_end":22},"name":"DW_AT_discr_value","qualname":"::constants::DW_AT_discr_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3880},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28723,"byte_end":28739,"line_start":327,"line_end":327,"column_start":5,"column_end":21},"name":"DW_AT_visibility","qualname":"::constants::DW_AT_visibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3881},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28752,"byte_end":28764,"line_start":328,"line_end":328,"column_start":5,"column_end":17},"name":"DW_AT_import","qualname":"::constants::DW_AT_import","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3882},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28777,"byte_end":28796,"line_start":329,"line_end":329,"column_start":5,"column_end":24},"name":"DW_AT_string_length","qualname":"::constants::DW_AT_string_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3883},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28809,"byte_end":28831,"line_start":330,"line_end":330,"column_start":5,"column_end":27},"name":"DW_AT_common_reference","qualname":"::constants::DW_AT_common_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3884},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28844,"byte_end":28858,"line_start":331,"line_end":331,"column_start":5,"column_end":19},"name":"DW_AT_comp_dir","qualname":"::constants::DW_AT_comp_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3885},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28871,"byte_end":28888,"line_start":332,"line_end":332,"column_start":5,"column_end":22},"name":"DW_AT_const_value","qualname":"::constants::DW_AT_const_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3886},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28901,"byte_end":28922,"line_start":333,"line_end":333,"column_start":5,"column_end":26},"name":"DW_AT_containing_type","qualname":"::constants::DW_AT_containing_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3887},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28935,"byte_end":28954,"line_start":334,"line_end":334,"column_start":5,"column_end":24},"name":"DW_AT_default_value","qualname":"::constants::DW_AT_default_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3888},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28967,"byte_end":28979,"line_start":335,"line_end":335,"column_start":5,"column_end":17},"name":"DW_AT_inline","qualname":"::constants::DW_AT_inline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3889},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":28992,"byte_end":29009,"line_start":336,"line_end":336,"column_start":5,"column_end":22},"name":"DW_AT_is_optional","qualname":"::constants::DW_AT_is_optional","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3890},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29022,"byte_end":29039,"line_start":337,"line_end":337,"column_start":5,"column_end":22},"name":"DW_AT_lower_bound","qualname":"::constants::DW_AT_lower_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3891},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29052,"byte_end":29066,"line_start":338,"line_end":338,"column_start":5,"column_end":19},"name":"DW_AT_producer","qualname":"::constants::DW_AT_producer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3892},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29079,"byte_end":29095,"line_start":339,"line_end":339,"column_start":5,"column_end":21},"name":"DW_AT_prototyped","qualname":"::constants::DW_AT_prototyped","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3893},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29108,"byte_end":29125,"line_start":340,"line_end":340,"column_start":5,"column_end":22},"name":"DW_AT_return_addr","qualname":"::constants::DW_AT_return_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3894},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29138,"byte_end":29155,"line_start":341,"line_end":341,"column_start":5,"column_end":22},"name":"DW_AT_start_scope","qualname":"::constants::DW_AT_start_scope","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3895},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29168,"byte_end":29184,"line_start":342,"line_end":342,"column_start":5,"column_end":21},"name":"DW_AT_bit_stride","qualname":"::constants::DW_AT_bit_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3896},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29197,"byte_end":29214,"line_start":343,"line_end":343,"column_start":5,"column_end":22},"name":"DW_AT_upper_bound","qualname":"::constants::DW_AT_upper_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3897},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29227,"byte_end":29248,"line_start":344,"line_end":344,"column_start":5,"column_end":26},"name":"DW_AT_abstract_origin","qualname":"::constants::DW_AT_abstract_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3898},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29261,"byte_end":29280,"line_start":345,"line_end":345,"column_start":5,"column_end":24},"name":"DW_AT_accessibility","qualname":"::constants::DW_AT_accessibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3899},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29293,"byte_end":29312,"line_start":346,"line_end":346,"column_start":5,"column_end":24},"name":"DW_AT_address_class","qualname":"::constants::DW_AT_address_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3900},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29325,"byte_end":29341,"line_start":347,"line_end":347,"column_start":5,"column_end":21},"name":"DW_AT_artificial","qualname":"::constants::DW_AT_artificial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3901},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29354,"byte_end":29370,"line_start":348,"line_end":348,"column_start":5,"column_end":21},"name":"DW_AT_base_types","qualname":"::constants::DW_AT_base_types","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3902},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29383,"byte_end":29407,"line_start":349,"line_end":349,"column_start":5,"column_end":29},"name":"DW_AT_calling_convention","qualname":"::constants::DW_AT_calling_convention","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3903},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29420,"byte_end":29431,"line_start":350,"line_end":350,"column_start":5,"column_end":16},"name":"DW_AT_count","qualname":"::constants::DW_AT_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3904},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29444,"byte_end":29470,"line_start":351,"line_end":351,"column_start":5,"column_end":31},"name":"DW_AT_data_member_location","qualname":"::constants::DW_AT_data_member_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3905},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29483,"byte_end":29500,"line_start":352,"line_end":352,"column_start":5,"column_end":22},"name":"DW_AT_decl_column","qualname":"::constants::DW_AT_decl_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3906},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29513,"byte_end":29528,"line_start":353,"line_end":353,"column_start":5,"column_end":20},"name":"DW_AT_decl_file","qualname":"::constants::DW_AT_decl_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3907},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29541,"byte_end":29556,"line_start":354,"line_end":354,"column_start":5,"column_end":20},"name":"DW_AT_decl_line","qualname":"::constants::DW_AT_decl_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3908},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29569,"byte_end":29586,"line_start":355,"line_end":355,"column_start":5,"column_end":22},"name":"DW_AT_declaration","qualname":"::constants::DW_AT_declaration","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3909},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29599,"byte_end":29615,"line_start":356,"line_end":356,"column_start":5,"column_end":21},"name":"DW_AT_discr_list","qualname":"::constants::DW_AT_discr_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3910},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29628,"byte_end":29642,"line_start":357,"line_end":357,"column_start":5,"column_end":19},"name":"DW_AT_encoding","qualname":"::constants::DW_AT_encoding","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3911},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29655,"byte_end":29669,"line_start":358,"line_end":358,"column_start":5,"column_end":19},"name":"DW_AT_external","qualname":"::constants::DW_AT_external","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3912},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29682,"byte_end":29698,"line_start":359,"line_end":359,"column_start":5,"column_end":21},"name":"DW_AT_frame_base","qualname":"::constants::DW_AT_frame_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3913},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29711,"byte_end":29723,"line_start":360,"line_end":360,"column_start":5,"column_end":17},"name":"DW_AT_friend","qualname":"::constants::DW_AT_friend","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3914},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29736,"byte_end":29757,"line_start":361,"line_end":361,"column_start":5,"column_end":26},"name":"DW_AT_identifier_case","qualname":"::constants::DW_AT_identifier_case","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3915},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29770,"byte_end":29786,"line_start":362,"line_end":362,"column_start":5,"column_end":21},"name":"DW_AT_macro_info","qualname":"::constants::DW_AT_macro_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3916},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29799,"byte_end":29818,"line_start":363,"line_end":363,"column_start":5,"column_end":24},"name":"DW_AT_namelist_item","qualname":"::constants::DW_AT_namelist_item","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3917},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29831,"byte_end":29845,"line_start":364,"line_end":364,"column_start":5,"column_end":19},"name":"DW_AT_priority","qualname":"::constants::DW_AT_priority","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3918},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29858,"byte_end":29871,"line_start":365,"line_end":365,"column_start":5,"column_end":18},"name":"DW_AT_segment","qualname":"::constants::DW_AT_segment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3919},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29884,"byte_end":29903,"line_start":366,"line_end":366,"column_start":5,"column_end":24},"name":"DW_AT_specification","qualname":"::constants::DW_AT_specification","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3920},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29916,"byte_end":29933,"line_start":367,"line_end":367,"column_start":5,"column_end":22},"name":"DW_AT_static_link","qualname":"::constants::DW_AT_static_link","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3921},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29946,"byte_end":29956,"line_start":368,"line_end":368,"column_start":5,"column_end":15},"name":"DW_AT_type","qualname":"::constants::DW_AT_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3922},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":29969,"byte_end":29987,"line_start":369,"line_end":369,"column_start":5,"column_end":23},"name":"DW_AT_use_location","qualname":"::constants::DW_AT_use_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3923},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30000,"byte_end":30024,"line_start":370,"line_end":370,"column_start":5,"column_end":29},"name":"DW_AT_variable_parameter","qualname":"::constants::DW_AT_variable_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3924},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30037,"byte_end":30053,"line_start":371,"line_end":371,"column_start":5,"column_end":21},"name":"DW_AT_virtuality","qualname":"::constants::DW_AT_virtuality","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30066,"byte_end":30092,"line_start":372,"line_end":372,"column_start":5,"column_end":31},"name":"DW_AT_vtable_elem_location","qualname":"::constants::DW_AT_vtable_elem_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3926},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30118,"byte_end":30133,"line_start":375,"line_end":375,"column_start":5,"column_end":20},"name":"DW_AT_allocated","qualname":"::constants::DW_AT_allocated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3927},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30146,"byte_end":30162,"line_start":376,"line_end":376,"column_start":5,"column_end":21},"name":"DW_AT_associated","qualname":"::constants::DW_AT_associated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3928},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30175,"byte_end":30194,"line_start":377,"line_end":377,"column_start":5,"column_end":24},"name":"DW_AT_data_location","qualname":"::constants::DW_AT_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3929},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30207,"byte_end":30224,"line_start":378,"line_end":378,"column_start":5,"column_end":22},"name":"DW_AT_byte_stride","qualname":"::constants::DW_AT_byte_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3930},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30237,"byte_end":30251,"line_start":379,"line_end":379,"column_start":5,"column_end":19},"name":"DW_AT_entry_pc","qualname":"::constants::DW_AT_entry_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3931},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30264,"byte_end":30278,"line_start":380,"line_end":380,"column_start":5,"column_end":19},"name":"DW_AT_use_UTF8","qualname":"::constants::DW_AT_use_UTF8","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3932},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30291,"byte_end":30306,"line_start":381,"line_end":381,"column_start":5,"column_end":20},"name":"DW_AT_extension","qualname":"::constants::DW_AT_extension","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3933},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30319,"byte_end":30331,"line_start":382,"line_end":382,"column_start":5,"column_end":17},"name":"DW_AT_ranges","qualname":"::constants::DW_AT_ranges","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3934},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30344,"byte_end":30360,"line_start":383,"line_end":383,"column_start":5,"column_end":21},"name":"DW_AT_trampoline","qualname":"::constants::DW_AT_trampoline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3935},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30373,"byte_end":30390,"line_start":384,"line_end":384,"column_start":5,"column_end":22},"name":"DW_AT_call_column","qualname":"::constants::DW_AT_call_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3936},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30403,"byte_end":30418,"line_start":385,"line_end":385,"column_start":5,"column_end":20},"name":"DW_AT_call_file","qualname":"::constants::DW_AT_call_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3937},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30431,"byte_end":30446,"line_start":386,"line_end":386,"column_start":5,"column_end":20},"name":"DW_AT_call_line","qualname":"::constants::DW_AT_call_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3938},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30459,"byte_end":30476,"line_start":387,"line_end":387,"column_start":5,"column_end":22},"name":"DW_AT_description","qualname":"::constants::DW_AT_description","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3939},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30489,"byte_end":30507,"line_start":388,"line_end":388,"column_start":5,"column_end":23},"name":"DW_AT_binary_scale","qualname":"::constants::DW_AT_binary_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3940},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30520,"byte_end":30539,"line_start":389,"line_end":389,"column_start":5,"column_end":24},"name":"DW_AT_decimal_scale","qualname":"::constants::DW_AT_decimal_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3941},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30552,"byte_end":30563,"line_start":390,"line_end":390,"column_start":5,"column_end":16},"name":"DW_AT_small","qualname":"::constants::DW_AT_small","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3942},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30576,"byte_end":30594,"line_start":391,"line_end":391,"column_start":5,"column_end":23},"name":"DW_AT_decimal_sign","qualname":"::constants::DW_AT_decimal_sign","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3943},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30607,"byte_end":30624,"line_start":392,"line_end":392,"column_start":5,"column_end":22},"name":"DW_AT_digit_count","qualname":"::constants::DW_AT_digit_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3944},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30637,"byte_end":30657,"line_start":393,"line_end":393,"column_start":5,"column_end":25},"name":"DW_AT_picture_string","qualname":"::constants::DW_AT_picture_string","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3945},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30670,"byte_end":30683,"line_start":394,"line_end":394,"column_start":5,"column_end":18},"name":"DW_AT_mutable","qualname":"::constants::DW_AT_mutable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3946},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30696,"byte_end":30716,"line_start":395,"line_end":395,"column_start":5,"column_end":25},"name":"DW_AT_threads_scaled","qualname":"::constants::DW_AT_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3947},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30729,"byte_end":30743,"line_start":396,"line_end":396,"column_start":5,"column_end":19},"name":"DW_AT_explicit","qualname":"::constants::DW_AT_explicit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3948},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30756,"byte_end":30776,"line_start":397,"line_end":397,"column_start":5,"column_end":25},"name":"DW_AT_object_pointer","qualname":"::constants::DW_AT_object_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3949},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30789,"byte_end":30804,"line_start":398,"line_end":398,"column_start":5,"column_end":20},"name":"DW_AT_endianity","qualname":"::constants::DW_AT_endianity","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3950},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30817,"byte_end":30832,"line_start":399,"line_end":399,"column_start":5,"column_end":20},"name":"DW_AT_elemental","qualname":"::constants::DW_AT_elemental","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3951},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30845,"byte_end":30855,"line_start":400,"line_end":400,"column_start":5,"column_end":15},"name":"DW_AT_pure","qualname":"::constants::DW_AT_pure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3952},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30868,"byte_end":30883,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"name":"DW_AT_recursive","qualname":"::constants::DW_AT_recursive","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3953},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30909,"byte_end":30924,"line_start":404,"line_end":404,"column_start":5,"column_end":20},"name":"DW_AT_signature","qualname":"::constants::DW_AT_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3954},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30937,"byte_end":30958,"line_start":405,"line_end":405,"column_start":5,"column_end":26},"name":"DW_AT_main_subprogram","qualname":"::constants::DW_AT_main_subprogram","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3955},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":30971,"byte_end":30992,"line_start":406,"line_end":406,"column_start":5,"column_end":26},"name":"DW_AT_data_bit_offset","qualname":"::constants::DW_AT_data_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3956},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31005,"byte_end":31021,"line_start":407,"line_end":407,"column_start":5,"column_end":21},"name":"DW_AT_const_expr","qualname":"::constants::DW_AT_const_expr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3957},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31034,"byte_end":31050,"line_start":408,"line_end":408,"column_start":5,"column_end":21},"name":"DW_AT_enum_class","qualname":"::constants::DW_AT_enum_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3958},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31063,"byte_end":31081,"line_start":409,"line_end":409,"column_start":5,"column_end":23},"name":"DW_AT_linkage_name","qualname":"::constants::DW_AT_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3959},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31107,"byte_end":31135,"line_start":412,"line_end":412,"column_start":5,"column_end":33},"name":"DW_AT_string_length_bit_size","qualname":"::constants::DW_AT_string_length_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3960},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31148,"byte_end":31177,"line_start":413,"line_end":413,"column_start":5,"column_end":34},"name":"DW_AT_string_length_byte_size","qualname":"::constants::DW_AT_string_length_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3961},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31190,"byte_end":31200,"line_start":414,"line_end":414,"column_start":5,"column_end":15},"name":"DW_AT_rank","qualname":"::constants::DW_AT_rank","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3962},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31213,"byte_end":31235,"line_start":415,"line_end":415,"column_start":5,"column_end":27},"name":"DW_AT_str_offsets_base","qualname":"::constants::DW_AT_str_offsets_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3963},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31248,"byte_end":31263,"line_start":416,"line_end":416,"column_start":5,"column_end":20},"name":"DW_AT_addr_base","qualname":"::constants::DW_AT_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3964},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31276,"byte_end":31295,"line_start":417,"line_end":417,"column_start":5,"column_end":24},"name":"DW_AT_rnglists_base","qualname":"::constants::DW_AT_rnglists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3965},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31308,"byte_end":31322,"line_start":418,"line_end":418,"column_start":5,"column_end":19},"name":"DW_AT_dwo_name","qualname":"::constants::DW_AT_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3966},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31335,"byte_end":31350,"line_start":419,"line_end":419,"column_start":5,"column_end":20},"name":"DW_AT_reference","qualname":"::constants::DW_AT_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3967},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31363,"byte_end":31385,"line_start":420,"line_end":420,"column_start":5,"column_end":27},"name":"DW_AT_rvalue_reference","qualname":"::constants::DW_AT_rvalue_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3968},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31398,"byte_end":31410,"line_start":421,"line_end":421,"column_start":5,"column_end":17},"name":"DW_AT_macros","qualname":"::constants::DW_AT_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3969},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31423,"byte_end":31443,"line_start":422,"line_end":422,"column_start":5,"column_end":25},"name":"DW_AT_call_all_calls","qualname":"::constants::DW_AT_call_all_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3970},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31456,"byte_end":31483,"line_start":423,"line_end":423,"column_start":5,"column_end":32},"name":"DW_AT_call_all_source_calls","qualname":"::constants::DW_AT_call_all_source_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3971},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31496,"byte_end":31521,"line_start":424,"line_end":424,"column_start":5,"column_end":30},"name":"DW_AT_call_all_tail_calls","qualname":"::constants::DW_AT_call_all_tail_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3972},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31534,"byte_end":31554,"line_start":425,"line_end":425,"column_start":5,"column_end":25},"name":"DW_AT_call_return_pc","qualname":"::constants::DW_AT_call_return_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3973},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31567,"byte_end":31583,"line_start":426,"line_end":426,"column_start":5,"column_end":21},"name":"DW_AT_call_value","qualname":"::constants::DW_AT_call_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3974},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31596,"byte_end":31613,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"DW_AT_call_origin","qualname":"::constants::DW_AT_call_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3975},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31626,"byte_end":31646,"line_start":428,"line_end":428,"column_start":5,"column_end":25},"name":"DW_AT_call_parameter","qualname":"::constants::DW_AT_call_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3976},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31659,"byte_end":31672,"line_start":429,"line_end":429,"column_start":5,"column_end":18},"name":"DW_AT_call_pc","qualname":"::constants::DW_AT_call_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31685,"byte_end":31705,"line_start":430,"line_end":430,"column_start":5,"column_end":25},"name":"DW_AT_call_tail_call","qualname":"::constants::DW_AT_call_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31718,"byte_end":31735,"line_start":431,"line_end":431,"column_start":5,"column_end":22},"name":"DW_AT_call_target","qualname":"::constants::DW_AT_call_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3979},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31748,"byte_end":31775,"line_start":432,"line_end":432,"column_start":5,"column_end":32},"name":"DW_AT_call_target_clobbered","qualname":"::constants::DW_AT_call_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3980},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31788,"byte_end":31812,"line_start":433,"line_end":433,"column_start":5,"column_end":29},"name":"DW_AT_call_data_location","qualname":"::constants::DW_AT_call_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3981},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31825,"byte_end":31846,"line_start":434,"line_end":434,"column_start":5,"column_end":26},"name":"DW_AT_call_data_value","qualname":"::constants::DW_AT_call_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3982},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31859,"byte_end":31873,"line_start":435,"line_end":435,"column_start":5,"column_end":19},"name":"DW_AT_noreturn","qualname":"::constants::DW_AT_noreturn","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3983},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31886,"byte_end":31901,"line_start":436,"line_end":436,"column_start":5,"column_end":20},"name":"DW_AT_alignment","qualname":"::constants::DW_AT_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3984},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31914,"byte_end":31934,"line_start":437,"line_end":437,"column_start":5,"column_end":25},"name":"DW_AT_export_symbols","qualname":"::constants::DW_AT_export_symbols","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3985},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31947,"byte_end":31960,"line_start":438,"line_end":438,"column_start":5,"column_end":18},"name":"DW_AT_deleted","qualname":"::constants::DW_AT_deleted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3986},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":31973,"byte_end":31988,"line_start":439,"line_end":439,"column_start":5,"column_end":20},"name":"DW_AT_defaulted","qualname":"::constants::DW_AT_defaulted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3987},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32001,"byte_end":32020,"line_start":440,"line_end":440,"column_start":5,"column_end":24},"name":"DW_AT_loclists_base","qualname":"::constants::DW_AT_loclists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3988},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32034,"byte_end":32047,"line_start":442,"line_end":442,"column_start":5,"column_end":18},"name":"DW_AT_lo_user","qualname":"::constants::DW_AT_lo_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3989},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32062,"byte_end":32075,"line_start":443,"line_end":443,"column_start":5,"column_end":18},"name":"DW_AT_hi_user","qualname":"::constants::DW_AT_hi_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3990},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32115,"byte_end":32129,"line_start":446,"line_end":446,"column_start":5,"column_end":19},"name":"DW_AT_MIPS_fde","qualname":"::constants::DW_AT_MIPS_fde","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3991},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32144,"byte_end":32165,"line_start":447,"line_end":447,"column_start":5,"column_end":26},"name":"DW_AT_MIPS_loop_begin","qualname":"::constants::DW_AT_MIPS_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3992},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32180,"byte_end":32206,"line_start":448,"line_end":448,"column_start":5,"column_end":31},"name":"DW_AT_MIPS_tail_loop_begin","qualname":"::constants::DW_AT_MIPS_tail_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3993},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32221,"byte_end":32244,"line_start":449,"line_end":449,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_epilog_begin","qualname":"::constants::DW_AT_MIPS_epilog_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3994},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32259,"byte_end":32288,"line_start":450,"line_end":450,"column_start":5,"column_end":34},"name":"DW_AT_MIPS_loop_unroll_factor","qualname":"::constants::DW_AT_MIPS_loop_unroll_factor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3995},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32303,"byte_end":32337,"line_start":451,"line_end":451,"column_start":5,"column_end":39},"name":"DW_AT_MIPS_software_pipeline_depth","qualname":"::constants::DW_AT_MIPS_software_pipeline_depth","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3996},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32352,"byte_end":32375,"line_start":452,"line_end":452,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_linkage_name","qualname":"::constants::DW_AT_MIPS_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3997},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32390,"byte_end":32407,"line_start":453,"line_end":453,"column_start":5,"column_end":22},"name":"DW_AT_MIPS_stride","qualname":"::constants::DW_AT_MIPS_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3998},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32422,"byte_end":32446,"line_start":454,"line_end":454,"column_start":5,"column_end":29},"name":"DW_AT_MIPS_abstract_name","qualname":"::constants::DW_AT_MIPS_abstract_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3999},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32461,"byte_end":32484,"line_start":455,"line_end":455,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_clone_origin","qualname":"::constants::DW_AT_MIPS_clone_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32499,"byte_end":32521,"line_start":456,"line_end":456,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_has_inlines","qualname":"::constants::DW_AT_MIPS_has_inlines","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4001},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32536,"byte_end":32558,"line_start":457,"line_end":457,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_byte","qualname":"::constants::DW_AT_MIPS_stride_byte","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4002},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32573,"byte_end":32595,"line_start":458,"line_end":458,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_elem","qualname":"::constants::DW_AT_MIPS_stride_elem","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4003},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32610,"byte_end":32633,"line_start":459,"line_end":459,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_ptr_dopetype","qualname":"::constants::DW_AT_MIPS_ptr_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32648,"byte_end":32679,"line_start":460,"line_end":460,"column_start":5,"column_end":36},"name":"DW_AT_MIPS_allocatable_dopetype","qualname":"::constants::DW_AT_MIPS_allocatable_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4005},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32694,"byte_end":32727,"line_start":461,"line_end":461,"column_start":5,"column_end":38},"name":"DW_AT_MIPS_assumed_shape_dopetype","qualname":"::constants::DW_AT_MIPS_assumed_shape_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4006},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32858,"byte_end":32881,"line_start":465,"line_end":465,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_assumed_size","qualname":"::constants::DW_AT_MIPS_assumed_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4007},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":32970,"byte_end":32994,"line_start":470,"line_end":470,"column_start":5,"column_end":29},"name":"DW_AT_INTEL_other_endian","qualname":"::constants::DW_AT_INTEL_other_endian","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4008},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33028,"byte_end":33042,"line_start":473,"line_end":473,"column_start":5,"column_end":19},"name":"DW_AT_sf_names","qualname":"::constants::DW_AT_sf_names","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4009},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33057,"byte_end":33071,"line_start":474,"line_end":474,"column_start":5,"column_end":19},"name":"DW_AT_src_info","qualname":"::constants::DW_AT_src_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4010},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33086,"byte_end":33100,"line_start":475,"line_end":475,"column_start":5,"column_end":19},"name":"DW_AT_mac_info","qualname":"::constants::DW_AT_mac_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4011},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33115,"byte_end":33131,"line_start":476,"line_end":476,"column_start":5,"column_end":21},"name":"DW_AT_src_coords","qualname":"::constants::DW_AT_src_coords","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4012},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33146,"byte_end":33162,"line_start":477,"line_end":477,"column_start":5,"column_end":21},"name":"DW_AT_body_begin","qualname":"::constants::DW_AT_body_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4013},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33177,"byte_end":33191,"line_start":478,"line_end":478,"column_start":5,"column_end":19},"name":"DW_AT_body_end","qualname":"::constants::DW_AT_body_end","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4014},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33206,"byte_end":33222,"line_start":479,"line_end":479,"column_start":5,"column_end":21},"name":"DW_AT_GNU_vector","qualname":"::constants::DW_AT_GNU_vector","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4015},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33237,"byte_end":33257,"line_start":480,"line_end":480,"column_start":5,"column_end":25},"name":"DW_AT_GNU_guarded_by","qualname":"::constants::DW_AT_GNU_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4016},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33272,"byte_end":33295,"line_start":481,"line_end":481,"column_start":5,"column_end":28},"name":"DW_AT_GNU_pt_guarded_by","qualname":"::constants::DW_AT_GNU_pt_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4017},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33310,"byte_end":33327,"line_start":482,"line_end":482,"column_start":5,"column_end":22},"name":"DW_AT_GNU_guarded","qualname":"::constants::DW_AT_GNU_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4018},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33342,"byte_end":33362,"line_start":483,"line_end":483,"column_start":5,"column_end":25},"name":"DW_AT_GNU_pt_guarded","qualname":"::constants::DW_AT_GNU_pt_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4019},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33377,"byte_end":33401,"line_start":484,"line_end":484,"column_start":5,"column_end":29},"name":"DW_AT_GNU_locks_excluded","qualname":"::constants::DW_AT_GNU_locks_excluded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4020},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33416,"byte_end":33450,"line_start":485,"line_end":485,"column_start":5,"column_end":39},"name":"DW_AT_GNU_exclusive_locks_required","qualname":"::constants::DW_AT_GNU_exclusive_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4021},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33465,"byte_end":33496,"line_start":486,"line_end":486,"column_start":5,"column_end":36},"name":"DW_AT_GNU_shared_locks_required","qualname":"::constants::DW_AT_GNU_shared_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4022},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33511,"byte_end":33534,"line_start":487,"line_end":487,"column_start":5,"column_end":28},"name":"DW_AT_GNU_odr_signature","qualname":"::constants::DW_AT_GNU_odr_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4023},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33549,"byte_end":33572,"line_start":488,"line_end":488,"column_start":5,"column_end":28},"name":"DW_AT_GNU_template_name","qualname":"::constants::DW_AT_GNU_template_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4024},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33587,"byte_end":33612,"line_start":489,"line_end":489,"column_start":5,"column_end":30},"name":"DW_AT_GNU_call_site_value","qualname":"::constants::DW_AT_GNU_call_site_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4025},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33627,"byte_end":33657,"line_start":490,"line_end":490,"column_start":5,"column_end":35},"name":"DW_AT_GNU_call_site_data_value","qualname":"::constants::DW_AT_GNU_call_site_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4026},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33672,"byte_end":33698,"line_start":491,"line_end":491,"column_start":5,"column_end":31},"name":"DW_AT_GNU_call_site_target","qualname":"::constants::DW_AT_GNU_call_site_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4027},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33713,"byte_end":33749,"line_start":492,"line_end":492,"column_start":5,"column_end":41},"name":"DW_AT_GNU_call_site_target_clobbered","qualname":"::constants::DW_AT_GNU_call_site_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33764,"byte_end":33783,"line_start":493,"line_end":493,"column_start":5,"column_end":24},"name":"DW_AT_GNU_tail_call","qualname":"::constants::DW_AT_GNU_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4029},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33798,"byte_end":33827,"line_start":494,"line_end":494,"column_start":5,"column_end":34},"name":"DW_AT_GNU_all_tail_call_sites","qualname":"::constants::DW_AT_GNU_all_tail_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4030},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33842,"byte_end":33866,"line_start":495,"line_end":495,"column_start":5,"column_end":29},"name":"DW_AT_GNU_all_call_sites","qualname":"::constants::DW_AT_GNU_all_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4031},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33881,"byte_end":33912,"line_start":496,"line_end":496,"column_start":5,"column_end":36},"name":"DW_AT_GNU_all_source_call_sites","qualname":"::constants::DW_AT_GNU_all_source_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4032},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33927,"byte_end":33943,"line_start":497,"line_end":497,"column_start":5,"column_end":21},"name":"DW_AT_GNU_macros","qualname":"::constants::DW_AT_GNU_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4033},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":33995,"byte_end":34013,"line_start":500,"line_end":500,"column_start":5,"column_end":23},"name":"DW_AT_GNU_dwo_name","qualname":"::constants::DW_AT_GNU_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4034},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34028,"byte_end":34044,"line_start":501,"line_end":501,"column_start":5,"column_end":21},"name":"DW_AT_GNU_dwo_id","qualname":"::constants::DW_AT_GNU_dwo_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4035},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34059,"byte_end":34080,"line_start":502,"line_end":502,"column_start":5,"column_end":26},"name":"DW_AT_GNU_ranges_base","qualname":"::constants::DW_AT_GNU_ranges_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4036},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34095,"byte_end":34114,"line_start":503,"line_end":503,"column_start":5,"column_end":24},"name":"DW_AT_GNU_addr_base","qualname":"::constants::DW_AT_GNU_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4037},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34129,"byte_end":34147,"line_start":504,"line_end":504,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubnames","qualname":"::constants::DW_AT_GNU_pubnames","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4038},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34162,"byte_end":34180,"line_start":505,"line_end":505,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubtypes","qualname":"::constants::DW_AT_GNU_pubtypes","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4039},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34195,"byte_end":34218,"line_start":506,"line_end":506,"column_start":5,"column_end":28},"name":"DW_AT_GNU_discriminator","qualname":"::constants::DW_AT_GNU_discriminator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4040},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34233,"byte_end":34251,"line_start":507,"line_end":507,"column_start":5,"column_end":23},"name":"DW_AT_GNU_locviews","qualname":"::constants::DW_AT_GNU_locviews","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4041},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34266,"byte_end":34286,"line_start":508,"line_end":508,"column_start":5,"column_end":25},"name":"DW_AT_GNU_entry_view","qualname":"::constants::DW_AT_GNU_entry_view","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4042},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34385,"byte_end":34403,"line_start":514,"line_end":514,"column_start":5,"column_end":23},"name":"DW_AT_SUN_template","qualname":"::constants::DW_AT_SUN_template","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4043},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34418,"byte_end":34437,"line_start":515,"line_end":515,"column_start":5,"column_end":24},"name":"DW_AT_SUN_alignment","qualname":"::constants::DW_AT_SUN_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4044},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34452,"byte_end":34468,"line_start":516,"line_end":516,"column_start":5,"column_end":21},"name":"DW_AT_SUN_vtable","qualname":"::constants::DW_AT_SUN_vtable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4045},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34483,"byte_end":34508,"line_start":517,"line_end":517,"column_start":5,"column_end":30},"name":"DW_AT_SUN_count_guarantee","qualname":"::constants::DW_AT_SUN_count_guarantee","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4046},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34523,"byte_end":34545,"line_start":518,"line_end":518,"column_start":5,"column_end":27},"name":"DW_AT_SUN_command_line","qualname":"::constants::DW_AT_SUN_command_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4047},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34560,"byte_end":34575,"line_start":519,"line_end":519,"column_start":5,"column_end":20},"name":"DW_AT_SUN_vbase","qualname":"::constants::DW_AT_SUN_vbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4048},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34590,"byte_end":34615,"line_start":520,"line_end":520,"column_start":5,"column_end":30},"name":"DW_AT_SUN_compile_options","qualname":"::constants::DW_AT_SUN_compile_options","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4049},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34630,"byte_end":34648,"line_start":521,"line_end":521,"column_start":5,"column_end":23},"name":"DW_AT_SUN_language","qualname":"::constants::DW_AT_SUN_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4050},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34663,"byte_end":34685,"line_start":522,"line_end":522,"column_start":5,"column_end":27},"name":"DW_AT_SUN_browser_file","qualname":"::constants::DW_AT_SUN_browser_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4051},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34700,"byte_end":34720,"line_start":523,"line_end":523,"column_start":5,"column_end":25},"name":"DW_AT_SUN_vtable_abi","qualname":"::constants::DW_AT_SUN_vtable_abi","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4052},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34735,"byte_end":34757,"line_start":524,"line_end":524,"column_start":5,"column_end":27},"name":"DW_AT_SUN_func_offsets","qualname":"::constants::DW_AT_SUN_func_offsets","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4053},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34772,"byte_end":34789,"line_start":525,"line_end":525,"column_start":5,"column_end":22},"name":"DW_AT_SUN_cf_kind","qualname":"::constants::DW_AT_SUN_cf_kind","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4054},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34804,"byte_end":34826,"line_start":526,"line_end":526,"column_start":5,"column_end":27},"name":"DW_AT_SUN_vtable_index","qualname":"::constants::DW_AT_SUN_vtable_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4055},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34841,"byte_end":34865,"line_start":527,"line_end":527,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_tpriv_addr","qualname":"::constants::DW_AT_SUN_omp_tpriv_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4056},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34880,"byte_end":34904,"line_start":528,"line_end":528,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_child_func","qualname":"::constants::DW_AT_SUN_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4057},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34919,"byte_end":34940,"line_start":529,"line_end":529,"column_start":5,"column_end":26},"name":"DW_AT_SUN_func_offset","qualname":"::constants::DW_AT_SUN_func_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4058},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34955,"byte_end":34979,"line_start":530,"line_end":530,"column_start":5,"column_end":29},"name":"DW_AT_SUN_memop_type_ref","qualname":"::constants::DW_AT_SUN_memop_type_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4059},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":34994,"byte_end":35014,"line_start":531,"line_end":531,"column_start":5,"column_end":25},"name":"DW_AT_SUN_profile_id","qualname":"::constants::DW_AT_SUN_profile_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4060},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35029,"byte_end":35054,"line_start":532,"line_end":532,"column_start":5,"column_end":30},"name":"DW_AT_SUN_memop_signature","qualname":"::constants::DW_AT_SUN_memop_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4061},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35069,"byte_end":35086,"line_start":533,"line_end":533,"column_start":5,"column_end":22},"name":"DW_AT_SUN_obj_dir","qualname":"::constants::DW_AT_SUN_obj_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4062},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35101,"byte_end":35119,"line_start":534,"line_end":534,"column_start":5,"column_end":23},"name":"DW_AT_SUN_obj_file","qualname":"::constants::DW_AT_SUN_obj_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4063},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35134,"byte_end":35157,"line_start":535,"line_end":535,"column_start":5,"column_end":28},"name":"DW_AT_SUN_original_name","qualname":"::constants::DW_AT_SUN_original_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4064},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35172,"byte_end":35199,"line_start":536,"line_end":536,"column_start":5,"column_end":32},"name":"DW_AT_SUN_hwcprof_signature","qualname":"::constants::DW_AT_SUN_hwcprof_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4065},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35214,"byte_end":35238,"line_start":537,"line_end":537,"column_start":5,"column_end":29},"name":"DW_AT_SUN_amd64_parmdump","qualname":"::constants::DW_AT_SUN_amd64_parmdump","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4066},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35253,"byte_end":35277,"line_start":538,"line_end":538,"column_start":5,"column_end":29},"name":"DW_AT_SUN_part_link_name","qualname":"::constants::DW_AT_SUN_part_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4067},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35292,"byte_end":35311,"line_start":539,"line_end":539,"column_start":5,"column_end":24},"name":"DW_AT_SUN_link_name","qualname":"::constants::DW_AT_SUN_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4068},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35326,"byte_end":35351,"line_start":540,"line_end":540,"column_start":5,"column_end":30},"name":"DW_AT_SUN_pass_with_const","qualname":"::constants::DW_AT_SUN_pass_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4069},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35366,"byte_end":35393,"line_start":541,"line_end":541,"column_start":5,"column_end":32},"name":"DW_AT_SUN_return_with_const","qualname":"::constants::DW_AT_SUN_return_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4070},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35408,"byte_end":35432,"line_start":542,"line_end":542,"column_start":5,"column_end":29},"name":"DW_AT_SUN_import_by_name","qualname":"::constants::DW_AT_SUN_import_by_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4071},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35447,"byte_end":35468,"line_start":543,"line_end":543,"column_start":5,"column_end":26},"name":"DW_AT_SUN_f90_pointer","qualname":"::constants::DW_AT_SUN_f90_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4072},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35483,"byte_end":35504,"line_start":544,"line_end":544,"column_start":5,"column_end":26},"name":"DW_AT_SUN_pass_by_ref","qualname":"::constants::DW_AT_SUN_pass_by_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4073},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35519,"byte_end":35544,"line_start":545,"line_end":545,"column_start":5,"column_end":30},"name":"DW_AT_SUN_f90_allocatable","qualname":"::constants::DW_AT_SUN_f90_allocatable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4074},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35559,"byte_end":35592,"line_start":546,"line_end":546,"column_start":5,"column_end":38},"name":"DW_AT_SUN_f90_assumed_shape_array","qualname":"::constants::DW_AT_SUN_f90_assumed_shape_array","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4075},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35607,"byte_end":35622,"line_start":547,"line_end":547,"column_start":5,"column_end":20},"name":"DW_AT_SUN_c_vla","qualname":"::constants::DW_AT_SUN_c_vla","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4076},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35637,"byte_end":35663,"line_start":548,"line_end":548,"column_start":5,"column_end":31},"name":"DW_AT_SUN_return_value_ptr","qualname":"::constants::DW_AT_SUN_return_value_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4077},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35678,"byte_end":35698,"line_start":549,"line_end":549,"column_start":5,"column_end":25},"name":"DW_AT_SUN_dtor_start","qualname":"::constants::DW_AT_SUN_dtor_start","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4078},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35713,"byte_end":35734,"line_start":550,"line_end":550,"column_start":5,"column_end":26},"name":"DW_AT_SUN_dtor_length","qualname":"::constants::DW_AT_SUN_dtor_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4079},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35749,"byte_end":35777,"line_start":551,"line_end":551,"column_start":5,"column_end":33},"name":"DW_AT_SUN_dtor_state_initial","qualname":"::constants::DW_AT_SUN_dtor_state_initial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4080},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35792,"byte_end":35818,"line_start":552,"line_end":552,"column_start":5,"column_end":31},"name":"DW_AT_SUN_dtor_state_final","qualname":"::constants::DW_AT_SUN_dtor_state_final","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4081},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35833,"byte_end":35860,"line_start":553,"line_end":553,"column_start":5,"column_end":32},"name":"DW_AT_SUN_dtor_state_deltas","qualname":"::constants::DW_AT_SUN_dtor_state_deltas","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4082},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35875,"byte_end":35900,"line_start":554,"line_end":554,"column_start":5,"column_end":30},"name":"DW_AT_SUN_import_by_lname","qualname":"::constants::DW_AT_SUN_import_by_lname","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4083},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35915,"byte_end":35937,"line_start":555,"line_end":555,"column_start":5,"column_end":27},"name":"DW_AT_SUN_f90_use_only","qualname":"::constants::DW_AT_SUN_f90_use_only","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4084},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35952,"byte_end":35975,"line_start":556,"line_end":556,"column_start":5,"column_end":28},"name":"DW_AT_SUN_namelist_spec","qualname":"::constants::DW_AT_SUN_namelist_spec","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4085},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":35990,"byte_end":36017,"line_start":557,"line_end":557,"column_start":5,"column_end":32},"name":"DW_AT_SUN_is_omp_child_func","qualname":"::constants::DW_AT_SUN_is_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4086},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36032,"byte_end":36060,"line_start":558,"line_end":558,"column_start":5,"column_end":33},"name":"DW_AT_SUN_fortran_main_alias","qualname":"::constants::DW_AT_SUN_fortran_main_alias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4087},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36075,"byte_end":36098,"line_start":559,"line_end":559,"column_start":5,"column_end":28},"name":"DW_AT_SUN_fortran_based","qualname":"::constants::DW_AT_SUN_fortran_based","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4088},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36114,"byte_end":36134,"line_start":561,"line_end":561,"column_start":5,"column_end":25},"name":"DW_AT_ALTIUM_loclist","qualname":"::constants::DW_AT_ALTIUM_loclist","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4089},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36150,"byte_end":36181,"line_start":563,"line_end":563,"column_start":5,"column_end":36},"name":"DW_AT_use_GNAT_descriptive_type","qualname":"::constants::DW_AT_use_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4090},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36196,"byte_end":36223,"line_start":564,"line_end":564,"column_start":5,"column_end":32},"name":"DW_AT_GNAT_descriptive_type","qualname":"::constants::DW_AT_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4091},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36238,"byte_end":36257,"line_start":565,"line_end":565,"column_start":5,"column_end":24},"name":"DW_AT_GNU_numerator","qualname":"::constants::DW_AT_GNU_numerator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4092},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36272,"byte_end":36293,"line_start":566,"line_end":566,"column_start":5,"column_end":26},"name":"DW_AT_GNU_denominator","qualname":"::constants::DW_AT_GNU_denominator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4093},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36308,"byte_end":36322,"line_start":567,"line_end":567,"column_start":5,"column_end":19},"name":"DW_AT_GNU_bias","qualname":"::constants::DW_AT_GNU_bias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4094},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36338,"byte_end":36362,"line_start":569,"line_end":569,"column_start":5,"column_end":29},"name":"DW_AT_upc_threads_scaled","qualname":"::constants::DW_AT_upc_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4095},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36418,"byte_end":36433,"line_start":572,"line_end":572,"column_start":5,"column_end":20},"name":"DW_AT_PGI_lbase","qualname":"::constants::DW_AT_PGI_lbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4096},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36448,"byte_end":36465,"line_start":573,"line_end":573,"column_start":5,"column_end":22},"name":"DW_AT_PGI_soffset","qualname":"::constants::DW_AT_PGI_soffset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4097},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36480,"byte_end":36497,"line_start":574,"line_end":574,"column_start":5,"column_end":22},"name":"DW_AT_PGI_lstride","qualname":"::constants::DW_AT_PGI_lstride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4098},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36536,"byte_end":36563,"line_start":577,"line_end":577,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_property_read","qualname":"::constants::DW_AT_BORLAND_property_read","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4099},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36578,"byte_end":36606,"line_start":578,"line_end":578,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_write","qualname":"::constants::DW_AT_BORLAND_property_write","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4100},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36621,"byte_end":36654,"line_start":579,"line_end":579,"column_start":5,"column_end":38},"name":"DW_AT_BORLAND_property_implements","qualname":"::constants::DW_AT_BORLAND_property_implements","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36669,"byte_end":36697,"line_start":580,"line_end":580,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_index","qualname":"::constants::DW_AT_BORLAND_property_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4102},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36712,"byte_end":36742,"line_start":581,"line_end":581,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_property_default","qualname":"::constants::DW_AT_BORLAND_property_default","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4103},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36757,"byte_end":36782,"line_start":582,"line_end":582,"column_start":5,"column_end":30},"name":"DW_AT_BORLAND_Delphi_unit","qualname":"::constants::DW_AT_BORLAND_Delphi_unit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4104},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36797,"byte_end":36823,"line_start":583,"line_end":583,"column_start":5,"column_end":31},"name":"DW_AT_BORLAND_Delphi_class","qualname":"::constants::DW_AT_BORLAND_Delphi_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4105},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36838,"byte_end":36865,"line_start":584,"line_end":584,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_record","qualname":"::constants::DW_AT_BORLAND_Delphi_record","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4106},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36880,"byte_end":36910,"line_start":585,"line_end":585,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_metaclass","qualname":"::constants::DW_AT_BORLAND_Delphi_metaclass","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4107},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36925,"byte_end":36957,"line_start":586,"line_end":586,"column_start":5,"column_end":37},"name":"DW_AT_BORLAND_Delphi_constructor","qualname":"::constants::DW_AT_BORLAND_Delphi_constructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4108},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":36972,"byte_end":37003,"line_start":587,"line_end":587,"column_start":5,"column_end":36},"name":"DW_AT_BORLAND_Delphi_destructor","qualname":"::constants::DW_AT_BORLAND_Delphi_destructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4109},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37018,"byte_end":37055,"line_start":588,"line_end":588,"column_start":5,"column_end":42},"name":"DW_AT_BORLAND_Delphi_anonymous_method","qualname":"::constants::DW_AT_BORLAND_Delphi_anonymous_method","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4110},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37070,"byte_end":37100,"line_start":589,"line_end":589,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_interface","qualname":"::constants::DW_AT_BORLAND_Delphi_interface","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4111},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37115,"byte_end":37139,"line_start":590,"line_end":590,"column_start":5,"column_end":29},"name":"DW_AT_BORLAND_Delphi_ABI","qualname":"::constants::DW_AT_BORLAND_Delphi_ABI","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4112},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37154,"byte_end":37181,"line_start":591,"line_end":591,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_return","qualname":"::constants::DW_AT_BORLAND_Delphi_return","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4113},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37196,"byte_end":37225,"line_start":592,"line_end":592,"column_start":5,"column_end":34},"name":"DW_AT_BORLAND_Delphi_frameptr","qualname":"::constants::DW_AT_BORLAND_Delphi_frameptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4114},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37240,"byte_end":37261,"line_start":593,"line_end":593,"column_start":5,"column_end":26},"name":"DW_AT_BORLAND_closure","qualname":"::constants::DW_AT_BORLAND_closure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4115},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37305,"byte_end":37328,"line_start":596,"line_end":596,"column_start":5,"column_end":28},"name":"DW_AT_LLVM_include_path","qualname":"::constants::DW_AT_LLVM_include_path","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4116},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37343,"byte_end":37367,"line_start":597,"line_end":597,"column_start":5,"column_end":29},"name":"DW_AT_LLVM_config_macros","qualname":"::constants::DW_AT_LLVM_config_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4117},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37382,"byte_end":37401,"line_start":598,"line_end":598,"column_start":5,"column_end":24},"name":"DW_AT_LLVM_isysroot","qualname":"::constants::DW_AT_LLVM_isysroot","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4118},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37438,"byte_end":37459,"line_start":601,"line_end":601,"column_start":5,"column_end":26},"name":"DW_AT_APPLE_optimized","qualname":"::constants::DW_AT_APPLE_optimized","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4119},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37474,"byte_end":37491,"line_start":602,"line_end":602,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_flags","qualname":"::constants::DW_AT_APPLE_flags","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4120},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37506,"byte_end":37521,"line_start":603,"line_end":603,"column_start":5,"column_end":20},"name":"DW_AT_APPLE_isa","qualname":"::constants::DW_AT_APPLE_isa","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4121},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37536,"byte_end":37553,"line_start":604,"line_end":604,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_block","qualname":"::constants::DW_AT_APPLE_block","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4122},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37568,"byte_end":37598,"line_start":605,"line_end":605,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_major_runtime_vers","qualname":"::constants::DW_AT_APPLE_major_runtime_vers","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4123},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37613,"byte_end":37638,"line_start":606,"line_end":606,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_runtime_class","qualname":"::constants::DW_AT_APPLE_runtime_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4124},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37653,"byte_end":37679,"line_start":607,"line_end":607,"column_start":5,"column_end":31},"name":"DW_AT_APPLE_omit_frame_ptr","qualname":"::constants::DW_AT_APPLE_omit_frame_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4125},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37694,"byte_end":37719,"line_start":608,"line_end":608,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_property_name","qualname":"::constants::DW_AT_APPLE_property_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4126},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37734,"byte_end":37761,"line_start":609,"line_end":609,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_getter","qualname":"::constants::DW_AT_APPLE_property_getter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4127},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37776,"byte_end":37803,"line_start":610,"line_end":610,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_setter","qualname":"::constants::DW_AT_APPLE_property_setter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4128},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37818,"byte_end":37848,"line_start":611,"line_end":611,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_property_attribute","qualname":"::constants::DW_AT_APPLE_property_attribute","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4129},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37863,"byte_end":37893,"line_start":612,"line_end":612,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_objc_complete_type","qualname":"::constants::DW_AT_APPLE_objc_complete_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4130},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":37908,"byte_end":37928,"line_start":613,"line_end":613,"column_start":5,"column_end":25},"name":"DW_AT_APPLE_property","qualname":"::constants::DW_AT_APPLE_property","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4209},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38039,"byte_end":38045,"line_start":620,"line_end":620,"column_start":1,"column_end":7},"name":"DwForm","qualname":"::constants::DwForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute form encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4157},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38057,"byte_end":38069,"line_start":621,"line_end":621,"column_start":5,"column_end":17},"name":"DW_FORM_null","qualname":"::constants::DW_FORM_null","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4158},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38083,"byte_end":38095,"line_start":623,"line_end":623,"column_start":5,"column_end":17},"name":"DW_FORM_addr","qualname":"::constants::DW_FORM_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38108,"byte_end":38122,"line_start":624,"line_end":624,"column_start":5,"column_end":19},"name":"DW_FORM_block2","qualname":"::constants::DW_FORM_block2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38135,"byte_end":38149,"line_start":625,"line_end":625,"column_start":5,"column_end":19},"name":"DW_FORM_block4","qualname":"::constants::DW_FORM_block4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4161},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38162,"byte_end":38175,"line_start":626,"line_end":626,"column_start":5,"column_end":18},"name":"DW_FORM_data2","qualname":"::constants::DW_FORM_data2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4162},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38188,"byte_end":38201,"line_start":627,"line_end":627,"column_start":5,"column_end":18},"name":"DW_FORM_data4","qualname":"::constants::DW_FORM_data4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38214,"byte_end":38227,"line_start":628,"line_end":628,"column_start":5,"column_end":18},"name":"DW_FORM_data8","qualname":"::constants::DW_FORM_data8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4164},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38240,"byte_end":38254,"line_start":629,"line_end":629,"column_start":5,"column_end":19},"name":"DW_FORM_string","qualname":"::constants::DW_FORM_string","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4165},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38267,"byte_end":38280,"line_start":630,"line_end":630,"column_start":5,"column_end":18},"name":"DW_FORM_block","qualname":"::constants::DW_FORM_block","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4166},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38293,"byte_end":38307,"line_start":631,"line_end":631,"column_start":5,"column_end":19},"name":"DW_FORM_block1","qualname":"::constants::DW_FORM_block1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4167},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38320,"byte_end":38333,"line_start":632,"line_end":632,"column_start":5,"column_end":18},"name":"DW_FORM_data1","qualname":"::constants::DW_FORM_data1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38346,"byte_end":38358,"line_start":633,"line_end":633,"column_start":5,"column_end":17},"name":"DW_FORM_flag","qualname":"::constants::DW_FORM_flag","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4169},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38371,"byte_end":38384,"line_start":634,"line_end":634,"column_start":5,"column_end":18},"name":"DW_FORM_sdata","qualname":"::constants::DW_FORM_sdata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4170},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38397,"byte_end":38409,"line_start":635,"line_end":635,"column_start":5,"column_end":17},"name":"DW_FORM_strp","qualname":"::constants::DW_FORM_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38422,"byte_end":38435,"line_start":636,"line_end":636,"column_start":5,"column_end":18},"name":"DW_FORM_udata","qualname":"::constants::DW_FORM_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38448,"byte_end":38464,"line_start":637,"line_end":637,"column_start":5,"column_end":21},"name":"DW_FORM_ref_addr","qualname":"::constants::DW_FORM_ref_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4173},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38477,"byte_end":38489,"line_start":638,"line_end":638,"column_start":5,"column_end":17},"name":"DW_FORM_ref1","qualname":"::constants::DW_FORM_ref1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38502,"byte_end":38514,"line_start":639,"line_end":639,"column_start":5,"column_end":17},"name":"DW_FORM_ref2","qualname":"::constants::DW_FORM_ref2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4175},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38527,"byte_end":38539,"line_start":640,"line_end":640,"column_start":5,"column_end":17},"name":"DW_FORM_ref4","qualname":"::constants::DW_FORM_ref4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38552,"byte_end":38564,"line_start":641,"line_end":641,"column_start":5,"column_end":17},"name":"DW_FORM_ref8","qualname":"::constants::DW_FORM_ref8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38577,"byte_end":38594,"line_start":642,"line_end":642,"column_start":5,"column_end":22},"name":"DW_FORM_ref_udata","qualname":"::constants::DW_FORM_ref_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38607,"byte_end":38623,"line_start":643,"line_end":643,"column_start":5,"column_end":21},"name":"DW_FORM_indirect","qualname":"::constants::DW_FORM_indirect","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4179},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38649,"byte_end":38667,"line_start":646,"line_end":646,"column_start":5,"column_end":23},"name":"DW_FORM_sec_offset","qualname":"::constants::DW_FORM_sec_offset","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4180},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38680,"byte_end":38695,"line_start":647,"line_end":647,"column_start":5,"column_end":20},"name":"DW_FORM_exprloc","qualname":"::constants::DW_FORM_exprloc","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4181},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38708,"byte_end":38728,"line_start":648,"line_end":648,"column_start":5,"column_end":25},"name":"DW_FORM_flag_present","qualname":"::constants::DW_FORM_flag_present","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4182},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38741,"byte_end":38757,"line_start":649,"line_end":649,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sig8","qualname":"::constants::DW_FORM_ref_sig8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4183},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38783,"byte_end":38795,"line_start":652,"line_end":652,"column_start":5,"column_end":17},"name":"DW_FORM_strx","qualname":"::constants::DW_FORM_strx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4184},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38808,"byte_end":38821,"line_start":653,"line_end":653,"column_start":5,"column_end":18},"name":"DW_FORM_addrx","qualname":"::constants::DW_FORM_addrx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38834,"byte_end":38850,"line_start":654,"line_end":654,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup4","qualname":"::constants::DW_FORM_ref_sup4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4186},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38863,"byte_end":38879,"line_start":655,"line_end":655,"column_start":5,"column_end":21},"name":"DW_FORM_strp_sup","qualname":"::constants::DW_FORM_strp_sup","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4187},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38892,"byte_end":38906,"line_start":656,"line_end":656,"column_start":5,"column_end":19},"name":"DW_FORM_data16","qualname":"::constants::DW_FORM_data16","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38919,"byte_end":38936,"line_start":657,"line_end":657,"column_start":5,"column_end":22},"name":"DW_FORM_line_strp","qualname":"::constants::DW_FORM_line_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4189},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38949,"byte_end":38971,"line_start":658,"line_end":658,"column_start":5,"column_end":27},"name":"DW_FORM_implicit_const","qualname":"::constants::DW_FORM_implicit_const","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":38984,"byte_end":39000,"line_start":659,"line_end":659,"column_start":5,"column_end":21},"name":"DW_FORM_loclistx","qualname":"::constants::DW_FORM_loclistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39013,"byte_end":39029,"line_start":660,"line_end":660,"column_start":5,"column_end":21},"name":"DW_FORM_rnglistx","qualname":"::constants::DW_FORM_rnglistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4192},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39042,"byte_end":39058,"line_start":661,"line_end":661,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup8","qualname":"::constants::DW_FORM_ref_sup8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39071,"byte_end":39084,"line_start":662,"line_end":662,"column_start":5,"column_end":18},"name":"DW_FORM_strx1","qualname":"::constants::DW_FORM_strx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39097,"byte_end":39110,"line_start":663,"line_end":663,"column_start":5,"column_end":18},"name":"DW_FORM_strx2","qualname":"::constants::DW_FORM_strx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39123,"byte_end":39136,"line_start":664,"line_end":664,"column_start":5,"column_end":18},"name":"DW_FORM_strx3","qualname":"::constants::DW_FORM_strx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4196},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39149,"byte_end":39162,"line_start":665,"line_end":665,"column_start":5,"column_end":18},"name":"DW_FORM_strx4","qualname":"::constants::DW_FORM_strx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4197},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39175,"byte_end":39189,"line_start":666,"line_end":666,"column_start":5,"column_end":19},"name":"DW_FORM_addrx1","qualname":"::constants::DW_FORM_addrx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4198},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39202,"byte_end":39216,"line_start":667,"line_end":667,"column_start":5,"column_end":19},"name":"DW_FORM_addrx2","qualname":"::constants::DW_FORM_addrx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4199},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39229,"byte_end":39243,"line_start":668,"line_end":668,"column_start":5,"column_end":19},"name":"DW_FORM_addrx3","qualname":"::constants::DW_FORM_addrx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4200},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39256,"byte_end":39270,"line_start":669,"line_end":669,"column_start":5,"column_end":19},"name":"DW_FORM_addrx4","qualname":"::constants::DW_FORM_addrx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4201},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39319,"byte_end":39341,"line_start":672,"line_end":672,"column_start":5,"column_end":27},"name":"DW_FORM_GNU_addr_index","qualname":"::constants::DW_FORM_GNU_addr_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4202},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39356,"byte_end":39377,"line_start":673,"line_end":673,"column_start":5,"column_end":26},"name":"DW_FORM_GNU_str_index","qualname":"::constants::DW_FORM_GNU_str_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4203},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39454,"byte_end":39473,"line_start":676,"line_end":676,"column_start":5,"column_end":24},"name":"DW_FORM_GNU_ref_alt","qualname":"::constants::DW_FORM_GNU_ref_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4204},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39488,"byte_end":39508,"line_start":677,"line_end":677,"column_start":5,"column_end":25},"name":"DW_FORM_GNU_strp_alt","qualname":"::constants::DW_FORM_GNU_strp_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4255},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39640,"byte_end":39645,"line_start":684,"line_end":684,"column_start":1,"column_end":6},"name":"DwAte","qualname":"::constants::DwAte","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_encoding` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4231},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39656,"byte_end":39670,"line_start":685,"line_end":685,"column_start":5,"column_end":19},"name":"DW_ATE_address","qualname":"::constants::DW_ATE_address","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4232},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39683,"byte_end":39697,"line_start":686,"line_end":686,"column_start":5,"column_end":19},"name":"DW_ATE_boolean","qualname":"::constants::DW_ATE_boolean","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4233},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39710,"byte_end":39730,"line_start":687,"line_end":687,"column_start":5,"column_end":25},"name":"DW_ATE_complex_float","qualname":"::constants::DW_ATE_complex_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4234},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39743,"byte_end":39755,"line_start":688,"line_end":688,"column_start":5,"column_end":17},"name":"DW_ATE_float","qualname":"::constants::DW_ATE_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4235},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39768,"byte_end":39781,"line_start":689,"line_end":689,"column_start":5,"column_end":18},"name":"DW_ATE_signed","qualname":"::constants::DW_ATE_signed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4236},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39794,"byte_end":39812,"line_start":690,"line_end":690,"column_start":5,"column_end":23},"name":"DW_ATE_signed_char","qualname":"::constants::DW_ATE_signed_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4237},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39825,"byte_end":39840,"line_start":691,"line_end":691,"column_start":5,"column_end":20},"name":"DW_ATE_unsigned","qualname":"::constants::DW_ATE_unsigned","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4238},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39853,"byte_end":39873,"line_start":692,"line_end":692,"column_start":5,"column_end":25},"name":"DW_ATE_unsigned_char","qualname":"::constants::DW_ATE_unsigned_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4239},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39899,"byte_end":39921,"line_start":695,"line_end":695,"column_start":5,"column_end":27},"name":"DW_ATE_imaginary_float","qualname":"::constants::DW_ATE_imaginary_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4240},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39934,"byte_end":39955,"line_start":696,"line_end":696,"column_start":5,"column_end":26},"name":"DW_ATE_packed_decimal","qualname":"::constants::DW_ATE_packed_decimal","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4241},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":39968,"byte_end":39989,"line_start":697,"line_end":697,"column_start":5,"column_end":26},"name":"DW_ATE_numeric_string","qualname":"::constants::DW_ATE_numeric_string","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4242},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40002,"byte_end":40015,"line_start":698,"line_end":698,"column_start":5,"column_end":18},"name":"DW_ATE_edited","qualname":"::constants::DW_ATE_edited","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4243},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40028,"byte_end":40047,"line_start":699,"line_end":699,"column_start":5,"column_end":24},"name":"DW_ATE_signed_fixed","qualname":"::constants::DW_ATE_signed_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4244},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40060,"byte_end":40081,"line_start":700,"line_end":700,"column_start":5,"column_end":26},"name":"DW_ATE_unsigned_fixed","qualname":"::constants::DW_ATE_unsigned_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40094,"byte_end":40114,"line_start":701,"line_end":701,"column_start":5,"column_end":25},"name":"DW_ATE_decimal_float","qualname":"::constants::DW_ATE_decimal_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4246},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40141,"byte_end":40151,"line_start":704,"line_end":704,"column_start":5,"column_end":15},"name":"DW_ATE_UTF","qualname":"::constants::DW_ATE_UTF","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4247},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40164,"byte_end":40174,"line_start":705,"line_end":705,"column_start":5,"column_end":15},"name":"DW_ATE_UCS","qualname":"::constants::DW_ATE_UCS","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4248},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40187,"byte_end":40199,"line_start":706,"line_end":706,"column_start":5,"column_end":17},"name":"DW_ATE_ASCII","qualname":"::constants::DW_ATE_ASCII","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4249},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40213,"byte_end":40227,"line_start":708,"line_end":708,"column_start":5,"column_end":19},"name":"DW_ATE_lo_user","qualname":"::constants::DW_ATE_lo_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4250},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40240,"byte_end":40254,"line_start":709,"line_end":709,"column_start":5,"column_end":19},"name":"DW_ATE_hi_user","qualname":"::constants::DW_ATE_hi_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4291},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40378,"byte_end":40383,"line_start":716,"line_end":716,"column_start":1,"column_end":6},"name":"DwLle","qualname":"::constants::DwLle","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in location list entries.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4277},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40394,"byte_end":40412,"line_start":717,"line_end":717,"column_start":5,"column_end":23},"name":"DW_LLE_end_of_list","qualname":"::constants::DW_LLE_end_of_list","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4278},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40425,"byte_end":40445,"line_start":718,"line_end":718,"column_start":5,"column_end":25},"name":"DW_LLE_base_addressx","qualname":"::constants::DW_LLE_base_addressx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4279},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40458,"byte_end":40476,"line_start":719,"line_end":719,"column_start":5,"column_end":23},"name":"DW_LLE_startx_endx","qualname":"::constants::DW_LLE_startx_endx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4280},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40489,"byte_end":40509,"line_start":720,"line_end":720,"column_start":5,"column_end":25},"name":"DW_LLE_startx_length","qualname":"::constants::DW_LLE_startx_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4281},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40522,"byte_end":40540,"line_start":721,"line_end":721,"column_start":5,"column_end":23},"name":"DW_LLE_offset_pair","qualname":"::constants::DW_LLE_offset_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4282},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40553,"byte_end":40576,"line_start":722,"line_end":722,"column_start":5,"column_end":28},"name":"DW_LLE_default_location","qualname":"::constants::DW_LLE_default_location","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4283},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40589,"byte_end":40608,"line_start":723,"line_end":723,"column_start":5,"column_end":24},"name":"DW_LLE_base_address","qualname":"::constants::DW_LLE_base_address","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4284},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40621,"byte_end":40637,"line_start":724,"line_end":724,"column_start":5,"column_end":21},"name":"DW_LLE_start_end","qualname":"::constants::DW_LLE_start_end","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4285},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40650,"byte_end":40669,"line_start":725,"line_end":725,"column_start":5,"column_end":24},"name":"DW_LLE_start_length","qualname":"::constants::DW_LLE_start_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4286},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40682,"byte_end":40702,"line_start":726,"line_end":726,"column_start":5,"column_end":25},"name":"DW_LLE_GNU_view_pair","qualname":"::constants::DW_LLE_GNU_view_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4322},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40837,"byte_end":40841,"line_start":733,"line_end":733,"column_start":1,"column_end":5},"name":"DwDs","qualname":"::constants::DwDs","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_decimal_sign` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4313},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40852,"byte_end":40866,"line_start":734,"line_end":734,"column_start":5,"column_end":19},"name":"DW_DS_unsigned","qualname":"::constants::DW_DS_unsigned","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4314},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40879,"byte_end":40902,"line_start":735,"line_end":735,"column_start":5,"column_end":28},"name":"DW_DS_leading_overpunch","qualname":"::constants::DW_DS_leading_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4315},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40915,"byte_end":40939,"line_start":736,"line_end":736,"column_start":5,"column_end":29},"name":"DW_DS_trailing_overpunch","qualname":"::constants::DW_DS_trailing_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4316},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40952,"byte_end":40974,"line_start":737,"line_end":737,"column_start":5,"column_end":27},"name":"DW_DS_leading_separate","qualname":"::constants::DW_DS_leading_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4317},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":40987,"byte_end":41010,"line_start":738,"line_end":738,"column_start":5,"column_end":28},"name":"DW_DS_trailing_separate","qualname":"::constants::DW_DS_trailing_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4353},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41142,"byte_end":41147,"line_start":745,"line_end":745,"column_start":1,"column_end":6},"name":"DwEnd","qualname":"::constants::DwEnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_endianity` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4344},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41158,"byte_end":41172,"line_start":746,"line_end":746,"column_start":5,"column_end":19},"name":"DW_END_default","qualname":"::constants::DW_END_default","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4345},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41185,"byte_end":41195,"line_start":747,"line_end":747,"column_start":5,"column_end":15},"name":"DW_END_big","qualname":"::constants::DW_END_big","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4346},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41208,"byte_end":41221,"line_start":748,"line_end":748,"column_start":5,"column_end":18},"name":"DW_END_little","qualname":"::constants::DW_END_little","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4347},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41234,"byte_end":41248,"line_start":749,"line_end":749,"column_start":5,"column_end":19},"name":"DW_END_lo_user","qualname":"::constants::DW_END_lo_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41261,"byte_end":41275,"line_start":750,"line_end":750,"column_start":5,"column_end":19},"name":"DW_END_hi_user","qualname":"::constants::DW_END_hi_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4382},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41411,"byte_end":41419,"line_start":757,"line_end":757,"column_start":1,"column_end":9},"name":"DwAccess","qualname":"::constants::DwAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_accessibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4375},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41430,"byte_end":41446,"line_start":758,"line_end":758,"column_start":5,"column_end":21},"name":"DW_ACCESS_public","qualname":"::constants::DW_ACCESS_public","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4376},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41459,"byte_end":41478,"line_start":759,"line_end":759,"column_start":5,"column_end":24},"name":"DW_ACCESS_protected","qualname":"::constants::DW_ACCESS_protected","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4377},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41491,"byte_end":41508,"line_start":760,"line_end":760,"column_start":5,"column_end":22},"name":"DW_ACCESS_private","qualname":"::constants::DW_ACCESS_private","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4411},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41642,"byte_end":41647,"line_start":767,"line_end":767,"column_start":1,"column_end":6},"name":"DwVis","qualname":"::constants::DwVis","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_visibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4404},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41658,"byte_end":41670,"line_start":768,"line_end":768,"column_start":5,"column_end":17},"name":"DW_VIS_local","qualname":"::constants::DW_VIS_local","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4405},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41683,"byte_end":41698,"line_start":769,"line_end":769,"column_start":5,"column_end":20},"name":"DW_VIS_exported","qualname":"::constants::DW_VIS_exported","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4406},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41711,"byte_end":41727,"line_start":770,"line_end":770,"column_start":5,"column_end":21},"name":"DW_VIS_qualified","qualname":"::constants::DW_VIS_qualified","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4440},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41861,"byte_end":41873,"line_start":777,"line_end":777,"column_start":1,"column_end":13},"name":"DwVirtuality","qualname":"::constants::DwVirtuality","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_virtuality` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4433},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41884,"byte_end":41902,"line_start":778,"line_end":778,"column_start":5,"column_end":23},"name":"DW_VIRTUALITY_none","qualname":"::constants::DW_VIRTUALITY_none","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4434},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41915,"byte_end":41936,"line_start":779,"line_end":779,"column_start":5,"column_end":26},"name":"DW_VIRTUALITY_virtual","qualname":"::constants::DW_VIRTUALITY_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4435},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":41949,"byte_end":41975,"line_start":780,"line_end":780,"column_start":5,"column_end":31},"name":"DW_VIRTUALITY_pure_virtual","qualname":"::constants::DW_VIRTUALITY_pure_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4510},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42107,"byte_end":42113,"line_start":787,"line_end":787,"column_start":1,"column_end":7},"name":"DwLang","qualname":"::constants::DwLang","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_language` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4462},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42125,"byte_end":42136,"line_start":788,"line_end":788,"column_start":5,"column_end":16},"name":"DW_LANG_C89","qualname":"::constants::DW_LANG_C89","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4463},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42151,"byte_end":42160,"line_start":789,"line_end":789,"column_start":5,"column_end":14},"name":"DW_LANG_C","qualname":"::constants::DW_LANG_C","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42175,"byte_end":42188,"line_start":790,"line_end":790,"column_start":5,"column_end":18},"name":"DW_LANG_Ada83","qualname":"::constants::DW_LANG_Ada83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42203,"byte_end":42222,"line_start":791,"line_end":791,"column_start":5,"column_end":24},"name":"DW_LANG_C_plus_plus","qualname":"::constants::DW_LANG_C_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4466},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42237,"byte_end":42252,"line_start":792,"line_end":792,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol74","qualname":"::constants::DW_LANG_Cobol74","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4467},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42267,"byte_end":42282,"line_start":793,"line_end":793,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol85","qualname":"::constants::DW_LANG_Cobol85","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42297,"byte_end":42314,"line_start":794,"line_end":794,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran77","qualname":"::constants::DW_LANG_Fortran77","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4469},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42329,"byte_end":42346,"line_start":795,"line_end":795,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran90","qualname":"::constants::DW_LANG_Fortran90","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4470},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42361,"byte_end":42377,"line_start":796,"line_end":796,"column_start":5,"column_end":21},"name":"DW_LANG_Pascal83","qualname":"::constants::DW_LANG_Pascal83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4471},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42392,"byte_end":42407,"line_start":797,"line_end":797,"column_start":5,"column_end":20},"name":"DW_LANG_Modula2","qualname":"::constants::DW_LANG_Modula2","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4472},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42422,"byte_end":42434,"line_start":798,"line_end":798,"column_start":5,"column_end":17},"name":"DW_LANG_Java","qualname":"::constants::DW_LANG_Java","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42449,"byte_end":42460,"line_start":799,"line_end":799,"column_start":5,"column_end":16},"name":"DW_LANG_C99","qualname":"::constants::DW_LANG_C99","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42475,"byte_end":42488,"line_start":800,"line_end":800,"column_start":5,"column_end":18},"name":"DW_LANG_Ada95","qualname":"::constants::DW_LANG_Ada95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4475},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42503,"byte_end":42520,"line_start":801,"line_end":801,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran95","qualname":"::constants::DW_LANG_Fortran95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4476},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42535,"byte_end":42546,"line_start":802,"line_end":802,"column_start":5,"column_end":16},"name":"DW_LANG_PLI","qualname":"::constants::DW_LANG_PLI","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42561,"byte_end":42573,"line_start":803,"line_end":803,"column_start":5,"column_end":17},"name":"DW_LANG_ObjC","qualname":"::constants::DW_LANG_ObjC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4478},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42588,"byte_end":42610,"line_start":804,"line_end":804,"column_start":5,"column_end":27},"name":"DW_LANG_ObjC_plus_plus","qualname":"::constants::DW_LANG_ObjC_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4479},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42625,"byte_end":42636,"line_start":805,"line_end":805,"column_start":5,"column_end":16},"name":"DW_LANG_UPC","qualname":"::constants::DW_LANG_UPC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4480},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42651,"byte_end":42660,"line_start":806,"line_end":806,"column_start":5,"column_end":14},"name":"DW_LANG_D","qualname":"::constants::DW_LANG_D","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4481},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42675,"byte_end":42689,"line_start":807,"line_end":807,"column_start":5,"column_end":19},"name":"DW_LANG_Python","qualname":"::constants::DW_LANG_Python","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4482},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42704,"byte_end":42718,"line_start":808,"line_end":808,"column_start":5,"column_end":19},"name":"DW_LANG_OpenCL","qualname":"::constants::DW_LANG_OpenCL","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4483},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42733,"byte_end":42743,"line_start":809,"line_end":809,"column_start":5,"column_end":15},"name":"DW_LANG_Go","qualname":"::constants::DW_LANG_Go","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42758,"byte_end":42773,"line_start":810,"line_end":810,"column_start":5,"column_end":20},"name":"DW_LANG_Modula3","qualname":"::constants::DW_LANG_Modula3","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42788,"byte_end":42803,"line_start":811,"line_end":811,"column_start":5,"column_end":20},"name":"DW_LANG_Haskell","qualname":"::constants::DW_LANG_Haskell","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4486},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42818,"byte_end":42840,"line_start":812,"line_end":812,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_03","qualname":"::constants::DW_LANG_C_plus_plus_03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4487},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42855,"byte_end":42877,"line_start":813,"line_end":813,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_11","qualname":"::constants::DW_LANG_C_plus_plus_11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42892,"byte_end":42905,"line_start":814,"line_end":814,"column_start":5,"column_end":18},"name":"DW_LANG_OCaml","qualname":"::constants::DW_LANG_OCaml","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42920,"byte_end":42932,"line_start":815,"line_end":815,"column_start":5,"column_end":17},"name":"DW_LANG_Rust","qualname":"::constants::DW_LANG_Rust","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4490},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42947,"byte_end":42958,"line_start":816,"line_end":816,"column_start":5,"column_end":16},"name":"DW_LANG_C11","qualname":"::constants::DW_LANG_C11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":42973,"byte_end":42986,"line_start":817,"line_end":817,"column_start":5,"column_end":18},"name":"DW_LANG_Swift","qualname":"::constants::DW_LANG_Swift","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4492},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43001,"byte_end":43014,"line_start":818,"line_end":818,"column_start":5,"column_end":18},"name":"DW_LANG_Julia","qualname":"::constants::DW_LANG_Julia","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4493},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43029,"byte_end":43042,"line_start":819,"line_end":819,"column_start":5,"column_end":18},"name":"DW_LANG_Dylan","qualname":"::constants::DW_LANG_Dylan","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43057,"byte_end":43079,"line_start":820,"line_end":820,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_14","qualname":"::constants::DW_LANG_C_plus_plus_14","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43094,"byte_end":43111,"line_start":821,"line_end":821,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran03","qualname":"::constants::DW_LANG_Fortran03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43126,"byte_end":43143,"line_start":822,"line_end":822,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran08","qualname":"::constants::DW_LANG_Fortran08","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43158,"byte_end":43178,"line_start":823,"line_end":823,"column_start":5,"column_end":25},"name":"DW_LANG_RenderScript","qualname":"::constants::DW_LANG_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43193,"byte_end":43206,"line_start":824,"line_end":824,"column_start":5,"column_end":18},"name":"DW_LANG_BLISS","qualname":"::constants::DW_LANG_BLISS","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43222,"byte_end":43237,"line_start":826,"line_end":826,"column_start":5,"column_end":20},"name":"DW_LANG_lo_user","qualname":"::constants::DW_LANG_lo_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4500},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43252,"byte_end":43267,"line_start":827,"line_end":827,"column_start":5,"column_end":20},"name":"DW_LANG_hi_user","qualname":"::constants::DW_LANG_hi_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43283,"byte_end":43305,"line_start":829,"line_end":829,"column_start":5,"column_end":27},"name":"DW_LANG_Mips_Assembler","qualname":"::constants::DW_LANG_Mips_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43320,"byte_end":43347,"line_start":830,"line_end":830,"column_start":5,"column_end":32},"name":"DW_LANG_GOOGLE_RenderScript","qualname":"::constants::DW_LANG_GOOGLE_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4503},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43362,"byte_end":43383,"line_start":831,"line_end":831,"column_start":5,"column_end":26},"name":"DW_LANG_SUN_Assembler","qualname":"::constants::DW_LANG_SUN_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43398,"byte_end":43422,"line_start":832,"line_end":832,"column_start":5,"column_end":29},"name":"DW_LANG_ALTIUM_Assembler","qualname":"::constants::DW_LANG_ALTIUM_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43437,"byte_end":43459,"line_start":833,"line_end":833,"column_start":5,"column_end":27},"name":"DW_LANG_BORLAND_Delphi","qualname":"::constants::DW_LANG_BORLAND_Delphi","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43561,"byte_end":43580,"line_start":838,"line_end":838,"column_start":12,"column_end":31},"name":"default_lower_bound","qualname":"<DwLang>::default_lower_bound","value":"pub fn default_lower_bound(Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the default DW_AT_lower_bound for this language.\n","sig":null,"attributes":[{"value":"/ Get the default DW_AT_lower_bound for this language.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43493,"byte_end":43549,"line_start":837,"line_end":837,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":44848,"byte_end":44854,"line_start":877,"line_end":877,"column_start":1,"column_end":7},"name":"DwAddr","qualname":"::constants::DwAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_address_class` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":44866,"byte_end":44878,"line_start":878,"line_end":878,"column_start":5,"column_end":17},"name":"DW_ADDR_none","qualname":"::constants::DW_ADDR_none","value":"DwAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4567},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45017,"byte_end":45021,"line_start":885,"line_end":885,"column_start":1,"column_end":5},"name":"DwId","qualname":"::constants::DwId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_identifier_case` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4559},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45032,"byte_end":45052,"line_start":886,"line_end":886,"column_start":5,"column_end":25},"name":"DW_ID_case_sensitive","qualname":"::constants::DW_ID_case_sensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4560},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45065,"byte_end":45078,"line_start":887,"line_end":887,"column_start":5,"column_end":18},"name":"DW_ID_up_case","qualname":"::constants::DW_ID_up_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4561},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45091,"byte_end":45106,"line_start":888,"line_end":888,"column_start":5,"column_end":20},"name":"DW_ID_down_case","qualname":"::constants::DW_ID_down_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4562},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45119,"byte_end":45141,"line_start":889,"line_end":889,"column_start":5,"column_end":27},"name":"DW_ID_case_insensitive","qualname":"::constants::DW_ID_case_insensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4600},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45283,"byte_end":45287,"line_start":896,"line_end":896,"column_start":1,"column_end":5},"name":"DwCc","qualname":"::constants::DwCc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_calling_convention` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4589},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45298,"byte_end":45310,"line_start":897,"line_end":897,"column_start":5,"column_end":17},"name":"DW_CC_normal","qualname":"::constants::DW_CC_normal","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4590},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45323,"byte_end":45336,"line_start":898,"line_end":898,"column_start":5,"column_end":18},"name":"DW_CC_program","qualname":"::constants::DW_CC_program","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4591},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45349,"byte_end":45361,"line_start":899,"line_end":899,"column_start":5,"column_end":17},"name":"DW_CC_nocall","qualname":"::constants::DW_CC_nocall","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4592},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45374,"byte_end":45397,"line_start":900,"line_end":900,"column_start":5,"column_end":28},"name":"DW_CC_pass_by_reference","qualname":"::constants::DW_CC_pass_by_reference","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4593},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45410,"byte_end":45429,"line_start":901,"line_end":901,"column_start":5,"column_end":24},"name":"DW_CC_pass_by_value","qualname":"::constants::DW_CC_pass_by_value","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4594},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45442,"byte_end":45455,"line_start":902,"line_end":902,"column_start":5,"column_end":18},"name":"DW_CC_lo_user","qualname":"::constants::DW_CC_lo_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4595},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45468,"byte_end":45481,"line_start":903,"line_end":903,"column_start":5,"column_end":18},"name":"DW_CC_hi_user","qualname":"::constants::DW_CC_hi_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4630},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45611,"byte_end":45616,"line_start":910,"line_end":910,"column_start":1,"column_end":6},"name":"DwInl","qualname":"::constants::DwInl","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_inline` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4622},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45627,"byte_end":45645,"line_start":911,"line_end":911,"column_start":5,"column_end":23},"name":"DW_INL_not_inlined","qualname":"::constants::DW_INL_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4623},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45658,"byte_end":45672,"line_start":912,"line_end":912,"column_start":5,"column_end":19},"name":"DW_INL_inlined","qualname":"::constants::DW_INL_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4624},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45685,"byte_end":45712,"line_start":913,"line_end":913,"column_start":5,"column_end":32},"name":"DW_INL_declared_not_inlined","qualname":"::constants::DW_INL_declared_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4625},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45725,"byte_end":45748,"line_start":914,"line_end":914,"column_start":5,"column_end":28},"name":"DW_INL_declared_inlined","qualname":"::constants::DW_INL_declared_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4658},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45880,"byte_end":45885,"line_start":921,"line_end":921,"column_start":1,"column_end":6},"name":"DwOrd","qualname":"::constants::DwOrd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_ordering` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4652},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45896,"byte_end":45912,"line_start":922,"line_end":922,"column_start":5,"column_end":21},"name":"DW_ORD_row_major","qualname":"::constants::DW_ORD_row_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4653},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":45925,"byte_end":45941,"line_start":923,"line_end":923,"column_start":5,"column_end":21},"name":"DW_ORD_col_major","qualname":"::constants::DW_ORD_col_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4686},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46075,"byte_end":46080,"line_start":930,"line_end":930,"column_start":1,"column_end":6},"name":"DwDsc","qualname":"::constants::DwDsc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_discr_list` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4680},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46091,"byte_end":46103,"line_start":931,"line_end":931,"column_start":5,"column_end":17},"name":"DW_DSC_label","qualname":"::constants::DW_DSC_label","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4681},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46116,"byte_end":46128,"line_start":932,"line_end":932,"column_start":5,"column_end":17},"name":"DW_DSC_range","qualname":"::constants::DW_DSC_range","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4719},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46221,"byte_end":46226,"line_start":939,"line_end":939,"column_start":1,"column_end":6},"name":"DwIdx","qualname":"::constants::DwIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" Name index attribute encodings.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4708},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46238,"byte_end":46257,"line_start":940,"line_end":940,"column_start":5,"column_end":24},"name":"DW_IDX_compile_unit","qualname":"::constants::DW_IDX_compile_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4709},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46267,"byte_end":46283,"line_start":941,"line_end":941,"column_start":5,"column_end":21},"name":"DW_IDX_type_unit","qualname":"::constants::DW_IDX_type_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4710},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46293,"byte_end":46310,"line_start":942,"line_end":942,"column_start":5,"column_end":22},"name":"DW_IDX_die_offset","qualname":"::constants::DW_IDX_die_offset","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4711},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46320,"byte_end":46333,"line_start":943,"line_end":943,"column_start":5,"column_end":18},"name":"DW_IDX_parent","qualname":"::constants::DW_IDX_parent","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4712},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46343,"byte_end":46359,"line_start":944,"line_end":944,"column_start":5,"column_end":21},"name":"DW_IDX_type_hash","qualname":"::constants::DW_IDX_type_hash","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4713},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46369,"byte_end":46383,"line_start":945,"line_end":945,"column_start":5,"column_end":19},"name":"DW_IDX_lo_user","qualname":"::constants::DW_IDX_lo_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4714},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46398,"byte_end":46412,"line_start":946,"line_end":946,"column_start":5,"column_end":19},"name":"DW_IDX_hi_user","qualname":"::constants::DW_IDX_hi_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4748},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46547,"byte_end":46558,"line_start":953,"line_end":953,"column_start":1,"column_end":12},"name":"DwDefaulted","qualname":"::constants::DwDefaulted","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_defaulted` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4741},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46569,"byte_end":46584,"line_start":954,"line_end":954,"column_start":5,"column_end":20},"name":"DW_DEFAULTED_no","qualname":"::constants::DW_DEFAULTED_no","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4742},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46597,"byte_end":46618,"line_start":955,"line_end":955,"column_start":5,"column_end":26},"name":"DW_DEFAULTED_in_class","qualname":"::constants::DW_DEFAULTED_in_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4743},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46631,"byte_end":46656,"line_start":956,"line_end":956,"column_start":5,"column_end":30},"name":"DW_DEFAULTED_out_of_class","qualname":"::constants::DW_DEFAULTED_out_of_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4786},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46785,"byte_end":46790,"line_start":963,"line_end":963,"column_start":1,"column_end":6},"name":"DwLns","qualname":"::constants::DwLns","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the standard opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4770},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46801,"byte_end":46812,"line_start":964,"line_end":964,"column_start":5,"column_end":16},"name":"DW_LNS_copy","qualname":"::constants::DW_LNS_copy","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4771},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46825,"byte_end":46842,"line_start":965,"line_end":965,"column_start":5,"column_end":22},"name":"DW_LNS_advance_pc","qualname":"::constants::DW_LNS_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4772},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46855,"byte_end":46874,"line_start":966,"line_end":966,"column_start":5,"column_end":24},"name":"DW_LNS_advance_line","qualname":"::constants::DW_LNS_advance_line","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4773},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46887,"byte_end":46902,"line_start":967,"line_end":967,"column_start":5,"column_end":20},"name":"DW_LNS_set_file","qualname":"::constants::DW_LNS_set_file","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4774},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46915,"byte_end":46932,"line_start":968,"line_end":968,"column_start":5,"column_end":22},"name":"DW_LNS_set_column","qualname":"::constants::DW_LNS_set_column","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4775},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46945,"byte_end":46963,"line_start":969,"line_end":969,"column_start":5,"column_end":23},"name":"DW_LNS_negate_stmt","qualname":"::constants::DW_LNS_negate_stmt","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4776},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":46976,"byte_end":46998,"line_start":970,"line_end":970,"column_start":5,"column_end":27},"name":"DW_LNS_set_basic_block","qualname":"::constants::DW_LNS_set_basic_block","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4777},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47011,"byte_end":47030,"line_start":971,"line_end":971,"column_start":5,"column_end":24},"name":"DW_LNS_const_add_pc","qualname":"::constants::DW_LNS_const_add_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4778},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47043,"byte_end":47066,"line_start":972,"line_end":972,"column_start":5,"column_end":28},"name":"DW_LNS_fixed_advance_pc","qualname":"::constants::DW_LNS_fixed_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4779},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47079,"byte_end":47102,"line_start":973,"line_end":973,"column_start":5,"column_end":28},"name":"DW_LNS_set_prologue_end","qualname":"::constants::DW_LNS_set_prologue_end","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4780},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47115,"byte_end":47140,"line_start":974,"line_end":974,"column_start":5,"column_end":30},"name":"DW_LNS_set_epilogue_begin","qualname":"::constants::DW_LNS_set_epilogue_begin","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4781},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47153,"byte_end":47167,"line_start":975,"line_end":975,"column_start":5,"column_end":19},"name":"DW_LNS_set_isa","qualname":"::constants::DW_LNS_set_isa","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4818},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47296,"byte_end":47301,"line_start":982,"line_end":982,"column_start":1,"column_end":6},"name":"DwLne","qualname":"::constants::DwLne","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the extended opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4808},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47312,"byte_end":47331,"line_start":983,"line_end":983,"column_start":5,"column_end":24},"name":"DW_LNE_end_sequence","qualname":"::constants::DW_LNE_end_sequence","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4809},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47344,"byte_end":47362,"line_start":984,"line_end":984,"column_start":5,"column_end":23},"name":"DW_LNE_set_address","qualname":"::constants::DW_LNE_set_address","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4810},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47375,"byte_end":47393,"line_start":985,"line_end":985,"column_start":5,"column_end":23},"name":"DW_LNE_define_file","qualname":"::constants::DW_LNE_define_file","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47406,"byte_end":47430,"line_start":986,"line_end":986,"column_start":5,"column_end":29},"name":"DW_LNE_set_discriminator","qualname":"::constants::DW_LNE_set_discriminator","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4812},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47444,"byte_end":47458,"line_start":988,"line_end":988,"column_start":5,"column_end":19},"name":"DW_LNE_lo_user","qualname":"::constants::DW_LNE_lo_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4813},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47471,"byte_end":47485,"line_start":989,"line_end":989,"column_start":5,"column_end":19},"name":"DW_LNE_hi_user","qualname":"::constants::DW_LNE_hi_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4851},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47602,"byte_end":47608,"line_start":996,"line_end":996,"column_start":1,"column_end":7},"name":"DwLnct","qualname":"::constants::DwLnct","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the line number header entry formats.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4840},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47620,"byte_end":47632,"line_start":997,"line_end":997,"column_start":5,"column_end":17},"name":"DW_LNCT_path","qualname":"::constants::DW_LNCT_path","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4841},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47644,"byte_end":47667,"line_start":998,"line_end":998,"column_start":5,"column_end":28},"name":"DW_LNCT_directory_index","qualname":"::constants::DW_LNCT_directory_index","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4842},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47679,"byte_end":47696,"line_start":999,"line_end":999,"column_start":5,"column_end":22},"name":"DW_LNCT_timestamp","qualname":"::constants::DW_LNCT_timestamp","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4843},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47708,"byte_end":47720,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17},"name":"DW_LNCT_size","qualname":"::constants::DW_LNCT_size","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47732,"byte_end":47743,"line_start":1001,"line_end":1001,"column_start":5,"column_end":16},"name":"DW_LNCT_MD5","qualname":"::constants::DW_LNCT_MD5","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4845},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47755,"byte_end":47770,"line_start":1002,"line_end":1002,"column_start":5,"column_end":20},"name":"DW_LNCT_lo_user","qualname":"::constants::DW_LNCT_lo_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4846},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47785,"byte_end":47800,"line_start":1003,"line_end":1003,"column_start":5,"column_end":20},"name":"DW_LNCT_hi_user","qualname":"::constants::DW_LNCT_hi_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4891},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47912,"byte_end":47919,"line_start":1010,"line_end":1010,"column_start":1,"column_end":8},"name":"DwMacro","qualname":"::constants::DwMacro","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for macro information entry types.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4873},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47930,"byte_end":47945,"line_start":1011,"line_end":1011,"column_start":5,"column_end":20},"name":"DW_MACRO_define","qualname":"::constants::DW_MACRO_define","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4874},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47958,"byte_end":47972,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19},"name":"DW_MACRO_undef","qualname":"::constants::DW_MACRO_undef","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4875},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":47985,"byte_end":48004,"line_start":1013,"line_end":1013,"column_start":5,"column_end":24},"name":"DW_MACRO_start_file","qualname":"::constants::DW_MACRO_start_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48017,"byte_end":48034,"line_start":1014,"line_end":1014,"column_start":5,"column_end":22},"name":"DW_MACRO_end_file","qualname":"::constants::DW_MACRO_end_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48047,"byte_end":48067,"line_start":1015,"line_end":1015,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strp","qualname":"::constants::DW_MACRO_define_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4878},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48080,"byte_end":48099,"line_start":1016,"line_end":1016,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strp","qualname":"::constants::DW_MACRO_undef_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4879},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48112,"byte_end":48127,"line_start":1017,"line_end":1017,"column_start":5,"column_end":20},"name":"DW_MACRO_import","qualname":"::constants::DW_MACRO_import","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4880},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48140,"byte_end":48159,"line_start":1018,"line_end":1018,"column_start":5,"column_end":24},"name":"DW_MACRO_define_sup","qualname":"::constants::DW_MACRO_define_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4881},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48172,"byte_end":48190,"line_start":1019,"line_end":1019,"column_start":5,"column_end":23},"name":"DW_MACRO_undef_sup","qualname":"::constants::DW_MACRO_undef_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4882},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48203,"byte_end":48222,"line_start":1020,"line_end":1020,"column_start":5,"column_end":24},"name":"DW_MACRO_import_sup","qualname":"::constants::DW_MACRO_import_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4883},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48235,"byte_end":48255,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strx","qualname":"::constants::DW_MACRO_define_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4884},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48268,"byte_end":48287,"line_start":1022,"line_end":1022,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strx","qualname":"::constants::DW_MACRO_undef_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4885},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48300,"byte_end":48316,"line_start":1023,"line_end":1023,"column_start":5,"column_end":21},"name":"DW_MACRO_lo_user","qualname":"::constants::DW_MACRO_lo_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4886},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48329,"byte_end":48345,"line_start":1024,"line_end":1024,"column_start":5,"column_end":21},"name":"DW_MACRO_hi_user","qualname":"::constants::DW_MACRO_hi_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48440,"byte_end":48445,"line_start":1031,"line_end":1031,"column_start":1,"column_end":6},"name":"DwRle","qualname":"::constants::DwRle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Range list entry encoding values.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4913},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48456,"byte_end":48474,"line_start":1032,"line_end":1032,"column_start":5,"column_end":23},"name":"DW_RLE_end_of_list","qualname":"::constants::DW_RLE_end_of_list","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4914},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48487,"byte_end":48507,"line_start":1033,"line_end":1033,"column_start":5,"column_end":25},"name":"DW_RLE_base_addressx","qualname":"::constants::DW_RLE_base_addressx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4915},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48520,"byte_end":48538,"line_start":1034,"line_end":1034,"column_start":5,"column_end":23},"name":"DW_RLE_startx_endx","qualname":"::constants::DW_RLE_startx_endx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4916},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48551,"byte_end":48571,"line_start":1035,"line_end":1035,"column_start":5,"column_end":25},"name":"DW_RLE_startx_length","qualname":"::constants::DW_RLE_startx_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4917},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48584,"byte_end":48602,"line_start":1036,"line_end":1036,"column_start":5,"column_end":23},"name":"DW_RLE_offset_pair","qualname":"::constants::DW_RLE_offset_pair","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4918},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48615,"byte_end":48634,"line_start":1037,"line_end":1037,"column_start":5,"column_end":24},"name":"DW_RLE_base_address","qualname":"::constants::DW_RLE_base_address","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4919},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48647,"byte_end":48663,"line_start":1038,"line_end":1038,"column_start":5,"column_end":21},"name":"DW_RLE_start_end","qualname":"::constants::DW_RLE_start_end","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4920},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48676,"byte_end":48695,"line_start":1039,"line_end":1039,"column_start":5,"column_end":24},"name":"DW_RLE_start_length","qualname":"::constants::DW_RLE_start_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5126},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48803,"byte_end":48807,"line_start":1046,"line_end":1046,"column_start":1,"column_end":5},"name":"DwOp","qualname":"::constants::DwOp","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for DWARF expression operations.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4947},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48818,"byte_end":48828,"line_start":1047,"line_end":1047,"column_start":5,"column_end":15},"name":"DW_OP_addr","qualname":"::constants::DW_OP_addr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4948},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48841,"byte_end":48852,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"DW_OP_deref","qualname":"::constants::DW_OP_deref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4949},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48865,"byte_end":48878,"line_start":1049,"line_end":1049,"column_start":5,"column_end":18},"name":"DW_OP_const1u","qualname":"::constants::DW_OP_const1u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4950},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48891,"byte_end":48904,"line_start":1050,"line_end":1050,"column_start":5,"column_end":18},"name":"DW_OP_const1s","qualname":"::constants::DW_OP_const1s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4951},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48917,"byte_end":48930,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18},"name":"DW_OP_const2u","qualname":"::constants::DW_OP_const2u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4952},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48943,"byte_end":48956,"line_start":1052,"line_end":1052,"column_start":5,"column_end":18},"name":"DW_OP_const2s","qualname":"::constants::DW_OP_const2s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4953},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48969,"byte_end":48982,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18},"name":"DW_OP_const4u","qualname":"::constants::DW_OP_const4u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4954},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":48995,"byte_end":49008,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18},"name":"DW_OP_const4s","qualname":"::constants::DW_OP_const4s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4955},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49021,"byte_end":49034,"line_start":1055,"line_end":1055,"column_start":5,"column_end":18},"name":"DW_OP_const8u","qualname":"::constants::DW_OP_const8u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4956},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49047,"byte_end":49060,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18},"name":"DW_OP_const8s","qualname":"::constants::DW_OP_const8s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4957},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49073,"byte_end":49085,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17},"name":"DW_OP_constu","qualname":"::constants::DW_OP_constu","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4958},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49098,"byte_end":49110,"line_start":1058,"line_end":1058,"column_start":5,"column_end":17},"name":"DW_OP_consts","qualname":"::constants::DW_OP_consts","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4959},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49123,"byte_end":49132,"line_start":1059,"line_end":1059,"column_start":5,"column_end":14},"name":"DW_OP_dup","qualname":"::constants::DW_OP_dup","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4960},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49145,"byte_end":49155,"line_start":1060,"line_end":1060,"column_start":5,"column_end":15},"name":"DW_OP_drop","qualname":"::constants::DW_OP_drop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4961},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49168,"byte_end":49178,"line_start":1061,"line_end":1061,"column_start":5,"column_end":15},"name":"DW_OP_over","qualname":"::constants::DW_OP_over","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4962},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49191,"byte_end":49201,"line_start":1062,"line_end":1062,"column_start":5,"column_end":15},"name":"DW_OP_pick","qualname":"::constants::DW_OP_pick","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4963},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49214,"byte_end":49224,"line_start":1063,"line_end":1063,"column_start":5,"column_end":15},"name":"DW_OP_swap","qualname":"::constants::DW_OP_swap","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4964},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49237,"byte_end":49246,"line_start":1064,"line_end":1064,"column_start":5,"column_end":14},"name":"DW_OP_rot","qualname":"::constants::DW_OP_rot","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4965},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49259,"byte_end":49271,"line_start":1065,"line_end":1065,"column_start":5,"column_end":17},"name":"DW_OP_xderef","qualname":"::constants::DW_OP_xderef","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4966},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49284,"byte_end":49293,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14},"name":"DW_OP_abs","qualname":"::constants::DW_OP_abs","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4967},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49306,"byte_end":49315,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14},"name":"DW_OP_and","qualname":"::constants::DW_OP_and","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4968},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49328,"byte_end":49337,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14},"name":"DW_OP_div","qualname":"::constants::DW_OP_div","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4969},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49350,"byte_end":49361,"line_start":1069,"line_end":1069,"column_start":5,"column_end":16},"name":"DW_OP_minus","qualname":"::constants::DW_OP_minus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4970},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49374,"byte_end":49383,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14},"name":"DW_OP_mod","qualname":"::constants::DW_OP_mod","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4971},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49396,"byte_end":49405,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14},"name":"DW_OP_mul","qualname":"::constants::DW_OP_mul","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4972},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49418,"byte_end":49427,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14},"name":"DW_OP_neg","qualname":"::constants::DW_OP_neg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4973},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49440,"byte_end":49449,"line_start":1073,"line_end":1073,"column_start":5,"column_end":14},"name":"DW_OP_not","qualname":"::constants::DW_OP_not","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4974},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49462,"byte_end":49470,"line_start":1074,"line_end":1074,"column_start":5,"column_end":13},"name":"DW_OP_or","qualname":"::constants::DW_OP_or","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4975},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49483,"byte_end":49493,"line_start":1075,"line_end":1075,"column_start":5,"column_end":15},"name":"DW_OP_plus","qualname":"::constants::DW_OP_plus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4976},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49506,"byte_end":49523,"line_start":1076,"line_end":1076,"column_start":5,"column_end":22},"name":"DW_OP_plus_uconst","qualname":"::constants::DW_OP_plus_uconst","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49536,"byte_end":49545,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14},"name":"DW_OP_shl","qualname":"::constants::DW_OP_shl","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49558,"byte_end":49567,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14},"name":"DW_OP_shr","qualname":"::constants::DW_OP_shr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4979},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49580,"byte_end":49590,"line_start":1079,"line_end":1079,"column_start":5,"column_end":15},"name":"DW_OP_shra","qualname":"::constants::DW_OP_shra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4980},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49603,"byte_end":49612,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14},"name":"DW_OP_xor","qualname":"::constants::DW_OP_xor","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4981},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49625,"byte_end":49634,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14},"name":"DW_OP_bra","qualname":"::constants::DW_OP_bra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4982},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49647,"byte_end":49655,"line_start":1082,"line_end":1082,"column_start":5,"column_end":13},"name":"DW_OP_eq","qualname":"::constants::DW_OP_eq","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4983},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49668,"byte_end":49676,"line_start":1083,"line_end":1083,"column_start":5,"column_end":13},"name":"DW_OP_ge","qualname":"::constants::DW_OP_ge","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4984},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49689,"byte_end":49697,"line_start":1084,"line_end":1084,"column_start":5,"column_end":13},"name":"DW_OP_gt","qualname":"::constants::DW_OP_gt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4985},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49710,"byte_end":49718,"line_start":1085,"line_end":1085,"column_start":5,"column_end":13},"name":"DW_OP_le","qualname":"::constants::DW_OP_le","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4986},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49731,"byte_end":49739,"line_start":1086,"line_end":1086,"column_start":5,"column_end":13},"name":"DW_OP_lt","qualname":"::constants::DW_OP_lt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4987},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49752,"byte_end":49760,"line_start":1087,"line_end":1087,"column_start":5,"column_end":13},"name":"DW_OP_ne","qualname":"::constants::DW_OP_ne","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4988},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49773,"byte_end":49783,"line_start":1088,"line_end":1088,"column_start":5,"column_end":15},"name":"DW_OP_skip","qualname":"::constants::DW_OP_skip","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4989},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49796,"byte_end":49806,"line_start":1089,"line_end":1089,"column_start":5,"column_end":15},"name":"DW_OP_lit0","qualname":"::constants::DW_OP_lit0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4990},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49819,"byte_end":49829,"line_start":1090,"line_end":1090,"column_start":5,"column_end":15},"name":"DW_OP_lit1","qualname":"::constants::DW_OP_lit1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4991},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49842,"byte_end":49852,"line_start":1091,"line_end":1091,"column_start":5,"column_end":15},"name":"DW_OP_lit2","qualname":"::constants::DW_OP_lit2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4992},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49865,"byte_end":49875,"line_start":1092,"line_end":1092,"column_start":5,"column_end":15},"name":"DW_OP_lit3","qualname":"::constants::DW_OP_lit3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4993},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49888,"byte_end":49898,"line_start":1093,"line_end":1093,"column_start":5,"column_end":15},"name":"DW_OP_lit4","qualname":"::constants::DW_OP_lit4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4994},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49911,"byte_end":49921,"line_start":1094,"line_end":1094,"column_start":5,"column_end":15},"name":"DW_OP_lit5","qualname":"::constants::DW_OP_lit5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4995},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49934,"byte_end":49944,"line_start":1095,"line_end":1095,"column_start":5,"column_end":15},"name":"DW_OP_lit6","qualname":"::constants::DW_OP_lit6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4996},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49957,"byte_end":49967,"line_start":1096,"line_end":1096,"column_start":5,"column_end":15},"name":"DW_OP_lit7","qualname":"::constants::DW_OP_lit7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4997},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":49980,"byte_end":49990,"line_start":1097,"line_end":1097,"column_start":5,"column_end":15},"name":"DW_OP_lit8","qualname":"::constants::DW_OP_lit8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4998},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50003,"byte_end":50013,"line_start":1098,"line_end":1098,"column_start":5,"column_end":15},"name":"DW_OP_lit9","qualname":"::constants::DW_OP_lit9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4999},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50026,"byte_end":50037,"line_start":1099,"line_end":1099,"column_start":5,"column_end":16},"name":"DW_OP_lit10","qualname":"::constants::DW_OP_lit10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50050,"byte_end":50061,"line_start":1100,"line_end":1100,"column_start":5,"column_end":16},"name":"DW_OP_lit11","qualname":"::constants::DW_OP_lit11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5001},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50074,"byte_end":50085,"line_start":1101,"line_end":1101,"column_start":5,"column_end":16},"name":"DW_OP_lit12","qualname":"::constants::DW_OP_lit12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5002},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50098,"byte_end":50109,"line_start":1102,"line_end":1102,"column_start":5,"column_end":16},"name":"DW_OP_lit13","qualname":"::constants::DW_OP_lit13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5003},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50122,"byte_end":50133,"line_start":1103,"line_end":1103,"column_start":5,"column_end":16},"name":"DW_OP_lit14","qualname":"::constants::DW_OP_lit14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50146,"byte_end":50157,"line_start":1104,"line_end":1104,"column_start":5,"column_end":16},"name":"DW_OP_lit15","qualname":"::constants::DW_OP_lit15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5005},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50170,"byte_end":50181,"line_start":1105,"line_end":1105,"column_start":5,"column_end":16},"name":"DW_OP_lit16","qualname":"::constants::DW_OP_lit16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5006},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50194,"byte_end":50205,"line_start":1106,"line_end":1106,"column_start":5,"column_end":16},"name":"DW_OP_lit17","qualname":"::constants::DW_OP_lit17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5007},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50218,"byte_end":50229,"line_start":1107,"line_end":1107,"column_start":5,"column_end":16},"name":"DW_OP_lit18","qualname":"::constants::DW_OP_lit18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5008},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50242,"byte_end":50253,"line_start":1108,"line_end":1108,"column_start":5,"column_end":16},"name":"DW_OP_lit19","qualname":"::constants::DW_OP_lit19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5009},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50266,"byte_end":50277,"line_start":1109,"line_end":1109,"column_start":5,"column_end":16},"name":"DW_OP_lit20","qualname":"::constants::DW_OP_lit20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5010},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50290,"byte_end":50301,"line_start":1110,"line_end":1110,"column_start":5,"column_end":16},"name":"DW_OP_lit21","qualname":"::constants::DW_OP_lit21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5011},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50314,"byte_end":50325,"line_start":1111,"line_end":1111,"column_start":5,"column_end":16},"name":"DW_OP_lit22","qualname":"::constants::DW_OP_lit22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5012},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50338,"byte_end":50349,"line_start":1112,"line_end":1112,"column_start":5,"column_end":16},"name":"DW_OP_lit23","qualname":"::constants::DW_OP_lit23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5013},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50362,"byte_end":50373,"line_start":1113,"line_end":1113,"column_start":5,"column_end":16},"name":"DW_OP_lit24","qualname":"::constants::DW_OP_lit24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5014},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50386,"byte_end":50397,"line_start":1114,"line_end":1114,"column_start":5,"column_end":16},"name":"DW_OP_lit25","qualname":"::constants::DW_OP_lit25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5015},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50410,"byte_end":50421,"line_start":1115,"line_end":1115,"column_start":5,"column_end":16},"name":"DW_OP_lit26","qualname":"::constants::DW_OP_lit26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5016},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50434,"byte_end":50445,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16},"name":"DW_OP_lit27","qualname":"::constants::DW_OP_lit27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5017},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50458,"byte_end":50469,"line_start":1117,"line_end":1117,"column_start":5,"column_end":16},"name":"DW_OP_lit28","qualname":"::constants::DW_OP_lit28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5018},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50482,"byte_end":50493,"line_start":1118,"line_end":1118,"column_start":5,"column_end":16},"name":"DW_OP_lit29","qualname":"::constants::DW_OP_lit29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5019},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50506,"byte_end":50517,"line_start":1119,"line_end":1119,"column_start":5,"column_end":16},"name":"DW_OP_lit30","qualname":"::constants::DW_OP_lit30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5020},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50530,"byte_end":50541,"line_start":1120,"line_end":1120,"column_start":5,"column_end":16},"name":"DW_OP_lit31","qualname":"::constants::DW_OP_lit31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5021},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50554,"byte_end":50564,"line_start":1121,"line_end":1121,"column_start":5,"column_end":15},"name":"DW_OP_reg0","qualname":"::constants::DW_OP_reg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5022},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50577,"byte_end":50587,"line_start":1122,"line_end":1122,"column_start":5,"column_end":15},"name":"DW_OP_reg1","qualname":"::constants::DW_OP_reg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5023},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50600,"byte_end":50610,"line_start":1123,"line_end":1123,"column_start":5,"column_end":15},"name":"DW_OP_reg2","qualname":"::constants::DW_OP_reg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5024},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50623,"byte_end":50633,"line_start":1124,"line_end":1124,"column_start":5,"column_end":15},"name":"DW_OP_reg3","qualname":"::constants::DW_OP_reg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5025},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50646,"byte_end":50656,"line_start":1125,"line_end":1125,"column_start":5,"column_end":15},"name":"DW_OP_reg4","qualname":"::constants::DW_OP_reg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5026},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50669,"byte_end":50679,"line_start":1126,"line_end":1126,"column_start":5,"column_end":15},"name":"DW_OP_reg5","qualname":"::constants::DW_OP_reg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5027},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50692,"byte_end":50702,"line_start":1127,"line_end":1127,"column_start":5,"column_end":15},"name":"DW_OP_reg6","qualname":"::constants::DW_OP_reg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50715,"byte_end":50725,"line_start":1128,"line_end":1128,"column_start":5,"column_end":15},"name":"DW_OP_reg7","qualname":"::constants::DW_OP_reg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5029},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50738,"byte_end":50748,"line_start":1129,"line_end":1129,"column_start":5,"column_end":15},"name":"DW_OP_reg8","qualname":"::constants::DW_OP_reg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5030},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50761,"byte_end":50771,"line_start":1130,"line_end":1130,"column_start":5,"column_end":15},"name":"DW_OP_reg9","qualname":"::constants::DW_OP_reg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5031},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50784,"byte_end":50795,"line_start":1131,"line_end":1131,"column_start":5,"column_end":16},"name":"DW_OP_reg10","qualname":"::constants::DW_OP_reg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5032},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50808,"byte_end":50819,"line_start":1132,"line_end":1132,"column_start":5,"column_end":16},"name":"DW_OP_reg11","qualname":"::constants::DW_OP_reg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5033},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50832,"byte_end":50843,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16},"name":"DW_OP_reg12","qualname":"::constants::DW_OP_reg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5034},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50856,"byte_end":50867,"line_start":1134,"line_end":1134,"column_start":5,"column_end":16},"name":"DW_OP_reg13","qualname":"::constants::DW_OP_reg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5035},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50880,"byte_end":50891,"line_start":1135,"line_end":1135,"column_start":5,"column_end":16},"name":"DW_OP_reg14","qualname":"::constants::DW_OP_reg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5036},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50904,"byte_end":50915,"line_start":1136,"line_end":1136,"column_start":5,"column_end":16},"name":"DW_OP_reg15","qualname":"::constants::DW_OP_reg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5037},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50928,"byte_end":50939,"line_start":1137,"line_end":1137,"column_start":5,"column_end":16},"name":"DW_OP_reg16","qualname":"::constants::DW_OP_reg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5038},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50952,"byte_end":50963,"line_start":1138,"line_end":1138,"column_start":5,"column_end":16},"name":"DW_OP_reg17","qualname":"::constants::DW_OP_reg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5039},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":50976,"byte_end":50987,"line_start":1139,"line_end":1139,"column_start":5,"column_end":16},"name":"DW_OP_reg18","qualname":"::constants::DW_OP_reg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5040},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51000,"byte_end":51011,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16},"name":"DW_OP_reg19","qualname":"::constants::DW_OP_reg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5041},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51024,"byte_end":51035,"line_start":1141,"line_end":1141,"column_start":5,"column_end":16},"name":"DW_OP_reg20","qualname":"::constants::DW_OP_reg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5042},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51048,"byte_end":51059,"line_start":1142,"line_end":1142,"column_start":5,"column_end":16},"name":"DW_OP_reg21","qualname":"::constants::DW_OP_reg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5043},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51072,"byte_end":51083,"line_start":1143,"line_end":1143,"column_start":5,"column_end":16},"name":"DW_OP_reg22","qualname":"::constants::DW_OP_reg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5044},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51096,"byte_end":51107,"line_start":1144,"line_end":1144,"column_start":5,"column_end":16},"name":"DW_OP_reg23","qualname":"::constants::DW_OP_reg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5045},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51120,"byte_end":51131,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16},"name":"DW_OP_reg24","qualname":"::constants::DW_OP_reg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5046},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51144,"byte_end":51155,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16},"name":"DW_OP_reg25","qualname":"::constants::DW_OP_reg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5047},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51168,"byte_end":51179,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16},"name":"DW_OP_reg26","qualname":"::constants::DW_OP_reg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5048},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51192,"byte_end":51203,"line_start":1148,"line_end":1148,"column_start":5,"column_end":16},"name":"DW_OP_reg27","qualname":"::constants::DW_OP_reg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5049},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51216,"byte_end":51227,"line_start":1149,"line_end":1149,"column_start":5,"column_end":16},"name":"DW_OP_reg28","qualname":"::constants::DW_OP_reg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5050},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51240,"byte_end":51251,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16},"name":"DW_OP_reg29","qualname":"::constants::DW_OP_reg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5051},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51264,"byte_end":51275,"line_start":1151,"line_end":1151,"column_start":5,"column_end":16},"name":"DW_OP_reg30","qualname":"::constants::DW_OP_reg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5052},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51288,"byte_end":51299,"line_start":1152,"line_end":1152,"column_start":5,"column_end":16},"name":"DW_OP_reg31","qualname":"::constants::DW_OP_reg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5053},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51312,"byte_end":51323,"line_start":1153,"line_end":1153,"column_start":5,"column_end":16},"name":"DW_OP_breg0","qualname":"::constants::DW_OP_breg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5054},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51336,"byte_end":51347,"line_start":1154,"line_end":1154,"column_start":5,"column_end":16},"name":"DW_OP_breg1","qualname":"::constants::DW_OP_breg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5055},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51360,"byte_end":51371,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16},"name":"DW_OP_breg2","qualname":"::constants::DW_OP_breg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5056},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51384,"byte_end":51395,"line_start":1156,"line_end":1156,"column_start":5,"column_end":16},"name":"DW_OP_breg3","qualname":"::constants::DW_OP_breg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5057},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51408,"byte_end":51419,"line_start":1157,"line_end":1157,"column_start":5,"column_end":16},"name":"DW_OP_breg4","qualname":"::constants::DW_OP_breg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5058},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51432,"byte_end":51443,"line_start":1158,"line_end":1158,"column_start":5,"column_end":16},"name":"DW_OP_breg5","qualname":"::constants::DW_OP_breg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5059},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51456,"byte_end":51467,"line_start":1159,"line_end":1159,"column_start":5,"column_end":16},"name":"DW_OP_breg6","qualname":"::constants::DW_OP_breg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5060},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51480,"byte_end":51491,"line_start":1160,"line_end":1160,"column_start":5,"column_end":16},"name":"DW_OP_breg7","qualname":"::constants::DW_OP_breg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5061},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51504,"byte_end":51515,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16},"name":"DW_OP_breg8","qualname":"::constants::DW_OP_breg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5062},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51528,"byte_end":51539,"line_start":1162,"line_end":1162,"column_start":5,"column_end":16},"name":"DW_OP_breg9","qualname":"::constants::DW_OP_breg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5063},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51552,"byte_end":51564,"line_start":1163,"line_end":1163,"column_start":5,"column_end":17},"name":"DW_OP_breg10","qualname":"::constants::DW_OP_breg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5064},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51577,"byte_end":51589,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17},"name":"DW_OP_breg11","qualname":"::constants::DW_OP_breg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5065},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51602,"byte_end":51614,"line_start":1165,"line_end":1165,"column_start":5,"column_end":17},"name":"DW_OP_breg12","qualname":"::constants::DW_OP_breg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5066},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51627,"byte_end":51639,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17},"name":"DW_OP_breg13","qualname":"::constants::DW_OP_breg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5067},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51652,"byte_end":51664,"line_start":1167,"line_end":1167,"column_start":5,"column_end":17},"name":"DW_OP_breg14","qualname":"::constants::DW_OP_breg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5068},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51677,"byte_end":51689,"line_start":1168,"line_end":1168,"column_start":5,"column_end":17},"name":"DW_OP_breg15","qualname":"::constants::DW_OP_breg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5069},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51702,"byte_end":51714,"line_start":1169,"line_end":1169,"column_start":5,"column_end":17},"name":"DW_OP_breg16","qualname":"::constants::DW_OP_breg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5070},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51727,"byte_end":51739,"line_start":1170,"line_end":1170,"column_start":5,"column_end":17},"name":"DW_OP_breg17","qualname":"::constants::DW_OP_breg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5071},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51752,"byte_end":51764,"line_start":1171,"line_end":1171,"column_start":5,"column_end":17},"name":"DW_OP_breg18","qualname":"::constants::DW_OP_breg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5072},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51777,"byte_end":51789,"line_start":1172,"line_end":1172,"column_start":5,"column_end":17},"name":"DW_OP_breg19","qualname":"::constants::DW_OP_breg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5073},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51802,"byte_end":51814,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"DW_OP_breg20","qualname":"::constants::DW_OP_breg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5074},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51827,"byte_end":51839,"line_start":1174,"line_end":1174,"column_start":5,"column_end":17},"name":"DW_OP_breg21","qualname":"::constants::DW_OP_breg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5075},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51852,"byte_end":51864,"line_start":1175,"line_end":1175,"column_start":5,"column_end":17},"name":"DW_OP_breg22","qualname":"::constants::DW_OP_breg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5076},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51877,"byte_end":51889,"line_start":1176,"line_end":1176,"column_start":5,"column_end":17},"name":"DW_OP_breg23","qualname":"::constants::DW_OP_breg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5077},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51902,"byte_end":51914,"line_start":1177,"line_end":1177,"column_start":5,"column_end":17},"name":"DW_OP_breg24","qualname":"::constants::DW_OP_breg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5078},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51927,"byte_end":51939,"line_start":1178,"line_end":1178,"column_start":5,"column_end":17},"name":"DW_OP_breg25","qualname":"::constants::DW_OP_breg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5079},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51952,"byte_end":51964,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17},"name":"DW_OP_breg26","qualname":"::constants::DW_OP_breg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5080},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":51977,"byte_end":51989,"line_start":1180,"line_end":1180,"column_start":5,"column_end":17},"name":"DW_OP_breg27","qualname":"::constants::DW_OP_breg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5081},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52002,"byte_end":52014,"line_start":1181,"line_end":1181,"column_start":5,"column_end":17},"name":"DW_OP_breg28","qualname":"::constants::DW_OP_breg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5082},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52027,"byte_end":52039,"line_start":1182,"line_end":1182,"column_start":5,"column_end":17},"name":"DW_OP_breg29","qualname":"::constants::DW_OP_breg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5083},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52052,"byte_end":52064,"line_start":1183,"line_end":1183,"column_start":5,"column_end":17},"name":"DW_OP_breg30","qualname":"::constants::DW_OP_breg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5084},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52077,"byte_end":52089,"line_start":1184,"line_end":1184,"column_start":5,"column_end":17},"name":"DW_OP_breg31","qualname":"::constants::DW_OP_breg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5085},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52102,"byte_end":52112,"line_start":1185,"line_end":1185,"column_start":5,"column_end":15},"name":"DW_OP_regx","qualname":"::constants::DW_OP_regx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5086},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52125,"byte_end":52136,"line_start":1186,"line_end":1186,"column_start":5,"column_end":16},"name":"DW_OP_fbreg","qualname":"::constants::DW_OP_fbreg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5087},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52149,"byte_end":52160,"line_start":1187,"line_end":1187,"column_start":5,"column_end":16},"name":"DW_OP_bregx","qualname":"::constants::DW_OP_bregx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5088},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52173,"byte_end":52184,"line_start":1188,"line_end":1188,"column_start":5,"column_end":16},"name":"DW_OP_piece","qualname":"::constants::DW_OP_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5089},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52197,"byte_end":52213,"line_start":1189,"line_end":1189,"column_start":5,"column_end":21},"name":"DW_OP_deref_size","qualname":"::constants::DW_OP_deref_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5090},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52226,"byte_end":52243,"line_start":1190,"line_end":1190,"column_start":5,"column_end":22},"name":"DW_OP_xderef_size","qualname":"::constants::DW_OP_xderef_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5091},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52256,"byte_end":52265,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14},"name":"DW_OP_nop","qualname":"::constants::DW_OP_nop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5092},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52278,"byte_end":52303,"line_start":1192,"line_end":1192,"column_start":5,"column_end":30},"name":"DW_OP_push_object_address","qualname":"::constants::DW_OP_push_object_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5093},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52316,"byte_end":52327,"line_start":1193,"line_end":1193,"column_start":5,"column_end":16},"name":"DW_OP_call2","qualname":"::constants::DW_OP_call2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5094},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52340,"byte_end":52351,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16},"name":"DW_OP_call4","qualname":"::constants::DW_OP_call4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5095},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52364,"byte_end":52378,"line_start":1195,"line_end":1195,"column_start":5,"column_end":19},"name":"DW_OP_call_ref","qualname":"::constants::DW_OP_call_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5096},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52391,"byte_end":52413,"line_start":1196,"line_end":1196,"column_start":5,"column_end":27},"name":"DW_OP_form_tls_address","qualname":"::constants::DW_OP_form_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5097},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52426,"byte_end":52446,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25},"name":"DW_OP_call_frame_cfa","qualname":"::constants::DW_OP_call_frame_cfa","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5098},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52459,"byte_end":52474,"line_start":1198,"line_end":1198,"column_start":5,"column_end":20},"name":"DW_OP_bit_piece","qualname":"::constants::DW_OP_bit_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5099},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52487,"byte_end":52507,"line_start":1199,"line_end":1199,"column_start":5,"column_end":25},"name":"DW_OP_implicit_value","qualname":"::constants::DW_OP_implicit_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5100},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52520,"byte_end":52537,"line_start":1200,"line_end":1200,"column_start":5,"column_end":22},"name":"DW_OP_stack_value","qualname":"::constants::DW_OP_stack_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52550,"byte_end":52572,"line_start":1201,"line_end":1201,"column_start":5,"column_end":27},"name":"DW_OP_implicit_pointer","qualname":"::constants::DW_OP_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5102},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52585,"byte_end":52596,"line_start":1202,"line_end":1202,"column_start":5,"column_end":16},"name":"DW_OP_addrx","qualname":"::constants::DW_OP_addrx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5103},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52609,"byte_end":52621,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17},"name":"DW_OP_constx","qualname":"::constants::DW_OP_constx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5104},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52634,"byte_end":52651,"line_start":1204,"line_end":1204,"column_start":5,"column_end":22},"name":"DW_OP_entry_value","qualname":"::constants::DW_OP_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5105},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52664,"byte_end":52680,"line_start":1205,"line_end":1205,"column_start":5,"column_end":21},"name":"DW_OP_const_type","qualname":"::constants::DW_OP_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5106},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52693,"byte_end":52710,"line_start":1206,"line_end":1206,"column_start":5,"column_end":22},"name":"DW_OP_regval_type","qualname":"::constants::DW_OP_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5107},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52723,"byte_end":52739,"line_start":1207,"line_end":1207,"column_start":5,"column_end":21},"name":"DW_OP_deref_type","qualname":"::constants::DW_OP_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5108},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52752,"byte_end":52769,"line_start":1208,"line_end":1208,"column_start":5,"column_end":22},"name":"DW_OP_xderef_type","qualname":"::constants::DW_OP_xderef_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5109},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52782,"byte_end":52795,"line_start":1209,"line_end":1209,"column_start":5,"column_end":18},"name":"DW_OP_convert","qualname":"::constants::DW_OP_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5110},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52808,"byte_end":52825,"line_start":1210,"line_end":1210,"column_start":5,"column_end":22},"name":"DW_OP_reinterpret","qualname":"::constants::DW_OP_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5111},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52857,"byte_end":52883,"line_start":1213,"line_end":1213,"column_start":5,"column_end":31},"name":"DW_OP_GNU_push_tls_address","qualname":"::constants::DW_OP_GNU_push_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5112},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52896,"byte_end":52922,"line_start":1214,"line_end":1214,"column_start":5,"column_end":31},"name":"DW_OP_GNU_implicit_pointer","qualname":"::constants::DW_OP_GNU_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5113},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52935,"byte_end":52956,"line_start":1215,"line_end":1215,"column_start":5,"column_end":26},"name":"DW_OP_GNU_entry_value","qualname":"::constants::DW_OP_GNU_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5114},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":52969,"byte_end":52989,"line_start":1216,"line_end":1216,"column_start":5,"column_end":25},"name":"DW_OP_GNU_const_type","qualname":"::constants::DW_OP_GNU_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5115},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53002,"byte_end":53023,"line_start":1217,"line_end":1217,"column_start":5,"column_end":26},"name":"DW_OP_GNU_regval_type","qualname":"::constants::DW_OP_GNU_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5116},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53036,"byte_end":53056,"line_start":1218,"line_end":1218,"column_start":5,"column_end":25},"name":"DW_OP_GNU_deref_type","qualname":"::constants::DW_OP_GNU_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5117},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53069,"byte_end":53086,"line_start":1219,"line_end":1219,"column_start":5,"column_end":22},"name":"DW_OP_GNU_convert","qualname":"::constants::DW_OP_GNU_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5118},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53099,"byte_end":53120,"line_start":1220,"line_end":1220,"column_start":5,"column_end":26},"name":"DW_OP_GNU_reinterpret","qualname":"::constants::DW_OP_GNU_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5119},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53133,"byte_end":53156,"line_start":1221,"line_end":1221,"column_start":5,"column_end":28},"name":"DW_OP_GNU_parameter_ref","qualname":"::constants::DW_OP_GNU_parameter_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5120},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53169,"byte_end":53189,"line_start":1222,"line_end":1222,"column_start":5,"column_end":25},"name":"DW_OP_GNU_addr_index","qualname":"::constants::DW_OP_GNU_addr_index","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5121},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53202,"byte_end":53223,"line_start":1223,"line_end":1223,"column_start":5,"column_end":26},"name":"DW_OP_GNU_const_index","qualname":"::constants::DW_OP_GNU_const_index","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53535,"byte_end":53541,"line_start":1234,"line_end":1234,"column_start":1,"column_end":7},"name":"DwEhPe","qualname":"::constants::DwEhPe","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pointer encoding used by `.eh_frame`.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5148},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53648,"byte_end":53664,"line_start":1238,"line_end":1238,"column_start":5,"column_end":21},"name":"DW_EH_PE_uleb128","qualname":"::constants::DW_EH_PE_uleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5149},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53707,"byte_end":53722,"line_start":1240,"line_end":1240,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata2","qualname":"::constants::DW_EH_PE_udata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53765,"byte_end":53780,"line_start":1242,"line_end":1242,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata4","qualname":"::constants::DW_EH_PE_udata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53824,"byte_end":53839,"line_start":1244,"line_end":1244,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata8","qualname":"::constants::DW_EH_PE_udata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5152},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53913,"byte_end":53929,"line_start":1246,"line_end":1246,"column_start":5,"column_end":21},"name":"DW_EH_PE_sleb128","qualname":"::constants::DW_EH_PE_sleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5153},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":53970,"byte_end":53985,"line_start":1248,"line_end":1248,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata2","qualname":"::constants::DW_EH_PE_sdata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54027,"byte_end":54042,"line_start":1250,"line_end":1250,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata4","qualname":"::constants::DW_EH_PE_sdata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5155},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54085,"byte_end":54100,"line_start":1252,"line_end":1252,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata8","qualname":"::constants::DW_EH_PE_sdata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5156},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54227,"byte_end":54241,"line_start":1257,"line_end":1257,"column_start":5,"column_end":19},"name":"DW_EH_PE_pcrel","qualname":"::constants::DW_EH_PE_pcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5157},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54316,"byte_end":54332,"line_start":1259,"line_end":1259,"column_start":5,"column_end":21},"name":"DW_EH_PE_textrel","qualname":"::constants::DW_EH_PE_textrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5158},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54423,"byte_end":54439,"line_start":1261,"line_end":1261,"column_start":5,"column_end":21},"name":"DW_EH_PE_datarel","qualname":"::constants::DW_EH_PE_datarel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54509,"byte_end":54525,"line_start":1263,"line_end":1263,"column_start":5,"column_end":21},"name":"DW_EH_PE_funcrel","qualname":"::constants::DW_EH_PE_funcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5160},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54595,"byte_end":54611,"line_start":1265,"line_end":1265,"column_start":5,"column_end":21},"name":"DW_EH_PE_aligned","qualname":"::constants::DW_EH_PE_aligned","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5161},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":54923,"byte_end":54940,"line_start":1273,"line_end":1273,"column_start":5,"column_end":22},"name":"DW_EH_PE_indirect","qualname":"::constants::DW_EH_PE_indirect","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5162},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55099,"byte_end":55114,"line_start":1279,"line_end":1279,"column_start":5,"column_end":20},"name":"DW_EH_PE_absptr","qualname":"::constants::DW_EH_PE_absptr","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5163},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55168,"byte_end":55181,"line_start":1281,"line_end":1281,"column_start":5,"column_end":18},"name":"DW_EH_PE_omit","qualname":"::constants::DW_EH_PE_omit","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55404,"byte_end":55410,"line_start":1292,"line_end":1292,"column_start":12,"column_end":18},"name":"format","qualname":"<DwEhPe>::format","value":"pub fn format(Self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's format.\n","sig":null,"attributes":[{"value":"/ Get the pointer encoding's format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55340,"byte_end":55378,"line_start":1290,"line_end":1290,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55383,"byte_end":55392,"line_start":1291,"line_end":1291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55555,"byte_end":55566,"line_start":1298,"line_end":1298,"column_start":12,"column_end":23},"name":"application","qualname":"<DwEhPe>::application","value":"pub fn application(Self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's application.\n","sig":null,"attributes":[{"value":"/ Get the pointer encoding's application.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55486,"byte_end":55529,"line_start":1296,"line_end":1296,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55534,"byte_end":55543,"line_start":1297,"line_end":1297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55722,"byte_end":55731,"line_start":1304,"line_end":1304,"column_start":12,"column_end":21},"name":"is_absent","qualname":"<DwEhPe>::is_absent","value":"pub fn is_absent(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this encoding the absent pointer encoding?\n","sig":null,"attributes":[{"value":"/ Is this encoding the absent pointer encoding?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55647,"byte_end":55696,"line_start":1302,"line_end":1302,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55701,"byte_end":55710,"line_start":1303,"line_end":1303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55950,"byte_end":55961,"line_start":1311,"line_end":1311,"column_start":12,"column_end":23},"name":"is_indirect","qualname":"<DwEhPe>::is_indirect","value":"pub fn is_indirect(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this coding indirect? If so, its encoded value is the address of the\n real pointer result, not the pointer result itself.\n","sig":null,"attributes":[{"value":"/ Is this coding indirect? If so, its encoded value is the address of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55789,"byte_end":55864,"line_start":1308,"line_end":1308,"column_start":5,"column_end":80}},{"value":"/ real pointer result, not the pointer result itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55869,"byte_end":55924,"line_start":1309,"line_end":1309,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55929,"byte_end":55938,"line_start":1310,"line_end":1310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":56087,"byte_end":56104,"line_start":1316,"line_end":1316,"column_start":12,"column_end":29},"name":"is_valid_encoding","qualname":"<DwEhPe>::is_valid_encoding","value":"pub fn is_valid_encoding(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a known, valid pointer encoding?\n","sig":null,"attributes":[{"value":"/ Is this a known, valid pointer encoding?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":56031,"byte_end":56075,"line_start":1315,"line_end":1315,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58145,"byte_end":58154,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Endianity","qualname":"::endianity::Endianity","value":"Endianity: Debug + Default + Clone + Copy + PartialEq + Eq","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" A trait describing the endianity of some buffer.\n","sig":null,"attributes":[{"value":"/ A trait describing the endianity of some buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58082,"byte_end":58134,"line_start":6,"line_end":6,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58260,"byte_end":58273,"line_start":9,"line_end":9,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"::endianity::Endianity::is_big_endian","value":"pub fn is_big_endian(Self) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Return true for big endian byte order.\n","sig":null,"attributes":[{"value":"/ Return true for big endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58210,"byte_end":58252,"line_start":8,"line_end":8,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58361,"byte_end":58377,"line_start":13,"line_end":13,"column_start":8,"column_end":24},"name":"is_little_endian","qualname":"::endianity::Endianity::is_little_endian","value":"pub fn is_little_endian(Self) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Return true for little endian byte order.\n","sig":null,"attributes":[{"value":"/ Return true for little endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58294,"byte_end":58339,"line_start":11,"line_end":11,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58344,"byte_end":58353,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58575,"byte_end":58583,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::endianity::Endianity::read_u16","value":"pub fn read_u16(Self, &[u8]) -> u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads an unsigned 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 16 bit integer from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58435,"byte_end":58483,"line_start":17,"line_end":17,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58488,"byte_end":58491,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58496,"byte_end":58508,"line_start":19,"line_end":19,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58513,"byte_end":58516,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58521,"byte_end":58553,"line_start":21,"line_end":21,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58558,"byte_end":58567,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58961,"byte_end":58969,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::endianity::Endianity::read_u32","value":"pub fn read_u32(Self, &[u8]) -> u32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads an unsigned 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 32 bit integer from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58821,"byte_end":58869,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58874,"byte_end":58877,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58882,"byte_end":58894,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58899,"byte_end":58902,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58907,"byte_end":58939,"line_start":36,"line_end":36,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58944,"byte_end":58953,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59347,"byte_end":59355,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::endianity::Endianity::read_u64","value":"pub fn read_u64(Self, &[u8]) -> u64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads an unsigned 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads an unsigned 64 bit integer from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59207,"byte_end":59255,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59260,"byte_end":59263,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59268,"byte_end":59280,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59285,"byte_end":59288,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59293,"byte_end":59325,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59330,"byte_end":59339,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59745,"byte_end":59754,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::endianity::Endianity::read_uint","value":"pub fn read_uint(&mut Self, &[u8]) -> u64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"/ Read an unsigned n-bytes integer u64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59593,"byte_end":59634,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59639,"byte_end":59642,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59647,"byte_end":59659,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59664,"byte_end":59667,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 1` or `buf.len() > 8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59672,"byte_end":59723,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":59728,"byte_end":59737,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60160,"byte_end":60168,"line_start":84,"line_end":84,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::endianity::Endianity::read_i16","value":"pub fn read_i16(Self, &[u8]) -> i16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a signed 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 16 bit integer from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60023,"byte_end":60068,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60073,"byte_end":60076,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60081,"byte_end":60093,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60098,"byte_end":60101,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60106,"byte_end":60138,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60143,"byte_end":60152,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60378,"byte_end":60386,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::endianity::Endianity::read_i32","value":"pub fn read_i32(Self, &[u8]) -> i32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a signed 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 32 bit integer from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60241,"byte_end":60286,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60291,"byte_end":60294,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60299,"byte_end":60311,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60316,"byte_end":60319,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60324,"byte_end":60356,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60361,"byte_end":60370,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60596,"byte_end":60604,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::endianity::Endianity::read_i64","value":"pub fn read_i64(Self, &[u8]) -> i64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a signed 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"/ Reads a signed 64 bit integer from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60459,"byte_end":60504,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60509,"byte_end":60512,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60517,"byte_end":60529,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60534,"byte_end":60537,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60542,"byte_end":60574,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60579,"byte_end":60588,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60821,"byte_end":60829,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::endianity::Endianity::read_f32","value":"pub fn read_f32(Self, &[u8]) -> f32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"/ Reads a 32 bit floating point number from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60677,"byte_end":60729,"line_start":108,"line_end":108,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60734,"byte_end":60737,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60742,"byte_end":60754,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60759,"byte_end":60762,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60767,"byte_end":60799,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60804,"byte_end":60813,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61055,"byte_end":61063,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::endianity::Endianity::read_f64","value":"pub fn read_f64(Self, &[u8]) -> f64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"/ Reads a 32 bit floating point number from `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60911,"byte_end":60963,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60968,"byte_end":60971,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60976,"byte_end":60988,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":60993,"byte_end":60996,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61001,"byte_end":61033,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61038,"byte_end":61047,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61288,"byte_end":61297,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::endianity::Endianity::write_u16","value":"pub fn write_u16(Self, &mut [u8], u16)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer `n` to `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61145,"byte_end":61196,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61201,"byte_end":61204,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61209,"byte_end":61221,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61226,"byte_end":61229,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 2`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61234,"byte_end":61266,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61271,"byte_end":61280,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61656,"byte_end":61665,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::endianity::Endianity::write_u32","value":"pub fn write_u32(Self, &mut [u8], u32)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer `n` to `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61513,"byte_end":61564,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61569,"byte_end":61572,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61577,"byte_end":61589,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61594,"byte_end":61597,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 4`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61602,"byte_end":61634,"line_start":147,"line_end":147,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61639,"byte_end":61648,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62024,"byte_end":62033,"line_start":164,"line_end":164,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::endianity::Endianity::write_u64","value":"pub fn write_u64(Self, &mut [u8], u64)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer `n` to `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61881,"byte_end":61932,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61937,"byte_end":61940,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61945,"byte_end":61957,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61962,"byte_end":61965,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Panics when `buf.len() < 8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":61970,"byte_end":62002,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62007,"byte_end":62016,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62407,"byte_end":62413,"line_start":178,"line_end":178,"column_start":5,"column_end":11},"name":"Little","qualname":"::endianity::RunTimeEndian::Little","value":"RunTimeEndian::Little","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[{"value":"/ Little endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62373,"byte_end":62402,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62450,"byte_end":62453,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"Big","qualname":"::endianity::RunTimeEndian::Big","value":"RunTimeEndian::Big","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[{"value":"/ Big endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62419,"byte_end":62445,"line_start":179,"line_end":179,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":5190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62353,"byte_end":62366,"line_start":176,"line_end":176,"column_start":10,"column_end":23},"name":"RunTimeEndian","qualname":"::endianity::RunTimeEndian","value":"pub enum RunTimeEndian { Little, Big, }","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5193}],"decl_id":null,"docs":" Byte order that is selectable at runtime.\n","sig":null,"attributes":[{"value":"/ Byte order that is selectable at runtime.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62247,"byte_end":62292,"line_start":174,"line_end":174,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5209},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62960,"byte_end":62972,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"LittleEndian","qualname":"::endianity::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[{"value":"/ Little endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62868,"byte_end":62897,"line_start":204,"line_end":204,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5225},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63283,"byte_end":63292,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"BigEndian","qualname":"::endianity::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[{"value":"/ Big endian byte order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63194,"byte_end":63220,"line_start":222,"line_end":222,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63593,"byte_end":63605,"line_start":242,"line_end":242,"column_start":10,"column_end":22},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":" The native endianity for the target platform.\n","sig":null,"attributes":[{"value":"/ The native endianity for the target platform.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63501,"byte_end":63550,"line_start":240,"line_end":240,"column_start":1,"column_end":50}},{"value":"cfg(target_endian = \"little\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63551,"byte_end":63583,"line_start":241,"line_end":241,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63714,"byte_end":63726,"line_start":247,"line_end":247,"column_start":11,"column_end":23},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_endian = \"little\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63623,"byte_end":63655,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63656,"byte_end":63688,"line_start":245,"line_end":245,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"leb128","qualname":"::leb128","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length\n integer encoding.","sig":null,"attributes":[{"value":"/ Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64000,"byte_end":64076,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ integer encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64077,"byte_end":64098,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64099,"byte_end":64102,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The implementation is a direct translation of the psuedocode in the DWARF 4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64103,"byte_end":64182,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ standard's appendix C.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64183,"byte_end":64209,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64210,"byte_end":64213,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Read and write signed integers:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64214,"byte_end":64249,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64250,"byte_end":64253,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64254,"byte_end":64261,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"read\", feature = \"write\"))] {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64262,"byte_end":64318,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ use gimli::{EndianSlice, NativeEndian, leb128};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64319,"byte_end":64370,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64371,"byte_end":64374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0; 1024];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64375,"byte_end":64403,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64404,"byte_end":64407,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Write to anything that implements `std::io::Write`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64408,"byte_end":64466,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64467,"byte_end":64472,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/     let mut writable = &mut buf[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64473,"byte_end":64513,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/     leb128::write::signed(&mut writable, -12345).expect(\"Should write number\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64514,"byte_end":64597,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64598,"byte_end":64603,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64604,"byte_end":64607,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Read from anything that implements `gimli::Reader`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64608,"byte_end":64666,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/ let mut readable = EndianSlice::new(&buf[..], NativeEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64667,"byte_end":64731,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ let val = leb128::read::signed(&mut readable).expect(\"Should read number\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64732,"byte_end":64811,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(val, -12345);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64812,"byte_end":64840,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64841,"byte_end":64848,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64849,"byte_end":64856,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64857,"byte_end":64860,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Or read and write unsigned integers:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64861,"byte_end":64901,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64902,"byte_end":64905,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64906,"byte_end":64913,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"read\", feature = \"write\"))] {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64914,"byte_end":64970,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use gimli::{EndianSlice, NativeEndian, leb128};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":64971,"byte_end":65022,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65023,"byte_end":65026,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0; 1024];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65027,"byte_end":65055,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65056,"byte_end":65059,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65060,"byte_end":65065,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/     let mut writable = &mut buf[..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65066,"byte_end":65106,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/     leb128::write::unsigned(&mut writable, 98765).expect(\"Should write number\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65107,"byte_end":65191,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65192,"byte_end":65197,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65198,"byte_end":65201,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut readable = EndianSlice::new(&buf[..], NativeEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65202,"byte_end":65266,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ let val = leb128::read::unsigned(&mut readable).expect(\"Should read number\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65267,"byte_end":65348,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(val, 98765);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65349,"byte_end":65376,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65377,"byte_end":65384,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65385,"byte_end":65392,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65838,"byte_end":65842,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"read","qualname":"::leb128::read","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":" A module for reading signed and unsigned integers that have been LEB128\n encoded.\n","sig":null,"attributes":[{"value":"/ A module for reading signed and unsigned integers that have been LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65716,"byte_end":65791,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ encoded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65792,"byte_end":65804,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"cfg(feature = \"read\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65805,"byte_end":65829,"line_start":65,"line_end":65,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":66082,"byte_end":66090,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"unsigned","qualname":"::leb128::read::unsigned","value":"pub fn unsigned<R: Reader>(&mut R) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 number from the given `Reader` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":65959,"byte_end":66021,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":66026,"byte_end":66070,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":66724,"byte_end":66727,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"u16","qualname":"::leb128::read::u16","value":"pub fn u16<R: Reader>(&mut R) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Read an LEB128 u16 from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read an LEB128 u16 from the given `Reader` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":66613,"byte_end":66663,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":66668,"byte_end":66712,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":67428,"byte_end":67434,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"signed","qualname":"::leb128::read::signed","value":"pub fn signed<R: Reader>(&mut R) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Read a signed LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[{"value":"/ Read a signed LEB128 number from the given `Reader` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":67308,"byte_end":67367,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/ return it or an error if reading failed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/leb128.rs","byte_start":67372,"byte_end":67416,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":143},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1590},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1778},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":7844},{"krate":0,"index":8007},{"krate":0,"index":8005},{"krate":0,"index":8004},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":7997},{"krate":0,"index":7998},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2685}],"decl_id":null,"docs":" Read DWARF debugging information.","sig":null,"attributes":[{"value":"cfg(feature = \"read\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1951,"byte_end":1975,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ Read DWARF debugging information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82113,"byte_end":82150,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82151,"byte_end":82154,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [Example Usage](#example-usage)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82155,"byte_end":82192,"line_start":3,"line_end":3,"column_start":1,"column_end":38}},{"value":"/ * [API Structure](#api-structure)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82193,"byte_end":82230,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/ * [Using with `FallibleIterator`](#using-with-fallibleiterator)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82231,"byte_end":82298,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82299,"byte_end":82302,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82303,"byte_end":82323,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82324,"byte_end":82327,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Print out all of the functions in the debuggee program:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82328,"byte_end":82387,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82388,"byte_end":82391,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82392,"byte_end":82410,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82411,"byte_end":82459,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ # type R = gimli::EndianSlice<'static, gimli::LittleEndian>;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82460,"byte_end":82524,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ # let get_file_section_reader = |name| -> Result<R, gimli::Error> { unimplemented!() };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82525,"byte_end":82616,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ # let get_sup_file_section_reader = |name| -> Result<R, gimli::Error> { unimplemented!() };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82617,"byte_end":82712,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ // Read the DWARF sections with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82713,"byte_end":82785,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ // These closures should return a `Reader` instance (e.g. `EndianSlice`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82786,"byte_end":82863,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ let loader = |section: gimli::SectionId| { get_file_section_reader(section.name()) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82864,"byte_end":82953,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ let sup_loader = |section: gimli::SectionId| { get_sup_file_section_reader(section.name()) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":82954,"byte_end":83051,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ let dwarf = gimli::Dwarf::load(loader, sup_loader)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83052,"byte_end":83108,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83109,"byte_end":83112,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Iterate over all compilation units.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83113,"byte_end":83155,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ let mut iter = dwarf.units();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83156,"byte_end":83189,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/ while let Some(header) = iter.next()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83190,"byte_end":83233,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/     // Parse the abbreviations and other information for this compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83234,"byte_end":83317,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/     let unit = dwarf.unit(header)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83318,"byte_end":83357,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83358,"byte_end":83361,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Iterate over all of this compilation unit's entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83362,"byte_end":83425,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/     let mut entries = unit.entries();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83426,"byte_end":83467,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/     while let Some((_, entry)) = entries.next_dfs()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83468,"byte_end":83526,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/         // If we find an entry for a function, print it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83527,"byte_end":83587,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/         if entry.tag() == gimli::DW_TAG_subprogram {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83588,"byte_end":83644,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"/             println!(\"Found a function: {:?}\", entry);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83645,"byte_end":83703,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83704,"byte_end":83717,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83718,"byte_end":83727,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83728,"byte_end":83733,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83734,"byte_end":83754,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83755,"byte_end":83762,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83763,"byte_end":83770,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83771,"byte_end":83774,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Full example programs:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83775,"byte_end":83801,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83802,"byte_end":83805,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/   * [A simple parser](https://github.com/gimli-rs/gimli/blob/master/examples/simple.rs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83806,"byte_end":83897,"line_start":43,"line_end":43,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83898,"byte_end":83901,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/   * [A `dwarfdump`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83902,"byte_end":83924,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/     clone](https://github.com/gimli-rs/gimli/blob/master/examples/dwarfdump.rs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":83925,"byte_end":84008,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84009,"byte_end":84012,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   * [An `addr2line` clone](https://github.com/gimli-rs/addr2line)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84013,"byte_end":84082,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84083,"byte_end":84086,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/   * [`ddbug`](https://github.com/philipc/ddbug), a utility giving insight into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84087,"byte_end":84169,"line_start":50,"line_end":50,"column_start":1,"column_end":83}},{"value":"/     code generation by making debugging information readable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84170,"byte_end":84234,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84235,"byte_end":84238,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/   * [`dwprod`](https://github.com/fitzgen/dwprod), a tiny utility to list the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84239,"byte_end":84320,"line_start":53,"line_end":53,"column_start":1,"column_end":82}},{"value":"/     compilers used to create each compilation unit within a shared library or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84321,"byte_end":84402,"line_start":54,"line_end":54,"column_start":1,"column_end":82}},{"value":"/     executable (via `DW_AT_producer`)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84403,"byte_end":84444,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84445,"byte_end":84448,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/   * [`dwarf-validate`](http://github.com/gimli-rs/gimli/blob/master/examples/dwarf-validate.rs),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84449,"byte_end":84549,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/     a program to validate the integrity of some DWARF and its references","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84550,"byte_end":84626,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/     between sections and compilation units.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84627,"byte_end":84674,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84675,"byte_end":84678,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## API Structure","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84679,"byte_end":84699,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84700,"byte_end":84703,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ * Basic familiarity with DWARF is assumed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84704,"byte_end":84750,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84751,"byte_end":84754,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * The [`Dwarf`](./struct.Dwarf.html) type contains the commonly used DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84755,"byte_end":84833,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ sections. It has methods that simplify access to debugging data that spans","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84834,"byte_end":84912,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ multiple sections. Use of this type is optional, but recommended.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84913,"byte_end":84982,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84983,"byte_end":84986,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * Each section gets its own type. Consider these types the entry points to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":84987,"byte_end":85065,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ the library:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85066,"byte_end":85082,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85083,"byte_end":85086,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAbbrev`](./struct.DebugAbbrev.html): The `.debug_abbrev` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85087,"byte_end":85167,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85168,"byte_end":85171,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAddr`](./struct.DebugAddr.html): The `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85172,"byte_end":85246,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85247,"byte_end":85250,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/   * [`DebugAranges`](./struct.DebugAranges.html): The `.debug_aranges`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85251,"byte_end":85325,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/   section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85326,"byte_end":85340,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85341,"byte_end":85344,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/   * [`DebugFrame`](./struct.DebugFrame.html): The `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85345,"byte_end":85422,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85423,"byte_end":85426,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/   * [`DebugInfo`](./struct.DebugInfo.html): The `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85427,"byte_end":85501,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85502,"byte_end":85505,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLine`](./struct.DebugLine.html): The `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85506,"byte_end":85580,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85581,"byte_end":85584,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLineStr`](./struct.DebugLineStr.html): The `.debug_line_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85585,"byte_end":85669,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85670,"byte_end":85673,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLoc`](./struct.DebugLoc.html): The `.debug_loc` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85674,"byte_end":85745,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85746,"byte_end":85749,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/   * [`DebugLocLists`](./struct.DebugLocLists.html): The `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85750,"byte_end":85836,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85837,"byte_end":85840,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/   * [`DebugPubNames`](./struct.DebugPubNames.html): The `.debug_pubnames`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85841,"byte_end":85918,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/   section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85919,"byte_end":85933,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85934,"byte_end":85937,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/   * [`DebugPubTypes`](./struct.DebugPubTypes.html): The `.debug_pubtypes`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":85938,"byte_end":86015,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/   section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86016,"byte_end":86030,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86031,"byte_end":86034,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/   * [`DebugRanges`](./struct.DebugRanges.html): The `.debug_ranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86035,"byte_end":86115,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86116,"byte_end":86119,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/   * [`DebugRngLists`](./struct.DebugRngLists.html): The `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86120,"byte_end":86206,"line_start":99,"line_end":99,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86207,"byte_end":86210,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/   * [`DebugStr`](./struct.DebugStr.html): The `.debug_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86211,"byte_end":86282,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86283,"byte_end":86286,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/   * [`DebugStrOffsets`](./struct.DebugStrOffsets.html): The `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86287,"byte_end":86380,"line_start":103,"line_end":103,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86381,"byte_end":86384,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/   * [`DebugTypes`](./struct.DebugTypes.html): The `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86385,"byte_end":86462,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86463,"byte_end":86466,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/   * [`EhFrame`](./struct.EhFrame.html): The `.eh_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86467,"byte_end":86535,"line_start":107,"line_end":107,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86536,"byte_end":86539,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/   * [`EhFrameHdr`](./struct.EhFrameHdr.html): The `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86540,"byte_end":86618,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86619,"byte_end":86622,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * Each section type exposes methods for accessing the debugging data encoded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86623,"byte_end":86703,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ in that section. For example, the [`DebugInfo`](./struct.DebugInfo.html)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86704,"byte_end":86780,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/ struct has the [`units`](./struct.DebugInfo.html#method.units) method for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86781,"byte_end":86858,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ iterating over the compilation units defined within it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86859,"byte_end":86918,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86919,"byte_end":86922,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * Offsets into a section are strongly typed: an offset into `.debug_info` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":86923,"byte_end":87003,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ the [`DebugInfoOffset`](./struct.DebugInfoOffset.html) type. It cannot be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87004,"byte_end":87081,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/ used to index into the [`DebugLine`](./struct.DebugLine.html) type because","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87082,"byte_end":87160,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/ `DebugLine` represents the `.debug_line` section. There are similar types","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87161,"byte_end":87238,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ for offsets relative to a compilation unit rather than a section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87239,"byte_end":87308,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87309,"byte_end":87312,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Using with `FallibleIterator`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87313,"byte_end":87349,"line_start":122,"line_end":122,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87350,"byte_end":87353,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The standard library's `Iterator` trait and related APIs do not play well","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87354,"byte_end":87431,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ with iterators where the `next` operation is fallible. One can make the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87432,"byte_end":87507,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ `Iterator`'s associated `Item` type be a `Result<T, E>`, however the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87508,"byte_end":87580,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ provided methods cannot gracefully handle the case when an `Err` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87581,"byte_end":87652,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/ returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87653,"byte_end":87666,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87667,"byte_end":87670,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This situation led to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87671,"byte_end":87700,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/ [`fallible-iterator`](https://crates.io/crates/fallible-iterator) crate's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87701,"byte_end":87778,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ existence. You can read more of the rationale for its existence in its","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87779,"byte_end":87853,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ docs. The crate provides the helpers you have come to expect (eg `map`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87854,"byte_end":87929,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/ `filter`, etc) for iterators that can fail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87930,"byte_end":87977,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87978,"byte_end":87981,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ `gimli`'s many lazy parsing iterators are a perfect match for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":87982,"byte_end":88051,"line_start":136,"line_end":136,"column_start":1,"column_end":70}},{"value":"/ `fallible-iterator` crate's `FallibleIterator` trait because parsing is not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88052,"byte_end":88131,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ done eagerly. Parse errors later in the input might only be discovered after","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88132,"byte_end":88212,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ having iterated through many items.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88213,"byte_end":88252,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88253,"byte_end":88256,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ To use `gimli` iterators with `FallibleIterator`, import the crate and trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88257,"byte_end":88337,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ into your code:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88338,"byte_end":88357,"line_start":142,"line_end":142,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88358,"byte_end":88361,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88362,"byte_end":88369,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"fallible-iterator\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88370,"byte_end":88413,"line_start":145,"line_end":145,"column_start":1,"column_end":44}},{"value":"/ # fn foo() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88414,"byte_end":88430,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ // Use the `FallibleIterator` trait so its methods are in scope!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88431,"byte_end":88499,"line_start":147,"line_end":147,"column_start":1,"column_end":69}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88500,"byte_end":88544,"line_start":148,"line_end":148,"column_start":1,"column_end":45}},{"value":"/ use gimli::{DebugAranges, EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88545,"byte_end":88602,"line_start":149,"line_end":149,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88603,"byte_end":88606,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ fn find_sum_of_address_range_lengths(aranges: DebugAranges<EndianSlice<LittleEndian>>)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88607,"byte_end":88697,"line_start":151,"line_end":151,"column_start":1,"column_end":91}},{"value":"/     -> gimli::Result<u64>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88698,"byte_end":88727,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88728,"byte_end":88733,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/     // `DebugAranges::items` returns a `FallibleIterator`!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88734,"byte_end":88796,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"/     aranges.items()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88797,"byte_end":88820,"line_start":155,"line_end":155,"column_start":1,"column_end":24}},{"value":"/         // `map` is provided by `FallibleIterator`!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88821,"byte_end":88876,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/         .map(|arange| Ok(arange.length()))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88877,"byte_end":88923,"line_start":157,"line_end":157,"column_start":1,"column_end":47}},{"value":"/         // `fold` is provided by `FallibleIterator`!","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88924,"byte_end":88980,"line_start":158,"line_end":158,"column_start":1,"column_end":57}},{"value":"/         .fold(0, |sum, len| Ok(sum + len))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":88981,"byte_end":89027,"line_start":159,"line_end":159,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89028,"byte_end":89033,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89034,"byte_end":89041,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89042,"byte_end":89060,"line_start":162,"line_end":162,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89061,"byte_end":89068,"line_start":163,"line_end":163,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5241},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112496,"byte_end":112505,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DebugAddr","qualname":"::read::addr::DebugAddr","value":"DebugAddr {  }","parent":null,"children":[{"krate":0,"index":5243}],"decl_id":null,"docs":" The raw contents of the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112395,"byte_end":112445,"line_start":4,"line_end":4,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113448,"byte_end":113459,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"get_address","qualname":"<DebugAddr<R>>::get_address","value":"pub fn get_address(&Self, u8, DebugAddrBase<R::Offset>,\n                   DebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the address at the given `base` and `index`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112704,"byte_end":112760,"line_start":14,"line_end":14,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112765,"byte_end":112768,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ A set of addresses in the `.debug_addr` section consists of a header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112773,"byte_end":112845,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/ followed by a series of addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112850,"byte_end":112888,"line_start":17,"line_end":17,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112893,"byte_end":112896,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_addr_base` value from the compilation unit DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112901,"byte_end":112982,"line_start":19,"line_end":19,"column_start":5,"column_end":86}},{"value":"/ This is an offset that points to the first address following the header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112987,"byte_end":113063,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113068,"byte_end":113071,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_addrx` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113076,"byte_end":113136,"line_start":22,"line_end":22,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113141,"byte_end":113144,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The `address_size` must be the size of the address for the compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113149,"byte_end":113229,"line_start":24,"line_end":24,"column_start":5,"column_end":85}},{"value":"/ This value must also match the header. However, note that we do not parse the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113234,"byte_end":113315,"line_start":25,"line_end":25,"column_start":5,"column_end":86}},{"value":"/ header to validate this, since locating the header is unreliable, and the GNU","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113320,"byte_end":113401,"line_start":26,"line_end":26,"column_start":5,"column_end":86}},{"value":"/ extensions do not emit it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113406,"byte_end":113436,"line_start":27,"line_end":27,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114502,"byte_end":114508,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAddr<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugAddr<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAddr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAddr` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113872,"byte_end":113940,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113945,"byte_end":113948,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113953,"byte_end":114018,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114023,"byte_end":114026,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114031,"byte_end":114051,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114056,"byte_end":114059,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114064,"byte_end":114082,"line_start":50,"line_end":50,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114087,"byte_end":114132,"line_start":51,"line_end":51,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114137,"byte_end":114221,"line_start":52,"line_end":52,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAddr<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114226,"byte_end":114292,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114297,"byte_end":114344,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114349,"byte_end":114399,"line_start":55,"line_end":55,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114404,"byte_end":114466,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114471,"byte_end":114478,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114483,"byte_end":114490,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5255},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117849,"byte_end":117859,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"DebugFrame","qualname":"::read::cfi::DebugFrame","value":"DebugFrame {  }","parent":null,"children":[{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259}],"decl_id":null,"docs":" `DebugFrame` contains the `.debug_frame` section's frame unwinding\n information required to unwind to and recover registers from older frames on\n the stack. For example, this is useful for a debugger that wants to print\n locals in a backtrace.","sig":null,"attributes":[{"value":"/ `DebugFrame` contains the `.debug_frame` section's frame unwinding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117044,"byte_end":117114,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ information required to unwind to and recover registers from older frames on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117115,"byte_end":117195,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ the stack. For example, this is useful for a debugger that wants to print","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117196,"byte_end":117273,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ locals in a backtrace.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117274,"byte_end":117300,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117301,"byte_end":117304,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Most interesting methods are defined in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117305,"byte_end":117352,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ [`UnwindSection`](trait.UnwindSection.html) trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117353,"byte_end":117407,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117408,"byte_end":117411,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ### Differences between `.debug_frame` and `.eh_frame`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117412,"byte_end":117470,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117471,"byte_end":117474,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ While the `.debug_frame` section's information has a lot of overlap with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117475,"byte_end":117555,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ `.eh_frame` section's information, the `.eh_frame` information tends to only","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117556,"byte_end":117636,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ encode the subset of information needed for exception handling. Often, only","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117637,"byte_end":117716,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ one of `.eh_frame` or `.debug_frame` will be present in an object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117717,"byte_end":117792,"line_start":27,"line_end":27,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118146,"byte_end":118162,"line_start":40,"line_end":40,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<DebugFrame<R>>::set_address_size","value":"pub fn set_address_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a target address in bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117972,"byte_end":118018,"line_start":36,"line_end":36,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118023,"byte_end":118026,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This defaults to the native word size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118031,"byte_end":118073,"line_start":38,"line_end":38,"column_start":5,"column_end":47}},{"value":"/ This is only used if the CIE version is less than 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118078,"byte_end":118134,"line_start":39,"line_end":39,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118403,"byte_end":118419,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"set_segment_size","qualname":"<DebugFrame<R>>::set_segment_size","value":"pub fn set_segment_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a segment selector in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a segment selector in bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118246,"byte_end":118294,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118299,"byte_end":118302,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This defaults to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118307,"byte_end":118330,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ This is only used if the CIE version is less than 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118335,"byte_end":118391,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119215,"byte_end":119218,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugFrame<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugFrame` instance from the data in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118597,"byte_end":118659,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118664,"byte_end":118691,"line_start":58,"line_end":58,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118696,"byte_end":118699,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the section and present it as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118704,"byte_end":118779,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ a `&[u8]` slice. That means using some ELF loader on Linux, a Mach-O","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118784,"byte_end":118856,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118861,"byte_end":118884,"line_start":62,"line_end":62,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118889,"byte_end":118892,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118897,"byte_end":118904,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugFrame, NativeEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118909,"byte_end":118951,"line_start":65,"line_end":65,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118956,"byte_end":118959,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ // Use with `.debug_frame`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118964,"byte_end":118994,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118999,"byte_end":119040,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_frame_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119045,"byte_end":119098,"line_start":69,"line_end":69,"column_start":5,"column_end":58}},{"value":"/ let debug_frame = DebugFrame::new(read_debug_frame_section_somehow(), NativeEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119103,"byte_end":119191,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119196,"byte_end":119203,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5279},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120085,"byte_end":120095,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"EhFrameHdr","qualname":"::read::cfi::EhFrameHdr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","sig":null,"attributes":[{"value":"/ `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119783,"byte_end":119859,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119860,"byte_end":119863,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ A pointer to the start of the `.eh_frame` data, and optionally, a binary","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119864,"byte_end":119940,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ search table of pointers to the `.eh_frame` records that are found in this section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119941,"byte_end":120028,"line_start":101,"line_end":101,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":5302},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120236,"byte_end":120252,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"ParsedEhFrameHdr","qualname":"::read::cfi::ParsedEhFrameHdr","value":"ParsedEhFrameHdr {  }","parent":null,"children":[{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":" `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120112,"byte_end":120200,"line_start":105,"line_end":105,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120588,"byte_end":120591,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrameHdr<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120488,"byte_end":120576,"line_start":121,"line_end":121,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120805,"byte_end":120810,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"parse","qualname":"<EhFrameHdr<R>>::parse","value":"pub fn parse(&Self, &BaseAddresses, u8) -> Result<ParsedEhFrameHdr<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.\n","sig":null,"attributes":[{"value":"/ Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120740,"byte_end":120793,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122832,"byte_end":122844,"line_start":194,"line_end":194,"column_start":12,"column_end":24},"name":"eh_frame_ptr","qualname":"<ParsedEhFrameHdr<R>>::eh_frame_ptr","value":"pub fn eh_frame_ptr(&Self) -> Pointer","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the binary's `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ Returns the address of the binary's `.eh_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122760,"byte_end":122820,"line_start":193,"line_end":193,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122973,"byte_end":122978,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"table","qualname":"<ParsedEhFrameHdr<R>>::table","value":"pub fn table(&Self) -> Option<EhHdrTable<, R>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the CFI binary search table, if there is one.\n","sig":null,"attributes":[{"value":"/ Retrieves the CFI binary search table, if there is one.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122902,"byte_end":122961,"line_start":198,"line_end":198,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":123973,"byte_end":123983,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"EhHdrTable","qualname":"::read::cfi::EhHdrTable","value":"EhHdrTable {  }","parent":null,"children":[{"krate":0,"index":5319}],"decl_id":null,"docs":" The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":123849,"byte_end":123937,"line_start":217,"line_end":217,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124408,"byte_end":124414,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"lookup","qualname":"<EhHdrTable>::lookup","value":"pub fn lookup(&Self, u64, &BaseAddresses) -> Result<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" *Probably* returns a pointer to the FDE for the given address.","sig":null,"attributes":[{"value":"/ *Probably* returns a pointer to the FDE for the given address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124087,"byte_end":124153,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124158,"byte_end":124161,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This performs a binary search, so if there is no FDE for the given address,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124166,"byte_end":124245,"line_start":226,"line_end":226,"column_start":5,"column_end":84}},{"value":"/ this function **will** return a pointer to any other FDE that's close by.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124250,"byte_end":124327,"line_start":227,"line_end":227,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124332,"byte_end":124335,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ To be sure, you **must** call `contains` on the FDE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124340,"byte_end":124396,"line_start":229,"line_end":229,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":126439,"byte_end":126456,"line_start":288,"line_end":288,"column_start":12,"column_end":29},"name":"pointer_to_offset","qualname":"<EhHdrTable>::pointer_to_offset","value":"pub fn pointer_to_offset(&Self, Pointer) -> Result<EhFrameOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Pointer` to a section offset.","sig":null,"attributes":[{"value":"/ Convert a `Pointer` to a section offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":126326,"byte_end":126370,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":126375,"byte_end":126378,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This does not support indirect pointers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":126383,"byte_end":126427,"line_start":287,"line_end":287,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127841,"byte_end":127856,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"fde_for_address","qualname":"<EhHdrTable>::fde_for_address","value":"pub fn fde_for_address<F>(&Self, &EhFrame<R>, &BaseAddresses, u64, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`\n if there are none.","sig":null,"attributes":[{"value":"/ Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":126964,"byte_end":127039,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ if there are none.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127044,"byte_end":127066,"line_start":304,"line_end":304,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127071,"byte_end":127074,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get its associated CIE. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127079,"byte_end":127141,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127146,"byte_end":127209,"line_start":307,"line_end":307,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127214,"byte_end":127217,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127222,"byte_end":127235,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127240,"byte_end":127243,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127248,"byte_end":127255,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{BaseAddresses, EhFrame, ParsedEhFrameHdr, EndianSlice, NativeEndian, Error, UnwindSection};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127260,"byte_end":127369,"line_start":312,"line_end":312,"column_start":5,"column_end":114}},{"value":"/ # fn foo() -> Result<(), Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127374,"byte_end":127411,"line_start":313,"line_end":313,"column_start":5,"column_end":42}},{"value":"/ # let eh_frame: EhFrame<EndianSlice<NativeEndian>> = unreachable!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127416,"byte_end":127488,"line_start":314,"line_end":314,"column_start":5,"column_end":77}},{"value":"/ # let eh_frame_hdr: ParsedEhFrameHdr<EndianSlice<NativeEndian>> = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127493,"byte_end":127580,"line_start":315,"line_end":315,"column_start":5,"column_end":92}},{"value":"/ # let addr = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127585,"byte_end":127604,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127609,"byte_end":127644,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/ let table = eh_frame_hdr.table().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127649,"byte_end":127695,"line_start":318,"line_end":318,"column_start":5,"column_end":51}},{"value":"/ let fde = table.fde_for_address(&eh_frame, &bases, addr, EhFrame::cie_from_offset)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127700,"byte_end":127788,"line_start":319,"line_end":319,"column_start":5,"column_end":93}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127793,"byte_end":127805,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127810,"byte_end":127817,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":127822,"byte_end":127829,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":128630,"byte_end":128646,"line_start":350,"line_end":350,"column_start":12,"column_end":28},"name":"lookup_and_parse","qualname":"<EhHdrTable>::lookup_and_parse","value":"pub fn lookup_and_parse<F>(&Self, u64, &BaseAddresses, EhFrame<R>, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":128509,"byte_end":128518,"line_start":347,"line_end":347,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Method renamed to fde_for_address; use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":128542,"byte_end":128618,"line_start":349,"line_end":349,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129327,"byte_end":129350,"line_start":372,"line_end":372,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<EhHdrTable>::unwind_info_for_address","value":"pub fn unwind_info_for_address<F>(&Self, &EhFrame<R>, &BaseAddresses,\n                                  &mut UninitializedUnwindContext<R>, u64, F)\n-> Result<UnwindTableRow<R>> where\nF: FnMut(&EhFrame<R>, &BaseAddresses, EhFrameOffset<R::Offset>) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame unwind information for the given address,\n or `NoUnwindInfoForAddress` if there are none.","sig":null,"attributes":[{"value":"/ Returns the frame unwind information for the given address,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129054,"byte_end":129117,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/ or `NoUnwindInfoForAddress` if there are none.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129122,"byte_end":129172,"line_start":368,"line_end":368,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129177,"byte_end":129180,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get the associated CIE. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129185,"byte_end":129247,"line_start":370,"line_end":370,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129252,"byte_end":129315,"line_start":371,"line_end":371,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5328},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130352,"byte_end":130359,"line_start":403,"line_end":403,"column_start":12,"column_end":19},"name":"EhFrame","qualname":"::read::cfi::EhFrame","value":"EhFrame {  }","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331}],"decl_id":null,"docs":" `EhFrame` contains the frame unwinding information needed during exception\n handling found in the `.eh_frame` section.","sig":null,"attributes":[{"value":"/ `EhFrame` contains the frame unwinding information needed during exception","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129874,"byte_end":129952,"line_start":392,"line_end":392,"column_start":1,"column_end":79}},{"value":"/ handling found in the `.eh_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":129953,"byte_end":129999,"line_start":393,"line_end":393,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130000,"byte_end":130003,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ Most interesting methods are defined in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130004,"byte_end":130051,"line_start":395,"line_end":395,"column_start":1,"column_end":48}},{"value":"/ [`UnwindSection`](trait.UnwindSection.html) trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130052,"byte_end":130106,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130107,"byte_end":130110,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130111,"byte_end":130118,"line_start":398,"line_end":398,"column_start":1,"column_end":8}},{"value":"/ [`DebugFrame`](./struct.DebugFrame.html#differences-between-debug_frame-and-eh_frame)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130119,"byte_end":130208,"line_start":399,"line_end":399,"column_start":1,"column_end":90}},{"value":"/ for some discussion on the differences between `.debug_frame` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130209,"byte_end":130278,"line_start":400,"line_end":400,"column_start":1,"column_end":70}},{"value":"/ `.eh_frame`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130279,"byte_end":130295,"line_start":401,"line_end":401,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130560,"byte_end":130576,"line_start":412,"line_end":412,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<EhFrame<R>>::set_address_size","value":"pub fn set_address_size(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[{"value":"/ Set the size of a target address in bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130447,"byte_end":130493,"line_start":409,"line_end":409,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130498,"byte_end":130501,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This defaults to the native word size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130506,"byte_end":130548,"line_start":411,"line_end":411,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131373,"byte_end":131376,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrame<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EhFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Construct a new `EhFrame` instance from the data in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130751,"byte_end":130810,"line_start":421,"line_end":421,"column_start":5,"column_end":64}},{"value":"/ `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130815,"byte_end":130842,"line_start":422,"line_end":422,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130847,"byte_end":130850,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the section and present it as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130855,"byte_end":130930,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ a `&[u8]` slice. That means using some ELF loader on Linux, a Mach-O","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130935,"byte_end":131007,"line_start":425,"line_end":425,"column_start":5,"column_end":77}},{"value":"/ loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131012,"byte_end":131035,"line_start":426,"line_end":426,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131040,"byte_end":131043,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131048,"byte_end":131055,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EhFrame, EndianSlice, NativeEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131060,"byte_end":131112,"line_start":429,"line_end":429,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131117,"byte_end":131120,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Use with `.debug_frame`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131125,"byte_end":131155,"line_start":431,"line_end":431,"column_start":5,"column_end":35}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131160,"byte_end":131201,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_frame_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131206,"byte_end":131259,"line_start":433,"line_end":433,"column_start":5,"column_end":58}},{"value":"/ let debug_frame = EhFrame::new(read_debug_frame_section_somehow(), NativeEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131264,"byte_end":131349,"line_start":434,"line_end":434,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131354,"byte_end":131361,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5352},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132150,"byte_end":132153,"line_start":467,"line_end":467,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::cfi::CieOffsetEncoding::U32","value":"CieOffsetEncoding::U32","parent":{"krate":0,"index":5351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132159,"byte_end":132162,"line_start":468,"line_end":468,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::cfi::CieOffsetEncoding::U64","value":"CieOffsetEncoding::U64","parent":{"krate":0,"index":5351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5351},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132126,"byte_end":132143,"line_start":466,"line_end":466,"column_start":10,"column_end":27},"name":"CieOffsetEncoding","qualname":"::read::cfi::CieOffsetEncoding","value":"pub enum CieOffsetEncoding { U32, U64, }","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5354}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132049,"byte_end":132071,"line_start":464,"line_end":464,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132280,"byte_end":132292,"line_start":474,"line_end":474,"column_start":11,"column_end":23},"name":"UnwindOffset","qualname":"::read::cfi::UnwindOffset","value":"UnwindOffset<T = usize>: Copy + Debug + Eq + From<T>","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" An offset into an `UnwindSection`.\n","sig":null,"attributes":[{"value":"/ An offset into an `UnwindSection`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132167,"byte_end":132205,"line_start":471,"line_end":471,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132418,"byte_end":132422,"line_start":479,"line_end":479,"column_start":8,"column_end":12},"name":"into","qualname":"::read::cfi::UnwindOffset::into","value":"pub fn into(Self) -> T","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Convert an `UnwindOffset<T>` into a `T`.\n","sig":null,"attributes":[{"value":"/ Convert an `UnwindOffset<T>` into a `T`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132366,"byte_end":132410,"line_start":478,"line_end":478,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132920,"byte_end":132941,"line_start":506,"line_end":506,"column_start":11,"column_end":32},"name":"_UnwindSectionPrivate","qualname":"::read::cfi::_UnwindSectionPrivate","value":"_UnwindSectionPrivate<R: Reader>","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"decl_id":null,"docs":" This trait completely encapsulates everything that is different between\n `.eh_frame` and `.debug_frame`, as well as all the bits that can change\n between DWARF versions.\n","sig":null,"attributes":[{"value":"/ This trait completely encapsulates everything that is different between","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132715,"byte_end":132790,"line_start":502,"line_end":502,"column_start":1,"column_end":76}},{"value":"/ `.eh_frame` and `.debug_frame`, as well as all the bits that can change","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132791,"byte_end":132866,"line_start":503,"line_end":503,"column_start":1,"column_end":76}},{"value":"/ between DWARF versions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132867,"byte_end":132894,"line_start":504,"line_end":504,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133003,"byte_end":133010,"line_start":508,"line_end":508,"column_start":8,"column_end":15},"name":"section","qualname":"::read::cfi::_UnwindSectionPrivate::section","value":"pub fn section(&Self) -> &R","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Get the underlying section data.\n","sig":null,"attributes":[{"value":"/ Get the underlying section data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132959,"byte_end":132995,"line_start":507,"line_end":507,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133137,"byte_end":133167,"line_start":512,"line_end":512,"column_start":8,"column_end":38},"name":"length_value_is_end_of_entries","qualname":"::read::cfi::_UnwindSectionPrivate::length_value_is_end_of_entries","value":"pub fn length_value_is_end_of_entries(R::Offset) -> bool","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Returns true if the given length value should be considered an\n end-of-entries sentinel.\n","sig":null,"attributes":[{"value":"/ Returns true if the given length value should be considered an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133030,"byte_end":133096,"line_start":510,"line_end":510,"column_start":5,"column_end":71}},{"value":"/ end-of-entries sentinel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133101,"byte_end":133129,"line_start":511,"line_end":511,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133282,"byte_end":133288,"line_start":515,"line_end":515,"column_start":8,"column_end":14},"name":"is_cie","qualname":"::read::cfi::_UnwindSectionPrivate::is_cie","value":"pub fn is_cie(Format, u64) -> bool","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Return true if the given offset if the CIE sentinel, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if the given offset if the CIE sentinel, false otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133201,"byte_end":133274,"line_start":514,"line_end":514,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133438,"byte_end":133457,"line_start":519,"line_end":519,"column_start":8,"column_end":27},"name":"cie_offset_encoding","qualname":"::read::cfi::_UnwindSectionPrivate::cie_offset_encoding","value":"pub fn cie_offset_encoding(Format) -> CieOffsetEncoding","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Return the CIE offset/ID encoding used by this unwind section with the\n given DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the CIE offset/ID encoding used by this unwind section with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133328,"byte_end":133402,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ given DWARF format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133407,"byte_end":133430,"line_start":518,"line_end":518,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133860,"byte_end":133878,"line_start":526,"line_end":526,"column_start":8,"column_end":26},"name":"resolve_cie_offset","qualname":"::read::cfi::_UnwindSectionPrivate::resolve_cie_offset","value":"pub fn resolve_cie_offset(&Self, R::Offset, R::Offset) -> Option<R::Offset>","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" For `.eh_frame`, CIE offsets are relative to the current position. For\n `.debug_frame`, they are relative to the start of the section. We always\n internally store them relative to the section, so we handle translating\n `.eh_frame`'s relative offsets in this method. If the offset calculation\n underflows, return `None`.\n","sig":null,"attributes":[{"value":"/ For `.eh_frame`, CIE offsets are relative to the current position. For","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133501,"byte_end":133575,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ `.debug_frame`, they are relative to the start of the section. We always","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133580,"byte_end":133656,"line_start":522,"line_end":522,"column_start":5,"column_end":81}},{"value":"/ internally store them relative to the section, so we handle translating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133661,"byte_end":133736,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ `.eh_frame`'s relative offsets in this method. If the offset calculation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133741,"byte_end":133817,"line_start":524,"line_end":524,"column_start":5,"column_end":81}},{"value":"/ underflows, return `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133822,"byte_end":133852,"line_start":525,"line_end":525,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134055,"byte_end":134084,"line_start":530,"line_end":530,"column_start":8,"column_end":37},"name":"has_address_and_segment_sizes","qualname":"::read::cfi::_UnwindSectionPrivate::has_address_and_segment_sizes","value":"pub fn has_address_and_segment_sizes(u8) -> bool","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Does this version of this unwind section encode address and segment\n sizes in its CIEs?\n","sig":null,"attributes":[{"value":"/ Does this version of this unwind section encode address and segment","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":133949,"byte_end":134020,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ sizes in its CIEs?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134025,"byte_end":134047,"line_start":529,"line_end":529,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134197,"byte_end":134209,"line_start":533,"line_end":533,"column_start":8,"column_end":20},"name":"address_size","qualname":"::read::cfi::_UnwindSectionPrivate::address_size","value":"pub fn address_size(&Self) -> u8","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" The address size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[{"value":"/ The address size to use if `has_address_and_segment_sizes` returns false.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134112,"byte_end":134189,"line_start":532,"line_end":532,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134314,"byte_end":134326,"line_start":536,"line_end":536,"column_start":8,"column_end":20},"name":"segment_size","qualname":"::read::cfi::_UnwindSectionPrivate::segment_size","value":"pub fn segment_size(&Self) -> u8","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" The segment size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[{"value":"/ The segment size to use if `has_address_and_segment_sizes` returns false.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134229,"byte_end":134306,"line_start":535,"line_end":535,"column_start":5,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134540,"byte_end":134553,"line_start":542,"line_end":542,"column_start":11,"column_end":24},"name":"UnwindSection","qualname":"::read::cfi::UnwindSection","value":"UnwindSection<R: Reader>: Clone + Debug + _UnwindSectionPrivate<R>","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379}],"decl_id":null,"docs":" A section holding unwind information: either `.debug_frame` or\n `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and\n [`EhFrame`](./struct.EhFrame.html) respectively.\n","sig":null,"attributes":[{"value":"/ A section holding unwind information: either `.debug_frame` or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134344,"byte_end":134410,"line_start":539,"line_end":539,"column_start":1,"column_end":67}},{"value":"/ `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134411,"byte_end":134476,"line_start":540,"line_end":540,"column_start":1,"column_end":66}},{"value":"/ [`EhFrame`](./struct.EhFrame.html) respectively.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134477,"byte_end":134529,"line_start":541,"line_end":541,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134730,"byte_end":134736,"line_start":545,"line_end":545,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::cfi::UnwindSection::Offset","value":"type Offset: UnwindOffset<R::Offset>;","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" The offset type associated with this CFI section. Either\n `DebugFrameOffset` or `EhFrameOffset`.\n","sig":null,"attributes":[{"value":"/ The offset type associated with this CFI section. Either","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134613,"byte_end":134673,"line_start":543,"line_end":543,"column_start":5,"column_end":65}},{"value":"/ `DebugFrameOffset` or `EhFrameOffset`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134678,"byte_end":134720,"line_start":544,"line_end":544,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134996,"byte_end":135003,"line_start":552,"line_end":552,"column_start":8,"column_end":15},"name":"entries","qualname":"::read::cfi::UnwindSection::entries","value":"pub fn entries<'bases>(&Self, &'bases BaseAddresses) -> CfiEntriesIter","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s\n in this `.debug_frame` section.","sig":null,"attributes":[{"value":"/ Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134768,"byte_end":134843,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ in this `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134848,"byte_end":134883,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134888,"byte_end":134891,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134896,"byte_end":134917,"line_start":550,"line_end":550,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134922,"byte_end":134988,"line_start":551,"line_end":551,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":135296,"byte_end":135311,"line_start":561,"line_end":561,"column_start":8,"column_end":23},"name":"cie_from_offset","qualname":"::read::cfi::UnwindSection::cie_from_offset","value":"pub fn cie_from_offset(&Self, &BaseAddresses, Self::Offset)\n-> Result<CommonInformationEntry<R>>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Parse the `CommonInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `CommonInformationEntry` at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":135229,"byte_end":135288,"line_start":560,"line_end":560,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":135703,"byte_end":135726,"line_start":573,"line_end":573,"column_start":8,"column_end":31},"name":"partial_fde_from_offset","qualname":"::read::cfi::UnwindSection::partial_fde_from_offset","value":"pub fn partial_fde_from_offset<'bases>(&Self, &'bases BaseAddresses,\n                                       Self::Offset)\n-> Result<PartialFrameDescriptionEntry>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Parse the `PartialFrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `PartialFrameDescriptionEntry` at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":135630,"byte_end":135695,"line_start":572,"line_end":572,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136160,"byte_end":136175,"line_start":585,"line_end":585,"column_start":8,"column_end":23},"name":"fde_from_offset","qualname":"::read::cfi::UnwindSection::fde_from_offset","value":"pub fn fde_from_offset<F>(&Self, &BaseAddresses, Self::Offset, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Parse the `FrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Parse the `FrameDescriptionEntry` at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136094,"byte_end":136152,"line_start":584,"line_end":584,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":137076,"byte_end":137091,"line_start":609,"line_end":609,"column_start":8,"column_end":23},"name":"fde_for_address","qualname":"::read::cfi::UnwindSection::fde_for_address","value":"pub fn fde_for_address<F>(&Self, &BaseAddresses, u64, F)\n-> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Find the `FrameDescriptionEntry` for the given address.","sig":null,"attributes":[{"value":"/ Find the `FrameDescriptionEntry` for the given address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136536,"byte_end":136595,"line_start":598,"line_end":598,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136600,"byte_end":136603,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ If found, the FDE is returned.  If not found,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136608,"byte_end":136657,"line_start":600,"line_end":600,"column_start":5,"column_end":54}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136662,"byte_end":136722,"line_start":601,"line_end":601,"column_start":5,"column_end":65}},{"value":"/ If parsing fails, the error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136727,"byte_end":136771,"line_start":602,"line_end":602,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136776,"byte_end":136779,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ You must provide a function to get its associated CIE. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136784,"byte_end":136846,"line_start":604,"line_end":604,"column_start":5,"column_end":67}},{"value":"/ `PartialFrameDescriptionEntry::parse` for more information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136851,"byte_end":136914,"line_start":605,"line_end":605,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136919,"byte_end":136922,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Note: this iterates over all FDEs. If available, it is possible","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136927,"byte_end":136994,"line_start":607,"line_end":607,"column_start":5,"column_end":72}},{"value":"/ to do a binary search with `EhFrameHdr::fde_for_address` instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":136999,"byte_end":137068,"line_start":608,"line_end":608,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139741,"byte_end":139764,"line_start":679,"line_end":679,"column_start":8,"column_end":31},"name":"unwind_info_for_address","qualname":"::read::cfi::UnwindSection::unwind_info_for_address","value":"pub fn unwind_info_for_address<F>(&Self, &BaseAddresses,\n                                  &mut UninitializedUnwindContext<R>, u64, F)\n-> Result<UnwindTableRow<R>> where\nF: FnMut(&Self, &BaseAddresses, Self::Offset) ->\nResult<CommonInformationEntry<R>>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"/ Find the frame unwind information for the given address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":137809,"byte_end":137869,"line_start":633,"line_end":633,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":137874,"byte_end":137877,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ If found, the unwind information is returned.  If not found,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":137882,"byte_end":137946,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned. If parsing or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":137951,"byte_end":138025,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ CFI evaluation fails, the error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138030,"byte_end":138078,"line_start":637,"line_end":637,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138083,"byte_end":138086,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138091,"byte_end":138098,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use gimli::{BaseAddresses, EhFrame, EndianSlice, NativeEndian, UninitializedUnwindContext,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138103,"byte_end":138197,"line_start":640,"line_end":640,"column_start":5,"column_end":99}},{"value":"/             UnwindSection};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138202,"byte_end":138233,"line_start":641,"line_end":641,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138238,"byte_end":138241,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # fn foo() -> gimli::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138246,"byte_end":138283,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/ # let read_eh_frame_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138288,"byte_end":138342,"line_start":644,"line_end":644,"column_start":5,"column_end":59}},{"value":"/ // Get the `.eh_frame` section from the object file. Alternatively,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138347,"byte_end":138418,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/ // use `EhFrame` with the `.eh_frame` section of the object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138423,"byte_end":138492,"line_start":646,"line_end":646,"column_start":5,"column_end":74}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_section(), NativeEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138497,"byte_end":138568,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138573,"byte_end":138576,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # let get_frame_pc = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138581,"byte_end":138626,"line_start":649,"line_end":649,"column_start":5,"column_end":50}},{"value":"/ // Get the address of the PC for a frame you'd like to unwind.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138631,"byte_end":138697,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ let address = get_frame_pc();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138702,"byte_end":138735,"line_start":651,"line_end":651,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138740,"byte_end":138743,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ // This context is reusable, which cuts down on heap allocations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138748,"byte_end":138817,"line_start":653,"line_end":653,"column_start":5,"column_end":74}},{"value":"/ let ctx = UninitializedUnwindContext::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138822,"byte_end":138870,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138875,"byte_end":138878,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ // Optionally provide base addresses for any relative pointers. If a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138883,"byte_end":138955,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ // base address isn't provided and a pointer is found that is relative to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":138960,"byte_end":139037,"line_start":657,"line_end":657,"column_start":5,"column_end":82}},{"value":"/ // it, we will return an `Err`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139042,"byte_end":139077,"line_start":658,"line_end":658,"column_start":5,"column_end":40}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139082,"byte_end":139145,"line_start":659,"line_end":659,"column_start":5,"column_end":68}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139150,"byte_end":139212,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139217,"byte_end":139257,"line_start":661,"line_end":661,"column_start":5,"column_end":45}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139262,"byte_end":139314,"line_start":662,"line_end":662,"column_start":5,"column_end":57}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139319,"byte_end":139370,"line_start":663,"line_end":663,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139375,"byte_end":139378,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let unwind_info = eh_frame.unwind_info_for_address(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139383,"byte_end":139438,"line_start":665,"line_end":665,"column_start":5,"column_end":60}},{"value":"/     &bases,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139443,"byte_end":139458,"line_start":666,"line_end":666,"column_start":5,"column_end":20}},{"value":"/     &mut ctx,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139463,"byte_end":139480,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/     address,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139485,"byte_end":139501,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/     EhFrame::cie_from_offset,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139506,"byte_end":139539,"line_start":669,"line_end":669,"column_start":5,"column_end":38}},{"value":"/ )?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139544,"byte_end":139551,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139556,"byte_end":139559,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # let do_stuff_with = |_| unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139564,"byte_end":139611,"line_start":672,"line_end":672,"column_start":5,"column_end":52}},{"value":"/ do_stuff_with(unwind_info);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139616,"byte_end":139647,"line_start":673,"line_end":673,"column_start":5,"column_end":36}},{"value":"/ # let _ = ctx;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139652,"byte_end":139670,"line_start":674,"line_end":674,"column_start":5,"column_end":23}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139675,"byte_end":139695,"line_start":675,"line_end":675,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139700,"byte_end":139707,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139712,"byte_end":139719,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":139724,"byte_end":139733,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5367},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143151,"byte_end":143164,"line_start":801,"line_end":801,"column_start":12,"column_end":25},"name":"BaseAddresses","qualname":"::read::cfi::BaseAddresses","value":"BaseAddresses { eh_frame_hdr, eh_frame }","parent":null,"children":[{"krate":0,"index":5368},{"krate":0,"index":5369}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","sig":null,"attributes":[{"value":"/ Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142172,"byte_end":142247,"line_start":778,"line_end":778,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142248,"byte_end":142251,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ During CIE/FDE parsing, if a relative pointer is encountered for a base","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142252,"byte_end":142327,"line_start":780,"line_end":780,"column_start":1,"column_end":76}},{"value":"/ address that is unknown, an Err will be returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142328,"byte_end":142381,"line_start":781,"line_end":781,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142382,"byte_end":142385,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142386,"byte_end":142393,"line_start":783,"line_end":783,"column_start":1,"column_end":8}},{"value":"/ use gimli::BaseAddresses;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142394,"byte_end":142423,"line_start":784,"line_end":784,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142424,"byte_end":142427,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ # fn foo() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142428,"byte_end":142444,"line_start":786,"line_end":786,"column_start":1,"column_end":17}},{"value":"/ # let address_of_eh_frame_hdr_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142445,"byte_end":142516,"line_start":787,"line_end":787,"column_start":1,"column_end":72}},{"value":"/ # let address_of_eh_frame_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142517,"byte_end":142584,"line_start":788,"line_end":788,"column_start":1,"column_end":68}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142585,"byte_end":142648,"line_start":789,"line_end":789,"column_start":1,"column_end":64}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142649,"byte_end":142711,"line_start":790,"line_end":790,"column_start":1,"column_end":63}},{"value":"/ # let address_of_the_start_of_current_func = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142712,"byte_end":142778,"line_start":791,"line_end":791,"column_start":1,"column_end":67}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142779,"byte_end":142819,"line_start":792,"line_end":792,"column_start":1,"column_end":41}},{"value":"/     .set_eh_frame_hdr(address_of_eh_frame_hdr_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142820,"byte_end":142888,"line_start":793,"line_end":793,"column_start":1,"column_end":69}},{"value":"/     .set_eh_frame(address_of_eh_frame_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142889,"byte_end":142949,"line_start":794,"line_end":794,"column_start":1,"column_end":61}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142950,"byte_end":143002,"line_start":795,"line_end":795,"column_start":1,"column_end":53}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143003,"byte_end":143054,"line_start":796,"line_end":796,"column_start":1,"column_end":52}},{"value":"/ # let _ = bases;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143055,"byte_end":143075,"line_start":797,"line_end":797,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143076,"byte_end":143083,"line_start":798,"line_end":798,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143084,"byte_end":143091,"line_start":799,"line_end":799,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":5368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143254,"byte_end":143266,"line_start":803,"line_end":803,"column_start":9,"column_end":21},"name":"eh_frame_hdr","qualname":"::read::cfi::BaseAddresses::eh_frame_hdr","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[{"value":"/ The base addresses to use for pointers in the `.eh_frame_hdr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143171,"byte_end":143245,"line_start":802,"line_end":802,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5369},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143374,"byte_end":143382,"line_start":806,"line_end":806,"column_start":9,"column_end":17},"name":"eh_frame","qualname":"::read::cfi::BaseAddresses::eh_frame","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame` section.\n","sig":null,"attributes":[{"value":"/ The base addresses to use for pointers in the `.eh_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143295,"byte_end":143365,"line_start":805,"line_end":805,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":5383},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143657,"byte_end":143677,"line_start":814,"line_end":814,"column_start":12,"column_end":32},"name":"SectionBaseAddresses","qualname":"::read::cfi::SectionBaseAddresses","value":"SectionBaseAddresses { section, text, data }","parent":null,"children":[{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers\n in a particular section.","sig":null,"attributes":[{"value":"/ Optional base addresses for the relative `DW_EH_PE_*` encoded pointers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143409,"byte_end":143483,"line_start":809,"line_end":809,"column_start":1,"column_end":75}},{"value":"/ in a particular section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143484,"byte_end":143512,"line_start":810,"line_end":810,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143513,"byte_end":143516,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ See `BaseAddresses` for methods that are helpful in setting these addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143517,"byte_end":143597,"line_start":812,"line_end":812,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":5384},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143747,"byte_end":143754,"line_start":816,"line_end":816,"column_start":9,"column_end":16},"name":"section","qualname":"::read::cfi::SectionBaseAddresses::section","value":"core::option::Option<u64>","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":" The address of the section containing the pointer.\n","sig":null,"attributes":[{"value":"/ The address of the section containing the pointer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143684,"byte_end":143738,"line_start":815,"line_end":815,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5385},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143893,"byte_end":143897,"line_start":820,"line_end":820,"column_start":9,"column_end":13},"name":"text","qualname":"::read::cfi::SectionBaseAddresses::text","value":"core::option::Option<u64>","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":" The base address for text relative pointers.\n This is generally the address of the `.text` section.\n","sig":null,"attributes":[{"value":"/ The base address for text relative pointers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143774,"byte_end":143822,"line_start":818,"line_end":818,"column_start":5,"column_end":53}},{"value":"/ This is generally the address of the `.text` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143827,"byte_end":143884,"line_start":819,"line_end":819,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5386},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144240,"byte_end":144244,"line_start":829,"line_end":829,"column_start":9,"column_end":13},"name":"data","qualname":"::read::cfi::SectionBaseAddresses::data","value":"core::option::Option<u64>","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":" The base address for data relative pointers.","sig":null,"attributes":[{"value":"/ The base address for data relative pointers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143917,"byte_end":143965,"line_start":822,"line_end":822,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143970,"byte_end":143973,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ For pointers in the `.eh_frame_hdr` section, this is the address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":143978,"byte_end":144046,"line_start":824,"line_end":824,"column_start":5,"column_end":73}},{"value":"/ of the `.eh_frame_hdr` section","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144051,"byte_end":144085,"line_start":825,"line_end":825,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144090,"byte_end":144093,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ For pointers in the `.eh_frame` section, this is generally the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144098,"byte_end":144164,"line_start":827,"line_end":827,"column_start":5,"column_end":71}},{"value":"/ global pointer, such as the address of the `.got` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144169,"byte_end":144231,"line_start":828,"line_end":828,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144362,"byte_end":144378,"line_start":835,"line_end":835,"column_start":12,"column_end":28},"name":"set_eh_frame_hdr","qualname":"<BaseAddresses>::set_eh_frame_hdr","value":"pub fn set_eh_frame_hdr(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame_hdr` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.eh_frame_hdr` section base address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144287,"byte_end":144336,"line_start":833,"line_end":833,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144341,"byte_end":144350,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144598,"byte_end":144610,"line_start":843,"line_end":843,"column_start":12,"column_end":24},"name":"set_eh_frame","qualname":"<BaseAddresses>::set_eh_frame","value":"pub fn set_eh_frame(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.eh_frame` section base address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144527,"byte_end":144572,"line_start":841,"line_end":841,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144577,"byte_end":144586,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144777,"byte_end":144785,"line_start":850,"line_end":850,"column_start":12,"column_end":20},"name":"set_text","qualname":"<BaseAddresses>::set_text","value":"pub fn set_text(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.text` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.text` section base address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144710,"byte_end":144751,"line_start":848,"line_end":848,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144756,"byte_end":144765,"line_start":849,"line_end":849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144993,"byte_end":145000,"line_start":858,"line_end":858,"column_start":12,"column_end":19},"name":"set_got","qualname":"<BaseAddresses>::set_got","value":"pub fn set_got(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.got` section base address.\n","sig":null,"attributes":[{"value":"/ Set the `.got` section base address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144927,"byte_end":144967,"line_start":856,"line_end":856,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144972,"byte_end":144981,"line_start":857,"line_end":857,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5400},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146788,"byte_end":146802,"line_start":904,"line_end":904,"column_start":12,"column_end":26},"name":"CfiEntriesIter","qualname":"::read::cfi::CfiEntriesIter","value":"CfiEntriesIter {  }","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406}],"decl_id":null,"docs":" An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`\n section.","sig":null,"attributes":[{"value":"/ An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145095,"byte_end":145170,"line_start":864,"line_end":864,"column_start":1,"column_end":76}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145171,"byte_end":145183,"line_start":865,"line_end":865,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145184,"byte_end":145187,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ Some pointers may be encoded relative to various base addresses. Use the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145188,"byte_end":145264,"line_start":867,"line_end":867,"column_start":1,"column_end":77}},{"value":"/ [`BaseAddresses`](./struct.BaseAddresses.html) parameter to provide them. By","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145265,"byte_end":145345,"line_start":868,"line_end":868,"column_start":1,"column_end":81}},{"value":"/ default, none are provided. If a relative pointer is encountered for a base","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145346,"byte_end":145425,"line_start":869,"line_end":869,"column_start":1,"column_end":80}},{"value":"/ address that is unknown, an `Err` will be returned and iteration will abort.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145426,"byte_end":145506,"line_start":870,"line_end":870,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145507,"byte_end":145510,"line_start":871,"line_end":871,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145511,"byte_end":145532,"line_start":872,"line_end":872,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145533,"byte_end":145599,"line_start":873,"line_end":873,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145600,"byte_end":145603,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145604,"byte_end":145611,"line_start":875,"line_end":875,"column_start":1,"column_end":8}},{"value":"/ use gimli::{BaseAddresses, EhFrame, EndianSlice, NativeEndian, UnwindSection};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145612,"byte_end":145694,"line_start":876,"line_end":876,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145695,"byte_end":145698,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> gimli::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145699,"byte_end":145736,"line_start":878,"line_end":878,"column_start":1,"column_end":38}},{"value":"/ # let read_eh_frame_somehow = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145737,"byte_end":145791,"line_start":879,"line_end":879,"column_start":1,"column_end":55}},{"value":"/ let eh_frame = EhFrame::new(read_eh_frame_somehow(), NativeEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145792,"byte_end":145863,"line_start":880,"line_end":880,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145864,"byte_end":145867,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ # let address_of_eh_frame_hdr_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145868,"byte_end":145939,"line_start":882,"line_end":882,"column_start":1,"column_end":72}},{"value":"/ # let address_of_eh_frame_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":145940,"byte_end":146007,"line_start":883,"line_end":883,"column_start":1,"column_end":68}},{"value":"/ # let address_of_text_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146008,"byte_end":146071,"line_start":884,"line_end":884,"column_start":1,"column_end":64}},{"value":"/ # let address_of_got_section_in_memory = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146072,"byte_end":146134,"line_start":885,"line_end":885,"column_start":1,"column_end":63}},{"value":"/ # let address_of_the_start_of_current_func = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146135,"byte_end":146201,"line_start":886,"line_end":886,"column_start":1,"column_end":67}},{"value":"/ // Provide base addresses for relative pointers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146202,"byte_end":146254,"line_start":887,"line_end":887,"column_start":1,"column_end":53}},{"value":"/ let bases = BaseAddresses::default()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146255,"byte_end":146295,"line_start":888,"line_end":888,"column_start":1,"column_end":41}},{"value":"/     .set_eh_frame_hdr(address_of_eh_frame_hdr_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146296,"byte_end":146364,"line_start":889,"line_end":889,"column_start":1,"column_end":69}},{"value":"/     .set_eh_frame(address_of_eh_frame_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146365,"byte_end":146425,"line_start":890,"line_end":890,"column_start":1,"column_end":61}},{"value":"/     .set_text(address_of_text_section_in_memory)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146426,"byte_end":146478,"line_start":891,"line_end":891,"column_start":1,"column_end":53}},{"value":"/     .set_got(address_of_got_section_in_memory);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146479,"byte_end":146530,"line_start":892,"line_end":892,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146531,"byte_end":146534,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ let mut entries = eh_frame.entries(&bases);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146535,"byte_end":146582,"line_start":894,"line_end":894,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146583,"byte_end":146586,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ # let do_stuff_with = |_| unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146587,"byte_end":146634,"line_start":896,"line_end":896,"column_start":1,"column_end":48}},{"value":"/ while let Some(entry) = entries.next()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146635,"byte_end":146680,"line_start":897,"line_end":897,"column_start":1,"column_end":46}},{"value":"/     do_stuff_with(entry)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146681,"byte_end":146709,"line_start":898,"line_end":898,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146710,"byte_end":146715,"line_start":899,"line_end":899,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146716,"byte_end":146736,"line_start":900,"line_end":900,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146737,"byte_end":146744,"line_start":901,"line_end":901,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146745,"byte_end":146752,"line_start":902,"line_end":902,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":147123,"byte_end":147127,"line_start":920,"line_end":920,"column_start":12,"column_end":16},"name":"next","qualname":"<CfiEntriesIter>::next","value":"pub fn next(&mut Self) -> Result<Option<CieOrFde>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next entry.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":147068,"byte_end":147111,"line_start":919,"line_end":919,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5421},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148265,"byte_end":148268,"line_start":961,"line_end":961,"column_start":5,"column_end":8},"name":"Cie","qualname":"::read::cfi::CieOrFde::Cie","value":"CieOrFde::Cie(CommonInformationEntry<R>)","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":" This CFI entry is a `CommonInformationEntry`.\n","sig":null,"attributes":[{"value":"/ This CFI entry is a `CommonInformationEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148211,"byte_end":148260,"line_start":960,"line_end":960,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5424},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148470,"byte_end":148473,"line_start":965,"line_end":965,"column_start":5,"column_end":8},"name":"Fde","qualname":"::read::cfi::CieOrFde::Fde","value":"CieOrFde::Fde(PartialFrameDescriptionEntry)","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":" This CFI entry is a `FrameDescriptionEntry`, however fully parsing it\n requires parsing its CIE first, so it is left in a partially parsed\n state.\n","sig":null,"attributes":[{"value":"/ This CFI entry is a `FrameDescriptionEntry`, however fully parsing it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148301,"byte_end":148374,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ requires parsing its CIE first, so it is left in a partially parsed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148379,"byte_end":148450,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148455,"byte_end":148465,"line_start":964,"line_end":964,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":5417},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":148124,"byte_end":148132,"line_start":955,"line_end":955,"column_start":10,"column_end":18},"name":"CieOrFde","qualname":"::read::cfi::CieOrFde","value":"pub enum CieOrFde<'bases, Section, R> where R: Reader,\n         Section: UnwindSection<R> {\n    Cie(CommonInformationEntry<R>),\n    Fde(PartialFrameDescriptionEntry),\n}","parent":null,"children":[{"krate":0,"index":5421},{"krate":0,"index":5424}],"decl_id":null,"docs":" Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).\n","sig":null,"attributes":[{"value":"/ Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":147996,"byte_end":148075,"line_start":953,"line_end":953,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":5456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":150793,"byte_end":150805,"line_start":1031,"line_end":1031,"column_start":12,"column_end":24},"name":"Augmentation","qualname":"::read::cfi::Augmentation","value":"Augmentation {  }","parent":null,"children":[{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460}],"decl_id":null,"docs":" We support the z-style augmentation [defined by `.eh_frame`][ehframe].","sig":null,"attributes":[{"value":"/ We support the z-style augmentation [defined by `.eh_frame`][ehframe].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":150537,"byte_end":150611,"line_start":1027,"line_end":1027,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":150612,"byte_end":150615,"line_start":1028,"line_end":1028,"column_start":1,"column_end":4}},{"value":"/ [ehframe]: http://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/ehframechpt.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":150616,"byte_end":150727,"line_start":1029,"line_end":1029,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":5490},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":156449,"byte_end":156471,"line_start":1163,"line_end":1163,"column_start":12,"column_end":34},"name":"CommonInformationEntry","qualname":"::read::cfi::CommonInformationEntry","value":"CommonInformationEntry {  }","parent":null,"children":[{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497},{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503}],"decl_id":null,"docs":" > A Common Information Entry holds information that is shared among many\n > Frame Description Entries. There is at least one CIE in every non-empty\n > `.debug_frame` section.\n","sig":null,"attributes":[{"value":"/ > A Common Information Entry holds information that is shared among many","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":156214,"byte_end":156290,"line_start":1159,"line_end":1159,"column_start":1,"column_end":77}},{"value":"/ > Frame Description Entries. There is at least one CIE in every non-empty","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":156291,"byte_end":156368,"line_start":1160,"line_end":1160,"column_start":1,"column_end":78}},{"value":"/ > `.debug_frame` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":156369,"byte_end":156398,"line_start":1161,"line_end":1161,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161458,"byte_end":161464,"line_start":1307,"line_end":1307,"column_start":12,"column_end":18},"name":"offset","qualname":"<CommonInformationEntry<R>>::offset","value":"pub fn offset(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this entry from the start of its containing section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161372,"byte_end":161446,"line_start":1306,"line_end":1306,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161578,"byte_end":161586,"line_start":1312,"line_end":1312,"column_start":12,"column_end":20},"name":"encoding","qualname":"<CommonInformationEntry<R>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this CIE.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this CIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161518,"byte_end":161566,"line_start":1311,"line_end":1311,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161833,"byte_end":161845,"line_start":1321,"line_end":1321,"column_start":12,"column_end":24},"name":"address_size","qualname":"<CommonInformationEntry<R>>::address_size","value":"pub fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this CIE.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this CIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161772,"byte_end":161821,"line_start":1320,"line_end":1320,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162064,"byte_end":162076,"line_start":1329,"line_end":1329,"column_start":12,"column_end":24},"name":"instructions","qualname":"<CommonInformationEntry<R>>::instructions","value":"pub fn instructions<'a, Section>(&Self, &'a Section, &'a BaseAddresses)\n-> CallFrameInstructionIter where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this CIE's initial instructions.","sig":null,"attributes":[{"value":"/ Iterate over this CIE's initial instructions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161898,"byte_end":161947,"line_start":1325,"line_end":1325,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161952,"byte_end":161955,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161960,"byte_end":161981,"line_start":1327,"line_end":1327,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161986,"byte_end":162052,"line_start":1328,"line_end":1328,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162915,"byte_end":162924,"line_start":1353,"line_end":1353,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<CommonInformationEntry<R>>::entry_len","value":"pub fn entry_len(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the CIE structure, not\n > including the length field itself (see Section 7.2.2). The size of the\n > length field plus the value of length must be an integral multiple of\n > the address size.\n","sig":null,"attributes":[{"value":"/ > A constant that gives the number of bytes of the CIE structure, not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162641,"byte_end":162714,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ > including the length field itself (see Section 7.2.2). The size of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162719,"byte_end":162795,"line_start":1350,"line_end":1350,"column_start":5,"column_end":81}},{"value":"/ > length field plus the value of length must be an integral multiple of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162800,"byte_end":162875,"line_start":1351,"line_end":1351,"column_start":5,"column_end":80}},{"value":"/ > the address size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162880,"byte_end":162903,"line_start":1352,"line_end":1352,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163144,"byte_end":163151,"line_start":1359,"line_end":1359,"column_start":12,"column_end":19},"name":"version","qualname":"<CommonInformationEntry<R>>::version","value":"pub fn version(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" > A version number (see Section 7.23). This number is specific to the\n > call frame information and is independent of the DWARF version number.\n","sig":null,"attributes":[{"value":"/ > A version number (see Section 7.23). This number is specific to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":162978,"byte_end":163051,"line_start":1357,"line_end":1357,"column_start":5,"column_end":78}},{"value":"/ > call frame information and is independent of the DWARF version number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163056,"byte_end":163132,"line_start":1358,"line_end":1358,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163365,"byte_end":163377,"line_start":1367,"line_end":1367,"column_start":12,"column_end":24},"name":"augmentation","qualname":"<CommonInformationEntry<R>>::augmentation","value":"pub fn augmentation(&Self) -> Option<&Augmentation>","parent":null,"children":[],"decl_id":null,"docs":" Get the augmentation data, if any exists.","sig":null,"attributes":[{"value":"/ Get the augmentation data, if any exists.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163199,"byte_end":163244,"line_start":1363,"line_end":1363,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163249,"byte_end":163252,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ The only augmentation understood by `gimli` is that which is defined by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163257,"byte_end":163332,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/ `.eh_frame`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163337,"byte_end":163353,"line_start":1366,"line_end":1366,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163510,"byte_end":163518,"line_start":1372,"line_end":1372,"column_start":12,"column_end":20},"name":"has_lsda","qualname":"<CommonInformationEntry<R>>::has_lsda","value":"pub fn has_lsda(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs have a LSDA.\n","sig":null,"attributes":[{"value":"/ True if this CIE's FDEs have a LSDA.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163458,"byte_end":163498,"line_start":1371,"line_end":1371,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163685,"byte_end":163698,"line_start":1377,"line_end":1377,"column_start":12,"column_end":25},"name":"lsda_encoding","qualname":"<CommonInformationEntry<R>>::lsda_encoding","value":"pub fn lsda_encoding(&Self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the LSDA address for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding of the LSDA address for this CIE's FDEs.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163609,"byte_end":163673,"line_start":1376,"line_end":1376,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163906,"byte_end":163931,"line_start":1383,"line_end":1383,"column_start":12,"column_end":37},"name":"personality_with_encoding","qualname":"<CommonInformationEntry<R>>::personality_with_encoding","value":"pub fn personality_with_encoding(&Self)\n-> Option<(constants::DwEhPe, Pointer)>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding and address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding and address of the personality routine handler","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163795,"byte_end":163865,"line_start":1381,"line_end":1381,"column_start":5,"column_end":75}},{"value":"/ for this CIE's FDEs.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":163870,"byte_end":163894,"line_start":1382,"line_end":1382,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164153,"byte_end":164164,"line_start":1389,"line_end":1389,"column_start":12,"column_end":23},"name":"personality","qualname":"<CommonInformationEntry<R>>::personality","value":"pub fn personality(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the address of the personality routine handler","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164055,"byte_end":164112,"line_start":1387,"line_end":1387,"column_start":5,"column_end":62}},{"value":"/ for this CIE's FDEs.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164117,"byte_end":164141,"line_start":1388,"line_end":1388,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164395,"byte_end":164415,"line_start":1397,"line_end":1397,"column_start":12,"column_end":32},"name":"fde_address_encoding","qualname":"<CommonInformationEntry<R>>::fde_address_encoding","value":"pub fn fde_address_encoding(&Self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the addresses for this CIE's FDEs.\n","sig":null,"attributes":[{"value":"/ Return the encoding of the addresses for this CIE's FDEs.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164322,"byte_end":164383,"line_start":1396,"line_end":1396,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164604,"byte_end":164624,"line_start":1402,"line_end":1402,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<CommonInformationEntry<R>>::is_signal_trampoline","value":"pub fn is_signal_trampoline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs are trampolines for signal handlers.\n","sig":null,"attributes":[{"value":"/ True if this CIE's FDEs are trampolines for signal handlers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164528,"byte_end":164592,"line_start":1401,"line_end":1401,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164840,"byte_end":164861,"line_start":1408,"line_end":1408,"column_start":12,"column_end":33},"name":"code_alignment_factor","qualname":"<CommonInformationEntry<R>>::code_alignment_factor","value":"pub fn code_alignment_factor(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of all advance location instructions\n > (see Section 6.4.2.1).\n","sig":null,"attributes":[{"value":"/ > A constant that is factored out of all advance location instructions","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164721,"byte_end":164795,"line_start":1406,"line_end":1406,"column_start":5,"column_end":79}},{"value":"/ > (see Section 6.4.2.1).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164800,"byte_end":164828,"line_start":1407,"line_end":1407,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165085,"byte_end":165106,"line_start":1414,"line_end":1414,"column_start":12,"column_end":33},"name":"data_alignment_factor","qualname":"<CommonInformationEntry<R>>::data_alignment_factor","value":"pub fn data_alignment_factor(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of certain offset instructions (see\n > below). The resulting value is (operand * data_alignment_factor).\n","sig":null,"attributes":[{"value":"/ > A constant that is factored out of certain offset instructions (see","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":164924,"byte_end":164997,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ > below). The resulting value is (operand * data_alignment_factor).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165002,"byte_end":165073,"line_start":1413,"line_end":1413,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165398,"byte_end":165421,"line_start":1421,"line_end":1421,"column_start":12,"column_end":35},"name":"return_address_register","qualname":"<CommonInformationEntry<R>>::return_address_register","value":"pub fn return_address_register(&Self) -> Register","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned ... constant that indicates which column in the rule\n > table represents the return address of the function. Note that this\n > column might not correspond to an actual machine register.\n","sig":null,"attributes":[{"value":"/ > An unsigned ... constant that indicates which column in the rule","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165169,"byte_end":165239,"line_start":1418,"line_end":1418,"column_start":5,"column_end":75}},{"value":"/ > table represents the return address of the function. Note that this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165244,"byte_end":165317,"line_start":1419,"line_end":1419,"column_start":5,"column_end":78}},{"value":"/ > column might not correspond to an actual machine register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165322,"byte_end":165386,"line_start":1420,"line_end":1420,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5527},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165650,"byte_end":165678,"line_start":1430,"line_end":1430,"column_start":12,"column_end":40},"name":"PartialFrameDescriptionEntry","qualname":"::read::cfi::PartialFrameDescriptionEntry","value":"PartialFrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":5531},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537}],"decl_id":null,"docs":" A partially parsed `FrameDescriptionEntry`.","sig":null,"attributes":[{"value":"/ A partially parsed `FrameDescriptionEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165489,"byte_end":165536,"line_start":1426,"line_end":1426,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165537,"byte_end":165540,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/ Fully parsing this FDE requires first parsing its CIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165541,"byte_end":165599,"line_start":1428,"line_end":1428,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":166725,"byte_end":166730,"line_start":1466,"line_end":1466,"column_start":12,"column_end":17},"name":"parse","qualname":"<PartialFrameDescriptionEntry>::parse","value":"pub fn parse<F>(&Self, F) -> Result<FrameDescriptionEntry<R>> where\nF: FnMut(&Section, &BaseAddresses, Section::Offset) ->\nResult<CommonInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Fully parse this FDE.","sig":null,"attributes":[{"value":"/ Fully parse this FDE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":166483,"byte_end":166508,"line_start":1461,"line_end":1461,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":166513,"byte_end":166516,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ You must provide a function get its associated CIE (either by parsing it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":166521,"byte_end":166597,"line_start":1463,"line_end":1463,"column_start":5,"column_end":81}},{"value":"/ on demand, or looking it up in some table mapping offsets to CIEs that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":166602,"byte_end":166676,"line_start":1464,"line_end":1464,"column_start":5,"column_end":79}},{"value":"/ you've already parsed, etc.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":166681,"byte_end":166713,"line_start":1465,"line_end":1465,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5567},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":167303,"byte_end":167324,"line_start":1485,"line_end":1485,"column_start":12,"column_end":33},"name":"FrameDescriptionEntry","qualname":"::read::cfi::FrameDescriptionEntry","value":"FrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578}],"decl_id":null,"docs":" A `FrameDescriptionEntry` is a set of CFA instructions for an address range.\n","sig":null,"attributes":[{"value":"/ A `FrameDescriptionEntry` is a set of CFA instructions for an address range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":167172,"byte_end":167252,"line_start":1483,"line_end":1483,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171516,"byte_end":171520,"line_start":1610,"line_end":1610,"column_start":12,"column_end":16},"name":"rows","qualname":"<FrameDescriptionEntry<R>>::rows","value":"pub fn rows<'a,\n            Section: UnwindSection<R>>(&Self, &'a Section, &'a BaseAddresses,\n                                       &'a mut UninitializedUnwindContext<R>)\n-> Result<UnwindTable>","parent":null,"children":[],"decl_id":null,"docs":" Return the table of unwind information for this FDE.\n","sig":null,"attributes":[{"value":"/ Return the table of unwind information for this FDE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171434,"byte_end":171490,"line_start":1608,"line_end":1608,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171495,"byte_end":171504,"line_start":1609,"line_end":1609,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172143,"byte_end":172166,"line_start":1625,"line_end":1625,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<FrameDescriptionEntry<R>>::unwind_info_for_address","value":"pub fn unwind_info_for_address<Section: UnwindSection<R>>(&Self, &Section,\n                                                          &BaseAddresses,\n                                                          &mut UninitializedUnwindContext<R>,\n                                                          u64)\n-> Result<UnwindTableRow<R>>","parent":null,"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"/ Find the frame unwind information for the given address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171785,"byte_end":171845,"line_start":1619,"line_end":1619,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171850,"byte_end":171853,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ If found, the unwind information is returned along with the reset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171858,"byte_end":171927,"line_start":1621,"line_end":1621,"column_start":5,"column_end":74}},{"value":"/ context in the form `Ok((unwind_info, context))`. If not found,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":171932,"byte_end":171999,"line_start":1622,"line_end":1622,"column_start":5,"column_end":72}},{"value":"/ `Err(gimli::Error::NoUnwindInfoForAddress)` is returned. If parsing or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172004,"byte_end":172078,"line_start":1623,"line_end":1623,"column_start":5,"column_end":79}},{"value":"/ CFI evaluation fails, the error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172083,"byte_end":172131,"line_start":1624,"line_end":1624,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172956,"byte_end":172962,"line_start":1649,"line_end":1649,"column_start":12,"column_end":18},"name":"offset","qualname":"<FrameDescriptionEntry<R>>::offset","value":"pub fn offset(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this entry from the start of its containing section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172870,"byte_end":172944,"line_start":1648,"line_end":1648,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173066,"byte_end":173069,"line_start":1654,"line_end":1654,"column_start":12,"column_end":15},"name":"cie","qualname":"<FrameDescriptionEntry<R>>::cie","value":"pub fn cie(&Self) -> &CommonInformationEntry<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this FDE's CIE.\n","sig":null,"attributes":[{"value":"/ Get a reference to this FDE's CIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173016,"byte_end":173054,"line_start":1653,"line_end":1653,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173446,"byte_end":173455,"line_start":1662,"line_end":1662,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<FrameDescriptionEntry<R>>::entry_len","value":"pub fn entry_len(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the header and\n > instruction stream for this function, not including the length field\n > itself (see Section 7.2.2). The size of the length field plus the value\n > of length must be an integral multiple of the address size.\n","sig":null,"attributes":[{"value":"/ > A constant that gives the number of bytes of the header and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173138,"byte_end":173203,"line_start":1658,"line_end":1658,"column_start":5,"column_end":70}},{"value":"/ > instruction stream for this function, not including the length field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173208,"byte_end":173282,"line_start":1659,"line_end":1659,"column_start":5,"column_end":79}},{"value":"/ > itself (see Section 7.2.2). The size of the length field plus the value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173287,"byte_end":173364,"line_start":1660,"line_end":1660,"column_start":5,"column_end":82}},{"value":"/ > of length must be an integral multiple of the address size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173369,"byte_end":173434,"line_start":1661,"line_end":1661,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173795,"byte_end":173807,"line_start":1673,"line_end":1673,"column_start":12,"column_end":24},"name":"instructions","qualname":"<FrameDescriptionEntry<R>>::instructions","value":"pub fn instructions<'a, Section>(&Self, &'a Section, &'a BaseAddresses)\n-> CallFrameInstructionIter where Section: UnwindSection<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this FDE's instructions.","sig":null,"attributes":[{"value":"/ Iterate over this FDE's instructions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173509,"byte_end":173550,"line_start":1666,"line_end":1666,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173555,"byte_end":173558,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ Will not include the CIE's initial instructions, if you want those do","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173563,"byte_end":173636,"line_start":1668,"line_end":1668,"column_start":5,"column_end":78}},{"value":"/ `fde.cie().instructions()` first.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173641,"byte_end":173678,"line_start":1669,"line_end":1669,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173683,"byte_end":173686,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173691,"byte_end":173712,"line_start":1671,"line_end":1671,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":173717,"byte_end":173783,"line_start":1672,"line_end":1672,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174506,"byte_end":174521,"line_start":1694,"line_end":1694,"column_start":12,"column_end":27},"name":"initial_address","qualname":"<FrameDescriptionEntry<R>>::initial_address","value":"pub fn initial_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The first address for which this entry has unwind information for.\n","sig":null,"attributes":[{"value":"/ The first address for which this entry has unwind information for.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174424,"byte_end":174494,"line_start":1693,"line_end":1693,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174681,"byte_end":174684,"line_start":1700,"line_end":1700,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameDescriptionEntry<R>>::len","value":"pub fn len(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes of instructions that this entry has unwind\n information for.\n","sig":null,"attributes":[{"value":"/ The number of bytes of instructions that this entry has unwind","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174578,"byte_end":174644,"line_start":1698,"line_end":1698,"column_start":5,"column_end":71}},{"value":"/ information for.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174649,"byte_end":174669,"line_start":1699,"line_end":1699,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174960,"byte_end":174968,"line_start":1709,"line_end":1709,"column_start":12,"column_end":20},"name":"contains","qualname":"<FrameDescriptionEntry<R>>::contains","value":"pub fn contains(&Self, u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given address is within this FDE, `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if the given address is within this FDE, `false`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174739,"byte_end":174805,"line_start":1704,"line_end":1704,"column_start":5,"column_end":71}},{"value":"/ otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174810,"byte_end":174824,"line_start":1705,"line_end":1705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174829,"byte_end":174832,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `entry.initial_address() <= address <","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174837,"byte_end":174900,"line_start":1707,"line_end":1707,"column_start":5,"column_end":68}},{"value":"/ entry.initial_address() + entry.len()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":174905,"byte_end":174948,"line_start":1708,"line_end":1708,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175235,"byte_end":175239,"line_start":1717,"line_end":1717,"column_start":12,"column_end":16},"name":"lsda","qualname":"<FrameDescriptionEntry<R>>::lsda","value":"pub fn lsda(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" The address of this FDE's language-specific data area (LSDA), if it has\n any.\n","sig":null,"attributes":[{"value":"/ The address of this FDE's language-specific data area (LSDA), if it has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175135,"byte_end":175210,"line_start":1715,"line_end":1715,"column_start":5,"column_end":80}},{"value":"/ any.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175215,"byte_end":175223,"line_start":1716,"line_end":1716,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175437,"byte_end":175457,"line_start":1723,"line_end":1723,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<FrameDescriptionEntry<R>>::is_signal_trampoline","value":"pub fn is_signal_trampoline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this FDE's function is a trampoline for a signal handler.\n","sig":null,"attributes":[{"value":"/ Return true if this FDE's function is a trampoline for a signal handler.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175335,"byte_end":175411,"line_start":1721,"line_end":1721,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175416,"byte_end":175425,"line_start":1722,"line_end":1722,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175772,"byte_end":175783,"line_start":1731,"line_end":1731,"column_start":12,"column_end":23},"name":"personality","qualname":"<FrameDescriptionEntry<R>>::personality","value":"pub fn personality(&Self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the FDE's function's personality routine\n handler. The personality routine does language-specific clean up when\n unwinding the stack frames with the intent to not run them again.\n","sig":null,"attributes":[{"value":"/ Return the address of the FDE's function's personality routine","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175528,"byte_end":175594,"line_start":1727,"line_end":1727,"column_start":5,"column_end":71}},{"value":"/ handler. The personality routine does language-specific clean up when","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175599,"byte_end":175672,"line_start":1728,"line_end":1728,"column_start":5,"column_end":78}},{"value":"/ unwinding the stack frames with the intent to not run them again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175677,"byte_end":175746,"line_start":1729,"line_end":1729,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175751,"byte_end":175760,"line_start":1730,"line_end":1730,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5602},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177223,"byte_end":177249,"line_start":1767,"line_end":1767,"column_start":12,"column_end":38},"name":"UninitializedUnwindContext","qualname":"::read::cfi::UninitializedUnwindContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Common context needed when evaluating the call frame unwinding information.","sig":null,"attributes":[{"value":"/ Common context needed when evaluating the call frame unwinding information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175854,"byte_end":175933,"line_start":1736,"line_end":1736,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175934,"byte_end":175937,"line_start":1737,"line_end":1737,"column_start":1,"column_end":4}},{"value":"/ To avoid re-allocating the context multiple times when evaluating multiple","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":175938,"byte_end":176016,"line_start":1738,"line_end":1738,"column_start":1,"column_end":79}},{"value":"/ CFI programs, it can be reused. At first, a context is uninitialized","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176017,"byte_end":176089,"line_start":1739,"line_end":1739,"column_start":1,"column_end":73}},{"value":"/ (`UninitializedUnwindContext`). It can be initialized by providing the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176090,"byte_end":176164,"line_start":1740,"line_end":1740,"column_start":1,"column_end":75}},{"value":"/ `CommonInformationEntry` for the CFI program about to be evaluated and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176165,"byte_end":176239,"line_start":1741,"line_end":1741,"column_start":1,"column_end":75}},{"value":"/ calling `UninitializedUnwindContext::initialize`. The result is a `&mut UnwindContext`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176240,"byte_end":176330,"line_start":1742,"line_end":1742,"column_start":1,"column_end":91}},{"value":"/ which borrows the uninitialized context, and can be used to evaluate and run a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176331,"byte_end":176413,"line_start":1743,"line_end":1743,"column_start":1,"column_end":83}},{"value":"/ `FrameDescriptionEntry`'s CFI program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176414,"byte_end":176456,"line_start":1744,"line_end":1744,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176457,"byte_end":176460,"line_start":1745,"line_end":1745,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176461,"byte_end":176468,"line_start":1746,"line_end":1746,"column_start":1,"column_end":8}},{"value":"/ use gimli::{UninitializedUnwindContext, UnwindTable};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176469,"byte_end":176526,"line_start":1747,"line_end":1747,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176527,"byte_end":176530,"line_start":1748,"line_end":1748,"column_start":1,"column_end":4}},{"value":"/ # fn foo<'a>(some_fde: gimli::FrameDescriptionEntry<gimli::EndianSlice<'a, gimli::LittleEndian>>)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176531,"byte_end":176632,"line_start":1749,"line_end":1749,"column_start":1,"column_end":102}},{"value":"/ #            -> gimli::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176633,"byte_end":176672,"line_start":1750,"line_end":1750,"column_start":1,"column_end":40}},{"value":"/ # let eh_frame: gimli::EhFrame<_> = unreachable!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176673,"byte_end":176728,"line_start":1751,"line_end":1751,"column_start":1,"column_end":56}},{"value":"/ # let bases = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176729,"byte_end":176764,"line_start":1752,"line_end":1752,"column_start":1,"column_end":36}},{"value":"/ // An uninitialized context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176765,"byte_end":176797,"line_start":1753,"line_end":1753,"column_start":1,"column_end":33}},{"value":"/ let mut ctx = UninitializedUnwindContext::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176798,"byte_end":176850,"line_start":1754,"line_end":1754,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176851,"byte_end":176854,"line_start":1755,"line_end":1755,"column_start":1,"column_end":4}},{"value":"/ // Initialize the context by evaluating the CIE's initial instruction program,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176855,"byte_end":176937,"line_start":1756,"line_end":1756,"column_start":1,"column_end":83}},{"value":"/ // and generate the unwind table.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176938,"byte_end":176975,"line_start":1757,"line_end":1757,"column_start":1,"column_end":38}},{"value":"/ let mut table = some_fde.rows(&eh_frame, &bases, &mut ctx)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":176976,"byte_end":177040,"line_start":1758,"line_end":1758,"column_start":1,"column_end":65}},{"value":"/ while let Some(row) = table.next_row()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177041,"byte_end":177086,"line_start":1759,"line_end":1759,"column_start":1,"column_end":46}},{"value":"/     // Do stuff with each row...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177087,"byte_end":177123,"line_start":1760,"line_end":1760,"column_start":1,"column_end":37}},{"value":"/ #   let _ = row;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177124,"byte_end":177144,"line_start":1761,"line_end":1761,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177145,"byte_end":177150,"line_start":1762,"line_end":1762,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177151,"byte_end":177171,"line_start":1763,"line_end":1763,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177172,"byte_end":177179,"line_start":1764,"line_end":1764,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177180,"byte_end":177187,"line_start":1765,"line_end":1765,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177399,"byte_end":177402,"line_start":1771,"line_end":1771,"column_start":12,"column_end":15},"name":"new","qualname":"<UninitializedUnwindContext<R>>::new","value":"pub fn new() -> UninitializedUnwindContext<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new call frame unwinding context.\n","sig":null,"attributes":[{"value":"/ Construct a new call frame unwinding context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177338,"byte_end":177387,"line_start":1770,"line_end":1770,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177929,"byte_end":177939,"line_start":1789,"line_end":1789,"column_start":12,"column_end":22},"name":"initialize","qualname":"<UninitializedUnwindContext<R>>::initialize","value":"pub fn initialize<Section: UnwindSection<R>>(&mut Self, &Section,\n                                             &BaseAddresses,\n                                             &CommonInformationEntry<R>)\n-> Result<&mut UnwindContext<R>>","parent":null,"children":[],"decl_id":null,"docs":" Run the CIE's initial instructions, creating and return an\n `UnwindContext`.\n","sig":null,"attributes":[{"value":"/ Run the CIE's initial instructions, creating and return an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177830,"byte_end":177892,"line_start":1787,"line_end":1787,"column_start":5,"column_end":67}},{"value":"/ `UnwindContext`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177897,"byte_end":177917,"line_start":1788,"line_end":1788,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5612},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":178512,"byte_end":178525,"line_start":1811,"line_end":1811,"column_start":12,"column_end":25},"name":"UnwindContext","qualname":"::read::cfi::UnwindContext","value":"UnwindContext {  }","parent":null,"children":[{"krate":0,"index":5614},{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618}],"decl_id":null,"docs":" An unwinding context.\n","sig":null,"attributes":[{"value":"/ An unwinding context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":178447,"byte_end":178472,"line_start":1809,"line_end":1809,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5631},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185534,"byte_end":185545,"line_start":2010,"line_end":2010,"column_start":12,"column_end":23},"name":"UnwindTable","qualname":"::read::cfi::UnwindTable","value":"UnwindTable {  }","parent":null,"children":[{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640}],"decl_id":null,"docs":" The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s\n `CallFrameInstruction` program, yielding the each row one at a time.","sig":null,"attributes":[{"value":"/ The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":182827,"byte_end":182898,"line_start":1953,"line_end":1953,"column_start":1,"column_end":72}},{"value":"/ `CallFrameInstruction` program, yielding the each row one at a time.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":182899,"byte_end":182971,"line_start":1954,"line_end":1954,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":182972,"byte_end":182975,"line_start":1955,"line_end":1955,"column_start":1,"column_end":4}},{"value":"/ > 6.4.1 Structure of Call Frame Information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":182976,"byte_end":183023,"line_start":1956,"line_end":1956,"column_start":1,"column_end":48}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183024,"byte_end":183029,"line_start":1957,"line_end":1957,"column_start":1,"column_end":6}},{"value":"/ > DWARF supports virtual unwinding by defining an architecture independent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183030,"byte_end":183108,"line_start":1958,"line_end":1958,"column_start":1,"column_end":79}},{"value":"/ > basis for recording how procedures save and restore registers during their","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183109,"byte_end":183189,"line_start":1959,"line_end":1959,"column_start":1,"column_end":81}},{"value":"/ > lifetimes. This basis must be augmented on some machines with specific","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183190,"byte_end":183266,"line_start":1960,"line_end":1960,"column_start":1,"column_end":77}},{"value":"/ > information that is defined by an architecture specific ABI authoring","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183267,"byte_end":183342,"line_start":1961,"line_end":1961,"column_start":1,"column_end":76}},{"value":"/ > committee, a hardware vendor, or a compiler producer. The body defining a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183343,"byte_end":183422,"line_start":1962,"line_end":1962,"column_start":1,"column_end":80}},{"value":"/ > specific augmentation is referred to below as the “augmenter.”","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183423,"byte_end":183495,"line_start":1963,"line_end":1963,"column_start":1,"column_end":69}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183496,"byte_end":183501,"line_start":1964,"line_end":1964,"column_start":1,"column_end":6}},{"value":"/ > Abstractly, this mechanism describes a very large table that has the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183502,"byte_end":183576,"line_start":1965,"line_end":1965,"column_start":1,"column_end":75}},{"value":"/ > following structure:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183577,"byte_end":183603,"line_start":1966,"line_end":1966,"column_start":1,"column_end":27}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183604,"byte_end":183609,"line_start":1967,"line_end":1967,"column_start":1,"column_end":6}},{"value":"/ > <table>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183610,"byte_end":183623,"line_start":1968,"line_end":1968,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183624,"byte_end":183636,"line_start":1969,"line_end":1969,"column_start":1,"column_end":13}},{"value":"/ >     <th>LOC</th><th>CFA</th><th>R0</th><th>R1</th><td>...</td><th>RN</th>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183637,"byte_end":183716,"line_start":1970,"line_end":1970,"column_start":1,"column_end":80}},{"value":"/ >   </tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183717,"byte_end":183730,"line_start":1971,"line_end":1971,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183731,"byte_end":183743,"line_start":1972,"line_end":1972,"column_start":1,"column_end":13}},{"value":"/ >     <th>L0</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183744,"byte_end":183821,"line_start":1973,"line_end":1973,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183822,"byte_end":183835,"line_start":1974,"line_end":1974,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183836,"byte_end":183848,"line_start":1975,"line_end":1975,"column_start":1,"column_end":13}},{"value":"/ >     <th>L1</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183849,"byte_end":183926,"line_start":1976,"line_end":1976,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183927,"byte_end":183940,"line_start":1977,"line_end":1977,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183941,"byte_end":183953,"line_start":1978,"line_end":1978,"column_start":1,"column_end":13}},{"value":"/ >     <td>...</td><td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":183954,"byte_end":184031,"line_start":1979,"line_end":1979,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184032,"byte_end":184045,"line_start":1980,"line_end":1980,"column_start":1,"column_end":14}},{"value":"/ >   <tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184046,"byte_end":184058,"line_start":1981,"line_end":1981,"column_start":1,"column_end":13}},{"value":"/ >     <th>LN</th> <td></td>   <td></td>  <td></td>  <td></td>   <td></td>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184059,"byte_end":184136,"line_start":1982,"line_end":1982,"column_start":1,"column_end":78}},{"value":"/ >   </tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184137,"byte_end":184150,"line_start":1983,"line_end":1983,"column_start":1,"column_end":14}},{"value":"/ > </table>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184151,"byte_end":184165,"line_start":1984,"line_end":1984,"column_start":1,"column_end":15}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184166,"byte_end":184171,"line_start":1985,"line_end":1985,"column_start":1,"column_end":6}},{"value":"/ > The first column indicates an address for every location that contains code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184172,"byte_end":184253,"line_start":1986,"line_end":1986,"column_start":1,"column_end":82}},{"value":"/ > in a program. (In shared objects, this is an object-relative offset.) The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184254,"byte_end":184333,"line_start":1987,"line_end":1987,"column_start":1,"column_end":80}},{"value":"/ > remaining columns contain virtual unwinding rules that are associated with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184334,"byte_end":184414,"line_start":1988,"line_end":1988,"column_start":1,"column_end":81}},{"value":"/ > the indicated location.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184415,"byte_end":184444,"line_start":1989,"line_end":1989,"column_start":1,"column_end":30}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184445,"byte_end":184450,"line_start":1990,"line_end":1990,"column_start":1,"column_end":6}},{"value":"/ > The CFA column defines the rule which computes the Canonical Frame Address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184451,"byte_end":184531,"line_start":1991,"line_end":1991,"column_start":1,"column_end":81}},{"value":"/ > value; it may be either a register and a signed offset that are added","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184532,"byte_end":184607,"line_start":1992,"line_end":1992,"column_start":1,"column_end":76}},{"value":"/ > together, or a DWARF expression that is evaluated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184608,"byte_end":184664,"line_start":1993,"line_end":1993,"column_start":1,"column_end":57}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184665,"byte_end":184670,"line_start":1994,"line_end":1994,"column_start":1,"column_end":6}},{"value":"/ > The remaining columns are labeled by register number. This includes some","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184671,"byte_end":184749,"line_start":1995,"line_end":1995,"column_start":1,"column_end":79}},{"value":"/ > registers that have special designation on some architectures such as the PC","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184750,"byte_end":184832,"line_start":1996,"line_end":1996,"column_start":1,"column_end":83}},{"value":"/ > and the stack pointer register. (The actual mapping of registers for a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184833,"byte_end":184909,"line_start":1997,"line_end":1997,"column_start":1,"column_end":77}},{"value":"/ > particular architecture is defined by the augmenter.) The register columns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184910,"byte_end":184990,"line_start":1998,"line_end":1998,"column_start":1,"column_end":81}},{"value":"/ > contain rules that describe whether a given register has been saved and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":184991,"byte_end":185072,"line_start":1999,"line_end":1999,"column_start":1,"column_end":82}},{"value":"/ > rule to find the value for the register in the previous frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185073,"byte_end":185141,"line_start":2000,"line_end":2000,"column_start":1,"column_end":69}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185142,"byte_end":185147,"line_start":2001,"line_end":2001,"column_start":1,"column_end":6}},{"value":"/ > ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185148,"byte_end":185157,"line_start":2002,"line_end":2002,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185158,"byte_end":185163,"line_start":2003,"line_end":2003,"column_start":1,"column_end":6}},{"value":"/ > This table would be extremely large if actually constructed as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185164,"byte_end":185232,"line_start":2004,"line_end":2004,"column_start":1,"column_end":69}},{"value":"/ > described. Most of the entries at any point in the table are identical to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185233,"byte_end":185312,"line_start":2005,"line_end":2005,"column_start":1,"column_end":80}},{"value":"/ > the ones above them. The whole table can be represented quite compactly by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185313,"byte_end":185393,"line_start":2006,"line_end":2006,"column_start":1,"column_end":81}},{"value":"/ > recording just the differences starting at the beginning address of each","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185394,"byte_end":185472,"line_start":2007,"line_end":2007,"column_start":1,"column_end":79}},{"value":"/ > subroutine in the program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185473,"byte_end":185505,"line_start":2008,"line_end":2008,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":186128,"byte_end":186131,"line_start":2027,"line_end":2027,"column_start":12,"column_end":15},"name":"new","qualname":"<UnwindTable>::new","value":"pub fn new<Section: UnwindSection<R>>(&'a Section, &'a BaseAddresses,\n                                      &'a mut UninitializedUnwindContext<R>,\n                                      &FrameDescriptionEntry<R>)\n-> Result<UnwindTable>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnwindTable` for the given\n `FrameDescriptionEntry`'s CFI unwinding program.\n","sig":null,"attributes":[{"value":"/ Construct a new `UnwindTable` for the given","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":186012,"byte_end":186059,"line_start":2025,"line_end":2025,"column_start":5,"column_end":52}},{"value":"/ `FrameDescriptionEntry`'s CFI unwinding program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":186064,"byte_end":186116,"line_start":2026,"line_end":2026,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":188078,"byte_end":188086,"line_start":2078,"line_end":2078,"column_start":12,"column_end":20},"name":"next_row","qualname":"<UnwindTable>::next_row","value":"pub fn next_row(&mut Self) -> Result<Option<&UnwindTableRow<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate call frame instructions until the next row of the table is\n completed, and return it.","sig":null,"attributes":[{"value":"/ Evaluate call frame instructions until the next row of the table is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":187822,"byte_end":187893,"line_start":2073,"line_end":2073,"column_start":5,"column_end":76}},{"value":"/ completed, and return it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":187898,"byte_end":187927,"line_start":2074,"line_end":2074,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":187932,"byte_end":187935,"line_start":2075,"line_end":2075,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, this cannot be used with `FallibleIterator` because of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":187940,"byte_end":188013,"line_start":2076,"line_end":2076,"column_start":5,"column_end":78}},{"value":"/ the restricted lifetime of the yielded item.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":188018,"byte_end":188066,"line_start":2077,"line_end":2077,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":5645},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":202991,"byte_end":203007,"line_start":2502,"line_end":2502,"column_start":12,"column_end":28},"name":"RegisterRuleIter","qualname":"::read::cfi::RegisterRuleIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unordered iterator for register rules.\n","sig":null,"attributes":[{"value":"/ An unordered iterator for register rules.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":202910,"byte_end":202955,"line_start":2500,"line_end":2500,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5658},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203493,"byte_end":203507,"line_start":2517,"line_end":2517,"column_start":12,"column_end":26},"name":"UnwindTableRow","qualname":"::read::cfi::UnwindTableRow","value":"UnwindTableRow {  }","parent":null,"children":[{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5663},{"krate":0,"index":5664}],"decl_id":null,"docs":" A row in the virtual unwind table that describes how to find the values of\n the registers in the *previous* frame for a range of PC addresses.\n","sig":null,"attributes":[{"value":"/ A row in the virtual unwind table that describes how to find the values of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203293,"byte_end":203371,"line_start":2514,"line_end":2514,"column_start":1,"column_end":79}},{"value":"/ the registers in the *previous* frame for a range of PC addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203372,"byte_end":203442,"line_start":2515,"line_end":2515,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204241,"byte_end":204254,"line_start":2546,"line_end":2546,"column_start":12,"column_end":25},"name":"start_address","qualname":"<UnwindTableRow<R>>::start_address","value":"pub fn start_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting PC address that this row applies to.\n","sig":null,"attributes":[{"value":"/ Get the starting PC address that this row applies to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204172,"byte_end":204229,"line_start":2545,"line_end":2545,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204676,"byte_end":204687,"line_start":2557,"line_end":2557,"column_start":12,"column_end":23},"name":"end_address","qualname":"<UnwindTableRow<R>>::end_address","value":"pub fn end_address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the end PC address where this row's register rules become\n unapplicable.","sig":null,"attributes":[{"value":"/ Get the end PC address where this row's register rules become","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204309,"byte_end":204374,"line_start":2550,"line_end":2550,"column_start":5,"column_end":70}},{"value":"/ unapplicable.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204379,"byte_end":204396,"line_start":2551,"line_end":2551,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204401,"byte_end":204404,"line_start":2552,"line_end":2552,"column_start":5,"column_end":8}},{"value":"/ In other words, this row describes how to recover the last frame's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204409,"byte_end":204479,"line_start":2553,"line_end":2553,"column_start":5,"column_end":75}},{"value":"/ registers for all PCs where `row.start_address() <= PC <","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204484,"byte_end":204544,"line_start":2554,"line_end":2554,"column_start":5,"column_end":65}},{"value":"/ row.end_address()`. This row does NOT describe how to recover registers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204549,"byte_end":204624,"line_start":2555,"line_end":2555,"column_start":5,"column_end":80}},{"value":"/ when `PC == row.end_address()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204629,"byte_end":204664,"line_start":2556,"line_end":2556,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204855,"byte_end":204863,"line_start":2563,"line_end":2563,"column_start":12,"column_end":20},"name":"contains","qualname":"<UnwindTableRow<R>>::contains","value":"pub fn contains(&Self, u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given `address` is within this row's address range,\n `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Return `true` if the given `address` is within this row's address range,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204740,"byte_end":204816,"line_start":2561,"line_end":2561,"column_start":5,"column_end":81}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204821,"byte_end":204843,"line_start":2562,"line_end":2562,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205182,"byte_end":205197,"line_start":2571,"line_end":2571,"column_start":12,"column_end":27},"name":"saved_args_size","qualname":"<UnwindTableRow<R>>::saved_args_size","value":"pub fn saved_args_size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of args currently on the stack.","sig":null,"attributes":[{"value":"/ Returns the amount of args currently on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":204974,"byte_end":205028,"line_start":2567,"line_end":2567,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205033,"byte_end":205036,"line_start":2568,"line_end":2568,"column_start":5,"column_end":8}},{"value":"/ When unwinding, if the personality function requested a change in IP,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205041,"byte_end":205114,"line_start":2569,"line_end":2569,"column_start":5,"column_end":78}},{"value":"/ the SP needs to be adjusted by saved_args_size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205119,"byte_end":205170,"line_start":2570,"line_end":2570,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205335,"byte_end":205338,"line_start":2576,"line_end":2576,"column_start":12,"column_end":15},"name":"cfa","qualname":"<UnwindTableRow<R>>::cfa","value":"pub fn cfa(&Self) -> &CfaRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical frame address (CFA) recovery rule for this row.\n","sig":null,"attributes":[{"value":"/ Get the canonical frame address (CFA) recovery rule for this row.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205254,"byte_end":205323,"line_start":2575,"line_end":2575,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209092,"byte_end":209100,"line_start":2624,"line_end":2624,"column_start":12,"column_end":20},"name":"register","qualname":"<UnwindTableRow<R>>::register","value":"pub fn register(&Self, Register) -> RegisterRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the register recovery rule for the given register number.","sig":null,"attributes":[{"value":"/ Get the register recovery rule for the given register number.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205392,"byte_end":205457,"line_start":2580,"line_end":2580,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205462,"byte_end":205465,"line_start":2581,"line_end":2581,"column_start":5,"column_end":8}},{"value":"/ The register number mapping is architecture dependent. For example, in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205470,"byte_end":205544,"line_start":2582,"line_end":2582,"column_start":5,"column_end":79}},{"value":"/ the x86-64 ABI the register number mapping is defined in Figure 3.36:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205549,"byte_end":205622,"line_start":2583,"line_end":2583,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205627,"byte_end":205630,"line_start":2584,"line_end":2584,"column_start":5,"column_end":8}},{"value":"/ > Figure 3.36: DWARF Register Number Mapping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205635,"byte_end":205683,"line_start":2585,"line_end":2585,"column_start":5,"column_end":53}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205688,"byte_end":205693,"line_start":2586,"line_end":2586,"column_start":5,"column_end":10}},{"value":"/ > <table>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205698,"byte_end":205711,"line_start":2587,"line_end":2587,"column_start":5,"column_end":18}},{"value":"/ >   <tr><th>Register Name</th>                    <th>Number</th>  <th>Abbreviation</th></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205716,"byte_end":205813,"line_start":2588,"line_end":2588,"column_start":5,"column_end":102}},{"value":"/ >   <tr><td>General Purpose Register RAX</td>     <td>0</td>       <td>%rax</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205818,"byte_end":205907,"line_start":2589,"line_end":2589,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RDX</td>     <td>1</td>       <td>%rdx</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":205912,"byte_end":206001,"line_start":2590,"line_end":2590,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RCX</td>     <td>2</td>       <td>%rcx</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206006,"byte_end":206095,"line_start":2591,"line_end":2591,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RBX</td>     <td>3</td>       <td>%rbx</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206100,"byte_end":206189,"line_start":2592,"line_end":2592,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RSI</td>     <td>4</td>       <td>%rsi</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206194,"byte_end":206283,"line_start":2593,"line_end":2593,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RDI</td>     <td>5</td>       <td>%rdi</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206288,"byte_end":206377,"line_start":2594,"line_end":2594,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>General Purpose Register RBP</td>     <td>6</td>       <td>%rbp</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206382,"byte_end":206471,"line_start":2595,"line_end":2595,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Stack Pointer Register RSP</td>       <td>7</td>       <td>%rsp</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206476,"byte_end":206565,"line_start":2596,"line_end":2596,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Extended Integer Registers 8-15</td>  <td>8-15</td>    <td>%r8-%r15</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206570,"byte_end":206663,"line_start":2597,"line_end":2597,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>Return Address RA</td>                <td>16</td>      <td></td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206668,"byte_end":206753,"line_start":2598,"line_end":2598,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Vector Registers 0–7</td>             <td>17-24</td>   <td>%xmm0–%xmm7</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206758,"byte_end":206858,"line_start":2599,"line_end":2599,"column_start":5,"column_end":101}},{"value":"/ >   <tr><td>Extended Vector Registers 8–15</td>   <td>25-32</td>   <td>%xmm8–%xmm15</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206863,"byte_end":206964,"line_start":2600,"line_end":2600,"column_start":5,"column_end":102}},{"value":"/ >   <tr><td>Floating Point Registers 0–7</td>     <td>33-40</td>   <td>%st0–%st7</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":206969,"byte_end":207067,"line_start":2601,"line_end":2601,"column_start":5,"column_end":99}},{"value":"/ >   <tr><td>MMX Registers 0–7</td>                <td>41-48</td>   <td>%mm0–%mm7</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207072,"byte_end":207170,"line_start":2602,"line_end":2602,"column_start":5,"column_end":99}},{"value":"/ >   <tr><td>Flag Register</td>                    <td>49</td>      <td>%rFLAGS</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207175,"byte_end":207267,"line_start":2603,"line_end":2603,"column_start":5,"column_end":97}},{"value":"/ >   <tr><td>Segment Register ES</td>              <td>50</td>      <td>%es</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207272,"byte_end":207360,"line_start":2604,"line_end":2604,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register CS</td>              <td>51</td>      <td>%cs</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207365,"byte_end":207453,"line_start":2605,"line_end":2605,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register SS</td>              <td>52</td>      <td>%ss</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207458,"byte_end":207546,"line_start":2606,"line_end":2606,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register DS</td>              <td>53</td>      <td>%ds</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207551,"byte_end":207639,"line_start":2607,"line_end":2607,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register FS</td>              <td>54</td>      <td>%fs</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207644,"byte_end":207732,"line_start":2608,"line_end":2608,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Segment Register GS</td>              <td>55</td>      <td>%gs</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207737,"byte_end":207825,"line_start":2609,"line_end":2609,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>Reserved</td>                         <td>56-57</td>   <td></td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207830,"byte_end":207915,"line_start":2610,"line_end":2610,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>FS Base address</td>                  <td>58</td>      <td>%fs.base</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":207920,"byte_end":208013,"line_start":2611,"line_end":2611,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>GS Base address</td>                  <td>59</td>      <td>%gs.base</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208018,"byte_end":208111,"line_start":2612,"line_end":2612,"column_start":5,"column_end":98}},{"value":"/ >   <tr><td>Reserved</td>                         <td>60-61</td>   <td></td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208116,"byte_end":208201,"line_start":2613,"line_end":2613,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Task Register</td>                    <td>62</td>      <td>%tr</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208206,"byte_end":208294,"line_start":2614,"line_end":2614,"column_start":5,"column_end":93}},{"value":"/ >   <tr><td>LDT Register</td>                     <td>63</td>      <td>%ldtr</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208299,"byte_end":208389,"line_start":2615,"line_end":2615,"column_start":5,"column_end":95}},{"value":"/ >   <tr><td>128-bit Media Control and Status</td> <td>64</td>      <td>%mxcsr</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208394,"byte_end":208485,"line_start":2616,"line_end":2616,"column_start":5,"column_end":96}},{"value":"/ >   <tr><td>x87 Control Word</td>                 <td>65</td>      <td>%fcw</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208490,"byte_end":208579,"line_start":2617,"line_end":2617,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>x87 Status Word</td>                  <td>66</td>      <td>%fsw</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208584,"byte_end":208673,"line_start":2618,"line_end":2618,"column_start":5,"column_end":94}},{"value":"/ >   <tr><td>Upper Vector Registers 16–31</td>     <td>67-82</td>   <td>%xmm16–%xmm31</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208678,"byte_end":208780,"line_start":2619,"line_end":2619,"column_start":5,"column_end":103}},{"value":"/ >   <tr><td>Reserved</td>                         <td>83-117</td>  <td></td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208785,"byte_end":208870,"line_start":2620,"line_end":2620,"column_start":5,"column_end":90}},{"value":"/ >   <tr><td>Vector Mask Registers 0–7</td>        <td>118-125</td> <td>%k0–%k7</td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208875,"byte_end":208971,"line_start":2621,"line_end":2621,"column_start":5,"column_end":97}},{"value":"/ >   <tr><td>Reserved</td>                         <td>126-129</td> <td></td></tr>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":208976,"byte_end":209061,"line_start":2622,"line_end":2622,"column_start":5,"column_end":90}},{"value":"/ > </table>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209066,"byte_end":209080,"line_start":2623,"line_end":2623,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209812,"byte_end":209821,"line_start":2643,"line_end":2643,"column_start":12,"column_end":21},"name":"registers","qualname":"<UnwindTableRow<R>>::registers","value":"pub fn registers(&Self) -> RegisterRuleIter<, R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all defined register `(number, rule)` pairs.","sig":null,"attributes":[{"value":"/ Iterate over all defined register `(number, rule)` pairs.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209197,"byte_end":209258,"line_start":2628,"line_end":2628,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209263,"byte_end":209266,"line_start":2629,"line_end":2629,"column_start":5,"column_end":8}},{"value":"/ The rules are not iterated in any guaranteed order. Any register that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209271,"byte_end":209344,"line_start":2630,"line_end":2630,"column_start":5,"column_end":78}},{"value":"/ does not make an appearance in the iterator implicitly has the rule","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209349,"byte_end":209420,"line_start":2631,"line_end":2631,"column_start":5,"column_end":76}},{"value":"/ `RegisterRule::Undefined`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209425,"byte_end":209455,"line_start":2632,"line_end":2632,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209460,"byte_end":209463,"line_start":2633,"line_end":2633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209468,"byte_end":209475,"line_start":2634,"line_end":2634,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{EndianSlice, LittleEndian, UnwindTableRow};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209480,"byte_end":209541,"line_start":2635,"line_end":2635,"column_start":5,"column_end":66}},{"value":"/ # fn foo<'input>(unwind_table_row: UnwindTableRow<EndianSlice<'input, LittleEndian>>) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209546,"byte_end":209637,"line_start":2636,"line_end":2636,"column_start":5,"column_end":96}},{"value":"/ for &(register, ref rule) in unwind_table_row.registers() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209642,"byte_end":209705,"line_start":2637,"line_end":2637,"column_start":5,"column_end":68}},{"value":"/     // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209710,"byte_end":209724,"line_start":2638,"line_end":2638,"column_start":5,"column_end":19}},{"value":"/     # drop(register); drop(rule);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209729,"byte_end":209766,"line_start":2639,"line_end":2639,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209771,"byte_end":209776,"line_start":2640,"line_end":2640,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209781,"byte_end":209788,"line_start":2641,"line_end":2641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209793,"byte_end":209800,"line_start":2642,"line_end":2642,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":5684},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210085,"byte_end":210102,"line_start":2652,"line_end":2652,"column_start":5,"column_end":22},"name":"RegisterAndOffset","qualname":"::read::cfi::CfaRule::RegisterAndOffset","value":"CfaRule::RegisterAndOffset { register, offset }","parent":{"krate":0,"index":5682},"children":[],"decl_id":null,"docs":" The CFA is given offset from the given register's value.\n","sig":null,"attributes":[{"value":"/ The CFA is given offset from the given register's value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210020,"byte_end":210080,"line_start":2651,"line_end":2651,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5687},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210367,"byte_end":210377,"line_start":2660,"line_end":2660,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CfaRule::Expression","value":"CfaRule::Expression(Expression<R>)","parent":{"krate":0,"index":5682},"children":[],"decl_id":null,"docs":" The CFA is obtained by evaluating this `Reader` as a DWARF expression\n program.\n","sig":null,"attributes":[{"value":"/ The CFA is obtained by evaluating this `Reader` as a DWARF expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210272,"byte_end":210345,"line_start":2658,"line_end":2658,"column_start":5,"column_end":78}},{"value":"/ program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210350,"byte_end":210362,"line_start":2659,"line_end":2659,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5682},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209995,"byte_end":210002,"line_start":2650,"line_end":2650,"column_start":10,"column_end":17},"name":"CfaRule","qualname":"::read::cfi::CfaRule","value":"pub enum CfaRule<R: Reader> {\n    RegisterAndOffset {\n        register: Register,\n        offset: i64,\n    },\n    Expression(Expression<R>),\n}","parent":null,"children":[{"krate":0,"index":5684},{"krate":0,"index":5687}],"decl_id":null,"docs":" The canonical frame address (CFA) recovery rules.\n","sig":null,"attributes":[{"value":"/ The canonical frame address (CFA) recovery rules.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":209893,"byte_end":209946,"line_start":2648,"line_end":2648,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5709},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211341,"byte_end":211350,"line_start":2693,"line_end":2693,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::RegisterRule::Undefined","value":"RegisterRule::Undefined","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" > A register that has this rule has no recoverable value in the previous\n > frame. (By convention, it is not preserved by a callee.)\n","sig":null,"attributes":[{"value":"/ > A register that has this rule has no recoverable value in the previous","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211193,"byte_end":211269,"line_start":2691,"line_end":2691,"column_start":5,"column_end":81}},{"value":"/ > frame. (By convention, it is not preserved by a callee.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211274,"byte_end":211336,"line_start":2692,"line_end":2692,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5711},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211532,"byte_end":211541,"line_start":2698,"line_end":2698,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::RegisterRule::SameValue","value":"RegisterRule::SameValue","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" > This register has not been modified from the previous frame. (By\n > convention, it is preserved by the callee, but the callee has not\n > modified it.)\n","sig":null,"attributes":[{"value":"/ > This register has not been modified from the previous frame. (By","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211357,"byte_end":211427,"line_start":2695,"line_end":2695,"column_start":5,"column_end":75}},{"value":"/ > convention, it is preserved by the callee, but the callee has not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211432,"byte_end":211503,"line_start":2696,"line_end":2696,"column_start":5,"column_end":76}},{"value":"/ > modified it.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211508,"byte_end":211527,"line_start":2697,"line_end":2697,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5713},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211693,"byte_end":211699,"line_start":2702,"line_end":2702,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::RegisterRule::Offset","value":"RegisterRule::Offset(i64)","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" \"The previous value of this register is saved at the address CFA+N where\n CFA is the current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is saved at the address CFA+N where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211548,"byte_end":211624,"line_start":2700,"line_end":2700,"column_start":5,"column_end":81}},{"value":"/ CFA is the current CFA value and N is a signed offset.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211629,"byte_end":211688,"line_start":2701,"line_end":2701,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5716},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211845,"byte_end":211854,"line_start":2706,"line_end":2706,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::RegisterRule::ValOffset","value":"RegisterRule::ValOffset(i64)","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value CFA+N where CFA is the\n current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is the value CFA+N where CFA is the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211711,"byte_end":211787,"line_start":2704,"line_end":2704,"column_start":5,"column_end":81}},{"value":"/ current CFA value and N is a signed offset.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211792,"byte_end":211840,"line_start":2705,"line_end":2705,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5719},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211962,"byte_end":211970,"line_start":2710,"line_end":2710,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::RegisterRule::Register","value":"RegisterRule::Register(Register)","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" \"The previous value of this register is stored in another register\n numbered R.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is stored in another register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211866,"byte_end":211936,"line_start":2708,"line_end":2708,"column_start":5,"column_end":75}},{"value":"/ numbered R.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211941,"byte_end":211957,"line_start":2709,"line_end":2709,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5722},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212111,"byte_end":212121,"line_start":2714,"line_end":2714,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::RegisterRule::Expression","value":"RegisterRule::Expression(Expression<R>)","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" \"The previous value of this register is located at the address produced\n by executing the DWARF expression.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is located at the address produced","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211987,"byte_end":212062,"line_start":2712,"line_end":2712,"column_start":5,"column_end":80}},{"value":"/ by executing the DWARF expression.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212067,"byte_end":212106,"line_start":2713,"line_end":2713,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5725},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212254,"byte_end":212267,"line_start":2718,"line_end":2718,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::RegisterRule::ValExpression","value":"RegisterRule::ValExpression(Expression<R>)","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value produced by executing\n the DWARF expression.\"\n","sig":null,"attributes":[{"value":"/ \"The previous value of this register is the value produced by executing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212143,"byte_end":212218,"line_start":2716,"line_end":2716,"column_start":5,"column_end":80}},{"value":"/ the DWARF expression.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212223,"byte_end":212249,"line_start":2717,"line_end":2717,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212370,"byte_end":212383,"line_start":2721,"line_end":2721,"column_start":5,"column_end":18},"name":"Architectural","qualname":"::read::cfi::RegisterRule::Architectural","value":"RegisterRule::Architectural","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" \"The rule is defined externally to this specification by the augmenter.\"\n","sig":null,"attributes":[{"value":"/ \"The rule is defined externally to this specification by the augmenter.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212289,"byte_end":212365,"line_start":2720,"line_end":2720,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":5707},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211163,"byte_end":211175,"line_start":2690,"line_end":2690,"column_start":10,"column_end":22},"name":"RegisterRule","qualname":"::read::cfi::RegisterRule","value":"pub enum RegisterRule<R: Reader> {\n    Undefined,\n    SameValue,\n    Offset(i64),\n    ValOffset(i64),\n    Register(Register),\n    Expression(Expression<R>),\n    ValExpression(Expression<R>),\n    Architectural,\n}","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5711},{"krate":0,"index":5713},{"krate":0,"index":5716},{"krate":0,"index":5719},{"krate":0,"index":5722},{"krate":0,"index":5725},{"krate":0,"index":5728}],"decl_id":null,"docs":" An entry in the abstract CFI table that describes how to find the value of a\n register.","sig":null,"attributes":[{"value":"/ An entry in the abstract CFI table that describes how to find the value of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210842,"byte_end":210922,"line_start":2683,"line_end":2683,"column_start":1,"column_end":81}},{"value":"/ register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210923,"byte_end":210936,"line_start":2684,"line_end":2684,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210937,"byte_end":210940,"line_start":2685,"line_end":2685,"column_start":1,"column_end":4}},{"value":"/ \"The register columns contain rules that describe whether a given register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210941,"byte_end":211019,"line_start":2686,"line_end":2686,"column_start":1,"column_end":79}},{"value":"/ has been saved and the rule to find the value for the register in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211020,"byte_end":211093,"line_start":2687,"line_end":2687,"column_start":1,"column_end":74}},{"value":"/ previous frame.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":211094,"byte_end":211114,"line_start":2688,"line_end":2688,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":5749},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213289,"byte_end":213295,"line_start":2746,"line_end":2746,"column_start":5,"column_end":11},"name":"SetLoc","qualname":"::read::cfi::CallFrameInstruction::SetLoc","value":"CallFrameInstruction::SetLoc { address }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_set_loc\n >\n > The DW_CFA_set_loc instruction takes a single operand that represents\n > a target address. The required action is to create a new table row\n > using the specified address as the location. All other values in the\n > new row are initially identical to the current row. The new location\n > value is always greater than the current one. If the segment_size\n > field of this FDE's CIE is non- zero, the initial location is preceded\n > by a segment selector of the given length.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_set_loc","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212726,"byte_end":212749,"line_start":2737,"line_end":2737,"column_start":5,"column_end":28}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212754,"byte_end":212759,"line_start":2738,"line_end":2738,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_set_loc instruction takes a single operand that represents","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212764,"byte_end":212839,"line_start":2739,"line_end":2739,"column_start":5,"column_end":80}},{"value":"/ > a target address. The required action is to create a new table row","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212844,"byte_end":212916,"line_start":2740,"line_end":2740,"column_start":5,"column_end":77}},{"value":"/ > using the specified address as the location. All other values in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212921,"byte_end":212995,"line_start":2741,"line_end":2741,"column_start":5,"column_end":79}},{"value":"/ > new row are initially identical to the current row. The new location","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213000,"byte_end":213074,"line_start":2742,"line_end":2742,"column_start":5,"column_end":79}},{"value":"/ > value is always greater than the current one. If the segment_size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213079,"byte_end":213150,"line_start":2743,"line_end":2743,"column_start":5,"column_end":76}},{"value":"/ > field of this FDE's CIE is non- zero, the initial location is preceded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213155,"byte_end":213231,"line_start":2744,"line_end":2744,"column_start":5,"column_end":81}},{"value":"/ > by a segment selector of the given length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213236,"byte_end":213284,"line_start":2745,"line_end":2745,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":5751},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213972,"byte_end":213982,"line_start":2762,"line_end":2762,"column_start":5,"column_end":15},"name":"AdvanceLoc","qualname":"::read::cfi::CallFrameInstruction::AdvanceLoc","value":"CallFrameInstruction::AdvanceLoc { delta }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and\n `DW_CFA_advance_loc{1,2,4}`.","sig":null,"attributes":[{"value":"/ The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213364,"byte_end":213440,"line_start":2751,"line_end":2751,"column_start":5,"column_end":81}},{"value":"/ `DW_CFA_advance_loc{1,2,4}`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213445,"byte_end":213477,"line_start":2752,"line_end":2752,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213482,"byte_end":213485,"line_start":2753,"line_end":2753,"column_start":5,"column_end":8}},{"value":"/ > 2. DW_CFA_advance_loc","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213490,"byte_end":213517,"line_start":2754,"line_end":2754,"column_start":5,"column_end":32}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213522,"byte_end":213527,"line_start":2755,"line_end":2755,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_advance instruction takes a single operand (encoded with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213532,"byte_end":213605,"line_start":2756,"line_end":2756,"column_start":5,"column_end":78}},{"value":"/ > the opcode) that represents a constant delta. The required action is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213610,"byte_end":213684,"line_start":2757,"line_end":2757,"column_start":5,"column_end":79}},{"value":"/ > to create a new table row with a location value that is computed by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213689,"byte_end":213762,"line_start":2758,"line_end":2758,"column_start":5,"column_end":78}},{"value":"/ > taking the current entry’s location value and adding the value of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213767,"byte_end":213840,"line_start":2759,"line_end":2759,"column_start":5,"column_end":76}},{"value":"/ > delta * code_alignment_factor. All other values in the new row are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213845,"byte_end":213917,"line_start":2760,"line_end":2760,"column_start":5,"column_end":77}},{"value":"/ > initially identical to the current row.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":213922,"byte_end":213967,"line_start":2761,"line_end":2761,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":5753},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214412,"byte_end":214418,"line_start":2774,"line_end":2774,"column_start":5,"column_end":11},"name":"DefCfa","qualname":"::read::cfi::CallFrameInstruction::DefCfa","value":"CallFrameInstruction::DefCfa { register, offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_def_cfa\n >\n > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands\n > representing a register number and a (non-factored) offset. The\n > required action is to define the current CFA rule to use the provided\n > register and offset.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_def_cfa","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214113,"byte_end":214136,"line_start":2768,"line_end":2768,"column_start":5,"column_end":28}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214141,"byte_end":214146,"line_start":2769,"line_end":2769,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214151,"byte_end":214222,"line_start":2770,"line_end":2770,"column_start":5,"column_end":76}},{"value":"/ > representing a register number and a (non-factored) offset. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214227,"byte_end":214296,"line_start":2771,"line_end":2771,"column_start":5,"column_end":74}},{"value":"/ > required action is to define the current CFA rule to use the provided","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214301,"byte_end":214376,"line_start":2772,"line_end":2772,"column_start":5,"column_end":80}},{"value":"/ > register and offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214381,"byte_end":214407,"line_start":2773,"line_end":2773,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":5756},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214967,"byte_end":214975,"line_start":2788,"line_end":2788,"column_start":5,"column_end":13},"name":"DefCfaSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaSf","value":"CallFrameInstruction::DefCfaSf { register, factored_offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_def_cfa_sf\n >\n > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_def_cfa\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_def_cfa_sf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214561,"byte_end":214587,"line_start":2781,"line_end":2781,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214592,"byte_end":214597,"line_start":2782,"line_end":2782,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214602,"byte_end":214673,"line_start":2783,"line_end":2783,"column_start":5,"column_end":76}},{"value":"/ > LEB128 value representing a register number and a signed LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214678,"byte_end":214747,"line_start":2784,"line_end":2784,"column_start":5,"column_end":74}},{"value":"/ > factored offset. This instruction is identical to DW_CFA_def_cfa","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214752,"byte_end":214822,"line_start":2785,"line_end":2785,"column_start":5,"column_end":75}},{"value":"/ > except that the second operand is signed and factored. The resulting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214827,"byte_end":214901,"line_start":2786,"line_end":2786,"column_start":5,"column_end":79}},{"value":"/ > offset is factored_offset * data_alignment_factor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":214906,"byte_end":214962,"line_start":2787,"line_end":2787,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":5759},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215538,"byte_end":215552,"line_start":2802,"line_end":2802,"column_start":5,"column_end":19},"name":"DefCfaRegister","qualname":"::read::cfi::CallFrameInstruction::DefCfaRegister","value":"CallFrameInstruction::DefCfaRegister { register }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 3. DW_CFA_def_cfa_register\n >\n > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128\n > operand representing a register number. The required action is to\n > define the current CFA rule to use the provided register (but to keep\n > the old offset). This operation is valid only if the current CFA rule\n > is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 3. DW_CFA_def_cfa_register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215123,"byte_end":215155,"line_start":2795,"line_end":2795,"column_start":5,"column_end":37}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215160,"byte_end":215165,"line_start":2796,"line_end":2796,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215170,"byte_end":215246,"line_start":2797,"line_end":2797,"column_start":5,"column_end":81}},{"value":"/ > operand representing a register number. The required action is to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215251,"byte_end":215322,"line_start":2798,"line_end":2798,"column_start":5,"column_end":76}},{"value":"/ > define the current CFA rule to use the provided register (but to keep","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215327,"byte_end":215402,"line_start":2799,"line_end":2799,"column_start":5,"column_end":80}},{"value":"/ > the old offset). This operation is valid only if the current CFA rule","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215407,"byte_end":215482,"line_start":2800,"line_end":2800,"column_start":5,"column_end":80}},{"value":"/ > is defined to use a register and offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215487,"byte_end":215533,"line_start":2801,"line_end":2801,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":5761},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216054,"byte_end":216066,"line_start":2814,"line_end":2814,"column_start":5,"column_end":17},"name":"DefCfaOffset","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffset","value":"CallFrameInstruction::DefCfaOffset { offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 4. DW_CFA_def_cfa_offset\n >\n > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128\n > operand representing a (non-factored) offset. The required action is\n > to define the current CFA rule to use the provided offset (but to keep\n > the old register). This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 4. DW_CFA_def_cfa_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215637,"byte_end":215667,"line_start":2807,"line_end":2807,"column_start":5,"column_end":35}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215672,"byte_end":215677,"line_start":2808,"line_end":2808,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215682,"byte_end":215756,"line_start":2809,"line_end":2809,"column_start":5,"column_end":79}},{"value":"/ > operand representing a (non-factored) offset. The required action is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215761,"byte_end":215835,"line_start":2810,"line_end":2810,"column_start":5,"column_end":79}},{"value":"/ > to define the current CFA rule to use the provided offset (but to keep","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215840,"byte_end":215916,"line_start":2811,"line_end":2811,"column_start":5,"column_end":81}},{"value":"/ > the old register). This operation is valid only if the current CFA","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215921,"byte_end":215993,"line_start":2812,"line_end":2812,"column_start":5,"column_end":77}},{"value":"/ > rule is defined to use a register and offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":215998,"byte_end":216049,"line_start":2813,"line_end":2813,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":5763},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216612,"byte_end":216626,"line_start":2827,"line_end":2827,"column_start":5,"column_end":19},"name":"DefCfaOffsetSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffsetSf","value":"CallFrameInstruction::DefCfaOffsetSf { factored_offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_def_cfa_offset_sf\n >\n > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand\n > representing a factored offset. This instruction is identical to\n > DW_CFA_def_cfa_offset except that the operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor. This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[{"value":"/ > 5. DW_CFA_def_cfa_offset_sf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216139,"byte_end":216172,"line_start":2819,"line_end":2819,"column_start":5,"column_end":38}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216177,"byte_end":216182,"line_start":2820,"line_end":2820,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216187,"byte_end":216263,"line_start":2821,"line_end":2821,"column_start":5,"column_end":81}},{"value":"/ > representing a factored offset. This instruction is identical to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216268,"byte_end":216338,"line_start":2822,"line_end":2822,"column_start":5,"column_end":75}},{"value":"/ > DW_CFA_def_cfa_offset except that the operand is signed and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216343,"byte_end":216408,"line_start":2823,"line_end":2823,"column_start":5,"column_end":70}},{"value":"/ > factored. The resulting offset is factored_offset *","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216413,"byte_end":216470,"line_start":2824,"line_end":2824,"column_start":5,"column_end":62}},{"value":"/ > data_alignment_factor. This operation is valid only if the current CFA","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216475,"byte_end":216551,"line_start":2825,"line_end":2825,"column_start":5,"column_end":81}},{"value":"/ > rule is defined to use a register and offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216556,"byte_end":216607,"line_start":2826,"line_end":2826,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":5765},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217029,"byte_end":217045,"line_start":2838,"line_end":2838,"column_start":5,"column_end":21},"name":"DefCfaExpression","qualname":"::read::cfi::CallFrameInstruction::DefCfaExpression","value":"CallFrameInstruction::DefCfaExpression { expression }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_def_cfa_expression\n >\n > The DW_CFA_def_cfa_expression instruction takes a single operand\n > encoded as a DW_FORM_exprloc value representing a DWARF\n > expression. The required action is to establish that expression as the\n > means by which the current CFA is computed.\n","sig":null,"attributes":[{"value":"/ > 6. DW_CFA_def_cfa_expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216704,"byte_end":216738,"line_start":2832,"line_end":2832,"column_start":5,"column_end":39}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216743,"byte_end":216748,"line_start":2833,"line_end":2833,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_def_cfa_expression instruction takes a single operand","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216753,"byte_end":216823,"line_start":2834,"line_end":2834,"column_start":5,"column_end":75}},{"value":"/ > encoded as a DW_FORM_exprloc value representing a DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216828,"byte_end":216889,"line_start":2835,"line_end":2835,"column_start":5,"column_end":66}},{"value":"/ > expression. The required action is to establish that expression as the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216894,"byte_end":216970,"line_start":2836,"line_end":2836,"column_start":5,"column_end":81}},{"value":"/ > means by which the current CFA is computed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":216975,"byte_end":217024,"line_start":2837,"line_end":2837,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":5767},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217434,"byte_end":217443,"line_start":2849,"line_end":2849,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::CallFrameInstruction::Undefined","value":"CallFrameInstruction::Undefined { register }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_undefined\n >\n > The DW_CFA_undefined instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “undefined.”\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_undefined","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217171,"byte_end":217196,"line_start":2844,"line_end":2844,"column_start":5,"column_end":30}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217201,"byte_end":217206,"line_start":2845,"line_end":2845,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_undefined instruction takes a single unsigned LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217211,"byte_end":217280,"line_start":2846,"line_end":2846,"column_start":5,"column_end":74}},{"value":"/ > operand that represents a register number. The required action is to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217285,"byte_end":217359,"line_start":2847,"line_end":2847,"column_start":5,"column_end":79}},{"value":"/ > set the rule for the specified register to “undefined.”","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217364,"byte_end":217429,"line_start":2848,"line_end":2848,"column_start":5,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":5769},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217794,"byte_end":217803,"line_start":2859,"line_end":2859,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::CallFrameInstruction::SameValue","value":"CallFrameInstruction::SameValue { register }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_same_value\n >\n > The DW_CFA_same_value instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “same value.”\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_same_value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217528,"byte_end":217554,"line_start":2854,"line_end":2854,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217559,"byte_end":217564,"line_start":2855,"line_end":2855,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_same_value instruction takes a single unsigned LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217569,"byte_end":217639,"line_start":2856,"line_end":2856,"column_start":5,"column_end":75}},{"value":"/ > operand that represents a register number. The required action is to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217644,"byte_end":217718,"line_start":2857,"line_end":2857,"column_start":5,"column_end":79}},{"value":"/ > set the rule for the specified register to “same value.”","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217723,"byte_end":217789,"line_start":2858,"line_end":2858,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":5771},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218425,"byte_end":218431,"line_start":2874,"line_end":2874,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::CallFrameInstruction::Offset","value":"CallFrameInstruction::Offset { register, factored_offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" The `Offset` instruction represents both `DW_CFA_offset` and\n `DW_CFA_offset_extended`.","sig":null,"attributes":[{"value":"/ The `Offset` instruction represents both `DW_CFA_offset` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217888,"byte_end":217952,"line_start":2864,"line_end":2864,"column_start":5,"column_end":69}},{"value":"/ `DW_CFA_offset_extended`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217957,"byte_end":217986,"line_start":2865,"line_end":2865,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217991,"byte_end":217994,"line_start":2866,"line_end":2866,"column_start":5,"column_end":8}},{"value":"/ > 3. DW_CFA_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":217999,"byte_end":218021,"line_start":2867,"line_end":2867,"column_start":5,"column_end":27}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218026,"byte_end":218031,"line_start":2868,"line_end":2868,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_offset instruction takes two operands: a register number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218036,"byte_end":218109,"line_start":2869,"line_end":2869,"column_start":5,"column_end":78}},{"value":"/ > (encoded with the opcode) and an unsigned LEB128 constant representing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218114,"byte_end":218190,"line_start":2870,"line_end":2870,"column_start":5,"column_end":81}},{"value":"/ > a factored offset. The required action is to change the rule for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218195,"byte_end":218269,"line_start":2871,"line_end":2871,"column_start":5,"column_end":79}},{"value":"/ > register indicated by the register number to be an offset(N) rule","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218274,"byte_end":218345,"line_start":2872,"line_end":2872,"column_start":5,"column_end":76}},{"value":"/ > where the value of N is factored offset * data_alignment_factor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218350,"byte_end":218420,"line_start":2873,"line_end":2873,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":5774},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219019,"byte_end":219035,"line_start":2889,"line_end":2889,"column_start":5,"column_end":21},"name":"OffsetExtendedSf","qualname":"::read::cfi::CallFrameInstruction::OffsetExtendedSf","value":"CallFrameInstruction::OffsetExtendedSf { register, factored_offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_offset_extended_sf\n >\n > The DW_CFA_offset_extended_sf instruction takes two operands: an\n > unsigned LEB128 value representing a register number and a signed\n > LEB128 factored offset. This instruction is identical to\n > DW_CFA_offset_extended except that the second operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 5. DW_CFA_offset_extended_sf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218579,"byte_end":218613,"line_start":2881,"line_end":2881,"column_start":5,"column_end":39}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218618,"byte_end":218623,"line_start":2882,"line_end":2882,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_offset_extended_sf instruction takes two operands: an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218628,"byte_end":218698,"line_start":2883,"line_end":2883,"column_start":5,"column_end":75}},{"value":"/ > unsigned LEB128 value representing a register number and a signed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218703,"byte_end":218774,"line_start":2884,"line_end":2884,"column_start":5,"column_end":76}},{"value":"/ > LEB128 factored offset. This instruction is identical to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218779,"byte_end":218841,"line_start":2885,"line_end":2885,"column_start":5,"column_end":67}},{"value":"/ > DW_CFA_offset_extended except that the second operand is signed and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218846,"byte_end":218919,"line_start":2886,"line_end":2886,"column_start":5,"column_end":78}},{"value":"/ > factored. The resulting offset is factored_offset *","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218924,"byte_end":218981,"line_start":2887,"line_end":2887,"column_start":5,"column_end":62}},{"value":"/ > data_alignment_factor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":218986,"byte_end":219014,"line_start":2888,"line_end":2888,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":5777},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219581,"byte_end":219590,"line_start":2903,"line_end":2903,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::CallFrameInstruction::ValOffset","value":"CallFrameInstruction::ValOffset { register, factored_offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_val_offset\n >\n > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands\n > representing a register number and a factored offset. The required\n > action is to change the rule for the register indicated by the\n > register number to be a val_offset(N) rule where the value of N is\n > factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 6. DW_CFA_val_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219183,"byte_end":219209,"line_start":2896,"line_end":2896,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219214,"byte_end":219219,"line_start":2897,"line_end":2897,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219224,"byte_end":219298,"line_start":2898,"line_end":2898,"column_start":5,"column_end":79}},{"value":"/ > representing a register number and a factored offset. The required","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219303,"byte_end":219375,"line_start":2899,"line_end":2899,"column_start":5,"column_end":77}},{"value":"/ > action is to change the rule for the register indicated by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219380,"byte_end":219448,"line_start":2900,"line_end":2900,"column_start":5,"column_end":73}},{"value":"/ > register number to be a val_offset(N) rule where the value of N is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219453,"byte_end":219525,"line_start":2901,"line_end":2901,"column_start":5,"column_end":77}},{"value":"/ > factored_offset * data_alignment_factor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219530,"byte_end":219576,"line_start":2902,"line_end":2902,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":5780},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220153,"byte_end":220164,"line_start":2917,"line_end":2917,"column_start":5,"column_end":16},"name":"ValOffsetSf","qualname":"::read::cfi::CallFrameInstruction::ValOffsetSf","value":"CallFrameInstruction::ValOffsetSf { register, factored_offset }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 7. DW_CFA_val_offset_sf\n >\n > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_val_offset\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[{"value":"/ > 7. DW_CFA_val_offset_sf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219738,"byte_end":219767,"line_start":2910,"line_end":2910,"column_start":5,"column_end":34}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219772,"byte_end":219777,"line_start":2911,"line_end":2911,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219782,"byte_end":219856,"line_start":2912,"line_end":2912,"column_start":5,"column_end":79}},{"value":"/ > LEB128 value representing a register number and a signed LEB128","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219861,"byte_end":219930,"line_start":2913,"line_end":2913,"column_start":5,"column_end":74}},{"value":"/ > factored offset. This instruction is identical to DW_CFA_val_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":219935,"byte_end":220008,"line_start":2914,"line_end":2914,"column_start":5,"column_end":78}},{"value":"/ > except that the second operand is signed and factored. The resulting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220013,"byte_end":220087,"line_start":2915,"line_end":2915,"column_start":5,"column_end":79}},{"value":"/ > offset is factored_offset * data_alignment_factor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220092,"byte_end":220148,"line_start":2916,"line_end":2916,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":5783},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220601,"byte_end":220609,"line_start":2930,"line_end":2930,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::CallFrameInstruction::Register","value":"CallFrameInstruction::Register { dest_register, src_register }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 8. DW_CFA_register\n >\n > The DW_CFA_register instruction takes two unsigned LEB128 operands\n > representing register numbers. The required action is to set the rule\n > for the first register to be register(R) where R is the second\n > register.\n","sig":null,"attributes":[{"value":"/ > 8. DW_CFA_register","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220312,"byte_end":220336,"line_start":2924,"line_end":2924,"column_start":5,"column_end":29}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220341,"byte_end":220346,"line_start":2925,"line_end":2925,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_register instruction takes two unsigned LEB128 operands","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220351,"byte_end":220423,"line_start":2926,"line_end":2926,"column_start":5,"column_end":77}},{"value":"/ > representing register numbers. The required action is to set the rule","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220428,"byte_end":220503,"line_start":2927,"line_end":2927,"column_start":5,"column_end":80}},{"value":"/ > for the first register to be register(R) where R is the second","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220508,"byte_end":220576,"line_start":2928,"line_end":2928,"column_start":5,"column_end":73}},{"value":"/ > register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220581,"byte_end":220596,"line_start":2929,"line_end":2929,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5786},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221446,"byte_end":221456,"line_start":2947,"line_end":2947,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CallFrameInstruction::Expression","value":"CallFrameInstruction::Expression { register, expression }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 9. DW_CFA_expression\n >\n > The DW_CFA_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be an\n > expression(E) rule where E is the DWARF expression. That is, the DWARF\n > expression computes the address. The value of the CFA is pushed on the\n > DWARF evaluation stack prior to execution of the DWARF expression.\n","sig":null,"attributes":[{"value":"/ > 9. DW_CFA_expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220855,"byte_end":220881,"line_start":2938,"line_end":2938,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220886,"byte_end":220891,"line_start":2939,"line_end":2939,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_expression instruction takes two operands: an unsigned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220896,"byte_end":220967,"line_start":2940,"line_end":2940,"column_start":5,"column_end":76}},{"value":"/ > LEB128 value representing a register number, and a DW_FORM_block value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":220972,"byte_end":221048,"line_start":2941,"line_end":2941,"column_start":5,"column_end":81}},{"value":"/ > representing a DWARF expression. The required action is to change the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221053,"byte_end":221128,"line_start":2942,"line_end":2942,"column_start":5,"column_end":80}},{"value":"/ > rule for the register indicated by the register number to be an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221133,"byte_end":221202,"line_start":2943,"line_end":2943,"column_start":5,"column_end":74}},{"value":"/ > expression(E) rule where E is the DWARF expression. That is, the DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221207,"byte_end":221283,"line_start":2944,"line_end":2944,"column_start":5,"column_end":81}},{"value":"/ > expression computes the address. The value of the CFA is pushed on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221288,"byte_end":221364,"line_start":2945,"line_end":2945,"column_start":5,"column_end":81}},{"value":"/ > DWARF evaluation stack prior to execution of the DWARF expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221369,"byte_end":221441,"line_start":2946,"line_end":2946,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":5789},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222243,"byte_end":222256,"line_start":2964,"line_end":2964,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::CallFrameInstruction::ValExpression","value":"CallFrameInstruction::ValExpression { register, expression }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 10. DW_CFA_val_expression\n >\n > The DW_CFA_val_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be a\n > val_expression(E) rule where E is the DWARF expression. That is, the\n > DWARF expression computes the value of the given register. The value\n > of the CFA is pushed on the DWARF evaluation stack prior to execution\n > of the DWARF expression.\n","sig":null,"attributes":[{"value":"/ > 10. DW_CFA_val_expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221610,"byte_end":221641,"line_start":2954,"line_end":2954,"column_start":5,"column_end":36}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221646,"byte_end":221651,"line_start":2955,"line_end":2955,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_val_expression instruction takes two operands: an unsigned","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221656,"byte_end":221731,"line_start":2956,"line_end":2956,"column_start":5,"column_end":80}},{"value":"/ > LEB128 value representing a register number, and a DW_FORM_block value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221736,"byte_end":221812,"line_start":2957,"line_end":2957,"column_start":5,"column_end":81}},{"value":"/ > representing a DWARF expression. The required action is to change the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221817,"byte_end":221892,"line_start":2958,"line_end":2958,"column_start":5,"column_end":80}},{"value":"/ > rule for the register indicated by the register number to be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221897,"byte_end":221965,"line_start":2959,"line_end":2959,"column_start":5,"column_end":73}},{"value":"/ > val_expression(E) rule where E is the DWARF expression. That is, the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":221970,"byte_end":222044,"line_start":2960,"line_end":2960,"column_start":5,"column_end":79}},{"value":"/ > DWARF expression computes the value of the given register. The value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222049,"byte_end":222123,"line_start":2961,"line_end":2961,"column_start":5,"column_end":79}},{"value":"/ > of the CFA is pushed on the DWARF evaluation stack prior to execution","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222128,"byte_end":222203,"line_start":2962,"line_end":2962,"column_start":5,"column_end":80}},{"value":"/ > of the DWARF expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222208,"byte_end":222238,"line_start":2963,"line_end":2963,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":5792},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222851,"byte_end":222858,"line_start":2980,"line_end":2980,"column_start":5,"column_end":12},"name":"Restore","qualname":"::read::cfi::CallFrameInstruction::Restore","value":"CallFrameInstruction::Restore { register }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" The `Restore` instruction represents both `DW_CFA_restore` and\n `DW_CFA_restore_extended`.","sig":null,"attributes":[{"value":"/ The `Restore` instruction represents both `DW_CFA_restore` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222410,"byte_end":222476,"line_start":2971,"line_end":2971,"column_start":5,"column_end":71}},{"value":"/ `DW_CFA_restore_extended`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222481,"byte_end":222511,"line_start":2972,"line_end":2972,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222516,"byte_end":222519,"line_start":2973,"line_end":2973,"column_start":5,"column_end":8}},{"value":"/ > 11. DW_CFA_restore","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222524,"byte_end":222548,"line_start":2974,"line_end":2974,"column_start":5,"column_end":29}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222553,"byte_end":222558,"line_start":2975,"line_end":2975,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_restore instruction takes a single operand (encoded with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222563,"byte_end":222636,"line_start":2976,"line_end":2976,"column_start":5,"column_end":78}},{"value":"/ > the opcode) that represents a register number. The required action is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222641,"byte_end":222716,"line_start":2977,"line_end":2977,"column_start":5,"column_end":80}},{"value":"/ > to change the rule for the indicated register to the rule assigned it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222721,"byte_end":222796,"line_start":2978,"line_end":2978,"column_start":5,"column_end":80}},{"value":"/ > by the initial_instructions in the CIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222801,"byte_end":222846,"line_start":2979,"line_end":2979,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223200,"byte_end":223213,"line_start":2991,"line_end":2991,"column_start":5,"column_end":18},"name":"RememberState","qualname":"::read::cfi::CallFrameInstruction::RememberState","value":"CallFrameInstruction::RememberState","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_remember_state\n >\n > The DW_CFA_remember_state instruction takes no operands. The required\n > action is to push the set of rules for every register onto an implicit\n > stack.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_remember_state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":222977,"byte_end":223007,"line_start":2986,"line_end":2986,"column_start":5,"column_end":35}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223012,"byte_end":223017,"line_start":2987,"line_end":2987,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_remember_state instruction takes no operands. The required","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223022,"byte_end":223097,"line_start":2988,"line_end":2988,"column_start":5,"column_end":80}},{"value":"/ > action is to push the set of rules for every register onto an implicit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223102,"byte_end":223178,"line_start":2989,"line_end":2989,"column_start":5,"column_end":81}},{"value":"/ > stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223183,"byte_end":223195,"line_start":2990,"line_end":2990,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5796},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223455,"byte_end":223467,"line_start":2998,"line_end":2998,"column_start":5,"column_end":17},"name":"RestoreState","qualname":"::read::cfi::CallFrameInstruction::RestoreState","value":"CallFrameInstruction::RestoreState","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_restore_state\n >\n > The DW_CFA_restore_state instruction takes no operands. The required\n > action is to pop the set of rules off the implicit stack and place\n > them in the current row.\n","sig":null,"attributes":[{"value":"/ > 2. DW_CFA_restore_state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223220,"byte_end":223249,"line_start":2993,"line_end":2993,"column_start":5,"column_end":34}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223254,"byte_end":223259,"line_start":2994,"line_end":2994,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_restore_state instruction takes no operands. The required","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223264,"byte_end":223338,"line_start":2995,"line_end":2995,"column_start":5,"column_end":79}},{"value":"/ > action is to pop the set of rules off the implicit stack and place","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223343,"byte_end":223415,"line_start":2996,"line_end":2996,"column_start":5,"column_end":77}},{"value":"/ > them in the current row.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223420,"byte_end":223450,"line_start":2997,"line_end":2997,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":5798},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223785,"byte_end":223793,"line_start":3007,"line_end":3007,"column_start":5,"column_end":13},"name":"ArgsSize","qualname":"::read::cfi::CallFrameInstruction::ArgsSize","value":"CallFrameInstruction::ArgsSize { size }","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > DW_CFA_GNU_args_size\n >\n > GNU Extension\n >\n > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand\n > representing an argument size. This instruction specifies the total of\n > the size of the arguments which have been pushed onto the stack.\n","sig":null,"attributes":[{"value":"/ > DW_CFA_GNU_args_size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223474,"byte_end":223500,"line_start":3000,"line_end":3000,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223505,"byte_end":223510,"line_start":3001,"line_end":3001,"column_start":5,"column_end":10}},{"value":"/ > GNU Extension","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223515,"byte_end":223534,"line_start":3002,"line_end":3002,"column_start":5,"column_end":24}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223539,"byte_end":223544,"line_start":3003,"line_end":3003,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223549,"byte_end":223624,"line_start":3004,"line_end":3004,"column_start":5,"column_end":80}},{"value":"/ > representing an argument size. This instruction specifies the total of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223629,"byte_end":223705,"line_start":3005,"line_end":3005,"column_start":5,"column_end":81}},{"value":"/ > the size of the arguments which have been pushed onto the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223710,"byte_end":223780,"line_start":3006,"line_end":3006,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5800},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":224124,"byte_end":224127,"line_start":3017,"line_end":3017,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::cfi::CallFrameInstruction::Nop","value":"CallFrameInstruction::Nop","parent":{"krate":0,"index":5747},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_nop\n >\n > The DW_CFA_nop instruction has no operands and no required actions. It\n > is used as padding to make a CIE or FDE an appropriate size.\n","sig":null,"attributes":[{"value":"/ > 1. DW_CFA_nop","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223938,"byte_end":223957,"line_start":3013,"line_end":3013,"column_start":5,"column_end":24}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223962,"byte_end":223967,"line_start":3014,"line_end":3014,"column_start":5,"column_end":10}},{"value":"/ > The DW_CFA_nop instruction has no operands and no required actions. It","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":223972,"byte_end":224048,"line_start":3015,"line_end":3015,"column_start":5,"column_end":81}},{"value":"/ > is used as padding to make a CIE or FDE an appropriate size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":224053,"byte_end":224119,"line_start":3016,"line_end":3016,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":5747},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212652,"byte_end":212672,"line_start":2735,"line_end":2735,"column_start":10,"column_end":30},"name":"CallFrameInstruction","qualname":"::read::cfi::CallFrameInstruction","value":"pub enum CallFrameInstruction<R: Reader> {\n    SetLoc {\n        address: u64,\n    },\n    AdvanceLoc {\n        delta: u32,\n    },\n    DefCfa {\n        register: Register,\n        offset: u64,\n    },\n    DefCfaSf {\n        register: Register,\n        factored_offset: i64,\n    },\n    DefCfaRegister {\n        register: Register,\n    },\n    DefCfaOffset {\n        offset: u64,\n    },\n    DefCfaOffsetSf {\n        factored_offset: i64,\n    },\n    DefCfaExpression {\n        expression: Expression<R>,\n    },\n    Undefined {\n        register: Register,\n    },\n    SameValue {\n        register: Register,\n    },\n    Offset {\n        register: Register,\n        factored_offset: u64,\n    },\n    OffsetExtendedSf {\n        register: Register,\n        factored_offset: i64,\n    },\n    ValOffset {\n        register: Register,\n        factored_offset: u64,\n    },\n    ValOffsetSf {\n        register: Register,\n        factored_offset: i64,\n    },\n    Register {\n        dest_register: Register,\n        src_register: Register,\n    },\n    Expression {\n        register: Register,\n        expression: Expression<R>,\n    },\n    ValExpression {\n        register: Register,\n        expression: Expression<R>,\n    },\n    Restore {\n        register: Register,\n    },\n    RememberState,\n    RestoreState,\n    ArgsSize {\n        size: u64,\n    },\n    Nop,\n}","parent":null,"children":[{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5761},{"krate":0,"index":5763},{"krate":0,"index":5765},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":5789},{"krate":0,"index":5792},{"krate":0,"index":5794},{"krate":0,"index":5796},{"krate":0,"index":5798},{"krate":0,"index":5800}],"decl_id":null,"docs":" A parsed call frame instruction.\n","sig":null,"attributes":[{"value":"/ A parsed call frame instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212567,"byte_end":212603,"line_start":2733,"line_end":2733,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5819},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232239,"byte_end":232263,"line_start":3229,"line_end":3229,"column_start":12,"column_end":36},"name":"CallFrameInstructionIter","qualname":"::read::cfi::CallFrameInstructionIter","value":"CallFrameInstructionIter {  }","parent":null,"children":[{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824}],"decl_id":null,"docs":" A lazy iterator parsing call frame instructions.","sig":null,"attributes":[{"value":"/ A lazy iterator parsing call frame instructions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232058,"byte_end":232110,"line_start":3224,"line_end":3224,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232111,"byte_end":232114,"line_start":3225,"line_end":3225,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232115,"byte_end":232136,"line_start":3226,"line_end":3226,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232137,"byte_end":232203,"line_start":3227,"line_end":3227,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232509,"byte_end":232513,"line_start":3237,"line_end":3237,"column_start":12,"column_end":16},"name":"next","qualname":"<CallFrameInstructionIter>::next","value":"pub fn next(&mut Self) -> Result<Option<CallFrameInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the next call frame instruction.\n","sig":null,"attributes":[{"value":"/ Parse the next call frame instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232455,"byte_end":232497,"line_start":3236,"line_end":3236,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5834},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233747,"byte_end":233753,"line_start":3281,"line_end":3281,"column_start":5,"column_end":11},"name":"Direct","qualname":"::read::cfi::Pointer::Direct","value":"Pointer::Direct(u64)","parent":{"krate":0,"index":5833},"children":[],"decl_id":null,"docs":" This value is the decoded pointer value.\n","sig":null,"attributes":[{"value":"/ This value is the decoded pointer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233698,"byte_end":233742,"line_start":3280,"line_end":3280,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234062,"byte_end":234070,"line_start":3289,"line_end":3289,"column_start":5,"column_end":13},"name":"Indirect","qualname":"::read::cfi::Pointer::Indirect","value":"Pointer::Indirect(u64)","parent":{"krate":0,"index":5833},"children":[],"decl_id":null,"docs":" This value is *not* the pointer value, but points to the address of\n where the real pointer value lives. In other words, deref this pointer\n to get the real pointer value.","sig":null,"attributes":[{"value":"/ This value is *not* the pointer value, but points to the address of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233765,"byte_end":233836,"line_start":3283,"line_end":3283,"column_start":5,"column_end":76}},{"value":"/ where the real pointer value lives. In other words, deref this pointer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233841,"byte_end":233915,"line_start":3284,"line_end":3284,"column_start":5,"column_end":79}},{"value":"/ to get the real pointer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233920,"byte_end":233954,"line_start":3285,"line_end":3285,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233959,"byte_end":233962,"line_start":3286,"line_end":3286,"column_start":5,"column_end":8}},{"value":"/ Chase this pointer at your own risk: do you trust the DWARF data it came","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233967,"byte_end":234043,"line_start":3287,"line_end":3287,"column_start":5,"column_end":81}},{"value":"/ from?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234048,"byte_end":234057,"line_start":3288,"line_end":3288,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":5833},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233684,"byte_end":233691,"line_start":3279,"line_end":3279,"column_start":10,"column_end":17},"name":"Pointer","qualname":"::read::cfi::Pointer","value":"pub enum Pointer { Direct(u64), Indirect(u64), }","parent":null,"children":[{"krate":0,"index":5834},{"krate":0,"index":5837}],"decl_id":null,"docs":" A decoded pointer.\n","sig":null,"attributes":[{"value":"/ A decoded pointer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":233607,"byte_end":233629,"line_start":3277,"line_end":3277,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373522,"byte_end":373527,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Dwarf","qualname":"::read::dwarf::Dwarf","value":"Dwarf { debug_abbrev, debug_addr, debug_info, debug_line, debug_line_str, debug_str, debug_str_offsets, debug_str_sup, debug_types, locations, ranges, file_type }","parent":null,"children":[{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5880}],"decl_id":null,"docs":" All of the commonly used DWARF sections, and other common information.\n","sig":null,"attributes":[{"value":"/ All of the commonly used DWARF sections, and other common information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373410,"byte_end":373484,"line_start":18,"line_end":18,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":5869},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373578,"byte_end":373590,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"name":"debug_abbrev","qualname":"::read::dwarf::Dwarf::debug_abbrev","value":"read::abbrev::DebugAbbrev<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_abbrev` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373537,"byte_end":373569,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5870},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373652,"byte_end":373662,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"debug_addr","qualname":"::read::dwarf::Dwarf::debug_addr","value":"read::addr::DebugAddr<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373613,"byte_end":373643,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5871},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373722,"byte_end":373732,"line_start":28,"line_end":28,"column_start":9,"column_end":19},"name":"debug_info","qualname":"::read::dwarf::Dwarf::debug_info","value":"read::unit::DebugInfo<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373683,"byte_end":373713,"line_start":27,"line_end":27,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373792,"byte_end":373802,"line_start":31,"line_end":31,"column_start":9,"column_end":19},"name":"debug_line","qualname":"::read::dwarf::Dwarf::debug_line","value":"read::line::DebugLine<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373753,"byte_end":373783,"line_start":30,"line_end":30,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5873},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373866,"byte_end":373880,"line_start":34,"line_end":34,"column_start":9,"column_end":23},"name":"debug_line_str","qualname":"::read::dwarf::Dwarf::debug_line_str","value":"read::str::DebugLineStr<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_line_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373823,"byte_end":373857,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5874},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373942,"byte_end":373951,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"debug_str","qualname":"::read::dwarf::Dwarf::debug_str","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373904,"byte_end":373933,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5875},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374017,"byte_end":374034,"line_start":40,"line_end":40,"column_start":9,"column_end":26},"name":"debug_str_offsets","qualname":"::read::dwarf::Dwarf::debug_str_offsets","value":"read::str::DebugStrOffsets<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":373971,"byte_end":374008,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374131,"byte_end":374144,"line_start":43,"line_end":43,"column_start":9,"column_end":22},"name":"debug_str_sup","qualname":"::read::dwarf::Dwarf::debug_str_sup","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_str` section for a supplementary object file.\n","sig":null,"attributes":[{"value":"/ The `.debug_str` section for a supplementary object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374061,"byte_end":374122,"line_start":42,"line_end":42,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":5877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374204,"byte_end":374215,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"name":"debug_types","qualname":"::read::dwarf::Dwarf::debug_types","value":"read::unit::DebugTypes<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374164,"byte_end":374195,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5878},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374320,"byte_end":374329,"line_start":49,"line_end":49,"column_start":9,"column_end":18},"name":"locations","qualname":"::read::dwarf::Dwarf::locations","value":"read::loclists::LocationLists<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The location lists in the `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ The location lists in the `.debug_loc` and `.debug_loclists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374237,"byte_end":374311,"line_start":48,"line_end":48,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5879},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374437,"byte_end":374443,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"ranges","qualname":"::read::dwarf::Dwarf::ranges","value":"read::rnglists::RangeLists<R>","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The range lists in the `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ The range lists in the `.debug_ranges` and `.debug_rnglists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374354,"byte_end":374428,"line_start":51,"line_end":51,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5880},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374500,"byte_end":374509,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"name":"file_type","qualname":"::read::dwarf::Dwarf::file_type","value":"common::DwarfFileType","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":" The type of this file.\n","sig":null,"attributes":[{"value":"/ The type of this file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374465,"byte_end":374491,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":375103,"byte_end":375107,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"load","qualname":"<Dwarf<T>>::load","value":"pub fn load<F1, F2, E>(F1, F2) -> core::result::Result<Self, E> where\nF1: FnMut(SectionId) -> core::result::Result<T, E>, F2: FnMut(SectionId) ->\ncore::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Try to load the DWARF sections using the given loader functions.","sig":null,"attributes":[{"value":"/ Try to load the DWARF sections using the given loader functions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374552,"byte_end":374620,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374625,"byte_end":374628,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ `section` loads a DWARF section from the main object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374633,"byte_end":374695,"line_start":61,"line_end":61,"column_start":5,"column_end":67}},{"value":"/ `sup` loads a DWARF sections from the supplementary object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374700,"byte_end":374768,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/ These functions should return an empty section if the section does not exist.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374773,"byte_end":374854,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374859,"byte_end":374862,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The provided callback functions may either directly return a `Reader` instance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374867,"byte_end":374949,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ (such as `EndianSlice`), or they may return some other type and then convert","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374954,"byte_end":375034,"line_start":66,"line_end":66,"column_start":5,"column_end":85}},{"value":"/ that type into a `Reader` using `Dwarf::borrow`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":375039,"byte_end":375091,"line_start":67,"line_end":67,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377553,"byte_end":377559,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Dwarf<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> Dwarf<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dwarf` structure that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `Dwarf` structure that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376306,"byte_end":376372,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376377,"byte_end":376380,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376385,"byte_end":376450,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376455,"byte_end":376458,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376463,"byte_end":376483,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376488,"byte_end":376491,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ It can be useful to load DWARF sections into owned data structures,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376496,"byte_end":376567,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ such as `Vec`. However, we do not implement the `Reader` trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376572,"byte_end":376638,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ for `Vec`, because it would be very inefficient, but this trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376643,"byte_end":376710,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ is required for all of the methods that parse the DWARF data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376715,"byte_end":376780,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/ So we first load the DWARF sections into `Vec`s, and then use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376785,"byte_end":376850,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ `borrow` to create `Reader`s that reference the data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376855,"byte_end":376912,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376917,"byte_end":376920,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376925,"byte_end":376943,"line_start":107,"line_end":107,"column_start":5,"column_end":23}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":376948,"byte_end":376996,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ # let loader = |name| -> Result<_, gimli::Error> { unimplemented!() };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377001,"byte_end":377075,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ # let sup_loader = |name| { unimplemented!() };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377080,"byte_end":377131,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/ // Read the DWARF sections into `Vec`s with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377136,"byte_end":377220,"line_start":111,"line_end":111,"column_start":5,"column_end":89}},{"value":"/ let owned_dwarf: gimli::Dwarf<Vec<u8>> = gimli::Dwarf::load(loader, sup_loader)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377225,"byte_end":377310,"line_start":112,"line_end":112,"column_start":5,"column_end":90}},{"value":"/ // Create references to the DWARF sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377315,"byte_end":377362,"line_start":113,"line_end":113,"column_start":5,"column_end":52}},{"value":"/ let dwarf = owned_dwarf.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377367,"byte_end":377413,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377418,"byte_end":377480,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377485,"byte_end":377492,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377497,"byte_end":377517,"line_start":117,"line_end":117,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377522,"byte_end":377529,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":377534,"byte_end":377541,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378640,"byte_end":378645,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"units","qualname":"<Dwarf<R>>::units","value":"pub fn units(&Self) -> DebugInfoUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the unit headers in the `.debug_info` section.","sig":null,"attributes":[{"value":"/ Iterate the unit headers in the `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378451,"byte_end":378509,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378514,"byte_end":378517,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378522,"byte_end":378543,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378548,"byte_end":378614,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378619,"byte_end":378628,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378809,"byte_end":378813,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"unit","qualname":"<Dwarf<R>>::unit","value":"pub fn unit(&Self, UnitHeader<R>) -> Result<Unit<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given unit header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378729,"byte_end":378783,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378788,"byte_end":378797,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379103,"byte_end":379113,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"type_units","qualname":"<Dwarf<R>>::type_units","value":"pub fn type_units(&Self) -> DebugTypesUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-unit headers in the `.debug_types` section.","sig":null,"attributes":[{"value":"/ Iterate the type-unit headers in the `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378908,"byte_end":378972,"line_start":157,"line_end":157,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378977,"byte_end":378980,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378985,"byte_end":379006,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379011,"byte_end":379077,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379082,"byte_end":379091,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379322,"byte_end":379335,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<Dwarf<R>>::abbreviations","value":"pub fn abbreviations(&Self, &UnitHeader<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations for a compilation unit.\n","sig":null,"attributes":[{"value":"/ Parse the abbreviations for a compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379199,"byte_end":379250,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379301,"byte_end":379310,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379524,"byte_end":379537,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"string_offset","qualname":"<Dwarf<R>>::string_offset","value":"pub fn string_offset(&Self, &Unit<R>, DebugStrOffsetsIndex<R::Offset>)\n-> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the string offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the string offset at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379450,"byte_end":379498,"line_start":173,"line_end":173,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379503,"byte_end":379512,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379877,"byte_end":379883,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"string","qualname":"<Dwarf<R>>::string","value":"pub fn string(&Self, DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_str`.\n","sig":null,"attributes":[{"value":"/ Return the string at the given offset in `.debug_str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379793,"byte_end":379851,"line_start":184,"line_end":184,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379856,"byte_end":379865,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380080,"byte_end":380091,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"line_string","qualname":"<Dwarf<R>>::line_string","value":"pub fn line_string(&Self, DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_line_str`.\n","sig":null,"attributes":[{"value":"/ Return the string at the given offset in `.debug_line_str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":379991,"byte_end":380054,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380059,"byte_end":380068,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380904,"byte_end":380915,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"attr_string","qualname":"<Dwarf<R>>::attr_string","value":"pub fn attr_string(&Self, &Unit<R>, AttributeValue<R>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an attribute value as a string slice.","sig":null,"attributes":[{"value":"/ Return an attribute value as a string slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380208,"byte_end":380256,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380261,"byte_end":380264,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380269,"byte_end":380306,"line_start":198,"line_end":198,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380311,"byte_end":380314,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ - an inline `DW_FORM_string` string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380319,"byte_end":380358,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/ - a `DW_FORM_strp` reference to an offset into the `.debug_str` section","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380363,"byte_end":380438,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ - a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380443,"byte_end":380513,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ object file","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380518,"byte_end":380533,"line_start":203,"line_end":203,"column_start":5,"column_end":20}},{"value":"/ - a `DW_FORM_line_strp` reference to an offset into the `.debug_line_str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380538,"byte_end":380615,"line_start":204,"line_end":204,"column_start":5,"column_end":82}},{"value":"/ section","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380620,"byte_end":380631,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ - a `DW_FORM_strx` index into the `.debug_str_offsets` entries for the unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380636,"byte_end":380715,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380720,"byte_end":380723,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ then return the attribute's string value. Returns an error if the attribute","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380728,"byte_end":380807,"line_start":208,"line_end":208,"column_start":5,"column_end":84}},{"value":"/ value does not have a string form, or if a string form has an invalid value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":380812,"byte_end":380892,"line_start":209,"line_end":209,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":381779,"byte_end":381786,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"address","qualname":"<Dwarf<R>>::address","value":"pub fn address(&Self, &Unit<R>, DebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the address at the given index.\n","sig":null,"attributes":[{"value":"/ Return the address at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":381725,"byte_end":381767,"line_start":228,"line_end":228,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382281,"byte_end":382293,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"attr_address","qualname":"<Dwarf<R>>::attr_address","value":"pub fn attr_address(&Self, &Unit<R>, AttributeValue<R>) -> Result<Option<u64>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as an address.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as an address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":381974,"byte_end":382025,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382030,"byte_end":382033,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382038,"byte_end":382075,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382080,"byte_end":382083,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_addr`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382088,"byte_end":382110,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/ - a `DW_FORM_addrx` index into the `.debug_addr` entries for the unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382115,"byte_end":382188,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382193,"byte_end":382196,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ then return the address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382201,"byte_end":382229,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382234,"byte_end":382269,"line_start":242,"line_end":242,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382648,"byte_end":382661,"line_start":252,"line_end":252,"column_start":12,"column_end":25},"name":"ranges_offset","qualname":"<Dwarf<R>>::ranges_offset","value":"pub fn ranges_offset(&Self, &Unit<R>, DebugRngListsIndex<R::Offset>)\n-> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the range list offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the range list offset at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382584,"byte_end":382636,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382974,"byte_end":382980,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"ranges","qualname":"<Dwarf<R>>::ranges","value":"pub fn ranges(&Self, &Unit<R>, RangeListsOffset<R::Offset>)\n-> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RangeListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `RangeListEntry`s starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":382894,"byte_end":382962,"line_start":261,"line_end":261,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383701,"byte_end":383719,"line_start":285,"line_end":285,"column_start":12,"column_end":30},"name":"attr_ranges_offset","qualname":"<Dwarf<R>>::attr_ranges_offset","value":"pub fn attr_ranges_offset(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<RangeListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list offset.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a range list offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383281,"byte_end":383341,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383346,"byte_end":383349,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383354,"byte_end":383391,"line_start":278,"line_end":278,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383396,"byte_end":383399,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_ranges` or `.debug_rnglists` sections","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383404,"byte_end":383495,"line_start":280,"line_end":280,"column_start":5,"column_end":96}},{"value":"/ - a `DW_FORM_rnglistx` index into the `.debug_rnglists` entries for the unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383500,"byte_end":383580,"line_start":281,"line_end":281,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383585,"byte_end":383588,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ then return the range list offset of the range list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383593,"byte_end":383649,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":383654,"byte_end":383689,"line_start":284,"line_end":284,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384523,"byte_end":384534,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"attr_ranges","qualname":"<Dwarf<R>>::attr_ranges","value":"pub fn attr_ranges(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<RngListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list entry iterator.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a range list entry iterator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384088,"byte_end":384156,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384161,"byte_end":384164,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384169,"byte_end":384206,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384211,"byte_end":384214,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_ranges` or `.debug_rnglists` sections","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384219,"byte_end":384310,"line_start":301,"line_end":301,"column_start":5,"column_end":96}},{"value":"/ - a `DW_FORM_rnglistx` index into the `.debug_rnglists` entries for the unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384315,"byte_end":384395,"line_start":302,"line_end":302,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384400,"byte_end":384403,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ then return an iterator over the entries in the range list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384408,"byte_end":384471,"line_start":304,"line_end":304,"column_start":5,"column_end":68}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384476,"byte_end":384511,"line_start":305,"line_end":305,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384989,"byte_end":384999,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"die_ranges","qualname":"<Dwarf<R>>::die_ranges","value":"pub fn die_ranges(&Self, &Unit<R>, &DebuggingInformationEntry<, , R>)\n-> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[{"value":"/ Return an iterator for the address ranges of a `DebuggingInformationEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384820,"byte_end":384899,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384904,"byte_end":384907,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This uses `DW_AT_low_pc`, `DW_AT_high_pc` and `DW_AT_ranges`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":384912,"byte_end":384977,"line_start":319,"line_end":319,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386601,"byte_end":386612,"line_start":361,"line_end":361,"column_start":12,"column_end":23},"name":"unit_ranges","qualname":"<Dwarf<R>>::unit_ranges","value":"pub fn unit_ranges(&Self, &Unit<R>) -> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `Unit`.","sig":null,"attributes":[{"value":"/ Return an iterator for the address ranges of a `Unit`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386405,"byte_end":386463,"line_start":357,"line_end":357,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386468,"byte_end":386471,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This uses `DW_AT_low_pc`, `DW_AT_high_pc` and `DW_AT_ranges` of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386476,"byte_end":386547,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ root `DebuggingInformationEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386552,"byte_end":386589,"line_start":360,"line_end":360,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386938,"byte_end":386954,"line_start":369,"line_end":369,"column_start":12,"column_end":28},"name":"locations_offset","qualname":"<Dwarf<R>>::locations_offset","value":"pub fn locations_offset(&Self, &Unit<R>, DebugLocListsIndex<R::Offset>)\n-> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the location list offset at the given index.\n","sig":null,"attributes":[{"value":"/ Return the location list offset at the given index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":386871,"byte_end":386926,"line_start":368,"line_end":368,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":387276,"byte_end":387285,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"locations","qualname":"<Dwarf<R>>::locations","value":"pub fn locations(&Self, &Unit<R>, LocationListsOffset<R::Offset>)\n-> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Iterate over the `LocationListEntry`s starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":387193,"byte_end":387264,"line_start":378,"line_end":378,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388345,"byte_end":388366,"line_start":411,"line_end":411,"column_start":12,"column_end":33},"name":"attr_locations_offset","qualname":"<Dwarf<R>>::attr_locations_offset","value":"pub fn attr_locations_offset(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<LocationListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list offset.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a location list offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":387919,"byte_end":387982,"line_start":402,"line_end":402,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":387987,"byte_end":387990,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":387995,"byte_end":388032,"line_start":404,"line_end":404,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388037,"byte_end":388040,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_loc` or `.debug_loclists` sections","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388045,"byte_end":388133,"line_start":406,"line_end":406,"column_start":5,"column_end":93}},{"value":"/ - a `DW_FORM_loclistx` index into the `.debug_loclists` entries for the unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388138,"byte_end":388218,"line_start":407,"line_end":407,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388223,"byte_end":388226,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ then return the location list offset of the location list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388231,"byte_end":388293,"line_start":409,"line_end":409,"column_start":5,"column_end":67}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388298,"byte_end":388333,"line_start":410,"line_end":410,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389213,"byte_end":389227,"line_start":434,"line_end":434,"column_start":12,"column_end":26},"name":"attr_locations","qualname":"<Dwarf<R>>::attr_locations","value":"pub fn attr_locations(&Self, &Unit<R>, AttributeValue<R>)\n-> Result<Option<LocListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list entry iterator.","sig":null,"attributes":[{"value":"/ Try to return an attribute value as a location list entry iterator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388775,"byte_end":388846,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388851,"byte_end":388854,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ If the attribute value is one of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388859,"byte_end":388896,"line_start":427,"line_end":427,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388901,"byte_end":388904,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ - a `DW_FORM_sec_offset` reference to the `.debug_loc` or `.debug_loclists` sections","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":388909,"byte_end":388997,"line_start":429,"line_end":429,"column_start":5,"column_end":93}},{"value":"/ - a `DW_FORM_loclistx` index into the `.debug_loclists` entries for the unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389002,"byte_end":389082,"line_start":430,"line_end":430,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389087,"byte_end":389090,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ then return an iterator over the entries in the location list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389095,"byte_end":389161,"line_start":432,"line_end":432,"column_start":5,"column_end":71}},{"value":"/ Returns `None` for other forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389166,"byte_end":389201,"line_start":433,"line_end":433,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389697,"byte_end":389713,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<Dwarf<R>>::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(bool, SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389519,"byte_end":389600,"line_start":445,"line_end":445,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389605,"byte_end":389608,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The first element of the tuple is `true` for supplementary sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":389613,"byte_end":389685,"line_start":447,"line_end":447,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":390825,"byte_end":390837,"line_start":470,"line_end":470,"column_start":12,"column_end":24},"name":"format_error","qualname":"<Dwarf<R>>::format_error","value":"pub fn format_error(&Self, Error) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the given error.","sig":null,"attributes":[{"value":"/ Returns a string representation of the given error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":390653,"byte_end":390708,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":390713,"byte_end":390716,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This uses information from the DWARF sections to provide more information in some cases.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":390721,"byte_end":390813,"line_start":469,"line_end":469,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":5887},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391589,"byte_end":391593,"line_start":494,"line_end":494,"column_start":12,"column_end":16},"name":"Unit","qualname":"::read::dwarf::Unit","value":"Unit { header, abbreviations, name, comp_dir, low_pc, str_offsets_base, addr_base, loclists_base, rnglists_base, line_program }","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899}],"decl_id":null,"docs":" All of the commonly used information for a unit in the `.debug_info` or `.debug_types`\n sections.\n","sig":null,"attributes":[{"value":"/ All of the commonly used information for a unit in the `.debug_info` or `.debug_types`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391456,"byte_end":391546,"line_start":491,"line_end":491,"column_start":1,"column_end":91}},{"value":"/ sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391547,"byte_end":391560,"line_start":492,"line_end":492,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":5890},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391735,"byte_end":391741,"line_start":500,"line_end":500,"column_start":9,"column_end":15},"name":"header","qualname":"::read::dwarf::Unit::header","value":"read::unit::UnitHeader<R, Offset>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The header of the unit.\n","sig":null,"attributes":[{"value":"/ The header of the unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391699,"byte_end":391726,"line_start":499,"line_end":499,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5891},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391822,"byte_end":391835,"line_start":503,"line_end":503,"column_start":9,"column_end":22},"name":"abbreviations","qualname":"::read::dwarf::Unit::abbreviations","value":"read::abbrev::Abbreviations","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The parsed abbreviations for the unit.\n","sig":null,"attributes":[{"value":"/ The parsed abbreviations for the unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391771,"byte_end":391813,"line_start":502,"line_end":502,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5892},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391909,"byte_end":391913,"line_start":506,"line_end":506,"column_start":9,"column_end":13},"name":"name","qualname":"::read::dwarf::Unit::name","value":"core::option::Option<R>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_name` attribute of the unit.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_name` attribute of the unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391857,"byte_end":391900,"line_start":505,"line_end":505,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5893},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391987,"byte_end":391995,"line_start":509,"line_end":509,"column_start":9,"column_end":17},"name":"comp_dir","qualname":"::read::dwarf::Unit::comp_dir","value":"core::option::Option<R>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_comp_dir` attribute of the unit.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_comp_dir` attribute of the unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":391931,"byte_end":391978,"line_start":508,"line_end":508,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5894},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392082,"byte_end":392088,"line_start":512,"line_end":512,"column_start":9,"column_end":15},"name":"low_pc","qualname":"::read::dwarf::Unit::low_pc","value":"u64","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_low_pc` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_low_pc` attribute of the unit. Defaults to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392013,"byte_end":392073,"line_start":511,"line_end":511,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5895},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392179,"byte_end":392195,"line_start":515,"line_end":515,"column_start":9,"column_end":25},"name":"str_offsets_base","qualname":"::read::dwarf::Unit::str_offsets_base","value":"common::DebugStrOffsetsBase<Offset>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392100,"byte_end":392170,"line_start":514,"line_end":514,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":5896},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392303,"byte_end":392312,"line_start":518,"line_end":518,"column_start":9,"column_end":18},"name":"addr_base","qualname":"::read::dwarf::Unit::addr_base","value":"common::DebugAddrBase<Offset>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_addr_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_addr_base` attribute of the unit. Defaults to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392231,"byte_end":392294,"line_start":517,"line_end":517,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":5897},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392418,"byte_end":392431,"line_start":521,"line_end":521,"column_start":9,"column_end":22},"name":"loclists_base","qualname":"::read::dwarf::Unit::loclists_base","value":"common::DebugLocListsBase<Offset>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392342,"byte_end":392409,"line_start":520,"line_end":520,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":5898},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392541,"byte_end":392554,"line_start":524,"line_end":524,"column_start":9,"column_end":22},"name":"rnglists_base","qualname":"::read::dwarf::Unit::rnglists_base","value":"common::DebugRngListsBase<Offset>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[{"value":"/ The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392465,"byte_end":392532,"line_start":523,"line_end":523,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":5899},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392637,"byte_end":392649,"line_start":527,"line_end":527,"column_start":9,"column_end":21},"name":"line_program","qualname":"::read::dwarf::Unit::line_program","value":"core::option::Option<read::line::IncompleteLineProgram<R, Offset>>","parent":{"krate":0,"index":5887},"children":[],"decl_id":null,"docs":" The line number program of the unit.\n","sig":null,"attributes":[{"value":"/ The line number program of the unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392588,"byte_end":392628,"line_start":526,"line_end":526,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392806,"byte_end":392809,"line_start":533,"line_end":533,"column_start":12,"column_end":15},"name":"new","qualname":"<Unit<R>>::new","value":"pub fn new(&Dwarf<R>, UnitHeader<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given unit header.\n","sig":null,"attributes":[{"value":"/ Construct a new `Unit` from the given unit header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392726,"byte_end":392780,"line_start":531,"line_end":531,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392785,"byte_end":392794,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":396754,"byte_end":396762,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Unit<R>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":396679,"byte_end":396728,"line_start":629,"line_end":629,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":396733,"byte_end":396742,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":396899,"byte_end":396904,"line_start":636,"line_end":636,"column_start":12,"column_end":17},"name":"entry","qualname":"<Unit<R>>::entry","value":"pub fn entry(&Self, UnitOffset<R::Offset>)\n-> Result<DebuggingInformationEntry<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":396826,"byte_end":396887,"line_start":635,"line_end":635,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397131,"byte_end":397138,"line_start":642,"line_end":642,"column_start":12,"column_end":19},"name":"entries","qualname":"<Unit<R>>::entries","value":"pub fn entries(&Self) -> EntriesCursor<, , R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397051,"byte_end":397105,"line_start":640,"line_end":640,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397110,"byte_end":397119,"line_start":641,"line_end":641,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397345,"byte_end":397362,"line_start":649,"line_end":649,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<Unit<R>>::entries_at_offset","value":"pub fn entries_at_offset(&Self, UnitOffset<R::Offset>)\n-> Result<EntriesCursor<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397228,"byte_end":397281,"line_start":646,"line_end":646,"column_start":5,"column_end":58}},{"value":"/ starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397286,"byte_end":397319,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397324,"byte_end":397333,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397636,"byte_end":397648,"line_start":656,"line_end":656,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<Unit<R>>::entries_tree","value":"pub fn entries_tree(&Self, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesTree<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397509,"byte_end":397572,"line_start":653,"line_end":653,"column_start":5,"column_end":68}},{"value":"/ starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397577,"byte_end":397610,"line_start":654,"line_end":654,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397615,"byte_end":397624,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397891,"byte_end":397902,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<Unit<R>>::entries_raw","value":"pub fn entries_raw(&Self, Option<UnitOffset<R::Offset>>)\n-> Result<EntriesRaw<, , R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397796,"byte_end":397865,"line_start":660,"line_end":660,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":397870,"byte_end":397879,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398270,"byte_end":398295,"line_start":669,"line_end":669,"column_start":12,"column_end":37},"name":"copy_relocated_attributes","qualname":"<Unit<R>>::copy_relocated_attributes","value":"pub fn copy_relocated_attributes(&mut Self, &Unit<R>)","parent":null,"children":[],"decl_id":null,"docs":" Copy attributes that are subject to relocation from another unit. This is intended\n to be used to copy attributes from a skeleton compilation unit to the corresponding\n split compilation unit.\n","sig":null,"attributes":[{"value":"/ Copy attributes that are subject to relocation from another unit. This is intended","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398048,"byte_end":398134,"line_start":666,"line_end":666,"column_start":5,"column_end":91}},{"value":"/ to be used to copy attributes from a skeleton compilation unit to the corresponding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398139,"byte_end":398226,"line_start":667,"line_end":667,"column_start":5,"column_end":92}},{"value":"/ split compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398231,"byte_end":398258,"line_start":668,"line_end":668,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398771,"byte_end":398785,"line_start":682,"line_end":682,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<UnitSectionOffset<T>>::to_unit_offset","value":"pub fn to_unit_offset<R>(&Self, &Unit<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398565,"byte_end":398633,"line_start":679,"line_end":679,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398638,"byte_end":398690,"line_start":680,"line_end":680,"column_start":5,"column_end":57}},{"value":"/ Returns `None` if the offset is not within the unit entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398695,"byte_end":398759,"line_start":681,"line_end":681,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399894,"byte_end":399916,"line_start":713,"line_end":713,"column_start":12,"column_end":34},"name":"to_unit_section_offset","qualname":"<UnitOffset<T>>::to_unit_section_offset","value":"pub fn to_unit_section_offset<R>(&Self, &Unit<R>) -> UnitSectionOffset<T>\nwhere R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given compilation unit.","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_info section,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399676,"byte_end":399753,"line_start":709,"line_end":709,"column_start":5,"column_end":82}},{"value":"/ instead of relative to the start of the given compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399758,"byte_end":399825,"line_start":710,"line_end":710,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399830,"byte_end":399833,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Does not check that the offset is valid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399838,"byte_end":399882,"line_start":712,"line_end":712,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5904},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400523,"byte_end":400532,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"RangeIter","qualname":"::read::dwarf::RangeIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[{"value":"/ An iterator for the address ranges of a `DebuggingInformationEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400356,"byte_end":400428,"line_start":728,"line_end":728,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400429,"byte_end":400432,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ Returned by `Dwarf::die_ranges` and `Dwarf::unit_ranges`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400433,"byte_end":400494,"line_start":730,"line_end":730,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400888,"byte_end":400892,"line_start":748,"line_end":748,"column_start":12,"column_end":16},"name":"next","qualname":"<RangeIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400833,"byte_end":400876,"line_start":747,"line_end":747,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5922},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403563,"byte_end":403574,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"EndianSlice","qualname":"::read::endian_slice::EndianSlice","value":"EndianSlice {  }","parent":null,"children":[{"krate":0,"index":5925},{"krate":0,"index":5926}],"decl_id":null,"docs":" A `&[u8]` slice with endianity metadata.","sig":null,"attributes":[{"value":"/ A `&[u8]` slice with endianity metadata.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403354,"byte_end":403398,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403399,"byte_end":403402,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This implements the `Reader` trait, which is used for all reading of DWARF sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403403,"byte_end":403491,"line_start":13,"line_end":13,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403849,"byte_end":403852,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<EndianSlice>::new","value":"pub fn new(&'input [u8], Endian) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EndianSlice` with the given slice and endianity.\n","sig":null,"attributes":[{"value":"/ Construct a new `EndianSlice` with the given slice and endianity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403754,"byte_end":403823,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403828,"byte_end":403837,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404141,"byte_end":404144,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"buf","qualname":"<EndianSlice>::buf","value":"pub fn buf(&Self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403972,"byte_end":404012,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404017,"byte_end":404026,"line_start":34,"line_end":34,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"Method renamed to EndianSlice::slice; use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404050,"byte_end":404129,"line_start":36,"line_end":36,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404266,"byte_end":404271,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"slice","qualname":"<EndianSlice>::slice","value":"pub fn slice(&Self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"/ Return a reference to the raw slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404200,"byte_end":404240,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404245,"byte_end":404254,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404554,"byte_end":404562,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"split_at","qualname":"<EndianSlice>::split_at","value":"pub fn split_at(&Self, usize) -> (EndianSlice, EndianSlice)","parent":null,"children":[],"decl_id":null,"docs":" Split the slice in two at the given index, resulting in the tuple where\n the first item has range [0, idx), and the second has range [idx,\n len). Panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Split the slice in two at the given index, resulting in the tuple where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404327,"byte_end":404402,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ the first item has range [0, idx), and the second has range [idx,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404407,"byte_end":404476,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ len). Panics if the index is out of bounds.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404481,"byte_end":404528,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404533,"byte_end":404542,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404835,"byte_end":404839,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"find","qualname":"<EndianSlice>::find","value":"pub fn find(&Self, u8) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Find the first occurence of a byte in the slice, and return its index.\n","sig":null,"attributes":[{"value":"/ Find the first occurence of a byte in the slice, and return its index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404735,"byte_end":404809,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404814,"byte_end":404823,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405063,"byte_end":405074,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<EndianSlice>::offset_from","value":"pub fn offset_from(&Self, EndianSlice) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the start of the slice relative to the start\n of the given slice.\n","sig":null,"attributes":[{"value":"/ Return the offset of the start of the slice relative to the start","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":404940,"byte_end":405009,"line_start":64,"line_end":64,"column_start":5,"column_end":74}},{"value":"/ of the given slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405014,"byte_end":405037,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405042,"byte_end":405051,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405566,"byte_end":405575,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"to_string","qualname":"<EndianSlice>::to_string","value":"pub fn to_string(&Self) -> Result<&'input str>","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string using `str::from_utf8`.","sig":null,"attributes":[{"value":"/ Converts the slice to a string using `str::from_utf8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405407,"byte_end":405465,"line_start":75,"line_end":75,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405470,"byte_end":405473,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the slice contains invalid characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405478,"byte_end":405540,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405545,"byte_end":405554,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405814,"byte_end":405829,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<EndianSlice>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string, including invalid characters,\n using `String::from_utf8_lossy`.\n","sig":null,"attributes":[{"value":"/ Converts the slice to a string, including invalid characters,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405682,"byte_end":405747,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ using `String::from_utf8_lossy`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405752,"byte_end":405788,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":405793,"byte_end":405802,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407014,"byte_end":407019,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"range","qualname":"<EndianSlice>::range","value":"pub fn range(&Self, Range<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..end` range of the underlying slice and return a\n new `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `start..end` range of the underlying slice and return a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406589,"byte_end":406663,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ new `EndianSlice`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406668,"byte_end":406690,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406695,"byte_end":406698,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406703,"byte_end":406710,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406715,"byte_end":406758,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406763,"byte_end":406766,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406771,"byte_end":406813,"line_start":118,"line_end":118,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406818,"byte_end":406879,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range(1..3),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406884,"byte_end":406924,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/            EndianSlice::new(&slice[1..3], LittleEndian));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406929,"byte_end":406990,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406995,"byte_end":407002,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407617,"byte_end":407627,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"range_from","qualname":"<EndianSlice>::range_from","value":"pub fn range_from(&Self, RangeFrom<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `start..` range of the underlying slice and return a new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407192,"byte_end":407267,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ `EndianSlice`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407272,"byte_end":407290,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407295,"byte_end":407298,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407303,"byte_end":407310,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407315,"byte_end":407358,"line_start":134,"line_end":134,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407363,"byte_end":407366,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407371,"byte_end":407413,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407418,"byte_end":407479,"line_start":137,"line_end":137,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range_from(2..),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407484,"byte_end":407528,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/            EndianSlice::new(&slice[2..], LittleEndian));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407533,"byte_end":407593,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407598,"byte_end":407605,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408225,"byte_end":408233,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"range_to","qualname":"<EndianSlice>::range_to","value":"pub fn range_to(&Self, RangeTo<usize>) -> EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" Take the given `..end` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[{"value":"/ Take the given `..end` range of the underlying slice and return a new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407804,"byte_end":407877,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ `EndianSlice`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407882,"byte_end":407900,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407905,"byte_end":407908,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407913,"byte_end":407920,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use gimli::{EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407925,"byte_end":407968,"line_start":152,"line_end":152,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407973,"byte_end":407976,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let slice = &[0x01, 0x02, 0x03, 0x04];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":407981,"byte_end":408023,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/ let endian_slice = EndianSlice::new(slice, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408028,"byte_end":408089,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(endian_slice.range_to(..3),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408094,"byte_end":408136,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/            EndianSlice::new(&slice[..3], LittleEndian));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408141,"byte_end":408201,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408206,"byte_end":408213,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5962},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412936,"byte_end":412950,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"ReaderOffsetId","qualname":"::read::reader::ReaderOffsetId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an offset within a section reader.","sig":null,"attributes":[{"value":"/ An identifier for an offset within a section reader.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412574,"byte_end":412630,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412631,"byte_end":412634,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is used for error reporting. The meaning of this value is specific to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412635,"byte_end":412713,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ each reader implementation. The values should be chosen to be unique amongst","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412714,"byte_end":412794,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ all readers. If values are not unique then errors may point to the wrong reader.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412795,"byte_end":412879,"line_start":15,"line_end":15,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":5964},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412951,"byte_end":412958,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"name":"0","qualname":"::read::reader::ReaderOffsetId::0","value":"u64","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1002},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413110,"byte_end":413122,"line_start":22,"line_end":22,"column_start":11,"column_end":23},"name":"ReaderOffset","qualname":"::read::reader::ReaderOffset","value":"ReaderOffset: Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output =\nSelf>","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"decl_id":null,"docs":" A trait for offsets with a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for offsets with a DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":412962,"byte_end":413007,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413008,"byte_end":413011,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows consumers to choose a size that is appropriate for their address space.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413012,"byte_end":413099,"line_start":21,"line_end":21,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413257,"byte_end":413264,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::read::reader::ReaderOffset::from_u8","value":"pub fn from_u8(u8) -> Self","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Convert a u8 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u8 to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413219,"byte_end":413249,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413330,"byte_end":413338,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::read::reader::ReaderOffset::from_u16","value":"pub fn from_u16(u16) -> Self","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Convert a u16 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u16 to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413291,"byte_end":413322,"line_start":28,"line_end":28,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413406,"byte_end":413414,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::read::reader::ReaderOffset::from_i16","value":"pub fn from_i16(i16) -> Self","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Convert an i16 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert an i16 to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413366,"byte_end":413398,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413481,"byte_end":413489,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::read::reader::ReaderOffset::from_u32","value":"pub fn from_u32(u32) -> Self","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Convert a u32 to an offset.\n","sig":null,"attributes":[{"value":"/ Convert a u32 to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413442,"byte_end":413473,"line_start":34,"line_end":34,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413634,"byte_end":413642,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::read::reader::ReaderOffset::from_u64","value":"pub fn from_u64(u64) -> Result<Self>","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Convert a u64 to an offset.","sig":null,"attributes":[{"value":"/ Convert a u64 to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413517,"byte_end":413548,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413553,"byte_end":413556,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Returns `Error::UnsupportedOffset` if the value is too large.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413561,"byte_end":413626,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413717,"byte_end":413725,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"into_u64","qualname":"::read::reader::ReaderOffset::into_u64","value":"pub fn into_u64(Self) -> u64","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Convert an offset to a u64.\n","sig":null,"attributes":[{"value":"/ Convert an offset to a u64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413678,"byte_end":413709,"line_start":42,"line_end":42,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413810,"byte_end":413822,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::read::reader::ReaderOffset::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413745,"byte_end":413802,"line_start":45,"line_end":45,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413913,"byte_end":413924,"line_start":49,"line_end":49,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::read::reader::ReaderOffset::checked_sub","value":"pub fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`.\n","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413856,"byte_end":413905,"line_start":48,"line_end":48,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1038},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418069,"byte_end":418075,"line_start":207,"line_end":207,"column_start":11,"column_end":17},"name":"Reader","qualname":"::read::reader::Reader","value":"Reader: Debug + Clone","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091}],"decl_id":null,"docs":" A trait for reading the data from a DWARF section.","sig":null,"attributes":[{"value":"/ A trait for reading the data from a DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416475,"byte_end":416529,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416530,"byte_end":416533,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ All read operations advance the section offset of the reader","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416534,"byte_end":416598,"line_start":190,"line_end":190,"column_start":1,"column_end":65}},{"value":"/ unless specified otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416599,"byte_end":416630,"line_start":191,"line_end":191,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416631,"byte_end":416634,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ## Choosing a `Reader` Implementation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416635,"byte_end":416676,"line_start":193,"line_end":193,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416677,"byte_end":416680,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ `gimli` comes with a few different `Reader` implementations and lets you","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416681,"byte_end":416757,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ choose the one that is right for your use case. A `Reader` is essentially a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416758,"byte_end":416837,"line_start":196,"line_end":196,"column_start":1,"column_end":80}},{"value":"/ view into the raw bytes that make up some DWARF, but this view might borrow","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416838,"byte_end":416917,"line_start":197,"line_end":197,"column_start":1,"column_end":80}},{"value":"/ the underlying data or use reference counting ownership, and it might be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416918,"byte_end":416994,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/ thread safe or not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":416995,"byte_end":417018,"line_start":199,"line_end":199,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417019,"byte_end":417022,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ | Implementation    | Ownership         | Thread Safe | Notes |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417023,"byte_end":417090,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/ |:------------------|:------------------|:------------|:------|","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417091,"byte_end":417158,"line_start":202,"line_end":202,"column_start":1,"column_end":68}},{"value":"/ | [`EndianSlice`](./struct.EndianSlice.html)        | Borrowed          | Yes         | Fastest, but requires that all of your code work with borrows. |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417159,"byte_end":417315,"line_start":203,"line_end":203,"column_start":1,"column_end":157}},{"value":"/ | [`EndianRcSlice`](./struct.EndianRcSlice.html)    | Reference counted | No          | Shared ownership via reference counting, which alleviates the borrow restrictions of `EndianSlice` but imposes reference counting increments and decrements. Cannot be sent across threads, because the reference count is not atomic. |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417316,"byte_end":417640,"line_start":204,"line_end":204,"column_start":1,"column_end":325}},{"value":"/ | [`EndianArcSlice`](./struct.EndianArcSlice.html)  | Reference counted | Yes         | The same as `EndianRcSlice`, but uses atomic reference counting, and therefore reference counting operations are slower but `EndianArcSlice`s may be sent across threads. |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417641,"byte_end":417904,"line_start":205,"line_end":205,"column_start":1,"column_end":264}},{"value":"/ | [`EndianReader<T>`](./struct.EndianReader.html)   | Same as `T`       | Same as `T` | Escape hatch for easily defining your own type of `Reader`. |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":417905,"byte_end":418058,"line_start":206,"line_end":206,"column_start":1,"column_end":154}}]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418148,"byte_end":418154,"line_start":209,"line_end":209,"column_start":10,"column_end":16},"name":"Endian","qualname":"::read::reader::Reader::Endian","value":"type Endian: Endianity;","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" The endianity of bytes that are read.\n","sig":null,"attributes":[{"value":"/ The endianity of bytes that are read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418097,"byte_end":418138,"line_start":208,"line_end":208,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418224,"byte_end":418230,"line_start":212,"line_end":212,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::reader::Reader::Offset","value":"type Offset: ReaderOffset;","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" The type used for offsets and lengths.\n","sig":null,"attributes":[{"value":"/ The type used for offsets and lengths.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418172,"byte_end":418214,"line_start":211,"line_end":211,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418307,"byte_end":418313,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"endian","qualname":"::read::reader::Reader::endian","value":"pub fn endian(&Self) -> Self::Endian","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return the endianity of bytes that are read.\n","sig":null,"attributes":[{"value":"/ Return the endianity of bytes that are read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418251,"byte_end":418299,"line_start":214,"line_end":214,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418392,"byte_end":418395,"line_start":218,"line_end":218,"column_start":8,"column_end":11},"name":"len","qualname":"::read::reader::Reader::len","value":"pub fn len(&Self) -> Self::Offset","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return the number of bytes remaining.\n","sig":null,"attributes":[{"value":"/ Return the number of bytes remaining.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418343,"byte_end":418384,"line_start":217,"line_end":217,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418479,"byte_end":418484,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"empty","qualname":"::read::reader::Reader::empty","value":"pub fn empty(&mut Self)","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to zero.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes remaining to zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418425,"byte_end":418471,"line_start":220,"line_end":220,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418572,"byte_end":418580,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"truncate","qualname":"::read::reader::Reader::truncate","value":"pub fn truncate(&mut Self, Self::Offset) -> Result<()>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to the specified length.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes remaining to the specified length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418502,"byte_end":418564,"line_start":223,"line_end":223,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418855,"byte_end":418866,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"offset_from","qualname":"::read::reader::Reader::offset_from","value":"pub fn offset_from(&Self, &Self) -> Self::Offset","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return the offset of this reader's data relative to the start of\n the given base reader's data.","sig":null,"attributes":[{"value":"/ Return the offset of this reader's data relative to the start of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418631,"byte_end":418699,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ the given base reader's data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418704,"byte_end":418737,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418742,"byte_end":418745,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ May panic if this reader's data is not contained within the given","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418750,"byte_end":418819,"line_start":229,"line_end":229,"column_start":5,"column_end":74}},{"value":"/ base reader's data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418824,"byte_end":418847,"line_start":230,"line_end":230,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418972,"byte_end":418981,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"offset_id","qualname":"::read::reader::Reader::offset_id","value":"pub fn offset_id(&Self) -> ReaderOffsetId","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return an identifier for the current reader offset.\n","sig":null,"attributes":[{"value":"/ Return an identifier for the current reader offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418909,"byte_end":418964,"line_start":233,"line_end":233,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419120,"byte_end":419136,"line_start":238,"line_end":238,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::reader::Reader::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId) -> Option<Self::Offset>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return the offset corresponding to the given `id` if\n it is associated with this reader.\n","sig":null,"attributes":[{"value":"/ Return the offset corresponding to the given `id` if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419013,"byte_end":419069,"line_start":236,"line_end":236,"column_start":5,"column_end":61}},{"value":"/ it is associated with this reader.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419074,"byte_end":419112,"line_start":237,"line_end":237,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419311,"byte_end":419315,"line_start":242,"line_end":242,"column_start":8,"column_end":12},"name":"find","qualname":"::read::reader::Reader::find","value":"pub fn find(&Self, u8) -> Result<Self::Offset>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Find the index of the first occurence of the given byte.\n The offset of the reader is not changed.\n","sig":null,"attributes":[{"value":"/ Find the index of the first occurence of the given byte.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419194,"byte_end":419254,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ The offset of the reader is not changed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419259,"byte_end":419303,"line_start":241,"line_end":241,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419413,"byte_end":419417,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"skip","qualname":"::read::reader::Reader::skip","value":"pub fn skip(&mut Self, Self::Offset) -> Result<()>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Discard the specified number of bytes.\n","sig":null,"attributes":[{"value":"/ Discard the specified number of bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419363,"byte_end":419405,"line_start":244,"line_end":244,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419653,"byte_end":419658,"line_start":251,"line_end":251,"column_start":8,"column_end":13},"name":"split","qualname":"::read::reader::Reader::split","value":"pub fn split(&mut Self, Self::Offset) -> Result<Self>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Split a reader in two.","sig":null,"attributes":[{"value":"/ Split a reader in two.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419468,"byte_end":419494,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419499,"byte_end":419502,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ A new reader is returned that can be used to read the next","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419507,"byte_end":419569,"line_start":249,"line_end":249,"column_start":5,"column_end":67}},{"value":"/ `len` bytes, and `self` is advanced so that it reads the remainder.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419574,"byte_end":419645,"line_start":250,"line_end":250,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419939,"byte_end":419947,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"to_slice","qualname":"::read::reader::Reader::to_slice","value":"pub fn to_slice(&Self) -> Result<Cow<, [u8]>>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return all remaining data as a clone-on-write slice.","sig":null,"attributes":[{"value":"/ Return all remaining data as a clone-on-write slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419711,"byte_end":419767,"line_start":253,"line_end":253,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419772,"byte_end":419775,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The slice will be borrowed where possible, but some readers may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419780,"byte_end":419847,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/ always return an owned vector.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419852,"byte_end":419886,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419891,"byte_end":419894,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419899,"byte_end":419931,"line_start":258,"line_end":258,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420287,"byte_end":420296,"line_start":269,"line_end":269,"column_start":8,"column_end":17},"name":"to_string","qualname":"::read::reader::Reader::to_string","value":"pub fn to_string(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string.","sig":null,"attributes":[{"value":"/ Convert all remaining data to a clone-on-write string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":419982,"byte_end":420040,"line_start":261,"line_end":261,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420045,"byte_end":420048,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The string will be borrowed where possible, but some readers may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420053,"byte_end":420121,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ always return an owned string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420126,"byte_end":420160,"line_start":264,"line_end":264,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420165,"byte_end":420168,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420173,"byte_end":420205,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420210,"byte_end":420213,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the data contains invalid characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420218,"byte_end":420279,"line_start":268,"line_end":268,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420591,"byte_end":420606,"line_start":277,"line_end":277,"column_start":8,"column_end":23},"name":"to_string_lossy","qualname":"::read::reader::Reader::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Result<Cow<, str>>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string, including invalid characters.","sig":null,"attributes":[{"value":"/ Convert all remaining data to a clone-on-write string, including invalid characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420330,"byte_end":420418,"line_start":271,"line_end":271,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420423,"byte_end":420426,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The string will be borrowed where possible, but some readers may","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420431,"byte_end":420499,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/ always return an owned string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420504,"byte_end":420538,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420543,"byte_end":420546,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Does not advance the reader.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420551,"byte_end":420583,"line_start":276,"line_end":276,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420694,"byte_end":420704,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"read_slice","qualname":"::read::reader::Reader::read_slice","value":"pub fn read_slice(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read exactly `buf.len()` bytes into `buf`.\n","sig":null,"attributes":[{"value":"/ Read exactly `buf.len()` bytes into `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420640,"byte_end":420686,"line_start":279,"line_end":279,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420794,"byte_end":420807,"line_start":284,"line_end":284,"column_start":8,"column_end":21},"name":"read_u8_array","qualname":"::read::reader::Reader::read_u8_array","value":"pub fn read_u8_array<A>(&mut Self) -> Result<A> where A: Sized + Default +\nAsMut<[u8]>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a u8 array.\n","sig":null,"attributes":[{"value":"/ Read a u8 array.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420752,"byte_end":420772,"line_start":282,"line_end":282,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":420777,"byte_end":420786,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421105,"byte_end":421113,"line_start":295,"line_end":295,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::read::reader::Reader::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Return true if the number of bytes remaining is zero.\n","sig":null,"attributes":[{"value":"/ Return true if the number of bytes remaining is zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421026,"byte_end":421083,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421088,"byte_end":421097,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421225,"byte_end":421232,"line_start":301,"line_end":301,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::read::reader::Reader::read_u8","value":"pub fn read_u8(&mut Self) -> Result<u8>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a u8.\n","sig":null,"attributes":[{"value":"/ Read a u8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421189,"byte_end":421203,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421208,"byte_end":421217,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421373,"byte_end":421380,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::read::reader::Reader::read_i8","value":"pub fn read_i8(&mut Self) -> Result<i8>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an i8.\n","sig":null,"attributes":[{"value":"/ Read an i8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421336,"byte_end":421351,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421356,"byte_end":421365,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421527,"byte_end":421535,"line_start":315,"line_end":315,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::read::reader::Reader::read_u16","value":"pub fn read_u16(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a u16.\n","sig":null,"attributes":[{"value":"/ Read a u16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421490,"byte_end":421505,"line_start":313,"line_end":313,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421510,"byte_end":421519,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421700,"byte_end":421708,"line_start":322,"line_end":322,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::read::reader::Reader::read_i16","value":"pub fn read_i16(&mut Self) -> Result<i16>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an i16.\n","sig":null,"attributes":[{"value":"/ Read an i16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421662,"byte_end":421678,"line_start":320,"line_end":320,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421683,"byte_end":421692,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421872,"byte_end":421880,"line_start":329,"line_end":329,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::read::reader::Reader::read_u32","value":"pub fn read_u32(&mut Self) -> Result<u32>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a u32.\n","sig":null,"attributes":[{"value":"/ Read a u32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421835,"byte_end":421850,"line_start":327,"line_end":327,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":421855,"byte_end":421864,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422045,"byte_end":422053,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::read::reader::Reader::read_i32","value":"pub fn read_i32(&mut Self) -> Result<i32>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an i32.\n","sig":null,"attributes":[{"value":"/ Read an i32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422007,"byte_end":422023,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422028,"byte_end":422037,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422217,"byte_end":422225,"line_start":343,"line_end":343,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::read::reader::Reader::read_u64","value":"pub fn read_u64(&mut Self) -> Result<u64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a u64.\n","sig":null,"attributes":[{"value":"/ Read a u64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422180,"byte_end":422195,"line_start":341,"line_end":341,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422200,"byte_end":422209,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422390,"byte_end":422398,"line_start":350,"line_end":350,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::read::reader::Reader::read_i64","value":"pub fn read_i64(&mut Self) -> Result<i64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an i64.\n","sig":null,"attributes":[{"value":"/ Read an i64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422352,"byte_end":422368,"line_start":348,"line_end":348,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422373,"byte_end":422382,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422562,"byte_end":422570,"line_start":357,"line_end":357,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::read::reader::Reader::read_f32","value":"pub fn read_f32(&mut Self) -> Result<f32>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a f32.\n","sig":null,"attributes":[{"value":"/ Read a f32.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422525,"byte_end":422540,"line_start":355,"line_end":355,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422545,"byte_end":422554,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422734,"byte_end":422742,"line_start":364,"line_end":364,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::read::reader::Reader::read_f64","value":"pub fn read_f64(&mut Self) -> Result<f64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a f64.\n","sig":null,"attributes":[{"value":"/ Read a f64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422697,"byte_end":422712,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422717,"byte_end":422726,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423010,"byte_end":423019,"line_start":375,"line_end":375,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::read::reader::Reader::read_uint","value":"pub fn read_uint(&mut Self, usize) -> Result<u64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"/ Read an unsigned n-bytes integer u64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422869,"byte_end":422910,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422915,"byte_end":422918,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422923,"byte_end":422935,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422940,"byte_end":422943,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Panics when nbytes < 1 or nbytes > 8","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422948,"byte_end":422988,"line_start":373,"line_end":373,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":422993,"byte_end":423002,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423264,"byte_end":423290,"line_start":382,"line_end":382,"column_start":8,"column_end":34},"name":"read_null_terminated_slice","qualname":"::read::reader::Reader::read_null_terminated_slice","value":"pub fn read_null_terminated_slice(&mut Self) -> Result<Self>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a null-terminated slice, and return it (excluding the null).\n","sig":null,"attributes":[{"value":"/ Read a null-terminated slice, and return it (excluding the null).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423187,"byte_end":423256,"line_start":381,"line_end":381,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423514,"byte_end":423526,"line_start":390,"line_end":390,"column_start":8,"column_end":20},"name":"read_uleb128","qualname":"::read::reader::Reader::read_uleb128","value":"pub fn read_uleb128(&mut Self) -> Result<u64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423462,"byte_end":423506,"line_start":389,"line_end":389,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423651,"byte_end":423667,"line_start":395,"line_end":395,"column_start":8,"column_end":24},"name":"read_uleb128_u16","qualname":"::read::reader::Reader::read_uleb128_u16","value":"pub fn read_uleb128_u16(&mut Self) -> Result<u16>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded u16.\n","sig":null,"attributes":[{"value":"/ Read an unsigned LEB128 encoded u16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423603,"byte_end":423643,"line_start":394,"line_end":394,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423788,"byte_end":423800,"line_start":400,"line_end":400,"column_start":8,"column_end":20},"name":"read_sleb128","qualname":"::read::reader::Reader::read_sleb128","value":"pub fn read_sleb128(&mut Self) -> Result<i64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read a signed LEB128 encoded integer.\n","sig":null,"attributes":[{"value":"/ Read a signed LEB128 encoded integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423739,"byte_end":423780,"line_start":399,"line_end":399,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":424051,"byte_end":424070,"line_start":408,"line_end":408,"column_start":8,"column_end":27},"name":"read_initial_length","qualname":"::read::reader::Reader::read_initial_length","value":"pub fn read_initial_length(&mut Self) -> Result<(Self::Offset, Format)>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an initial length field.","sig":null,"attributes":[{"value":"/ Read an initial length field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423875,"byte_end":423908,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423913,"byte_end":423916,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This field is encoded as either a 32-bit length or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423921,"byte_end":423975,"line_start":406,"line_end":406,"column_start":5,"column_end":59}},{"value":"/ a 64-bit length, and the returned `Format` indicates which.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":423980,"byte_end":424043,"line_start":407,"line_end":407,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":424704,"byte_end":424716,"line_start":424,"line_end":424,"column_start":8,"column_end":20},"name":"read_address","qualname":"::read::reader::Reader::read_address","value":"pub fn read_address(&mut Self, u8) -> Result<u64>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Read an address-sized integer, and return it as a `u64`.\n","sig":null,"attributes":[{"value":"/ Read an address-sized integer, and return it as a `u64`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":424636,"byte_end":424696,"line_start":423,"line_end":423,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425256,"byte_end":425265,"line_start":438,"line_end":438,"column_start":8,"column_end":17},"name":"read_word","qualname":"::read::reader::Reader::read_word","value":"pub fn read_word(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Parse a word-sized integer according to the DWARF format.","sig":null,"attributes":[{"value":"/ Parse a word-sized integer according to the DWARF format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425065,"byte_end":425126,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425131,"byte_end":425134,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ These are always used to encode section offsets or lengths,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425139,"byte_end":425202,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/ and so have a type of `Self::Offset`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425207,"byte_end":425248,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425610,"byte_end":425621,"line_start":447,"line_end":447,"column_start":8,"column_end":19},"name":"read_length","qualname":"::read::reader::Reader::read_length","value":"pub fn read_length(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Parse a word-sized section length according to the DWARF format.\n","sig":null,"attributes":[{"value":"/ Parse a word-sized section length according to the DWARF format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425520,"byte_end":425588,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425593,"byte_end":425602,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425807,"byte_end":425818,"line_start":453,"line_end":453,"column_start":8,"column_end":19},"name":"read_offset","qualname":"::read::reader::Reader::read_offset","value":"pub fn read_offset(&mut Self, Format) -> Result<Self::Offset>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Parse a word-sized section offset according to the DWARF format.\n","sig":null,"attributes":[{"value":"/ Parse a word-sized section offset according to the DWARF format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425717,"byte_end":425785,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425790,"byte_end":425799,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":426046,"byte_end":426063,"line_start":460,"line_end":460,"column_start":8,"column_end":25},"name":"read_sized_offset","qualname":"::read::reader::Reader::read_sized_offset","value":"pub fn read_sized_offset(&mut Self, u8) -> Result<Self::Offset>","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Parse a section offset of the given size.","sig":null,"attributes":[{"value":"/ Parse a section offset of the given size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425914,"byte_end":425959,"line_start":457,"line_end":457,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425964,"byte_end":425967,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This is used for `DW_FORM_ref_addr` values in DWARF version 2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":425972,"byte_end":426038,"line_start":459,"line_end":459,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427073,"byte_end":427084,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"DebugAbbrev","qualname":"::read::abbrev::DebugAbbrev","value":"DebugAbbrev {  }","parent":null,"children":[{"krate":0,"index":5979}],"decl_id":null,"docs":" The `DebugAbbrev` struct represents the abbreviations describing\n `DebuggingInformationEntry`s' attribute names and forms found in the\n `.debug_abbrev` section.\n","sig":null,"attributes":[{"value":"/ The `DebugAbbrev` struct represents the abbreviations describing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":426852,"byte_end":426920,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `DebuggingInformationEntry`s' attribute names and forms found in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":426921,"byte_end":426993,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ `.debug_abbrev` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":426994,"byte_end":427022,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427825,"byte_end":427828,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAbbrev<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427219,"byte_end":427298,"line_start":27,"line_end":27,"column_start":5,"column_end":84}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427303,"byte_end":427315,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427320,"byte_end":427323,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_abbrev` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427328,"byte_end":427405,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427410,"byte_end":427480,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427485,"byte_end":427524,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427529,"byte_end":427532,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427537,"byte_end":427544,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAbbrev, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427549,"byte_end":427592,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427597,"byte_end":427600,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427605,"byte_end":427646,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_abbrev_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427651,"byte_end":427705,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427710,"byte_end":427801,"line_start":39,"line_end":39,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427806,"byte_end":427813,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428189,"byte_end":428202,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<DebugAbbrev<R>>::abbreviations","value":"pub fn abbreviations(&Self, DebugAbbrevOffset<R::Offset>)\n-> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations at the given `offset` within this\n `.debug_abbrev` section.","sig":null,"attributes":[{"value":"/ Parse the abbreviations at the given `offset` within this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428004,"byte_end":428065,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ `.debug_abbrev` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428070,"byte_end":428098,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428103,"byte_end":428106,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The `offset` should generally be retrieved from a unit header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428111,"byte_end":428177,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429123,"byte_end":429129,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAbbrev<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugAbbrev<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAbbrev` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugAbbrev` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428489,"byte_end":428559,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428564,"byte_end":428567,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428572,"byte_end":428637,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428642,"byte_end":428645,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428650,"byte_end":428670,"line_start":66,"line_end":66,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428675,"byte_end":428678,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428683,"byte_end":428701,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428706,"byte_end":428751,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428756,"byte_end":428840,"line_start":70,"line_end":70,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugAbbrev<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428845,"byte_end":428913,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428918,"byte_end":428965,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428970,"byte_end":429020,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429025,"byte_end":429087,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429092,"byte_end":429099,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429104,"byte_end":429111,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5991},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429838,"byte_end":429851,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"Abbreviations","qualname":"::read::abbrev::Abbreviations","value":"Abbreviations {  }","parent":null,"children":[{"krate":0,"index":5992},{"krate":0,"index":5993}],"decl_id":null,"docs":" A set of type abbreviations.","sig":null,"attributes":[{"value":"/ A set of type abbreviations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429625,"byte_end":429657,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429658,"byte_end":429661,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Construct an `Abbreviations` instance with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429662,"byte_end":429712,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"/ [`abbreviations()`](struct.UnitHeader.html#method.abbreviations)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429713,"byte_end":429781,"line_start":106,"line_end":106,"column_start":1,"column_end":69}},{"value":"/ method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429782,"byte_end":429793,"line_start":107,"line_end":107,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":431613,"byte_end":431616,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"get","qualname":"<Abbreviations>::get","value":"pub fn get(&Self, u64) -> Option<&Abbreviation>","parent":null,"children":[],"decl_id":null,"docs":" Get the abbreviation associated with the given code.\n","sig":null,"attributes":[{"value":"/ Get the abbreviation associated with the given code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":431531,"byte_end":431587,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":431592,"byte_end":431601,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":432533,"byte_end":432545,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"Abbreviation","qualname":"::read::abbrev::Abbreviation","value":"Abbreviation {  }","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6003},{"krate":0,"index":6004}],"decl_id":null,"docs":" An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:\n its code, tag type, whether it has children, and its set of attributes.\n","sig":null,"attributes":[{"value":"/ An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":432326,"byte_end":432406,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/ its code, tag type, whether it has children, and its set of attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":432407,"byte_end":432482,"line_start":183,"line_end":183,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433181,"byte_end":433185,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"code","qualname":"<Abbreviation>::code","value":"pub fn code(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's code.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433122,"byte_end":433155,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433160,"byte_end":433169,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433289,"byte_end":433292,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"tag","qualname":"<Abbreviation>::tag","value":"pub fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's tag.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433231,"byte_end":433263,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433268,"byte_end":433277,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433450,"byte_end":433462,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Abbreviation>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this abbreviation's type has children, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if this abbreviation's type has children, false otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433350,"byte_end":433424,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433429,"byte_end":433438,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433612,"byte_end":433622,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Abbreviation>::attributes","value":"pub fn attributes(&Self) -> &[AttributeSpecification]","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's attributes.\n","sig":null,"attributes":[{"value":"/ Get this abbreviation's attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433547,"byte_end":433586,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":433591,"byte_end":433600,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6026},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437742,"byte_end":437764,"line_start":376,"line_end":376,"column_start":12,"column_end":34},"name":"AttributeSpecification","qualname":"::read::abbrev::AttributeSpecification","value":"AttributeSpecification {  }","parent":null,"children":[{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029}],"decl_id":null,"docs":" The description of an attribute in an abbreviated type. It is a pair of name\n and form.\n","sig":null,"attributes":[{"value":"/ The description of an attribute in an abbreviated type. It is a pair of name","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437591,"byte_end":437671,"line_start":373,"line_end":373,"column_start":1,"column_end":81}},{"value":"/ and form.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437672,"byte_end":437685,"line_start":374,"line_end":374,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438024,"byte_end":438027,"line_start":386,"line_end":386,"column_start":12,"column_end":15},"name":"new","qualname":"<AttributeSpecification>::new","value":"pub fn new(constants::DwAt, constants::DwForm, Option<i64>)\n-> AttributeSpecification","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `AttributeSpecification` from the given name and form\n and implicit const value.\n","sig":null,"attributes":[{"value":"/ Construct a new `AttributeSpecification` from the given name and form","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437891,"byte_end":437964,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ and implicit const value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437969,"byte_end":437998,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438003,"byte_end":438012,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438605,"byte_end":438609,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"name","qualname":"<AttributeSpecification>::name","value":"pub fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's name.\n","sig":null,"attributes":[{"value":"/ Get the attribute's name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438550,"byte_end":438579,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438584,"byte_end":438593,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438722,"byte_end":438726,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"form","qualname":"<AttributeSpecification>::form","value":"pub fn form(&Self) -> constants::DwForm","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's form.\n","sig":null,"attributes":[{"value":"/ Get the attribute's form.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438667,"byte_end":438696,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438701,"byte_end":438710,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438857,"byte_end":438877,"line_start":416,"line_end":416,"column_start":12,"column_end":32},"name":"implicit_const_value","qualname":"<AttributeSpecification>::implicit_const_value","value":"pub fn implicit_const_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's implicit const value.\n","sig":null,"attributes":[{"value":"/ Get the attribute's implicit const value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438786,"byte_end":438831,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":438836,"byte_end":438845,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":439279,"byte_end":439283,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"size","qualname":"<AttributeSpecification>::size","value":"pub fn size<R: Reader>(&Self, &UnitHeader<R>) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the attribute, in bytes.","sig":null,"attributes":[{"value":"/ Return the size of the attribute, in bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":439061,"byte_end":439108,"line_start":424,"line_end":424,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":439113,"byte_end":439116,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Note that because some attributes are variably sized, the size cannot","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":439121,"byte_end":439194,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ always be known without parsing, in which case we return `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":439199,"byte_end":439267,"line_start":427,"line_end":427,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6065},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459030,"byte_end":459041,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"ArangeEntry","qualname":"::read::aranges::ArangeEntry","value":"ArangeEntry {  }","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070}],"decl_id":null,"docs":" A single parsed arange.\n","sig":null,"attributes":[{"value":"/ A single parsed arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":458952,"byte_end":458979,"line_start":19,"line_end":19,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459277,"byte_end":459284,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"segment","qualname":"<ArangeEntry<T>>::segment","value":"pub fn segment(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the segment selector of this arange.\n","sig":null,"attributes":[{"value":"/ Return the segment selector of this arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459204,"byte_end":459251,"line_start":29,"line_end":29,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459256,"byte_end":459265,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459415,"byte_end":459422,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"address","qualname":"<ArangeEntry<T>>::address","value":"pub fn address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the beginning address of this arange.\n","sig":null,"attributes":[{"value":"/ Return the beginning address of this arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459341,"byte_end":459389,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459394,"byte_end":459403,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459534,"byte_end":459540,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"length","qualname":"<ArangeEntry<T>>::length","value":"pub fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the length of this arange.\n","sig":null,"attributes":[{"value":"/ Return the length of this arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459471,"byte_end":459508,"line_start":41,"line_end":41,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459513,"byte_end":459522,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459681,"byte_end":459698,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"debug_info_offset","qualname":"<ArangeEntry<T>>::debug_info_offset","value":"pub fn debug_info_offset(&Self) -> DebugInfoOffset<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset into the .debug_info section for this arange.\n","sig":null,"attributes":[{"value":"/ Return the offset into the .debug_info section for this arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459588,"byte_end":459655,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459660,"byte_end":459669,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6097},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":463874,"byte_end":463886,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"DebugAranges","qualname":"::read::aranges::DebugAranges","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugAranges` struct represents the DWARF address range information\n found in the `.debug_aranges` section.\n","sig":null,"attributes":[{"value":"/ The `DebugAranges` struct represents the DWARF address range information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":463719,"byte_end":463795,"line_start":170,"line_end":170,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_aranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":463796,"byte_end":463838,"line_start":171,"line_end":171,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464619,"byte_end":464622,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAranges<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAranges` instance from the data in the `.debug_aranges`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugAranges` instance from the data in the `.debug_aranges`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464031,"byte_end":464112,"line_start":179,"line_end":179,"column_start":5,"column_end":86}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464117,"byte_end":464129,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464134,"byte_end":464137,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_aranges` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464142,"byte_end":464220,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464225,"byte_end":464295,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464300,"byte_end":464339,"line_start":184,"line_end":184,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464344,"byte_end":464347,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464352,"byte_end":464359,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAranges, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464364,"byte_end":464408,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464413,"byte_end":464416,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464421,"byte_end":464440,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_aranges_section = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464445,"byte_end":464492,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/ let debug_aranges =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464497,"byte_end":464520,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/     DebugAranges::new(read_debug_aranges_section(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464525,"byte_end":464595,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464600,"byte_end":464607,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465353,"byte_end":465358,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugAranges<R>>::items","value":"pub fn items(&Self) -> ArangeEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the aranges in the `.debug_aranges` section.","sig":null,"attributes":[{"value":"/ Iterate the aranges in the `.debug_aranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464801,"byte_end":464857,"line_start":200,"line_end":200,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464862,"byte_end":464865,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464870,"byte_end":464877,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAranges, EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464882,"byte_end":464939,"line_start":203,"line_end":203,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464944,"byte_end":464947,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464952,"byte_end":464971,"line_start":205,"line_end":205,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_aranges_section = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464976,"byte_end":465023,"line_start":206,"line_end":206,"column_start":5,"column_end":52}},{"value":"/ let debug_aranges = DebugAranges::new(read_debug_aranges_section(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465028,"byte_end":465114,"line_start":207,"line_end":207,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465119,"byte_end":465122,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_aranges.items();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465127,"byte_end":465168,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ while let Some(arange) = iter.next().unwrap() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465173,"byte_end":465224,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/     println!(\"arange starts at {}, has length {}\", arange.address(), arange.length());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465229,"byte_end":465319,"line_start":211,"line_end":211,"column_start":5,"column_end":95}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465324,"byte_end":465329,"line_start":212,"line_end":212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465334,"byte_end":465341,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6107},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465976,"byte_end":465991,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"ArangeEntryIter","qualname":"::read::aranges::ArangeEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the aranges from a `.debug_aranges` section.","sig":null,"attributes":[{"value":"/ An iterator over the aranges from a `.debug_aranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465782,"byte_end":465847,"line_start":235,"line_end":235,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465848,"byte_end":465851,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465852,"byte_end":465873,"line_start":237,"line_end":237,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465874,"byte_end":465940,"line_start":238,"line_end":238,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466477,"byte_end":466481,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"next","qualname":"<ArangeEntryIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<ArangeEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next arange.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466083,"byte_end":466135,"line_start":243,"line_end":243,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466140,"byte_end":466143,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed arange as `Ok(Some(arange))`. Returns `Ok(None)`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466148,"byte_end":466225,"line_start":245,"line_end":245,"column_start":5,"column_end":82}},{"value":"/ when iteration is complete and all aranges have already been parsed and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466230,"byte_end":466305,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ yielded. If an error occurs while parsing the next arange, then this error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466310,"byte_end":466388,"line_start":247,"line_end":247,"column_start":5,"column_end":83}},{"value":"/ is returned as `Err(e)`, and all subsequent calls return `Ok(None)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466393,"byte_end":466465,"line_start":248,"line_end":248,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":6117},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":474917,"byte_end":474926,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"DebugLine","qualname":"::read::line::DebugLine","value":"DebugLine {  }","parent":null,"children":[{"krate":0,"index":6119}],"decl_id":null,"docs":" The `DebugLine` struct contains the source location to instruction mapping\n found in the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLine` struct contains the source location to instruction mapping","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":474748,"byte_end":474826,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ found in the `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":474827,"byte_end":474866,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475647,"byte_end":475650,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLine<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLine` instance from the data in the `.debug_line`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLine` instance from the data in the `.debug_line`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475057,"byte_end":475132,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475137,"byte_end":475149,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475154,"byte_end":475157,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_line` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475162,"byte_end":475237,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475242,"byte_end":475312,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475317,"byte_end":475356,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475361,"byte_end":475364,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475369,"byte_end":475376,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLine, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475381,"byte_end":475422,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475427,"byte_end":475430,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475435,"byte_end":475476,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_line_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475481,"byte_end":475533,"line_start":36,"line_end":36,"column_start":5,"column_end":57}},{"value":"/ let debug_line = DebugLine::new(read_debug_line_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475538,"byte_end":475623,"line_start":37,"line_end":37,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475628,"byte_end":475635,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476972,"byte_end":476979,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"program","qualname":"<DebugLine<R>>::program","value":"pub fn program(&Self, DebugLineOffset<R::Offset>, u8, Option<R>, Option<R>)\n-> Result<IncompleteLineProgram<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the line number program whose header is at the given `offset` in the\n `.debug_line` section.","sig":null,"attributes":[{"value":"/ Parse the line number program whose header is at the given `offset` in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475820,"byte_end":475898,"line_start":45,"line_end":45,"column_start":5,"column_end":83}},{"value":"/ `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475903,"byte_end":475929,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475934,"byte_end":475937,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The `address_size` must match the compilation unit that the lines apply to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475942,"byte_end":476021,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/ The `comp_dir` should be from the `DW_AT_comp_dir` attribute of the compilation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476026,"byte_end":476109,"line_start":49,"line_end":49,"column_start":5,"column_end":88}},{"value":"/ unit. The `comp_name` should be from the `DW_AT_name` attribute of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476114,"byte_end":476188,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476193,"byte_end":476214,"line_start":51,"line_end":51,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476219,"byte_end":476222,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476227,"byte_end":476245,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/ use gimli::{DebugLine, DebugLineOffset, IncompleteLineProgram, EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476250,"byte_end":476344,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476349,"byte_end":476352,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476357,"byte_end":476376,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_line_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476381,"byte_end":476433,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"/ let debug_line = DebugLine::new(read_debug_line_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476438,"byte_end":476523,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476528,"byte_end":476531,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ // In a real example, we'd grab the offset via a compilation unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476536,"byte_end":476605,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ // entry's `DW_AT_stmt_list` attribute, and the address size from that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476610,"byte_end":476684,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ // unit directly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476689,"byte_end":476710,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/ let offset = DebugLineOffset(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476715,"byte_end":476751,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/ let address_size = 8;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476756,"byte_end":476781,"line_start":64,"line_end":64,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476786,"byte_end":476789,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let program = debug_line.program(offset, address_size, None, None)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476794,"byte_end":476864,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/     .expect(\"should have found a header at that offset, and parsed it OK\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476869,"byte_end":476948,"line_start":67,"line_end":67,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":476953,"byte_end":476960,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478098,"byte_end":478104,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLine<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugLine<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLine` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugLine` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477468,"byte_end":477536,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477541,"byte_end":477544,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477549,"byte_end":477614,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477619,"byte_end":477622,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477627,"byte_end":477647,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477652,"byte_end":477655,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477660,"byte_end":477678,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477683,"byte_end":477728,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477733,"byte_end":477817,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugLine<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477822,"byte_end":477888,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477893,"byte_end":477940,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477945,"byte_end":477995,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478000,"byte_end":478062,"line_start":97,"line_end":97,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478067,"byte_end":478074,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478079,"byte_end":478086,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1393},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478734,"byte_end":478751,"line_start":126,"line_end":126,"column_start":10,"column_end":27},"name":"LineNumberProgram","qualname":"::read::line::LineNumberProgram","value":"dyn LineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478561,"byte_end":478631,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"deprecated(note =\n             \"LineNumberProgram has been renamed to LineProgram, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478632,"byte_end":478724,"line_start":125,"line_end":125,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":1396},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478989,"byte_end":479000,"line_start":131,"line_end":131,"column_start":11,"column_end":22},"name":"LineProgram","qualname":"::read::line::LineProgram","value":"LineProgram<R, Offset = <R as Reader>::Offset>","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400}],"decl_id":null,"docs":" A `LineProgram` provides access to a `LineProgramHeader` and\n a way to add files to the files table if necessary. Gimli consumers should\n never need to use or see this trait.\n","sig":null,"attributes":[{"value":"/ A `LineProgram` provides access to a `LineProgramHeader` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478794,"byte_end":478858,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/ a way to add files to the files table if necessary. Gimli consumers should","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478859,"byte_end":478937,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ never need to use or see this trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478938,"byte_end":478978,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":479166,"byte_end":479172,"line_start":137,"line_end":137,"column_start":8,"column_end":14},"name":"header","qualname":"::read::line::LineProgram::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Get a reference to the held `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"/ Get a reference to the held `LineProgramHeader`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":479106,"byte_end":479158,"line_start":136,"line_end":136,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":479272,"byte_end":479280,"line_start":139,"line_end":139,"column_start":8,"column_end":16},"name":"add_file","qualname":"::read::line::LineProgram::add_file","value":"pub fn add_file(&mut Self, FileEntry<R, Offset>)","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Add a file to the file table if necessary.\n","sig":null,"attributes":[{"value":"/ Add a file to the file table if necessary.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":479218,"byte_end":479264,"line_start":138,"line_end":138,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1412},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480173,"byte_end":480185,"line_start":170,"line_end":170,"column_start":10,"column_end":22},"name":"StateMachine","qualname":"::read::line::StateMachine","value":"LineRows<R, Program, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `StateMachine` has been renamed to `LineRows`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `StateMachine` has been renamed to `LineRows`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480016,"byte_end":480078,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n             \"StateMachine has been renamed to LineRows, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480079,"byte_end":480163,"line_start":169,"line_end":169,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":6131},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480566,"byte_end":480574,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"LineRows","qualname":"::read::line::LineRows","value":"LineRows {  }","parent":null,"children":[{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137}],"decl_id":null,"docs":" Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","sig":null,"attributes":[{"value":"/ Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480239,"byte_end":480334,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480335,"byte_end":480338,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ \"The hypothetical machine used by a consumer of the line number information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480339,"byte_end":480418,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"/ to expand the byte-coded instruction stream into a matrix of line number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480419,"byte_end":480495,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ information.\" -- Section 6.2.1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":480496,"byte_end":480530,"line_start":176,"line_end":176,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482096,"byte_end":482102,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"header","qualname":"<LineRows<R, Program, Offset>>::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the header for this state machine's line number\n program.\n","sig":null,"attributes":[{"value":"/ Get a reference to the header for this state machine's line number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":481983,"byte_end":482053,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482058,"byte_end":482070,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482075,"byte_end":482084,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482728,"byte_end":482736,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"next_row","qualname":"<LineRows<R, Program, Offset>>::next_row","value":"pub fn next_row(&mut Self)\n-> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse and execute the next instructions in the line number program until\n another row in the line number matrix is computed.","sig":null,"attributes":[{"value":"/ Parse and execute the next instructions in the line number program until","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482186,"byte_end":482262,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ another row in the line number matrix is computed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482267,"byte_end":482321,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482326,"byte_end":482329,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The freshly computed row is returned as `Ok(Some((header, row)))`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482334,"byte_end":482404,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ If the matrix is complete, and there are no more new rows in the line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482409,"byte_end":482482,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ number matrix, then `Ok(None)` is returned. If there was an error parsing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482487,"byte_end":482564,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/ an instruction, then `Err(e)` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482569,"byte_end":482615,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482620,"byte_end":482623,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, the references mean that this cannot be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482628,"byte_end":482688,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/ `FallibleIterator`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":482693,"byte_end":482716,"line_start":243,"line_end":243,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":483732,"byte_end":483738,"line_start":267,"line_end":267,"column_start":10,"column_end":16},"name":"Opcode","qualname":"::read::line::Opcode","value":"LineInstruction<R, <R as Reader>::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `Opcode` has been renamed to `LineInstruction`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `Opcode` has been renamed to `LineInstruction`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":483573,"byte_end":483636,"line_start":265,"line_end":265,"column_start":1,"column_end":64}},{"value":"deprecated(note =\n             \"Opcode has been renamed to LineInstruction, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":483637,"byte_end":483722,"line_start":266,"line_end":266,"column_start":1,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484940,"byte_end":484947,"line_start":299,"line_end":299,"column_start":5,"column_end":12},"name":"Special","qualname":"::read::line::LineInstruction::Special","value":"LineInstruction::Special(u8)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" > ### 6.2.5.1 Special Opcodes\n >\n > Each ubyte special opcode has the following effect on the state machine:\n >\n >   1. Add a signed integer to the line register.\n >\n >   2. Modify the operation pointer by incrementing the address and\n >   op_index registers as described below.\n >\n >   3. Append a row to the matrix using the current values of the state\n >   machine registers.\n >\n >   4. Set the basic_block register to “false.”\n >\n >   5. Set the prologue_end register to “false.”\n >\n >   6. Set the epilogue_begin register to “false.”\n >\n >   7. Set the discriminator register to 0.\n >\n > All of the special opcodes do those same seven things; they differ from\n > one another only in what values they add to the line, address and\n > op_index registers.\n","sig":null,"attributes":[{"value":"/ > ### 6.2.5.1 Special Opcodes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484009,"byte_end":484042,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484047,"byte_end":484052,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ > Each ubyte special opcode has the following effect on the state machine:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484057,"byte_end":484135,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484140,"byte_end":484145,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ >   1. Add a signed integer to the line register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484150,"byte_end":484203,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484208,"byte_end":484213,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ >   2. Modify the operation pointer by incrementing the address and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484218,"byte_end":484289,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ >   op_index registers as described below.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484294,"byte_end":484340,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484345,"byte_end":484350,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ >   3. Append a row to the matrix using the current values of the state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484355,"byte_end":484430,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ >   machine registers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484435,"byte_end":484461,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484466,"byte_end":484471,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/ >   4. Set the basic_block register to “false.”","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484476,"byte_end":484531,"line_start":288,"line_end":288,"column_start":5,"column_end":56}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484536,"byte_end":484541,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ >   5. Set the prologue_end register to “false.”","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484546,"byte_end":484602,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484607,"byte_end":484612,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ >   6. Set the epilogue_begin register to “false.”","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484617,"byte_end":484675,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484680,"byte_end":484685,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ >   7. Set the discriminator register to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484690,"byte_end":484737,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484742,"byte_end":484747,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ > All of the special opcodes do those same seven things; they differ from","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484752,"byte_end":484829,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ > one another only in what values they add to the line, address and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484834,"byte_end":484905,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ > op_index registers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484910,"byte_end":484935,"line_start":298,"line_end":298,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6154},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485233,"byte_end":485237,"line_start":305,"line_end":305,"column_start":5,"column_end":9},"name":"Copy","qualname":"::read::line::LineInstruction::Copy","value":"LineInstruction::Copy","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::Copy`] appends a row to the matrix using the current\n values of the state machine registers. Then it sets the discriminator\n register to 0, and sets the basic_block, prologue_end and epilogue_begin\n registers to “false.”\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::Copy`] appends a row to the matrix using the current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":484958,"byte_end":485034,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ values of the state machine registers. Then it sets the discriminator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485039,"byte_end":485112,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ register to 0, and sets the basic_block, prologue_end and epilogue_begin","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485117,"byte_end":485193,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ registers to “false.”\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485198,"byte_end":485228,"line_start":304,"line_end":304,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6156},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485452,"byte_end":485461,"line_start":310,"line_end":310,"column_start":5,"column_end":14},"name":"AdvancePc","qualname":"::read::line::LineInstruction::AdvancePc","value":"LineInstruction::AdvancePc(u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as\n the operation advance and modifies the address and op_index registers\n [the same as `LineInstruction::Special`]\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485244,"byte_end":485319,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ the operation advance and modifies the address and op_index registers","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485324,"byte_end":485397,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/ [the same as `LineInstruction::Special`]\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485402,"byte_end":485447,"line_start":309,"line_end":309,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6159},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485622,"byte_end":485633,"line_start":314,"line_end":314,"column_start":5,"column_end":16},"name":"AdvanceLine","qualname":"::read::line::LineInstruction::AdvanceLine","value":"LineInstruction::AdvanceLine(i64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and\n adds that value to the line register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485473,"byte_end":485549,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ adds that value to the line register of the state machine.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485554,"byte_end":485617,"line_start":313,"line_end":313,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6162},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485786,"byte_end":485793,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"SetFile","qualname":"::read::line::LineInstruction::SetFile","value":"LineInstruction::SetFile(u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and\n stores it in the file register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485645,"byte_end":485719,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ stores it in the file register of the state machine.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485724,"byte_end":485781,"line_start":317,"line_end":317,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6165},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485950,"byte_end":485959,"line_start":322,"line_end":322,"column_start":5,"column_end":14},"name":"SetColumn","qualname":"::read::line::LineInstruction::SetColumn","value":"LineInstruction::SetColumn(u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and\n stores it in the column register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485805,"byte_end":485881,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ stores it in the column register of the state machine.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485886,"byte_end":485945,"line_start":321,"line_end":321,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486142,"byte_end":486157,"line_start":327,"line_end":327,"column_start":5,"column_end":20},"name":"NegateStatement","qualname":"::read::line::LineInstruction::NegateStatement","value":"LineInstruction::NegateStatement","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt\n register of the state machine to the logical negation of its current\n value.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":485971,"byte_end":486044,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ register of the state machine to the logical negation of its current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486049,"byte_end":486121,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ value.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486126,"byte_end":486137,"line_start":326,"line_end":326,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6170},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486304,"byte_end":486317,"line_start":331,"line_end":331,"column_start":5,"column_end":18},"name":"SetBasicBlock","qualname":"::read::line::LineInstruction::SetBasicBlock","value":"LineInstruction::SetBasicBlock","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_basic_block opcode takes no operands. It sets the\n basic_block register of the state machine to “true.”\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_basic_block opcode takes no operands. It sets the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486164,"byte_end":486233,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ basic_block register of the state machine to “true.”\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486238,"byte_end":486299,"line_start":330,"line_end":330,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487072,"byte_end":487082,"line_start":344,"line_end":344,"column_start":5,"column_end":15},"name":"ConstAddPc","qualname":"::read::line::LineInstruction::ConstAddPc","value":"LineInstruction::ConstAddPc","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" > The DW_LNS_const_add_pc opcode takes no operands. It advances the\n > address and op_index registers by the increments corresponding to\n > special opcode 255.\n >\n > When the line number program needs to advance the address by a small\n > amount, it can use a single special opcode, which occupies a single\n > byte. When it needs to advance the address by up to twice the range of\n > the last special opcode, it can use DW_LNS_const_add_pc followed by a\n > special opcode, for a total of two bytes. Only if it needs to advance\n > the address by more than twice that range will it need to use both\n > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.\n","sig":null,"attributes":[{"value":"/ > The DW_LNS_const_add_pc opcode takes no operands. It advances the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486324,"byte_end":486395,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ > address and op_index registers by the increments corresponding to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486400,"byte_end":486471,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/ > special opcode 255.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486476,"byte_end":486501,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486506,"byte_end":486511,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ > When the line number program needs to advance the address by a small","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486516,"byte_end":486590,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ > amount, it can use a single special opcode, which occupies a single","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486595,"byte_end":486668,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ > byte. When it needs to advance the address by up to twice the range of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486673,"byte_end":486749,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ > the last special opcode, it can use DW_LNS_const_add_pc followed by a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486754,"byte_end":486829,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ > special opcode, for a total of two bytes. Only if it needs to advance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486834,"byte_end":486909,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ > the address by more than twice that range will it need to use both","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486914,"byte_end":486986,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":486991,"byte_end":487067,"line_start":343,"line_end":343,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6174},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487482,"byte_end":487492,"line_start":351,"line_end":351,"column_start":5,"column_end":15},"name":"FixedAddPc","qualname":"::read::line::LineInstruction::FixedAddPc","value":"LineInstruction::FixedAddPc(u16)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)\n > operand and adds it to the address register of the state machine and\n > sets the op_index register to 0. This is the only standard opcode whose\n > operand is not a variable length number. It also does not multiply the\n > operand by the minimum_instruction_length field of the header.\n","sig":null,"attributes":[{"value":"/ > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487089,"byte_end":487162,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ > operand and adds it to the address register of the state machine and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487167,"byte_end":487241,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ > sets the op_index register to 0. This is the only standard opcode whose","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487246,"byte_end":487323,"line_start":348,"line_end":348,"column_start":5,"column_end":82}},{"value":"/ > operand is not a variable length number. It also does not multiply the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487328,"byte_end":487404,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ > operand by the minimum_instruction_length field of the header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487409,"byte_end":487477,"line_start":350,"line_end":350,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487596,"byte_end":487610,"line_start":354,"line_end":354,"column_start":5,"column_end":19},"name":"SetPrologueEnd","qualname":"::read::line::LineInstruction::SetPrologueEnd","value":"LineInstruction::SetPrologueEnd","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487504,"byte_end":487591,"line_start":353,"line_end":353,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6179},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487721,"byte_end":487737,"line_start":358,"line_end":358,"column_start":5,"column_end":21},"name":"SetEpilogueBegin","qualname":"::read::line::LineInstruction::SetEpilogueBegin","value":"LineInstruction::SetEpilogueBegin","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to\n “true”.\"\n","sig":null,"attributes":[{"value":"/ \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487617,"byte_end":487695,"line_start":356,"line_end":356,"column_start":5,"column_end":83}},{"value":"/ “true”.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487700,"byte_end":487716,"line_start":357,"line_end":357,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6181},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487891,"byte_end":487897,"line_start":362,"line_end":362,"column_start":5,"column_end":11},"name":"SetIsa","qualname":"::read::line::LineInstruction::SetIsa","value":"LineInstruction::SetIsa(u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and\n stores that value in the isa register of the state machine.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487744,"byte_end":487817,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ stores that value in the isa register of the state machine.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487822,"byte_end":487886,"line_start":361,"line_end":361,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6184},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487964,"byte_end":487980,"line_start":365,"line_end":365,"column_start":5,"column_end":21},"name":"UnknownStandard0","qualname":"::read::line::LineInstruction::UnknownStandard0","value":"LineInstruction::UnknownStandard0(constants::DwLns)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" An unknown standard opcode with zero operands.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with zero operands.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":487909,"byte_end":487959,"line_start":364,"line_end":364,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6187},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488058,"byte_end":488074,"line_start":368,"line_end":368,"column_start":5,"column_end":21},"name":"UnknownStandard1","qualname":"::read::line::LineInstruction::UnknownStandard1","value":"LineInstruction::UnknownStandard1(constants::DwLns, u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" An unknown standard opcode with one operand.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with one operand.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488005,"byte_end":488053,"line_start":367,"line_end":367,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488163,"byte_end":488179,"line_start":371,"line_end":371,"column_start":5,"column_end":21},"name":"UnknownStandardN","qualname":"::read::line::LineInstruction::UnknownStandardN","value":"LineInstruction::UnknownStandardN(constants::DwLns, R)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" An unknown standard opcode with multiple operands.\n","sig":null,"attributes":[{"value":"/ An unknown standard opcode with multiple operands.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488104,"byte_end":488158,"line_start":370,"line_end":370,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6195},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488749,"byte_end":488760,"line_start":380,"line_end":380,"column_start":5,"column_end":16},"name":"EndSequence","qualname":"::read::line::LineInstruction::EndSequence","value":"LineInstruction::EndSequence","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" > [`LineInstruction::EndSequence`] sets the end_sequence register of the state\n > machine to “true” and appends a row to the matrix using the current\n > values of the state-machine registers. Then it resets the registers to\n > the initial values specified above (see Section 6.2.2). Every line\n > number program sequence must end with a DW_LNE_end_sequence instruction\n > which creates a row whose address is that of the byte after the last\n > target machine instruction of the sequence.\n","sig":null,"attributes":[{"value":"/ > [`LineInstruction::EndSequence`] sets the end_sequence register of the state","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488207,"byte_end":488289,"line_start":373,"line_end":373,"column_start":5,"column_end":87}},{"value":"/ > machine to “true” and appends a row to the matrix using the current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488294,"byte_end":488371,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ > values of the state-machine registers. Then it resets the registers to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488376,"byte_end":488452,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ > the initial values specified above (see Section 6.2.2). Every line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488457,"byte_end":488529,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ > number program sequence must end with a DW_LNE_end_sequence instruction","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488534,"byte_end":488611,"line_start":377,"line_end":377,"column_start":5,"column_end":82}},{"value":"/ > which creates a row whose address is that of the byte after the last","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488616,"byte_end":488690,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ > target machine instruction of the sequence.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488695,"byte_end":488744,"line_start":379,"line_end":379,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6197},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489270,"byte_end":489280,"line_start":390,"line_end":390,"column_start":5,"column_end":15},"name":"SetAddress","qualname":"::read::line::LineInstruction::SetAddress","value":"LineInstruction::SetAddress(u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" > The DW_LNE_set_address opcode takes a single relocatable address as an\n > operand. The size of the operand is the size of an address on the target\n > machine. It sets the address register to the value given by the\n > relocatable address and sets the op_index register to 0.\n >\n > All of the other line number program opcodes that affect the address\n > register add a delta to it. This instruction stores a relocatable value\n > into it instead.\n","sig":null,"attributes":[{"value":"/ > The DW_LNE_set_address opcode takes a single relocatable address as an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488767,"byte_end":488843,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ > operand. The size of the operand is the size of an address on the target","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488848,"byte_end":488926,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ > machine. It sets the address register to the value given by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":488931,"byte_end":489000,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ > relocatable address and sets the op_index register to 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489005,"byte_end":489067,"line_start":385,"line_end":385,"column_start":5,"column_end":67}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489072,"byte_end":489077,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ > All of the other line number program opcodes that affect the address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489082,"byte_end":489156,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ > register add a delta to it. This instruction stores a relocatable value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489161,"byte_end":489238,"line_start":388,"line_end":388,"column_start":5,"column_end":82}},{"value":"/ > into it instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489243,"byte_end":489265,"line_start":389,"line_end":389,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6200},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489434,"byte_end":489444,"line_start":394,"line_end":394,"column_start":5,"column_end":15},"name":"DefineFile","qualname":"::read::line::LineInstruction::DefineFile","value":"LineInstruction::DefineFile(FileEntry<R, Offset>)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" Defines a new source file in the line number program and appends it to\n the line number program header's list of source files.\n","sig":null,"attributes":[{"value":"/ Defines a new source file in the line number program and appends it to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489292,"byte_end":489366,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ the line number program header's list of source files.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489371,"byte_end":489429,"line_start":393,"line_end":393,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6203},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489642,"byte_end":489658,"line_start":399,"line_end":399,"column_start":5,"column_end":21},"name":"SetDiscriminator","qualname":"::read::line::LineInstruction::SetDiscriminator","value":"LineInstruction::SetDiscriminator(u64)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" \"The DW_LNE_set_discriminator opcode takes a single parameter, an\n unsigned LEB128 integer. It sets the discriminator register to the new\n value.\"\n","sig":null,"attributes":[{"value":"/ \"The DW_LNE_set_discriminator opcode takes a single parameter, an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489473,"byte_end":489542,"line_start":396,"line_end":396,"column_start":5,"column_end":74}},{"value":"/ unsigned LEB128 integer. It sets the discriminator register to the new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489547,"byte_end":489621,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ value.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489626,"byte_end":489637,"line_start":398,"line_end":398,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6206},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489745,"byte_end":489760,"line_start":402,"line_end":402,"column_start":5,"column_end":20},"name":"UnknownExtended","qualname":"::read::line::LineInstruction::UnknownExtended","value":"LineInstruction::UnknownExtended(constants::DwLne, R)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" An unknown extended opcode and the slice of its unparsed operands.\n","sig":null,"attributes":[{"value":"/ An unknown extended opcode and the slice of its unparsed operands.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489670,"byte_end":489740,"line_start":401,"line_end":401,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":6148},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":483888,"byte_end":483903,"line_start":271,"line_end":271,"column_start":10,"column_end":25},"name":"LineInstruction","qualname":"::read::line::LineInstruction","value":"pub enum LineInstruction<R, Offset = <R as Reader>::Offset> where\n         R: Reader<Offset = Offset>, Offset: ReaderOffset {\n    Special(u8),\n    Copy,\n    AdvancePc(u64),\n    AdvanceLine(i64),\n    SetFile(u64),\n    SetColumn(u64),\n    NegateStatement,\n    SetBasicBlock,\n    ConstAddPc,\n    FixedAddPc(u16),\n    SetPrologueEnd,\n    SetEpilogueBegin,\n    SetIsa(u64),\n    UnknownStandard0(constants::DwLns),\n    UnknownStandard1(constants::DwLns, u64),\n    UnknownStandardN(constants::DwLns, R),\n    EndSequence,\n    SetAddress(u64),\n    DefineFile(FileEntry<R, Offset>),\n    SetDiscriminator(u64),\n    UnknownExtended(constants::DwLne, R),\n}","parent":null,"children":[{"krate":0,"index":6151},{"krate":0,"index":6154},{"krate":0,"index":6156},{"krate":0,"index":6159},{"krate":0,"index":6162},{"krate":0,"index":6165},{"krate":0,"index":6168},{"krate":0,"index":6170},{"krate":0,"index":6172},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6179},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6187},{"krate":0,"index":6191},{"krate":0,"index":6195},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6206}],"decl_id":null,"docs":" A parsed line number program instruction.\n","sig":null,"attributes":[{"value":"/ A parsed line number program instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":483788,"byte_end":483833,"line_start":269,"line_end":269,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497331,"byte_end":497342,"line_start":577,"line_end":577,"column_start":10,"column_end":21},"name":"OpcodesIter","qualname":"::read::line::OpcodesIter","value":"LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497160,"byte_end":497229,"line_start":575,"line_end":575,"column_start":1,"column_end":70}},{"value":"deprecated(note =\n             \"OpcodesIter has been renamed to LineInstructions, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497230,"byte_end":497321,"line_start":576,"line_end":576,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":6236},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497578,"byte_end":497594,"line_start":585,"line_end":585,"column_start":12,"column_end":28},"name":"LineInstructions","qualname":"::read::line::LineInstructions","value":"LineInstructions {  }","parent":null,"children":[{"krate":0,"index":6238}],"decl_id":null,"docs":" An iterator yielding parsed instructions.","sig":null,"attributes":[{"value":"/ An iterator yielding parsed instructions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497370,"byte_end":497415,"line_start":579,"line_end":579,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497416,"byte_end":497419,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497420,"byte_end":497427,"line_start":581,"line_end":581,"column_start":1,"column_end":8}},{"value":"/ [`LineProgramHeader::instructions`](./struct.LineProgramHeader.html#method.instructions)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497428,"byte_end":497520,"line_start":582,"line_end":582,"column_start":1,"column_end":93}},{"value":"/ for more details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497521,"byte_end":497542,"line_start":583,"line_end":583,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498574,"byte_end":498590,"line_start":611,"line_end":611,"column_start":12,"column_end":28},"name":"next_instruction","qualname":"<LineInstructions<R>>::next_instruction","value":"pub fn next_instruction(&mut Self, &LineProgramHeader<R>)\n-> Result<Option<LineInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next instruction.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497981,"byte_end":498038,"line_start":599,"line_end":599,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498043,"byte_end":498046,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed instruction as `Ok(Some(instruction))`. Returns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498051,"byte_end":498127,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)` when iteration is complete and all instructions have already been","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498132,"byte_end":498212,"line_start":602,"line_end":602,"column_start":5,"column_end":85}},{"value":"/ parsed and yielded. If an error occurs while parsing the next attribute,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498217,"byte_end":498293,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498298,"byte_end":498374,"line_start":604,"line_end":604,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498379,"byte_end":498394,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498399,"byte_end":498402,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Unfortunately, the `header` parameter means that this cannot be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498407,"byte_end":498476,"line_start":607,"line_end":607,"column_start":5,"column_end":74}},{"value":"/ `FallibleIterator`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498481,"byte_end":498504,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"allow(clippy :: inline_always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498509,"byte_end":498540,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":498545,"byte_end":498562,"line_start":610,"line_end":610,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1451},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499162,"byte_end":499175,"line_start":631,"line_end":631,"column_start":10,"column_end":23},"name":"LineNumberRow","qualname":"::read::line::LineNumberRow","value":"LineRow","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberRow` has been renamed to `LineRow`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberRow` has been renamed to `LineRow`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499005,"byte_end":499067,"line_start":629,"line_end":629,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n             \"LineNumberRow has been renamed to LineRow, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499068,"byte_end":499152,"line_start":630,"line_end":630,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":6245},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499396,"byte_end":499403,"line_start":637,"line_end":637,"column_start":12,"column_end":19},"name":"LineRow","qualname":"::read::line::LineRow","value":"LineRow {  }","parent":null,"children":[{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6257}],"decl_id":null,"docs":" A row in the line number program's resulting matrix.","sig":null,"attributes":[{"value":"/ A row in the line number program's resulting matrix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499188,"byte_end":499244,"line_start":633,"line_end":633,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499245,"byte_end":499248,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ Each row is a copy of the registers of the state machine, as defined in section 6.2.2.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499249,"byte_end":499339,"line_start":635,"line_end":635,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499780,"byte_end":499783,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"new","qualname":"<LineRow>::new","value":"pub fn new<R: Reader>(&LineProgramHeader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a line number row in the initial state for the given program.\n","sig":null,"attributes":[{"value":"/ Create a line number row in the initial state for the given program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499696,"byte_end":499768,"line_start":653,"line_end":653,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":500903,"byte_end":500910,"line_start":681,"line_end":681,"column_start":12,"column_end":19},"name":"address","qualname":"<LineRow>::address","value":"pub fn address(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"The program-counter value corresponding to a machine instruction\n generated by the compiler.\"\n","sig":null,"attributes":[{"value":"/ \"The program-counter value corresponding to a machine instruction","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":500772,"byte_end":500841,"line_start":678,"line_end":678,"column_start":5,"column_end":74}},{"value":"/ generated by the compiler.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":500846,"byte_end":500877,"line_start":679,"line_end":679,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":500882,"byte_end":500891,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501388,"byte_end":501396,"line_start":693,"line_end":693,"column_start":12,"column_end":20},"name":"op_index","qualname":"<LineRow>::op_index","value":"pub fn op_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned integer representing the index of an operation within a VLIW\n > instruction. The index of the first operation is 0. For non-VLIW\n > architectures, this register will always be 0.\n >\n > The address and op_index registers, taken together, form an operation\n > pointer that can reference any individual operation with the\n > instruction stream.\n","sig":null,"attributes":[{"value":"/ > An unsigned integer representing the index of an operation within a VLIW","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":500961,"byte_end":501039,"line_start":685,"line_end":685,"column_start":5,"column_end":83}},{"value":"/ > instruction. The index of the first operation is 0. For non-VLIW","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501044,"byte_end":501114,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ > architectures, this register will always be 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501119,"byte_end":501171,"line_start":687,"line_end":687,"column_start":5,"column_end":57}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501176,"byte_end":501181,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ > The address and op_index registers, taken together, form an operation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501186,"byte_end":501261,"line_start":689,"line_end":689,"column_start":5,"column_end":80}},{"value":"/ > pointer that can reference any individual operation with the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501266,"byte_end":501332,"line_start":690,"line_end":690,"column_start":5,"column_end":71}},{"value":"/ > instruction stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501337,"byte_end":501362,"line_start":691,"line_end":691,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501367,"byte_end":501376,"line_start":692,"line_end":692,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501590,"byte_end":501600,"line_start":700,"line_end":700,"column_start":12,"column_end":22},"name":"file_index","qualname":"<LineRow>::file_index","value":"pub fn file_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating the identity of the source file\n corresponding to a machine instruction.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating the identity of the source file","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501448,"byte_end":501515,"line_start":697,"line_end":697,"column_start":5,"column_end":72}},{"value":"/ corresponding to a machine instruction.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501520,"byte_end":501564,"line_start":698,"line_end":698,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501569,"byte_end":501578,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501741,"byte_end":501745,"line_start":706,"line_end":706,"column_start":12,"column_end":16},"name":"file","qualname":"<LineRow>::file","value":"pub fn file<'header, R: Reader>(&Self, &'header LineProgramHeader<R>)\n-> Option<&'header FileEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" The source file corresponding to the current machine instruction.\n","sig":null,"attributes":[{"value":"/ The source file corresponding to the current machine instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501646,"byte_end":501715,"line_start":704,"line_end":704,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501720,"byte_end":501729,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502152,"byte_end":502156,"line_start":717,"line_end":717,"column_start":12,"column_end":16},"name":"line","qualname":"<LineRow>::line","value":"pub fn line(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a source line number. Lines are numbered\n beginning at 1. The compiler may emit the value 0 in cases where an\n instruction cannot be attributed to any source line.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating a source line number. Lines are numbered","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501912,"byte_end":501988,"line_start":713,"line_end":713,"column_start":5,"column_end":81}},{"value":"/ beginning at 1. The compiler may emit the value 0 in cases where an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":501993,"byte_end":502064,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ instruction cannot be attributed to any source line.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502069,"byte_end":502126,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502131,"byte_end":502140,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502545,"byte_end":502551,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"column","qualname":"<LineRow>::column","value":"pub fn column(&Self) -> ColumnType","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a column number within a source\n line. Columns are numbered beginning at 1. The value 0 is reserved to\n indicate that a statement begins at the “left edge” of the line.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer indicating a column number within a source","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502296,"byte_end":502363,"line_start":725,"line_end":725,"column_start":5,"column_end":72}},{"value":"/ line. Columns are numbered beginning at 1. The value 0 is reserved to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502368,"byte_end":502441,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ indicate that a statement begins at the “left edge” of the line.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502446,"byte_end":502519,"line_start":727,"line_end":727,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502524,"byte_end":502533,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503003,"byte_end":503010,"line_start":742,"line_end":742,"column_start":12,"column_end":19},"name":"is_stmt","qualname":"<LineRow>::is_stmt","value":"pub fn is_stmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is a recommended\n breakpoint location. A recommended breakpoint location is intended to\n “represent” a line, a statement and/or a semantically distinct subpart\n of a statement.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current instruction is a recommended","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502720,"byte_end":502791,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ breakpoint location. A recommended breakpoint location is intended to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502796,"byte_end":502869,"line_start":738,"line_end":738,"column_start":5,"column_end":78}},{"value":"/ “represent” a line, a statement and/or a semantically distinct subpart","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502874,"byte_end":502952,"line_start":739,"line_end":739,"column_start":5,"column_end":79}},{"value":"/ of a statement.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502957,"byte_end":502977,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":502982,"byte_end":502991,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503184,"byte_end":503195,"line_start":749,"line_end":749,"column_start":12,"column_end":23},"name":"basic_block","qualname":"<LineRow>::basic_block","value":"pub fn basic_block(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is the beginning of a\n basic block.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current instruction is the beginning of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503060,"byte_end":503136,"line_start":746,"line_end":746,"column_start":5,"column_end":81}},{"value":"/ basic block.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503141,"byte_end":503158,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503163,"byte_end":503172,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503544,"byte_end":503556,"line_start":758,"line_end":758,"column_start":12,"column_end":24},"name":"end_sequence","qualname":"<LineRow>::end_sequence","value":"pub fn end_sequence(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is that of the first byte\n after the end of a sequence of target machine instructions. end_sequence\n terminates a sequence of lines; therefore other information in the same\n row is not meaningful.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is that of the first byte","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503249,"byte_end":503325,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/ after the end of a sequence of target machine instructions. end_sequence","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503330,"byte_end":503406,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/ terminates a sequence of lines; therefore other information in the same","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503411,"byte_end":503486,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ row is not meaningful.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503491,"byte_end":503518,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503523,"byte_end":503532,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503805,"byte_end":503817,"line_start":766,"line_end":766,"column_start":12,"column_end":24},"name":"prologue_end","qualname":"<LineRow>::prologue_end","value":"pub fn prologue_end(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an entry breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is one (of possibly many)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503611,"byte_end":503687,"line_start":762,"line_end":762,"column_start":5,"column_end":81}},{"value":"/ where execution should be suspended for an entry breakpoint of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503692,"byte_end":503760,"line_start":763,"line_end":763,"column_start":5,"column_end":73}},{"value":"/ function.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503765,"byte_end":503779,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503784,"byte_end":503793,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504065,"byte_end":504079,"line_start":774,"line_end":774,"column_start":12,"column_end":26},"name":"epilogue_begin","qualname":"<LineRow>::epilogue_begin","value":"pub fn epilogue_begin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an exit breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"/ \"A boolean indicating that the current address is one (of possibly many)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503872,"byte_end":503948,"line_start":770,"line_end":770,"column_start":5,"column_end":81}},{"value":"/ where execution should be suspended for an exit breakpoint of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":503953,"byte_end":504020,"line_start":771,"line_end":771,"column_start":5,"column_end":72}},{"value":"/ function.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504025,"byte_end":504039,"line_start":772,"line_end":772,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504044,"byte_end":504053,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504586,"byte_end":504589,"line_start":787,"line_end":787,"column_start":12,"column_end":15},"name":"isa","qualname":"<LineRow>::isa","value":"pub fn isa(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Tag for the current instruction set architecture.","sig":null,"attributes":[{"value":"/ Tag for the current instruction set architecture.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504136,"byte_end":504189,"line_start":778,"line_end":778,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504194,"byte_end":504197,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ > An unsigned integer whose value encodes the applicable instruction set","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504202,"byte_end":504278,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ > architecture for the current instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504283,"byte_end":504330,"line_start":781,"line_end":781,"column_start":5,"column_end":52}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504335,"byte_end":504340,"line_start":782,"line_end":782,"column_start":5,"column_end":10}},{"value":"/ > The encoding of instruction sets should be shared by all users of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504345,"byte_end":504418,"line_start":783,"line_end":783,"column_start":5,"column_end":78}},{"value":"/ > given architecture. It is recommended that this encoding be defined by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504423,"byte_end":504499,"line_start":784,"line_end":784,"column_start":5,"column_end":81}},{"value":"/ > the ABI authoring committee for each architecture.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504504,"byte_end":504560,"line_start":785,"line_end":785,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504565,"byte_end":504574,"line_start":786,"line_end":786,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505073,"byte_end":505086,"line_start":798,"line_end":798,"column_start":12,"column_end":25},"name":"discriminator","qualname":"<LineRow>::discriminator","value":"pub fn discriminator(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer identifying the block to which the current\n instruction belongs. Discriminator values are assigned arbitrarily by\n the DWARF producer and serve to distinguish among multiple blocks that\n may all be associated with the same source file, line, and column. Where\n only one block exists for a given source position, the discriminator\n value should be zero.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned integer identifying the block to which the current","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504634,"byte_end":504701,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ instruction belongs. Discriminator values are assigned arbitrarily by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504706,"byte_end":504779,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ the DWARF producer and serve to distinguish among multiple blocks that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504784,"byte_end":504858,"line_start":793,"line_end":793,"column_start":5,"column_end":79}},{"value":"/ may all be associated with the same source file, line, and column. Where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504863,"byte_end":504939,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ only one block exists for a given source position, the discriminator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":504944,"byte_end":505016,"line_start":795,"line_end":795,"column_start":5,"column_end":77}},{"value":"/ value should be zero.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505021,"byte_end":505047,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505052,"byte_end":505061,"line_start":797,"line_end":797,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505342,"byte_end":505349,"line_start":807,"line_end":807,"column_start":12,"column_end":19},"name":"execute","qualname":"<LineRow>::execute","value":"pub fn execute<R, Program>(&mut Self, LineInstruction<R>, &mut Program)\n-> bool where Program: LineProgram<R>, R: Reader","parent":null,"children":[],"decl_id":null,"docs":" Execute the given instruction, and return true if a new row in the\n line number matrix needs to be generated.","sig":null,"attributes":[{"value":"/ Execute the given instruction, and return true if a new row in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505141,"byte_end":505211,"line_start":802,"line_end":802,"column_start":5,"column_end":75}},{"value":"/ line number matrix needs to be generated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505216,"byte_end":505261,"line_start":803,"line_end":803,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505266,"byte_end":505269,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ Unknown opcodes are treated as no-ops.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505274,"byte_end":505316,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":505321,"byte_end":505330,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":508482,"byte_end":508487,"line_start":913,"line_end":913,"column_start":12,"column_end":17},"name":"reset","qualname":"<LineRow>::reset","value":"pub fn reset<R: Reader>(&mut Self, &LineProgramHeader<R>)","parent":null,"children":[],"decl_id":null,"docs":" Perform any reset that was required after copying the previous row.\n","sig":null,"attributes":[{"value":"/ Perform any reset that was required after copying the previous row.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":508385,"byte_end":508456,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":508461,"byte_end":508470,"line_start":912,"line_end":912,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6271},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511714,"byte_end":511722,"line_start":997,"line_end":997,"column_start":5,"column_end":13},"name":"LeftEdge","qualname":"::read::line::ColumnType::LeftEdge","value":"ColumnType::LeftEdge","parent":{"krate":0,"index":6270},"children":[],"decl_id":null,"docs":" The `LeftEdge` means that the statement begins at the start of the new\n line.\n","sig":null,"attributes":[{"value":"/ The `LeftEdge` means that the statement begins at the start of the new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511621,"byte_end":511695,"line_start":995,"line_end":995,"column_start":5,"column_end":79}},{"value":"/ line.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511700,"byte_end":511709,"line_start":996,"line_end":996,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6273},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511778,"byte_end":511784,"line_start":999,"line_end":999,"column_start":5,"column_end":11},"name":"Column","qualname":"::read::line::ColumnType::Column","value":"ColumnType::Column(u64)","parent":{"krate":0,"index":6270},"children":[],"decl_id":null,"docs":" A column number, whose range begins at 1.\n","sig":null,"attributes":[{"value":"/ A column number, whose range begins at 1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511728,"byte_end":511773,"line_start":998,"line_end":998,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":6270},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511604,"byte_end":511614,"line_start":994,"line_end":994,"column_start":10,"column_end":20},"name":"ColumnType","qualname":"::read::line::ColumnType","value":"pub enum ColumnType { LeftEdge, Column(u64), }","parent":null,"children":[{"krate":0,"index":6271},{"krate":0,"index":6273}],"decl_id":null,"docs":" The type of column that a row is referring to.\n","sig":null,"attributes":[{"value":"/ The type of column that a row is referring to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511482,"byte_end":511532,"line_start":992,"line_end":992,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1482},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511971,"byte_end":511989,"line_start":1004,"line_end":1004,"column_start":10,"column_end":28},"name":"LineNumberSequence","qualname":"::read::line::LineNumberSequence","value":"LineSequence<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511794,"byte_end":511866,"line_start":1002,"line_end":1002,"column_start":1,"column_end":73}},{"value":"deprecated(note =\n             \"LineNumberSequence has been renamed to LineSequence, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":511867,"byte_end":511961,"line_start":1003,"line_end":1003,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":6292},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512256,"byte_end":512268,"line_start":1010,"line_end":1010,"column_start":12,"column_end":24},"name":"LineSequence","qualname":"::read::line::LineSequence","value":"LineSequence { start, end }","parent":null,"children":[{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6296}],"decl_id":null,"docs":" A sequence within a line number program.  A sequence, as defined in section\n 6.2.5 of the standard, is a linear subset of a line number program within\n which addresses are monotonically increasing.\n","sig":null,"attributes":[{"value":"/ A sequence within a line number program.  A sequence, as defined in section","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512013,"byte_end":512092,"line_start":1006,"line_end":1006,"column_start":1,"column_end":80}},{"value":"/ 6.2.5 of the standard, is a linear subset of a line number program within","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512093,"byte_end":512170,"line_start":1007,"line_end":1007,"column_start":1,"column_end":78}},{"value":"/ which addresses are monotonically increasing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512171,"byte_end":512220,"line_start":1008,"line_end":1008,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6294},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512389,"byte_end":512394,"line_start":1013,"line_end":1013,"column_start":9,"column_end":14},"name":"start","qualname":"::read::line::LineSequence::start","value":"u64","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":" The first address that is covered by this sequence within the line number\n program.\n","sig":null,"attributes":[{"value":"/ The first address that is covered by this sequence within the line number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512286,"byte_end":512363,"line_start":1011,"line_end":1011,"column_start":5,"column_end":82}},{"value":"/ program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512368,"byte_end":512380,"line_start":1012,"line_end":1012,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":6295},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512514,"byte_end":512517,"line_start":1016,"line_end":1016,"column_start":9,"column_end":12},"name":"end","qualname":"::read::line::LineSequence::end","value":"u64","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":" The first address that is *not* covered by this sequence within the line\n number program.\n","sig":null,"attributes":[{"value":"/ The first address that is *not* covered by this sequence within the line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512405,"byte_end":512481,"line_start":1014,"line_end":1014,"column_start":5,"column_end":81}},{"value":"/ number program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512486,"byte_end":512505,"line_start":1015,"line_end":1015,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512769,"byte_end":512792,"line_start":1024,"line_end":1024,"column_start":10,"column_end":33},"name":"LineNumberProgramHeader","qualname":"::read::line::LineNumberProgramHeader","value":"LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512566,"byte_end":512648,"line_start":1020,"line_end":1020,"column_start":1,"column_end":83}},{"value":"deprecated(note =\n             \"LineNumberProgramHeader has been renamed to LineProgramHeader, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512649,"byte_end":512759,"line_start":1021,"line_end":1023,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":6303},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":513005,"byte_end":513022,"line_start":1029,"line_end":1029,"column_start":12,"column_end":29},"name":"LineProgramHeader","qualname":"::read::line::LineProgramHeader","value":"LineProgramHeader {  }","parent":null,"children":[{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317},{"krate":0,"index":6318},{"krate":0,"index":6319}],"decl_id":null,"docs":" A header for a line number program in the `.debug_line` section, as defined\n in section 6.2.4 of the standard.\n","sig":null,"attributes":[{"value":"/ A header for a line number program in the `.debug_line` section, as defined","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512837,"byte_end":512916,"line_start":1026,"line_end":1026,"column_start":1,"column_end":80}},{"value":"/ in section 6.2.4 of the standard.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":512917,"byte_end":512954,"line_start":1027,"line_end":1027,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515096,"byte_end":515102,"line_start":1088,"line_end":1088,"column_start":12,"column_end":18},"name":"offset","qualname":"<LineProgramHeader<R, Offset>>::offset","value":"pub fn offset(&Self) -> DebugLineOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the line number program header in the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ Return the offset of the line number program header in the `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":514999,"byte_end":515084,"line_start":1087,"line_end":1087,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515308,"byte_end":515319,"line_start":1094,"line_end":1094,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<LineProgramHeader<R, Offset>>::unit_length","value":"pub fn unit_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the line number program and header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Return the length of the line number program and header, not including","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515173,"byte_end":515247,"line_start":1092,"line_end":1092,"column_start":5,"column_end":79}},{"value":"/ the length of the encoded length itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515252,"byte_end":515296,"line_start":1093,"line_end":1093,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515456,"byte_end":515464,"line_start":1099,"line_end":1099,"column_start":12,"column_end":20},"name":"encoding","qualname":"<LineProgramHeader<R, Offset>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this header's line program.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515378,"byte_end":515444,"line_start":1098,"line_end":1098,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515581,"byte_end":515588,"line_start":1104,"line_end":1104,"column_start":12,"column_end":19},"name":"version","qualname":"<LineProgramHeader<R, Offset>>::version","value":"pub fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the version of this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the version of this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515519,"byte_end":515569,"line_start":1103,"line_end":1103,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515782,"byte_end":515795,"line_start":1110,"line_end":1110,"column_start":12,"column_end":25},"name":"header_length","qualname":"<LineProgramHeader<R, Offset>>::header_length","value":"pub fn header_length(&Self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the encoded line number program header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the encoded line number program header, not including","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515646,"byte_end":515721,"line_start":1108,"line_end":1108,"column_start":5,"column_end":80}},{"value":"/ the length of the encoded length itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515726,"byte_end":515770,"line_start":1109,"line_end":1109,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515922,"byte_end":515934,"line_start":1115,"line_end":1115,"column_start":12,"column_end":24},"name":"address_size","qualname":"<LineProgramHeader<R, Offset>>::address_size","value":"pub fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the size in bytes of a target machine address.\n","sig":null,"attributes":[{"value":"/ Get the size in bytes of a target machine address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515856,"byte_end":515910,"line_start":1114,"line_end":1114,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516072,"byte_end":516078,"line_start":1120,"line_end":1120,"column_start":12,"column_end":18},"name":"format","qualname":"<LineProgramHeader<R, Offset>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this line program is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this line program is encoded in 64- or 32-bit DWARF.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":515996,"byte_end":516060,"line_start":1119,"line_end":1119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516218,"byte_end":516231,"line_start":1125,"line_end":1125,"column_start":12,"column_end":25},"name":"line_encoding","qualname":"<LineProgramHeader<R, Offset>>::line_encoding","value":"pub fn line_encoding(&Self) -> LineEncoding","parent":null,"children":[],"decl_id":null,"docs":" Get the line encoding parameters for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line encoding parameters for this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516138,"byte_end":516206,"line_start":1124,"line_end":1124,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516409,"byte_end":516435,"line_start":1131,"line_end":1131,"column_start":12,"column_end":38},"name":"minimum_instruction_length","qualname":"<LineProgramHeader<R, Offset>>::minimum_instruction_length","value":"pub fn minimum_instruction_length(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum instruction length any instruction in this header's line\n program may have.\n","sig":null,"attributes":[{"value":"/ Get the minimum instruction length any instruction in this header's line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516295,"byte_end":516371,"line_start":1129,"line_end":1129,"column_start":5,"column_end":81}},{"value":"/ program may have.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516376,"byte_end":516397,"line_start":1130,"line_end":1130,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516633,"byte_end":516667,"line_start":1137,"line_end":1137,"column_start":12,"column_end":46},"name":"maximum_operations_per_instruction","qualname":"<LineProgramHeader<R, Offset>>::maximum_operations_per_instruction","value":"pub fn maximum_operations_per_instruction(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum number of operations each instruction in this header's\n line program may have.\n","sig":null,"attributes":[{"value":"/ Get the maximum number of operations each instruction in this header's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516516,"byte_end":516590,"line_start":1135,"line_end":1135,"column_start":5,"column_end":79}},{"value":"/ line program may have.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516595,"byte_end":516621,"line_start":1136,"line_end":1136,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516859,"byte_end":516874,"line_start":1143,"line_end":1143,"column_start":12,"column_end":27},"name":"default_is_stmt","qualname":"<LineProgramHeader<R, Offset>>::default_is_stmt","value":"pub fn default_is_stmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get the default value of the `is_stmt` register for this header's line\n program.\n","sig":null,"attributes":[{"value":"/ Get the default value of the `is_stmt` register for this header's line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516756,"byte_end":516830,"line_start":1141,"line_end":1141,"column_start":5,"column_end":79}},{"value":"/ program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516835,"byte_end":516847,"line_start":1142,"line_end":1142,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517011,"byte_end":517020,"line_start":1148,"line_end":1148,"column_start":12,"column_end":21},"name":"line_base","qualname":"<LineProgramHeader<R, Offset>>::line_base","value":"pub fn line_base(&Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Get the line base for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line base for this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":516946,"byte_end":516999,"line_start":1147,"line_end":1147,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517150,"byte_end":517160,"line_start":1153,"line_end":1153,"column_start":12,"column_end":22},"name":"line_range","qualname":"<LineProgramHeader<R, Offset>>::line_range","value":"pub fn line_range(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the line range for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the line range for this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517084,"byte_end":517138,"line_start":1152,"line_end":1152,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517288,"byte_end":517299,"line_start":1158,"line_end":1158,"column_start":12,"column_end":23},"name":"opcode_base","qualname":"<LineProgramHeader<R, Offset>>::opcode_base","value":"pub fn opcode_base(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get opcode base for this header's line program.\n","sig":null,"attributes":[{"value":"/ Get opcode base for this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517225,"byte_end":517276,"line_start":1157,"line_end":1157,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517470,"byte_end":517493,"line_start":1164,"line_end":1164,"column_start":12,"column_end":35},"name":"standard_opcode_lengths","qualname":"<LineProgramHeader<R, Offset>>::standard_opcode_lengths","value":"pub fn standard_opcode_lengths(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" An array of `u8` that specifies the number of LEB128 operands for\n each of the standard opcodes.\n","sig":null,"attributes":[{"value":"/ An array of `u8` that specifies the number of LEB128 operands for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517351,"byte_end":517420,"line_start":1162,"line_end":1162,"column_start":5,"column_end":74}},{"value":"/ each of the standard opcodes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517425,"byte_end":517458,"line_start":1163,"line_end":1163,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517610,"byte_end":517632,"line_start":1169,"line_end":1169,"column_start":12,"column_end":34},"name":"directory_entry_format","qualname":"<LineProgramHeader<R, Offset>>::directory_entry_format","value":"pub fn directory_entry_format(&Self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a directory entry.\n","sig":null,"attributes":[{"value":"/ Get the format of a directory entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517558,"byte_end":517598,"line_start":1168,"line_end":1168,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517975,"byte_end":517994,"line_start":1177,"line_end":1177,"column_start":12,"column_end":31},"name":"include_directories","qualname":"<LineProgramHeader<R, Offset>>::include_directories","value":"pub fn include_directories(&Self) -> &[AttributeValue<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of include directories for this header's line program.","sig":null,"attributes":[{"value":"/ Get the set of include directories for this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517716,"byte_end":517786,"line_start":1173,"line_end":1173,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517791,"byte_end":517794,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ For DWARF version <= 4, the compilation's current directory is not included","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517799,"byte_end":517878,"line_start":1175,"line_end":1175,"column_start":5,"column_end":84}},{"value":"/ in the return value, but is implicitly considered to be in the set per spec.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":517883,"byte_end":517963,"line_start":1176,"line_end":1176,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518240,"byte_end":518249,"line_start":1184,"line_end":1184,"column_start":12,"column_end":21},"name":"directory","qualname":"<LineProgramHeader<R, Offset>>::directory","value":"pub fn directory(&Self, u64) -> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The include directory with the given directory index.","sig":null,"attributes":[{"value":"/ The include directory with the given directory index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518085,"byte_end":518142,"line_start":1181,"line_end":1181,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518147,"byte_end":518150,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ A directory index of 0 corresponds to the compilation unit directory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518155,"byte_end":518228,"line_start":1183,"line_end":1183,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518766,"byte_end":518788,"line_start":1198,"line_end":1198,"column_start":12,"column_end":34},"name":"file_name_entry_format","qualname":"<LineProgramHeader<R, Offset>>::file_name_entry_format","value":"pub fn file_name_entry_format(&Self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a file name entry.\n","sig":null,"attributes":[{"value":"/ Get the format of a file name entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518714,"byte_end":518754,"line_start":1197,"line_end":1197,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519050,"byte_end":519068,"line_start":1206,"line_end":1206,"column_start":12,"column_end":30},"name":"file_has_timestamp","qualname":"<LineProgramHeader<R, Offset>>::file_has_timestamp","value":"pub fn file_has_timestamp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid timestamps.","sig":null,"attributes":[{"value":"/ Return true if the file entries may have valid timestamps.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518872,"byte_end":518934,"line_start":1202,"line_end":1202,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518939,"byte_end":518942,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ Only returns false if we definitely know that all timestamp fields","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":518947,"byte_end":519017,"line_start":1204,"line_end":1204,"column_start":5,"column_end":75}},{"value":"/ are invalid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519022,"byte_end":519038,"line_start":1205,"line_end":1205,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519457,"byte_end":519470,"line_start":1218,"line_end":1218,"column_start":12,"column_end":25},"name":"file_has_size","qualname":"<LineProgramHeader<R, Offset>>::file_has_size","value":"pub fn file_has_size(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid sizes.","sig":null,"attributes":[{"value":"/ Return true if the file entries may have valid sizes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519289,"byte_end":519346,"line_start":1214,"line_end":1214,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519351,"byte_end":519354,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ Only returns false if we definitely know that all size fields","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519359,"byte_end":519424,"line_start":1216,"line_end":1216,"column_start":5,"column_end":70}},{"value":"/ are invalid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519429,"byte_end":519445,"line_start":1217,"line_end":1217,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519766,"byte_end":519778,"line_start":1227,"line_end":1227,"column_start":12,"column_end":24},"name":"file_has_md5","qualname":"<LineProgramHeader<R, Offset>>::file_has_md5","value":"pub fn file_has_md5(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file name entry format contains an MD5 field.\n","sig":null,"attributes":[{"value":"/ Return true if the file name entry format contains an MD5 field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519686,"byte_end":519754,"line_start":1226,"line_end":1226,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520013,"byte_end":520023,"line_start":1234,"line_end":1234,"column_start":12,"column_end":22},"name":"file_names","qualname":"<LineProgramHeader<R, Offset>>::file_names","value":"pub fn file_names(&Self) -> &[FileEntry<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of source files that appear in this header's line program.\n","sig":null,"attributes":[{"value":"/ Get the list of source files that appear in this header's line program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":519926,"byte_end":520001,"line_start":1233,"line_end":1233,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520339,"byte_end":520343,"line_start":1243,"line_end":1243,"column_start":12,"column_end":16},"name":"file","qualname":"<LineProgramHeader<R, Offset>>::file","value":"pub fn file(&Self, u64) -> Option<&FileEntry<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The source file with the given file index.","sig":null,"attributes":[{"value":"/ The source file with the given file index.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520100,"byte_end":520146,"line_start":1238,"line_end":1238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520151,"byte_end":520154,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ A file index of 0 corresponds to the compilation unit file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520159,"byte_end":520222,"line_start":1240,"line_end":1240,"column_start":5,"column_end":68}},{"value":"/ Note that a file index of 0 is invalid for DWARF version <= 4,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520227,"byte_end":520293,"line_start":1241,"line_end":1241,"column_start":5,"column_end":71}},{"value":"/ but we support it anyway.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520298,"byte_end":520327,"line_start":1242,"line_end":1242,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521409,"byte_end":521424,"line_start":1274,"line_end":1274,"column_start":12,"column_end":27},"name":"raw_program_buf","qualname":"<LineProgramHeader<R, Offset>>::raw_program_buf","value":"pub fn raw_program_buf(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the raw, un-parsed `EndianSlice` containing this header's line number\n program.","sig":null,"attributes":[{"value":"/ Get the raw, un-parsed `EndianSlice` containing this header's line number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520712,"byte_end":520789,"line_start":1256,"line_end":1256,"column_start":5,"column_end":82}},{"value":"/ program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520794,"byte_end":520806,"line_start":1257,"line_end":1257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520811,"byte_end":520814,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520819,"byte_end":520826,"line_start":1259,"line_end":1259,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520831,"byte_end":520847,"line_start":1260,"line_end":1260,"column_start":5,"column_end":21}},{"value":"/ use gimli::{LineProgramHeader, EndianSlice, NativeEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520852,"byte_end":520914,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520919,"byte_end":520922,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program_header<'a>() -> LineProgramHeader<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":520927,"byte_end":521024,"line_start":1263,"line_end":1263,"column_start":5,"column_end":102}},{"value":"/     // Get a line number program header from some offset in a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521029,"byte_end":521094,"line_start":1264,"line_end":1264,"column_start":5,"column_end":70}},{"value":"/     // `.debug_line` section...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521099,"byte_end":521134,"line_start":1265,"line_end":1265,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521139,"byte_end":521163,"line_start":1266,"line_end":1266,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521168,"byte_end":521173,"line_start":1267,"line_end":1267,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521178,"byte_end":521181,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ let header = get_line_number_program_header();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521186,"byte_end":521236,"line_start":1269,"line_end":1269,"column_start":5,"column_end":55}},{"value":"/ let raw_program = header.raw_program_buf();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521241,"byte_end":521288,"line_start":1270,"line_end":1270,"column_start":5,"column_end":52}},{"value":"/ println!(\"The length of the raw program in bytes is {}\", raw_program.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521293,"byte_end":521373,"line_start":1271,"line_end":1271,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521378,"byte_end":521385,"line_start":1272,"line_end":1272,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521390,"byte_end":521397,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521597,"byte_end":521609,"line_start":1280,"line_end":1280,"column_start":12,"column_end":24},"name":"instructions","qualname":"<LineProgramHeader<R, Offset>>::instructions","value":"pub fn instructions(&Self) -> LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the instructions in this header's line number program, parsing\n them as we go.\n","sig":null,"attributes":[{"value":"/ Iterate over the instructions in this header's line number program, parsing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521483,"byte_end":521562,"line_start":1278,"line_end":1278,"column_start":5,"column_end":84}},{"value":"/ them as we go.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":521567,"byte_end":521585,"line_start":1279,"line_end":1279,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1522},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526537,"byte_end":526564,"line_start":1432,"line_end":1432,"column_start":10,"column_end":37},"name":"IncompleteLineNumberProgram","qualname":"::read::line::IncompleteLineNumberProgram","value":"IncompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526318,"byte_end":526408,"line_start":1428,"line_end":1428,"column_start":1,"column_end":91}},{"value":"deprecated(note =\n             \"IncompleteLineNumberProgram has been renamed to IncompleteLineProgram, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526409,"byte_end":526527,"line_start":1429,"line_end":1431,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":6343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526726,"byte_end":526747,"line_start":1436,"line_end":1436,"column_start":12,"column_end":33},"name":"IncompleteLineProgram","qualname":"::read::line::IncompleteLineProgram","value":"IncompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":6346}],"decl_id":null,"docs":" A line number program that has not been run to completion.\n","sig":null,"attributes":[{"value":"/ A line number program that has not been run to completion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526613,"byte_end":526675,"line_start":1434,"line_end":1434,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527079,"byte_end":527085,"line_start":1450,"line_end":1450,"column_start":12,"column_end":18},"name":"header","qualname":"<IncompleteLineProgram<R, Offset>>::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[{"value":"/ Retrieve the `LineProgramHeader` for this program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527013,"byte_end":527067,"line_start":1449,"line_end":1449,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527290,"byte_end":527294,"line_start":1456,"line_end":1456,"column_start":12,"column_end":16},"name":"rows","qualname":"<IncompleteLineProgram<R, Offset>>::rows","value":"pub fn rows(Self) -> OneShotLineRows<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing this program to iterate\n over rows in the line information matrix.\n","sig":null,"attributes":[{"value":"/ Construct a new `LineRows` for executing this program to iterate","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527160,"byte_end":527228,"line_start":1454,"line_end":1454,"column_start":5,"column_end":73}},{"value":"/ over rows in the line information matrix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527233,"byte_end":527278,"line_start":1455,"line_end":1455,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528284,"byte_end":528293,"line_start":1481,"line_end":1481,"column_start":12,"column_end":21},"name":"sequences","qualname":"<IncompleteLineProgram<R, Offset>>::sequences","value":"pub fn sequences(Self)\n-> Result<(CompleteLineProgram<R, Offset>, Vec<LineSequence<R>>)>","parent":null,"children":[],"decl_id":null,"docs":" Execute the line number program, completing the `IncompleteLineProgram`\n into a `CompleteLineProgram` and producing an array of sequences within\n the line number program that can later be used with\n `CompleteLineProgram::resume_from`.","sig":null,"attributes":[{"value":"/ Execute the line number program, completing the `IncompleteLineProgram`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527379,"byte_end":527454,"line_start":1460,"line_end":1460,"column_start":5,"column_end":80}},{"value":"/ into a `CompleteLineProgram` and producing an array of sequences within","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527459,"byte_end":527534,"line_start":1461,"line_end":1461,"column_start":5,"column_end":80}},{"value":"/ the line number program that can later be used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527539,"byte_end":527594,"line_start":1462,"line_end":1462,"column_start":5,"column_end":60}},{"value":"/ `CompleteLineProgram::resume_from`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527599,"byte_end":527638,"line_start":1463,"line_end":1463,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527643,"byte_end":527646,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527651,"byte_end":527658,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527663,"byte_end":527679,"line_start":1466,"line_end":1466,"column_start":5,"column_end":21}},{"value":"/ use gimli::{IncompleteLineProgram, EndianSlice, NativeEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527684,"byte_end":527750,"line_start":1467,"line_end":1467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527755,"byte_end":527758,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program<'a>() -> IncompleteLineProgram<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527763,"byte_end":527857,"line_start":1469,"line_end":1469,"column_start":5,"column_end":99}},{"value":"/     // Get a line number program from some offset in a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527862,"byte_end":527920,"line_start":1470,"line_end":1470,"column_start":5,"column_end":63}},{"value":"/     // `.debug_line` section...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527925,"byte_end":527960,"line_start":1471,"line_end":1471,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527965,"byte_end":527989,"line_start":1472,"line_end":1472,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":527994,"byte_end":527999,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528004,"byte_end":528007,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ let program = get_line_number_program();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528012,"byte_end":528056,"line_start":1475,"line_end":1475,"column_start":5,"column_end":49}},{"value":"/ let (program, sequences) = program.sequences().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528061,"byte_end":528121,"line_start":1476,"line_end":1476,"column_start":5,"column_end":65}},{"value":"/ println!(\"There are {} sequences in this line number program\", sequences.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528126,"byte_end":528210,"line_start":1477,"line_end":1477,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528215,"byte_end":528222,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528227,"byte_end":528234,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":528239,"byte_end":528272,"line_start":1480,"line_end":1480,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1531},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":529848,"byte_end":529873,"line_start":1525,"line_end":1525,"column_start":10,"column_end":35},"name":"CompleteLineNumberProgram","qualname":"::read::line::CompleteLineNumberProgram","value":"CompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.\n","sig":null,"attributes":[{"value":"/ Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":529637,"byte_end":529723,"line_start":1521,"line_end":1521,"column_start":1,"column_end":87}},{"value":"deprecated(note =\n             \"CompleteLineNumberProgram has been renamed to CompleteLineProgram, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":529724,"byte_end":529838,"line_start":1522,"line_end":1524,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":6370},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530040,"byte_end":530059,"line_start":1529,"line_end":1529,"column_start":12,"column_end":31},"name":"CompleteLineProgram","qualname":"::read::line::CompleteLineProgram","value":"CompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":6373}],"decl_id":null,"docs":" A line number program that has previously been run to completion.\n","sig":null,"attributes":[{"value":"/ A line number program that has previously been run to completion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":529920,"byte_end":529989,"line_start":1527,"line_end":1527,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530389,"byte_end":530395,"line_start":1543,"line_end":1543,"column_start":12,"column_end":18},"name":"header","qualname":"<CompleteLineProgram<R, Offset>>::header","value":"pub fn header(&Self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[{"value":"/ Retrieve the `LineProgramHeader` for this program.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530323,"byte_end":530377,"line_start":1542,"line_end":1542,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531260,"byte_end":531271,"line_start":1568,"line_end":1568,"column_start":12,"column_end":23},"name":"resume_from","qualname":"<CompleteLineProgram<R, Offset>>::resume_from","value":"pub fn resume_from<'program>(&'program Self, &LineSequence<R>)\n-> ResumedLineRows","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing the subset of the line\n number program identified by 'sequence' and  generating the line information\n matrix.","sig":null,"attributes":[{"value":"/ Construct a new `LineRows` for executing the subset of the line","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530470,"byte_end":530537,"line_start":1547,"line_end":1547,"column_start":5,"column_end":72}},{"value":"/ number program identified by 'sequence' and  generating the line information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530542,"byte_end":530622,"line_start":1548,"line_end":1548,"column_start":5,"column_end":85}},{"value":"/ matrix.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530627,"byte_end":530638,"line_start":1549,"line_end":1549,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530643,"byte_end":530646,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530651,"byte_end":530658,"line_start":1551,"line_end":1551,"column_start":5,"column_end":12}},{"value":"/ # fn foo() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530663,"byte_end":530679,"line_start":1552,"line_end":1552,"column_start":5,"column_end":21}},{"value":"/ use gimli::{IncompleteLineProgram, EndianSlice, NativeEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530684,"byte_end":530750,"line_start":1553,"line_end":1553,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530755,"byte_end":530758,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ fn get_line_number_program<'a>() -> IncompleteLineProgram<EndianSlice<'a, NativeEndian>> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530763,"byte_end":530857,"line_start":1555,"line_end":1555,"column_start":5,"column_end":99}},{"value":"/     // Get a line number program from some offset in a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530862,"byte_end":530920,"line_start":1556,"line_end":1556,"column_start":5,"column_end":63}},{"value":"/     // `.debug_line` section...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530925,"byte_end":530960,"line_start":1557,"line_end":1557,"column_start":5,"column_end":40}},{"value":"/ #   unimplemented!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530965,"byte_end":530989,"line_start":1558,"line_end":1558,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530994,"byte_end":530999,"line_start":1559,"line_end":1559,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531004,"byte_end":531007,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ let program = get_line_number_program();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531012,"byte_end":531056,"line_start":1561,"line_end":1561,"column_start":5,"column_end":49}},{"value":"/ let (program, sequences) = program.sequences().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531061,"byte_end":531121,"line_start":1562,"line_end":1562,"column_start":5,"column_end":65}},{"value":"/ for sequence in &sequences {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531126,"byte_end":531158,"line_start":1563,"line_end":1563,"column_start":5,"column_end":37}},{"value":"/     let mut sm = program.resume_from(sequence);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531163,"byte_end":531214,"line_start":1564,"line_end":1564,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531219,"byte_end":531224,"line_start":1565,"line_end":1565,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531229,"byte_end":531236,"line_start":1566,"line_end":1566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531241,"byte_end":531248,"line_start":1567,"line_end":1567,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6397},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531564,"byte_end":531573,"line_start":1578,"line_end":1578,"column_start":12,"column_end":21},"name":"FileEntry","qualname":"::read::line::FileEntry","value":"FileEntry {  }","parent":null,"children":[{"krate":0,"index":6400},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404}],"decl_id":null,"docs":" An entry in the `LineProgramHeader`'s `file_names` set.\n","sig":null,"attributes":[{"value":"/ An entry in the `LineProgramHeader`'s `file_names` set.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531448,"byte_end":531507,"line_start":1576,"line_end":1576,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532756,"byte_end":532765,"line_start":1617,"line_end":1617,"column_start":12,"column_end":21},"name":"path_name","qualname":"<FileEntry<R, Offset>>::path_name","value":"pub fn path_name(&Self) -> AttributeValue<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" > A slice containing the full or relative path name of\n > a source file. If the entry contains a file name or a relative path\n > name, the file is located relative to either the compilation directory\n > (as specified by the DW_AT_comp_dir attribute given in the compilation\n > unit) or one of the directories in the include_directories section.\n","sig":null,"attributes":[{"value":"/ > A slice containing the full or relative path name of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532368,"byte_end":532426,"line_start":1612,"line_end":1612,"column_start":5,"column_end":63}},{"value":"/ > a source file. If the entry contains a file name or a relative path","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532431,"byte_end":532504,"line_start":1613,"line_end":1613,"column_start":5,"column_end":78}},{"value":"/ > name, the file is located relative to either the compilation directory","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532509,"byte_end":532585,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/ > (as specified by the DW_AT_comp_dir attribute given in the compilation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532590,"byte_end":532666,"line_start":1615,"line_end":1615,"column_start":5,"column_end":81}},{"value":"/ > unit) or one of the directories in the include_directories section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532671,"byte_end":532744,"line_start":1616,"line_end":1616,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533430,"byte_end":533445,"line_start":1632,"line_end":1632,"column_start":12,"column_end":27},"name":"directory_index","qualname":"<FileEntry<R, Offset>>::directory_index","value":"pub fn directory_index(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned LEB128 number representing the directory index of the\n > directory in which the file was found.\n >\n > ...\n >\n > The directory index represents an entry in the include_directories\n > section of the line number program header. The index is 0 if the file\n > was found in the current directory of the compilation, 1 if it was found\n > in the first directory in the include_directories section, and so\n > on. The directory index is ignored for file names that represent full\n > path names.\n","sig":null,"attributes":[{"value":"/ > An unsigned LEB128 number representing the directory index of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532846,"byte_end":532917,"line_start":1621,"line_end":1621,"column_start":5,"column_end":76}},{"value":"/ > directory in which the file was found.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532922,"byte_end":532966,"line_start":1622,"line_end":1622,"column_start":5,"column_end":49}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532971,"byte_end":532976,"line_start":1623,"line_end":1623,"column_start":5,"column_end":10}},{"value":"/ > ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532981,"byte_end":532990,"line_start":1624,"line_end":1624,"column_start":5,"column_end":14}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":532995,"byte_end":533000,"line_start":1625,"line_end":1625,"column_start":5,"column_end":10}},{"value":"/ > The directory index represents an entry in the include_directories","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533005,"byte_end":533077,"line_start":1626,"line_end":1626,"column_start":5,"column_end":77}},{"value":"/ > section of the line number program header. The index is 0 if the file","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533082,"byte_end":533157,"line_start":1627,"line_end":1627,"column_start":5,"column_end":80}},{"value":"/ > was found in the current directory of the compilation, 1 if it was found","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533162,"byte_end":533240,"line_start":1628,"line_end":1628,"column_start":5,"column_end":83}},{"value":"/ > in the first directory in the include_directories section, and so","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533245,"byte_end":533316,"line_start":1629,"line_end":1629,"column_start":5,"column_end":76}},{"value":"/ > on. The directory index is ignored for file names that represent full","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533321,"byte_end":533396,"line_start":1630,"line_end":1630,"column_start":5,"column_end":80}},{"value":"/ > path names.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533401,"byte_end":533418,"line_start":1631,"line_end":1631,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533630,"byte_end":533639,"line_start":1639,"line_end":1639,"column_start":12,"column_end":21},"name":"directory","qualname":"<FileEntry<R, Offset>>::directory","value":"pub fn directory(&Self, &LineProgramHeader<R>)\n-> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Get this file's directory.","sig":null,"attributes":[{"value":"/ Get this file's directory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533502,"byte_end":533532,"line_start":1636,"line_end":1636,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533537,"byte_end":533540,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ A directory index of 0 corresponds to the compilation unit directory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533545,"byte_end":533618,"line_start":1638,"line_end":1638,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533887,"byte_end":533896,"line_start":1645,"line_end":1645,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<FileEntry<R, Offset>>::timestamp","value":"pub fn timestamp(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The implementation-defined time of last modification of the file,\n or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The implementation-defined time of last modification of the file,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533775,"byte_end":533844,"line_start":1643,"line_end":1643,"column_start":5,"column_end":74}},{"value":"/ or 0 if not available.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533849,"byte_end":533875,"line_start":1644,"line_end":1644,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534143,"byte_end":534160,"line_start":1653,"line_end":1653,"column_start":12,"column_end":29},"name":"last_modification","qualname":"<FileEntry<R, Offset>>::last_modification","value":"pub fn last_modification(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the time of last modification of\n the file, or 0 if not available.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned LEB128 number representing the time of last modification of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":533947,"byte_end":534023,"line_start":1649,"line_end":1649,"column_start":5,"column_end":81}},{"value":"/ the file, or 0 if not available.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534028,"byte_end":534065,"line_start":1650,"line_end":1650,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534280,"byte_end":534284,"line_start":1658,"line_end":1658,"column_start":12,"column_end":16},"name":"size","qualname":"<FileEntry<R, Offset>>::size","value":"pub fn size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The size of the file in bytes, or 0 if not available.\n","sig":null,"attributes":[{"value":"/ The size of the file in bytes, or 0 if not available.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534211,"byte_end":534268,"line_start":1657,"line_end":1657,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534516,"byte_end":534522,"line_start":1666,"line_end":1666,"column_start":12,"column_end":18},"name":"length","qualname":"<FileEntry<R, Offset>>::length","value":"pub fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the length in bytes of the file,\n or 0 if not available.\"\n","sig":null,"attributes":[{"value":"/ \"An unsigned LEB128 number representing the length in bytes of the file,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534330,"byte_end":534406,"line_start":1662,"line_end":1662,"column_start":5,"column_end":81}},{"value":"/ or 0 if not available.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534411,"byte_end":534438,"line_start":1663,"line_end":1663,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534706,"byte_end":534709,"line_start":1673,"line_end":1673,"column_start":12,"column_end":15},"name":"md5","qualname":"<FileEntry<R, Offset>>::md5","value":"pub fn md5(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" A 16-byte MD5 digest of the file contents.","sig":null,"attributes":[{"value":"/ A 16-byte MD5 digest of the file contents.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534568,"byte_end":534614,"line_start":1670,"line_end":1670,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534619,"byte_end":534622,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ Only valid if `LineProgramHeader::file_has_md5` returns `true`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534627,"byte_end":534694,"line_start":1672,"line_end":1672,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6433},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534889,"byte_end":534904,"line_start":1680,"line_end":1680,"column_start":12,"column_end":27},"name":"FileEntryFormat","qualname":"::read::line::FileEntryFormat","value":"FileEntryFormat { content_type, form }","parent":null,"children":[{"krate":0,"index":6434},{"krate":0,"index":6435}],"decl_id":null,"docs":" The format of a component of an include directory or file name entry.\n","sig":null,"attributes":[{"value":"/ The format of a component of an include directory or file name entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534759,"byte_end":534832,"line_start":1678,"line_end":1678,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":6434},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534985,"byte_end":534997,"line_start":1682,"line_end":1682,"column_start":9,"column_end":21},"name":"content_type","qualname":"::read::line::FileEntryFormat::content_type","value":"constants::DwLnct","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":" The type of information that is represented by the component.\n","sig":null,"attributes":[{"value":"/ The type of information that is represented by the component.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":534911,"byte_end":534976,"line_start":1681,"line_end":1681,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":6435},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":535077,"byte_end":535081,"line_start":1685,"line_end":1685,"column_start":9,"column_end":13},"name":"form","qualname":"::read::line::FileEntryFormat::form","value":"constants::DwForm","parent":{"krate":0,"index":6433},"children":[],"decl_id":null,"docs":" The encoding form of the component value.\n","sig":null,"attributes":[{"value":"/ The encoding form of the component value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":535023,"byte_end":535068,"line_start":1684,"line_end":1684,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584424,"byte_end":584432,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"DebugLoc","qualname":"::read::loclists::DebugLoc","value":"DebugLoc {  }","parent":null,"children":[{"krate":0,"index":6458}],"decl_id":null,"docs":" The raw contents of the `.debug_loc` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_loc` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584324,"byte_end":584373,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585144,"byte_end":585147,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLoc<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLoc` instance from the data in the `.debug_loc`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLoc` instance from the data in the `.debug_loc`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584562,"byte_end":584635,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584640,"byte_end":584652,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584657,"byte_end":584660,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_loc` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584665,"byte_end":584739,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584744,"byte_end":584814,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584819,"byte_end":584858,"line_start":27,"line_end":27,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584863,"byte_end":584866,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584871,"byte_end":584878,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLoc, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584883,"byte_end":584923,"line_start":30,"line_end":30,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584928,"byte_end":584931,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584936,"byte_end":584977,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_loc_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584982,"byte_end":585033,"line_start":33,"line_end":33,"column_start":5,"column_end":56}},{"value":"/ let debug_loc = DebugLoc::new(read_debug_loc_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585038,"byte_end":585120,"line_start":34,"line_end":34,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585125,"byte_end":585132,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6470},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585676,"byte_end":585689,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"DebugLocLists","qualname":"::read::loclists::DebugLocLists","value":"DebugLocLists {  }","parent":null,"children":[{"krate":0,"index":6472}],"decl_id":null,"docs":" The `DebugLocLists` struct represents the DWARF data\n found in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLocLists` struct represents the DWARF data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585525,"byte_end":585581,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/ found in the `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585582,"byte_end":585625,"line_start":58,"line_end":58,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586435,"byte_end":586438,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLocLists<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585813,"byte_end":585896,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585901,"byte_end":585913,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585918,"byte_end":585921,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_loclists` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585926,"byte_end":586005,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586010,"byte_end":586080,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586085,"byte_end":586124,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586129,"byte_end":586132,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586137,"byte_end":586144,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugLocLists, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586149,"byte_end":586194,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586199,"byte_end":586202,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586207,"byte_end":586248,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_loclists_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586253,"byte_end":586309,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ let debug_loclists = DebugLocLists::new(read_debug_loclists_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586314,"byte_end":586411,"line_start":80,"line_end":80,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586416,"byte_end":586423,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587105,"byte_end":587134,"line_start":111,"line_end":111,"column_start":12,"column_end":41},"name":"default_for_encoding_and_file","qualname":"<DebugLocListsBase<Offset>>::default_for_encoding_and_file","value":"pub fn default_for_encoding_and_file(Encoding, DwarfFileType)\n-> DebugLocListsBase<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DebugLocListsBase` with the default value of DW_AT_loclists_base\n for the given `Encoding` and `DwarfFileType`.\n","sig":null,"attributes":[{"value":"/ Returns a `DebugLocListsBase` with the default value of DW_AT_loclists_base","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586960,"byte_end":587039,"line_start":109,"line_end":109,"column_start":5,"column_end":84}},{"value":"/ for the given `Encoding` and `DwarfFileType`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587044,"byte_end":587093,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6484},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587849,"byte_end":587862,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"LocationLists","qualname":"::read::loclists::LocationLists","value":"LocationLists {  }","parent":null,"children":[{"krate":0,"index":6486},{"krate":0,"index":6487}],"decl_id":null,"docs":" The DWARF data found in `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ The DWARF data found in `.debug_loc` and `.debug_loclists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587726,"byte_end":587798,"line_start":126,"line_end":126,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588098,"byte_end":588101,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<LocationLists<R>>::new","value":"pub fn new(DebugLoc<R>, DebugLocLists<R>) -> LocationLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LocationLists` instance from the data in the `.debug_loc` and\n `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ Construct a new `LocationLists` instance from the data in the `.debug_loc` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587968,"byte_end":588050,"line_start":134,"line_end":134,"column_start":5,"column_end":87}},{"value":"/ `.debug_loclists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588055,"byte_end":588086,"line_start":135,"line_end":135,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588937,"byte_end":588943,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"borrow","qualname":"<LocationLists<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> LocationLists<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocationLists` that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `LocationLists` that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588307,"byte_end":588371,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588376,"byte_end":588379,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588384,"byte_end":588449,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588454,"byte_end":588457,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588462,"byte_end":588482,"line_start":149,"line_end":149,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588487,"byte_end":588490,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588495,"byte_end":588513,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588518,"byte_end":588563,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588568,"byte_end":588652,"line_start":153,"line_end":153,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::LocationLists<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588657,"byte_end":588727,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588732,"byte_end":588779,"line_start":155,"line_end":155,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588784,"byte_end":588834,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588839,"byte_end":588901,"line_start":157,"line_end":157,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588906,"byte_end":588913,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588918,"byte_end":588925,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589759,"byte_end":589768,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"locations","qualname":"<LocationLists<R>>::locations","value":"pub fn locations(&Self, LocationListsOffset<R::Offset>, Encoding, u64,\n                 &DebugAddr<R>, DebugAddrBase<R::Offset>)\n-> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `LocationListEntry`s starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589263,"byte_end":589334,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589339,"byte_end":589342,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589347,"byte_end":589411,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589416,"byte_end":589444,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589449,"byte_end":589452,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The `base_address` should be obtained from the `DW_AT_low_pc` attribute in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589457,"byte_end":589539,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/ `DW_TAG_compile_unit` entry for the compilation unit that contains this location","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589544,"byte_end":589628,"line_start":178,"line_end":178,"column_start":5,"column_end":89}},{"value":"/ list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589633,"byte_end":589642,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589647,"byte_end":589650,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589655,"byte_end":589676,"line_start":181,"line_end":181,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589681,"byte_end":589747,"line_start":182,"line_end":182,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590386,"byte_end":590399,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"locations_dwo","qualname":"<LocationLists<R>>::locations_dwo","value":"pub fn locations_dwo(&Self, LocationListsOffset<R::Offset>, Encoding, u64,\n                     &DebugAddr<R>, DebugAddrBase<R::Offset>)\n-> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `locations`, but with special handling for .dwo files.\n This should only been used when this `LocationLists` was loaded from a\n .dwo file.\n","sig":null,"attributes":[{"value":"/ Similar to `locations`, but with special handling for .dwo files.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590207,"byte_end":590276,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/ This should only been used when this `LocationLists` was loaded from a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590281,"byte_end":590355,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ .dwo file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590360,"byte_end":590374,"line_start":201,"line_end":201,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591272,"byte_end":591285,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"raw_locations","qualname":"<LocationLists<R>>::raw_locations","value":"pub fn raw_locations(&Self, LocationListsOffset<R::Offset>, Encoding)\n-> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the raw `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the raw `LocationListEntry`s starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590842,"byte_end":590917,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590922,"byte_end":590925,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590930,"byte_end":590994,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":590999,"byte_end":591027,"line_start":221,"line_end":221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591032,"byte_end":591035,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This iterator does not perform any processing of the location entries,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591040,"byte_end":591114,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ such as handling base addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591119,"byte_end":591155,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591160,"byte_end":591163,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591168,"byte_end":591189,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591194,"byte_end":591260,"line_start":227,"line_end":227,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591939,"byte_end":591956,"line_start":245,"line_end":245,"column_start":12,"column_end":29},"name":"raw_locations_dwo","qualname":"<LocationLists<R>>::raw_locations_dwo","value":"pub fn raw_locations_dwo(&Self, LocationListsOffset<R::Offset>, Encoding)\n-> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `raw_locations`, but with special handling for .dwo files.\n This should only been used when this `LocationLists` was loaded from a\n .dwo file.\n","sig":null,"attributes":[{"value":"/ Similar to `raw_locations`, but with special handling for .dwo files.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591756,"byte_end":591829,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ This should only been used when this `LocationLists` was loaded from a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591834,"byte_end":591908,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ .dwo file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":591913,"byte_end":591927,"line_start":244,"line_end":244,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592983,"byte_end":592993,"line_start":272,"line_end":272,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<LocationLists<R>>::get_offset","value":"pub fn get_offset(&Self, Encoding, DebugLocListsBase<R::Offset>,\n                  DebugLocListsIndex<R::Offset>)\n-> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_loclists` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_loclists` offset at the given `base` and `index`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592645,"byte_end":592718,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592723,"byte_end":592726,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_loclists_base` value from the compilation unit DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592731,"byte_end":592816,"line_start":268,"line_end":268,"column_start":5,"column_end":90}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592821,"byte_end":592895,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592900,"byte_end":592903,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_loclistx` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":592908,"byte_end":592971,"line_start":271,"line_end":271,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":593640,"byte_end":593656,"line_start":290,"line_end":290,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<LocationLists<R>>::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":593547,"byte_end":593628,"line_start":289,"line_end":289,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":6515},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594302,"byte_end":594316,"line_start":311,"line_end":311,"column_start":12,"column_end":26},"name":"RawLocListIter","qualname":"::read::loclists::RawLocListIter","value":"RawLocListIter {  }","parent":null,"children":[{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6519}],"decl_id":null,"docs":" A raw iterator over a location list.","sig":null,"attributes":[{"value":"/ A raw iterator over a location list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594117,"byte_end":594157,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594158,"byte_end":594161,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ This iterator does not perform any processing of the location entries,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594162,"byte_end":594236,"line_start":308,"line_end":308,"column_start":1,"column_end":75}},{"value":"/ such as handling base addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594237,"byte_end":594273,"line_start":309,"line_end":309,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6525},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594545,"byte_end":594564,"line_start":321,"line_end":321,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair","value":"RawLocListEntry::AddressOrOffsetPair { begin, end, data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" A location from DWARF version <= 4.\n","sig":null,"attributes":[{"value":"/ A location from DWARF version <= 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594501,"byte_end":594540,"line_start":320,"line_end":320,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":6529},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594814,"byte_end":594825,"line_start":330,"line_end":330,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::loclists::RawLocListEntry::BaseAddress","value":"RawLocListEntry::BaseAddress { addr }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594786,"byte_end":594809,"line_start":329,"line_end":329,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":6531},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594912,"byte_end":594924,"line_start":335,"line_end":335,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::loclists::RawLocListEntry::BaseAddressx","value":"RawLocListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_base_addressx\n","sig":null,"attributes":[{"value":"/ DW_LLE_base_addressx","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594883,"byte_end":594907,"line_start":334,"line_end":334,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":6533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595031,"byte_end":595041,"line_start":340,"line_end":340,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::loclists::RawLocListEntry::StartxEndx","value":"RawLocListEntry::StartxEndx { begin, end, data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_startx_endx\n","sig":null,"attributes":[{"value":"/ DW_LLE_startx_endx","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595004,"byte_end":595026,"line_start":339,"line_end":339,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":6537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595270,"byte_end":595282,"line_start":349,"line_end":349,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::loclists::RawLocListEntry::StartxLength","value":"RawLocListEntry::StartxLength { begin, length, data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_startx_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_startx_length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595241,"byte_end":595265,"line_start":348,"line_end":348,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":6541},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595493,"byte_end":595503,"line_start":358,"line_end":358,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::loclists::RawLocListEntry::OffsetPair","value":"RawLocListEntry::OffsetPair { begin, end, data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_LLE_offset_pair","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595466,"byte_end":595488,"line_start":357,"line_end":357,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":6545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595691,"byte_end":595706,"line_start":367,"line_end":367,"column_start":5,"column_end":20},"name":"DefaultLocation","qualname":"::read::loclists::RawLocListEntry::DefaultLocation","value":"RawLocListEntry::DefaultLocation { data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_default_location\n","sig":null,"attributes":[{"value":"/ DW_LLE_default_location","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595659,"byte_end":595686,"line_start":366,"line_end":366,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":6547},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595797,"byte_end":595805,"line_start":372,"line_end":372,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::loclists::RawLocListEntry::StartEnd","value":"RawLocListEntry::StartEnd { begin, end, data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_end","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595772,"byte_end":595792,"line_start":371,"line_end":371,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":6551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595989,"byte_end":596000,"line_start":381,"line_end":381,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::loclists::RawLocListEntry::StartLength","value":"RawLocListEntry::StartLength { begin, length, data }","parent":{"krate":0,"index":6523},"children":[],"decl_id":null,"docs":" DW_LLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_LLE_start_length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":595961,"byte_end":595984,"line_start":380,"line_end":380,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":6523},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594468,"byte_end":594483,"line_start":319,"line_end":319,"column_start":10,"column_end":25},"name":"RawLocListEntry","qualname":"::read::loclists::RawLocListEntry","value":"pub enum RawLocListEntry<R: Reader> {\n    AddressOrOffsetPair {\n        begin: u64,\n        end: u64,\n        data: Expression<R>,\n    },\n    BaseAddress {\n        addr: u64,\n    },\n    BaseAddressx {\n        addr: DebugAddrIndex<R::Offset>,\n    },\n    StartxEndx {\n        begin: DebugAddrIndex<R::Offset>,\n        end: DebugAddrIndex<R::Offset>,\n        data: Expression<R>,\n    },\n    StartxLength {\n        begin: DebugAddrIndex<R::Offset>,\n        length: u64,\n        data: Expression<R>,\n    },\n    OffsetPair {\n        begin: u64,\n        end: u64,\n        data: Expression<R>,\n    },\n    DefaultLocation {\n        data: Expression<R>,\n    },\n    StartEnd {\n        begin: u64,\n        end: u64,\n        data: Expression<R>,\n    },\n    StartLength {\n        begin: u64,\n        length: u64,\n        data: Expression<R>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6525},{"krate":0,"index":6529},{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6537},{"krate":0,"index":6541},{"krate":0,"index":6545},{"krate":0,"index":6547},{"krate":0,"index":6551}],"decl_id":null,"docs":" A raw entry in .debug_loclists.\n","sig":null,"attributes":[{"value":"/ A raw entry in .debug_loclists.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":594399,"byte_end":594434,"line_start":317,"line_end":317,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":600410,"byte_end":600414,"line_start":482,"line_end":482,"column_start":12,"column_end":16},"name":"next","qualname":"<RawLocListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<RawLocListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next location.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":600352,"byte_end":600398,"line_start":481,"line_end":481,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6561},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601486,"byte_end":601497,"line_start":518,"line_end":518,"column_start":12,"column_end":23},"name":"LocListIter","qualname":"::read::loclists::LocListIter","value":"LocListIter {  }","parent":null,"children":[{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"decl_id":null,"docs":" An iterator over a location list.","sig":null,"attributes":[{"value":"/ An iterator over a location list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601206,"byte_end":601243,"line_start":512,"line_end":512,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601244,"byte_end":601247,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ This iterator internally handles processing of base address selection entries","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601248,"byte_end":601329,"line_start":514,"line_end":514,"column_start":1,"column_end":82}},{"value":"/ and list end entries.  Thus, it only returns location entries that are valid","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601330,"byte_end":601410,"line_start":515,"line_end":515,"column_start":1,"column_end":81}},{"value":"/ and already adjusted for the base address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601411,"byte_end":601457,"line_start":516,"line_end":516,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":602297,"byte_end":602301,"line_start":548,"line_end":548,"column_start":12,"column_end":16},"name":"next","qualname":"<LocListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<LocationListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next location.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":602239,"byte_end":602285,"line_start":547,"line_end":547,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6570},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":605167,"byte_end":605184,"line_start":627,"line_end":627,"column_start":12,"column_end":29},"name":"LocationListEntry","qualname":"::read::loclists::LocationListEntry","value":"LocationListEntry { range, data }","parent":null,"children":[{"krate":0,"index":6572},{"krate":0,"index":6573}],"decl_id":null,"docs":" A location list entry from the `.debug_loc` or `.debug_loclists` sections.\n","sig":null,"attributes":[{"value":"/ A location list entry from the `.debug_loc` or `.debug_loclists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":605026,"byte_end":605104,"line_start":625,"line_end":625,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6572},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":605265,"byte_end":605270,"line_start":629,"line_end":629,"column_start":9,"column_end":14},"name":"range","qualname":"::read::loclists::LocationListEntry::range","value":"read::rnglists::Range","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":" The address range that this location is valid for.\n","sig":null,"attributes":[{"value":"/ The address range that this location is valid for.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":605202,"byte_end":605256,"line_start":628,"line_end":628,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":605347,"byte_end":605351,"line_start":632,"line_end":632,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::LocationListEntry::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":" The data containing a single location description.\n","sig":null,"attributes":[{"value":"/ The data containing a single location description.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":605284,"byte_end":605338,"line_start":631,"line_end":631,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1751},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":635969,"byte_end":635975,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Header","qualname":"::read::lookup::LookupParser::Header","value":"type Header;","parent":{"krate":0,"index":1749},"children":[],"decl_id":null,"docs":" The type of the produced header.\n","sig":null,"attributes":[{"value":"/ The type of the produced header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":635923,"byte_end":635959,"line_start":16,"line_end":16,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1752},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":636026,"byte_end":636031,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Entry","qualname":"::read::lookup::LookupParser::Entry","value":"type Entry;","parent":{"krate":0,"index":1749},"children":[],"decl_id":null,"docs":" The type of the produced entry.\n","sig":null,"attributes":[{"value":"/ The type of the produced entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":635981,"byte_end":636016,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6661},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641866,"byte_end":641873,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::op::DieReference::UnitRef","value":"DieReference::UnitRef(UnitOffset<T>)","parent":{"krate":0,"index":6659},"children":[],"decl_id":null,"docs":" A CU-relative reference.\n","sig":null,"attributes":[{"value":"/ A CU-relative reference.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641833,"byte_end":641861,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6664},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641932,"byte_end":641944,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::op::DieReference::DebugInfoRef","value":"DieReference::DebugInfoRef(DebugInfoOffset<T>)","parent":{"krate":0,"index":6659},"children":[],"decl_id":null,"docs":" A section-relative reference.\n","sig":null,"attributes":[{"value":"/ A section-relative reference.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641894,"byte_end":641927,"line_start":16,"line_end":16,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":6659},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641803,"byte_end":641815,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"DieReference","qualname":"::read::op::DieReference","value":"pub enum DieReference<T = usize> {\n    UnitRef(UnitOffset<T>),\n    DebugInfoRef(DebugInfoOffset<T>),\n}","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6664}],"decl_id":null,"docs":" A reference to a DIE, either relative to the current CU or\n relative to the section.\n","sig":null,"attributes":[{"value":"/ A reference to a DIE, either relative to the current CU or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641657,"byte_end":641719,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ relative to the section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641720,"byte_end":641748,"line_start":11,"line_end":11,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":6689},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642709,"byte_end":642714,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Deref","qualname":"::read::op::Operation::Deref","value":"Operation::Deref { base_type, size, space }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Dereference the topmost value of the stack.\n","sig":null,"attributes":[{"value":"/ Dereference the topmost value of the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642657,"byte_end":642704,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6693},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643086,"byte_end":643090,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Drop","qualname":"::read::op::Operation::Drop","value":"Operation::Drop","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Drop an item from the stack.\n","sig":null,"attributes":[{"value":"/ Drop an item from the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643049,"byte_end":643081,"line_start":47,"line_end":47,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6695},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643249,"byte_end":643253,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Pick","qualname":"::read::op::Operation::Pick","value":"Operation::Pick { index }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Pick an item from the stack and push it on top of the stack.\n This operation handles `DW_OP_pick`, `DW_OP_dup`, and\n `DW_OP_over`.\n","sig":null,"attributes":[{"value":"/ Pick an item from the stack and push it on top of the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643096,"byte_end":643160,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/ This operation handles `DW_OP_pick`, `DW_OP_dup`, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643165,"byte_end":643222,"line_start":50,"line_end":50,"column_start":5,"column_end":62}},{"value":"/ `DW_OP_over`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643227,"byte_end":643244,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6697},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643395,"byte_end":643399,"line_start":57,"line_end":57,"column_start":5,"column_end":9},"name":"Swap","qualname":"::read::op::Operation::Swap","value":"Operation::Swap","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Swap the top two stack items.\n","sig":null,"attributes":[{"value":"/ Swap the top two stack items.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643357,"byte_end":643390,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6699},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643447,"byte_end":643450,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Rot","qualname":"::read::op::Operation::Rot","value":"Operation::Rot","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Rotate the top three stack items.\n","sig":null,"attributes":[{"value":"/ Rotate the top three stack items.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643405,"byte_end":643442,"line_start":58,"line_end":58,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6701},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643513,"byte_end":643516,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"Abs","qualname":"::read::op::Operation::Abs","value":"Operation::Abs","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Take the absolute value of the top of the stack.\n","sig":null,"attributes":[{"value":"/ Take the absolute value of the top of the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643456,"byte_end":643508,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6703},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643580,"byte_end":643583,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"And","qualname":"::read::op::Operation::And","value":"Operation::And","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Bitwise `and` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `and` of the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643522,"byte_end":643575,"line_start":62,"line_end":62,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6705},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643637,"byte_end":643640,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Div","qualname":"::read::op::Operation::Div","value":"Operation::Div","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Divide the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Divide the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643589,"byte_end":643632,"line_start":64,"line_end":64,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6707},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643696,"byte_end":643701,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Minus","qualname":"::read::op::Operation::Minus","value":"Operation::Minus","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Subtract the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Subtract the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643646,"byte_end":643691,"line_start":66,"line_end":66,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6709},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643759,"byte_end":643762,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"Mod","qualname":"::read::op::Operation::Mod","value":"Operation::Mod","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Modulus of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Modulus of the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643707,"byte_end":643754,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6711},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643818,"byte_end":643821,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"Mul","qualname":"::read::op::Operation::Mul","value":"Operation::Mul","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Multiply the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Multiply the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643768,"byte_end":643813,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6713},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643864,"byte_end":643867,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"Neg","qualname":"::read::op::Operation::Neg","value":"Operation::Neg","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Negate the top of the stack.\n","sig":null,"attributes":[{"value":"/ Negate the top of the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643827,"byte_end":643859,"line_start":72,"line_end":72,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6715},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643920,"byte_end":643923,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"Not","qualname":"::read::op::Operation::Not","value":"Operation::Not","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Bitwise `not` of the top of the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `not` of the top of the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643873,"byte_end":643915,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6717},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643986,"byte_end":643988,"line_start":77,"line_end":77,"column_start":5,"column_end":7},"name":"Or","qualname":"::read::op::Operation::Or","value":"Operation::Or","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Bitwise `or` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `or` of the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643929,"byte_end":643981,"line_start":76,"line_end":76,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6719},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644039,"byte_end":644043,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"Plus","qualname":"::read::op::Operation::Plus","value":"Operation::Plus","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Add the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Add the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":643994,"byte_end":644034,"line_start":78,"line_end":78,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":6721},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644107,"byte_end":644119,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"PlusConstant","qualname":"::read::op::Operation::PlusConstant","value":"Operation::PlusConstant { value }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Add a constant to the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Add a constant to the topmost value on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644049,"byte_end":644102,"line_start":80,"line_end":80,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6723},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644311,"byte_end":644314,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Shl","qualname":"::read::op::Operation::Shl","value":"Operation::Shl","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Logical left shift of the 2nd value on the stack by the number\n of bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Logical left shift of the 2nd value on the stack by the number","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644183,"byte_end":644249,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/ of bits given by the topmost value on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644254,"byte_end":644306,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6725},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644441,"byte_end":644444,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Shr","qualname":"::read::op::Operation::Shr","value":"Operation::Shr","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Right shift of the 2nd value on the stack by the number of\n bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Right shift of the 2nd value on the stack by the number of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644320,"byte_end":644382,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/ bits given by the topmost value on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644387,"byte_end":644436,"line_start":89,"line_end":89,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6727},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644581,"byte_end":644585,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Shra","qualname":"::read::op::Operation::Shra","value":"Operation::Shra","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Arithmetic left shift of the 2nd value on the stack by the\n number of bits given by the topmost value on the stack.\n","sig":null,"attributes":[{"value":"/ Arithmetic left shift of the 2nd value on the stack by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644450,"byte_end":644512,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/ number of bits given by the topmost value on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644517,"byte_end":644576,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644649,"byte_end":644652,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"Xor","qualname":"::read::op::Operation::Xor","value":"Operation::Xor","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Bitwise `xor` of the top two values on the stack.\n","sig":null,"attributes":[{"value":"/ Bitwise `xor` of the top two values on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644591,"byte_end":644644,"line_start":94,"line_end":94,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":6731},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644728,"byte_end":644731,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Bra","qualname":"::read::op::Operation::Bra","value":"Operation::Bra { target }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Branch to the target location if the top of stack is nonzero.\n","sig":null,"attributes":[{"value":"/ Branch to the target location if the top of stack is nonzero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644658,"byte_end":644723,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6733},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644877,"byte_end":644879,"line_start":102,"line_end":102,"column_start":5,"column_end":7},"name":"Eq","qualname":"::read::op::Operation::Eq","value":"Operation::Eq","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compare the top two stack values for equality.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values for equality.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644822,"byte_end":644872,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6735},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644938,"byte_end":644940,"line_start":104,"line_end":104,"column_start":5,"column_end":7},"name":"Ge","qualname":"::read::op::Operation::Ge","value":"Operation::Ge","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `>=`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644885,"byte_end":644933,"line_start":103,"line_end":103,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6737},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644998,"byte_end":645000,"line_start":106,"line_end":106,"column_start":5,"column_end":7},"name":"Gt","qualname":"::read::op::Operation::Gt","value":"Operation::Gt","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":644946,"byte_end":644993,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6739},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645059,"byte_end":645061,"line_start":108,"line_end":108,"column_start":5,"column_end":7},"name":"Le","qualname":"::read::op::Operation::Le","value":"Operation::Le","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `<=`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645006,"byte_end":645054,"line_start":107,"line_end":107,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6741},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645119,"byte_end":645121,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"Lt","qualname":"::read::op::Operation::Lt","value":"Operation::Lt","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `<`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645067,"byte_end":645114,"line_start":109,"line_end":109,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6743},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645180,"byte_end":645182,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Ne","qualname":"::read::op::Operation::Ne","value":"Operation::Ne","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `!=`.\n","sig":null,"attributes":[{"value":"/ Compare the top two stack values using `!=`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645127,"byte_end":645175,"line_start":111,"line_end":111,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":6745},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645241,"byte_end":645245,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Skip","qualname":"::read::op::Operation::Skip","value":"Operation::Skip { target }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Unconditional branch to the target location.\n","sig":null,"attributes":[{"value":"/ Unconditional branch to the target location.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645188,"byte_end":645236,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":6747},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645436,"byte_end":645452,"line_start":120,"line_end":120,"column_start":5,"column_end":21},"name":"UnsignedConstant","qualname":"::read::op::Operation::UnsignedConstant","value":"Operation::UnsignedConstant { value }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Push an unsigned constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[{"value":"/ Push an unsigned constant value on the stack.  This handles multiple","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645336,"byte_end":645408,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ DWARF opcodes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645413,"byte_end":645431,"line_start":119,"line_end":119,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":6749},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645614,"byte_end":645628,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"SignedConstant","qualname":"::read::op::Operation::SignedConstant","value":"Operation::SignedConstant { value }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Push a signed constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[{"value":"/ Push a signed constant value on the stack.  This handles multiple","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645517,"byte_end":645586,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ DWARF opcodes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645591,"byte_end":645609,"line_start":125,"line_end":125,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":6751},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645806,"byte_end":645814,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Operation::Register","value":"Operation::Register { register }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Indicate that this piece's location is in the given register.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Indicate that this piece's location is in the given register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645693,"byte_end":645758,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/ Completes the piece or expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645763,"byte_end":645801,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":6753},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646005,"byte_end":646019,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"RegisterOffset","qualname":"::read::op::Operation::RegisterOffset","value":"Operation::RegisterOffset { register, offset, base_type }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Find the value of the given register, add the offset, and then\n push the resulting sum on the stack.\n","sig":null,"attributes":[{"value":"/ Find the value of the given register, add the offset, and then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645889,"byte_end":645955,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ push the resulting sum on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":645960,"byte_end":646000,"line_start":137,"line_end":137,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":6757},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646391,"byte_end":646402,"line_start":148,"line_end":148,"column_start":5,"column_end":16},"name":"FrameOffset","qualname":"::read::op::Operation::FrameOffset","value":"Operation::FrameOffset { offset }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compute the frame base (using `DW_AT_frame_base`), add the\n given offset, and then push the resulting sum on the stack.\n","sig":null,"attributes":[{"value":"/ Compute the frame base (using `DW_AT_frame_base`), add the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646256,"byte_end":646318,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ given offset, and then push the resulting sum on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646323,"byte_end":646386,"line_start":147,"line_end":147,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6759},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646490,"byte_end":646493,"line_start":153,"line_end":153,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::op::Operation::Nop","value":"Operation::Nop","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" No operation.\n","sig":null,"attributes":[{"value":"/ No operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646468,"byte_end":646485,"line_start":152,"line_end":152,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6761},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646545,"byte_end":646562,"line_start":155,"line_end":155,"column_start":5,"column_end":22},"name":"PushObjectAddress","qualname":"::read::op::Operation::PushObjectAddress","value":"Operation::PushObjectAddress","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Push the object address on the stack.\n","sig":null,"attributes":[{"value":"/ Push the object address on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646499,"byte_end":646540,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":6763},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646717,"byte_end":646721,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"Call","qualname":"::read::op::Operation::Call","value":"Operation::Call { offset }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression as a subroutine.  The expression\n comes from the `DW_AT_location` attribute of the indicated\n DIE.\n","sig":null,"attributes":[{"value":"/ Evaluate a DWARF expression as a subroutine.  The expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646568,"byte_end":646632,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/ comes from the `DW_AT_location` attribute of the indicated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646637,"byte_end":646699,"line_start":157,"line_end":157,"column_start":5,"column_end":67}},{"value":"/ DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646704,"byte_end":646712,"line_start":158,"line_end":158,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6765},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646890,"byte_end":646893,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"TLS","qualname":"::read::op::Operation::TLS","value":"Operation::TLS","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compute the address of a thread-local variable and push it on\n the stack.\n","sig":null,"attributes":[{"value":"/ Compute the address of a thread-local variable and push it on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646801,"byte_end":646866,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/ the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646871,"byte_end":646885,"line_start":164,"line_end":164,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6767},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646960,"byte_end":646972,"line_start":167,"line_end":167,"column_start":5,"column_end":17},"name":"CallFrameCFA","qualname":"::read::op::Operation::CallFrameCFA","value":"Operation::CallFrameCFA","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Compute the call frame CFA and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Compute the call frame CFA and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646899,"byte_end":646955,"line_start":166,"line_end":166,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":6769},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647005,"byte_end":647010,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Piece","qualname":"::read::op::Operation::Piece","value":"Operation::Piece { size_in_bits, bit_offset }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Terminate a piece.\n","sig":null,"attributes":[{"value":"/ Terminate a piece.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":646978,"byte_end":647000,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":6772},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647454,"byte_end":647467,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"ImplicitValue","qualname":"::read::op::Operation::ImplicitValue","value":"Operation::ImplicitValue { data }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_implicit_value`.\n The object has no location, but has a known constant value.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_implicit_value`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647300,"byte_end":647338,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/ The object has no location, but has a known constant value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647343,"byte_end":647406,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/ Completes the piece or expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647411,"byte_end":647449,"line_start":179,"line_end":179,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6774},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647698,"byte_end":647708,"line_start":187,"line_end":187,"column_start":5,"column_end":15},"name":"StackValue","qualname":"::read::op::Operation::StackValue","value":"Operation::StackValue","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_stack_value`.\n The object has no location, but its value is at the top of the stack.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_stack_value`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647537,"byte_end":647572,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ The object has no location, but its value is at the top of the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647577,"byte_end":647650,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ Completes the piece or expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647655,"byte_end":647693,"line_start":186,"line_end":186,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":6776},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647927,"byte_end":647942,"line_start":192,"line_end":192,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Operation::ImplicitPointer","value":"Operation::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_implicit_pointer`. The object is a pointer to\n a value which has no actual location, such as an implicit value or\n a stack value.\n Completes the piece or expression.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_implicit_pointer`. The object is a pointer to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647714,"byte_end":647781,"line_start":188,"line_end":188,"column_start":5,"column_end":72}},{"value":"/ a value which has no actual location, such as an implicit value or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647786,"byte_end":647856,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ a stack value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647861,"byte_end":647879,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/ Completes the piece or expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":647884,"byte_end":647922,"line_start":191,"line_end":191,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":6779},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648328,"byte_end":648338,"line_start":200,"line_end":200,"column_start":5,"column_end":15},"name":"EntryValue","qualname":"::read::op::Operation::EntryValue","value":"Operation::EntryValue { expression }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_entry_value`. Evaluate an expression at the entry to\n the current subprogram, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_entry_value`. Evaluate an expression at the entry to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648191,"byte_end":648265,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ the current subprogram, and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648270,"byte_end":648323,"line_start":199,"line_end":199,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":6781},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648722,"byte_end":648734,"line_start":208,"line_end":208,"column_start":5,"column_end":17},"name":"ParameterRef","qualname":"::read::op::Operation::ParameterRef","value":"Operation::ParameterRef { offset }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_GNU_parameter_ref`. This represents a parameter that was\n optimized out. The offset points to the definition of the parameter, and is\n matched to the `DW_TAG_GNU_call_site_parameter` in the caller that also\n points to the same definition of the parameter.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_GNU_parameter_ref`. This represents a parameter that was","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648419,"byte_end":648497,"line_start":204,"line_end":204,"column_start":5,"column_end":83}},{"value":"/ optimized out. The offset points to the definition of the parameter, and is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648502,"byte_end":648581,"line_start":205,"line_end":205,"column_start":5,"column_end":84}},{"value":"/ matched to the `DW_TAG_GNU_call_site_parameter` in the caller that also","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648586,"byte_end":648661,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ points to the same definition of the parameter.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648666,"byte_end":648717,"line_start":207,"line_end":207,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":6783},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648911,"byte_end":648918,"line_start":214,"line_end":214,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Operation::Address","value":"Operation::Address { address }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_addr`.\n Relocate the address if needed, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_addr`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648812,"byte_end":648840,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ Relocate the address if needed, and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648845,"byte_end":648906,"line_start":213,"line_end":213,"column_start":5,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":6785},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649146,"byte_end":649158,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"AddressIndex","qualname":"::read::op::Operation::AddressIndex","value":"Operation::AddressIndex { index }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_addrx`.\n Read the address at the given index in `.debug_addr, relocate the address if needed,\n and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_addrx`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":648985,"byte_end":649014,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/ Read the address at the given index in `.debug_addr, relocate the address if needed,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649019,"byte_end":649107,"line_start":219,"line_end":219,"column_start":5,"column_end":93}},{"value":"/ and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649112,"byte_end":649141,"line_start":220,"line_end":220,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":6787},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649425,"byte_end":649438,"line_start":228,"line_end":228,"column_start":5,"column_end":18},"name":"ConstantIndex","qualname":"::read::op::Operation::ConstantIndex","value":"Operation::ConstantIndex { index }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_constx`.\n Read the address at the given index in `.debug_addr, and push it on the stack.\n Do not relocate the address.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_constx`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649266,"byte_end":649296,"line_start":225,"line_end":225,"column_start":5,"column_end":35}},{"value":"/ Read the address at the given index in `.debug_addr, and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649301,"byte_end":649383,"line_start":226,"line_end":226,"column_start":5,"column_end":87}},{"value":"/ Do not relocate the address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649388,"byte_end":649420,"line_start":227,"line_end":227,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6789},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649676,"byte_end":649688,"line_start":234,"line_end":234,"column_start":5,"column_end":17},"name":"TypedLiteral","qualname":"::read::op::Operation::TypedLiteral","value":"Operation::TypedLiteral { base_type, value }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_const_type`.\n Interpret the value bytes as a constant of a given type, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_const_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649546,"byte_end":649580,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/ Interpret the value bytes as a constant of a given type, and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649585,"byte_end":649671,"line_start":233,"line_end":233,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":6792},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649953,"byte_end":649960,"line_start":242,"line_end":242,"column_start":5,"column_end":12},"name":"Convert","qualname":"::read::op::Operation::Convert","value":"Operation::Convert { base_type }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_convert`.\n Pop the top stack entry, convert it to a different type, and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_convert`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649826,"byte_end":649857,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/ Pop the top stack entry, convert it to a different type, and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":649862,"byte_end":649948,"line_start":241,"line_end":241,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":6794},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650213,"byte_end":650224,"line_start":249,"line_end":249,"column_start":5,"column_end":16},"name":"Reinterpret","qualname":"::read::op::Operation::Reinterpret","value":"Operation::Reinterpret { base_type }","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Represents `DW_OP_reinterpret`.\n Pop the top stack entry, reinterpret the bits in its value as a different type,\n and push it on the stack.\n","sig":null,"attributes":[{"value":"/ Represents `DW_OP_reinterpret`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650051,"byte_end":650086,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ Pop the top stack entry, reinterpret the bits in its value as a different type,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650091,"byte_end":650174,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/ and push it on the stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650179,"byte_end":650208,"line_start":248,"line_end":248,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6686},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642542,"byte_end":642551,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"Operation","qualname":"::read::op::Operation","value":"pub enum Operation<R, Offset = <R as Reader>::Offset> where R: Reader<Offset =\n         Offset>, Offset: ReaderOffset {\n    Deref {\n        base_type: UnitOffset<Offset>,\n        size: u8,\n        space: bool,\n    },\n    Drop,\n    Pick {\n        index: u8,\n    },\n    Swap,\n    Rot,\n    Abs,\n    And,\n    Div,\n    Minus,\n    Mod,\n    Mul,\n    Neg,\n    Not,\n    Or,\n    Plus,\n    PlusConstant {\n        value: u64,\n    },\n    Shl,\n    Shr,\n    Shra,\n    Xor,\n    Bra {\n        target: i16,\n    },\n    Eq,\n    Ge,\n    Gt,\n    Le,\n    Lt,\n    Ne,\n    Skip {\n        target: i16,\n    },\n    UnsignedConstant {\n        value: u64,\n    },\n    SignedConstant {\n        value: i64,\n    },\n    Register {\n        register: Register,\n    },\n    RegisterOffset {\n        register: Register,\n        offset: i64,\n        base_type: UnitOffset<Offset>,\n    },\n    FrameOffset {\n        offset: i64,\n    },\n    Nop,\n    PushObjectAddress,\n    Call {\n        offset: DieReference<Offset>,\n    },\n    TLS,\n    CallFrameCFA,\n    Piece {\n        size_in_bits: u64,\n        bit_offset: Option<u64>,\n    },\n    ImplicitValue {\n        data: R,\n    },\n    StackValue,\n    ImplicitPointer {\n        value: DebugInfoOffset<Offset>,\n        byte_offset: i64,\n    },\n    EntryValue {\n        expression: R,\n    },\n    ParameterRef {\n        offset: UnitOffset<Offset>,\n    },\n    Address {\n        address: u64,\n    },\n    AddressIndex {\n        index: DebugAddrIndex<Offset>,\n    },\n    ConstantIndex {\n        index: DebugAddrIndex<Offset>,\n    },\n    TypedLiteral {\n        base_type: UnitOffset<Offset>,\n        value: R,\n    },\n    Convert {\n        base_type: UnitOffset<Offset>,\n    },\n    Reinterpret {\n        base_type: UnitOffset<Offset>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6689},{"krate":0,"index":6693},{"krate":0,"index":6695},{"krate":0,"index":6697},{"krate":0,"index":6699},{"krate":0,"index":6701},{"krate":0,"index":6703},{"krate":0,"index":6705},{"krate":0,"index":6707},{"krate":0,"index":6709},{"krate":0,"index":6711},{"krate":0,"index":6713},{"krate":0,"index":6715},{"krate":0,"index":6717},{"krate":0,"index":6719},{"krate":0,"index":6721},{"krate":0,"index":6723},{"krate":0,"index":6725},{"krate":0,"index":6727},{"krate":0,"index":6729},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":6735},{"krate":0,"index":6737},{"krate":0,"index":6739},{"krate":0,"index":6741},{"krate":0,"index":6743},{"krate":0,"index":6745},{"krate":0,"index":6747},{"krate":0,"index":6749},{"krate":0,"index":6751},{"krate":0,"index":6753},{"krate":0,"index":6757},{"krate":0,"index":6759},{"krate":0,"index":6761},{"krate":0,"index":6763},{"krate":0,"index":6765},{"krate":0,"index":6767},{"krate":0,"index":6769},{"krate":0,"index":6772},{"krate":0,"index":6774},{"krate":0,"index":6776},{"krate":0,"index":6779},{"krate":0,"index":6781},{"krate":0,"index":6783},{"krate":0,"index":6785},{"krate":0,"index":6787},{"krate":0,"index":6789},{"krate":0,"index":6792},{"krate":0,"index":6794}],"decl_id":null,"docs":" A single decoded DWARF expression operation.","sig":null,"attributes":[{"value":"/ A single decoded DWARF expression operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":641969,"byte_end":642017,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642018,"byte_end":642021,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ DWARF expression evaluation is done in two parts: first the raw","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642022,"byte_end":642089,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ bytes of the next part of the expression are decoded; and then the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642090,"byte_end":642160,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ decoded operation is evaluated.  This approach lets other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642161,"byte_end":642222,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ consumers inspect the DWARF expression without reimplementing the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642223,"byte_end":642292,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ decoding operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642293,"byte_end":642316,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642317,"byte_end":642320,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Multiple DWARF opcodes may decode into a single `Operation`.  For","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642321,"byte_end":642390,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ example, both `DW_OP_deref` and `DW_OP_xderef` are represented","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642391,"byte_end":642457,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ using `Operation::Deref`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":642458,"byte_end":642487,"line_start":30,"line_end":30,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6840},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650829,"byte_end":650834,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Empty","qualname":"::read::op::Location::Empty","value":"Location::Empty","parent":{"krate":0,"index":6837},"children":[],"decl_id":null,"docs":" The piece is empty.  Ordinarily this means the piece has been\n optimized away.\n","sig":null,"attributes":[{"value":"/ The piece is empty.  Ordinarily this means the piece has been","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650735,"byte_end":650800,"line_start":270,"line_end":270,"column_start":5,"column_end":70}},{"value":"/ optimized away.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650805,"byte_end":650824,"line_start":271,"line_end":271,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":6842},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650882,"byte_end":650890,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Location::Register","value":"Location::Register { register }","parent":{"krate":0,"index":6837},"children":[],"decl_id":null,"docs":" The piece is found in a register.\n","sig":null,"attributes":[{"value":"/ The piece is found in a register.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650840,"byte_end":650877,"line_start":273,"line_end":273,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":6844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651003,"byte_end":651010,"line_start":279,"line_end":279,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Location::Address","value":"Location::Address { address }","parent":{"krate":0,"index":6837},"children":[],"decl_id":null,"docs":" The piece is found in memory.\n","sig":null,"attributes":[{"value":"/ The piece is found in memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650965,"byte_end":650998,"line_start":278,"line_end":278,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":6846},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651129,"byte_end":651134,"line_start":284,"line_end":284,"column_start":5,"column_end":10},"name":"Value","qualname":"::read::op::Location::Value","value":"Location::Value { value }","parent":{"krate":0,"index":6837},"children":[],"decl_id":null,"docs":" The piece has no location but its value is known.\n","sig":null,"attributes":[{"value":"/ The piece has no location but its value is known.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651071,"byte_end":651124,"line_start":283,"line_end":283,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":6848},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651250,"byte_end":651255,"line_start":289,"line_end":289,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::read::op::Location::Bytes","value":"Location::Bytes { value }","parent":{"krate":0,"index":6837},"children":[],"decl_id":null,"docs":" The piece is represented by some constant bytes.\n","sig":null,"attributes":[{"value":"/ The piece is represented by some constant bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651193,"byte_end":651245,"line_start":288,"line_end":288,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":6850},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651382,"byte_end":651397,"line_start":294,"line_end":294,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Location::ImplicitPointer","value":"Location::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":6837},"children":[],"decl_id":null,"docs":" The piece is a pointer to a value which has no actual location.\n","sig":null,"attributes":[{"value":"/ The piece is a pointer to a value which has no actual location.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651310,"byte_end":651377,"line_start":293,"line_end":293,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650621,"byte_end":650629,"line_start":265,"line_end":265,"column_start":10,"column_end":18},"name":"Location","qualname":"::read::op::Location","value":"pub enum Location<R, Offset = <R as Reader>::Offset> where R: Reader<Offset =\n         Offset>, Offset: ReaderOffset {\n    Empty,\n    Register {\n        register: Register,\n    },\n    Address {\n        address: u64,\n    },\n    Value {\n        value: Value,\n    },\n    Bytes {\n        value: R,\n    },\n    ImplicitPointer {\n        value: DebugInfoOffset<Offset>,\n        byte_offset: i64,\n    },\n}","parent":null,"children":[{"krate":0,"index":6840},{"krate":0,"index":6842},{"krate":0,"index":6844},{"krate":0,"index":6846},{"krate":0,"index":6848},{"krate":0,"index":6850}],"decl_id":null,"docs":" A single location of a piece of the result of a DWARF expression.\n","sig":null,"attributes":[{"value":"/ A single location of a piece of the result of a DWARF expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":650501,"byte_end":650570,"line_start":263,"line_end":263,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651801,"byte_end":651809,"line_start":308,"line_end":308,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Location<R, Offset>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the piece is empty.\n","sig":null,"attributes":[{"value":"/ Return true if the piece is empty.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651751,"byte_end":651789,"line_start":307,"line_end":307,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":6872},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652060,"byte_end":652065,"line_start":319,"line_end":319,"column_start":12,"column_end":17},"name":"Piece","qualname":"::read::op::Piece","value":"Piece { size_in_bits, bit_offset, location }","parent":null,"children":[{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877}],"decl_id":null,"docs":" The description of a single piece of the result of a DWARF\n expression.\n","sig":null,"attributes":[{"value":"/ The description of a single piece of the result of a DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651929,"byte_end":651991,"line_start":316,"line_end":316,"column_start":1,"column_end":63}},{"value":"/ expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651992,"byte_end":652007,"line_start":317,"line_end":317,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":6875},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652306,"byte_end":652318,"line_start":326,"line_end":326,"column_start":9,"column_end":21},"name":"size_in_bits","qualname":"::read::op::Piece::size_in_bits","value":"core::option::Option<u64>","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":" If given, the size of the piece in bits.  If `None`, there\n must be only one piece whose size is all of the object.\n","sig":null,"attributes":[{"value":"/ If given, the size of the piece in bits.  If `None`, there","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652171,"byte_end":652233,"line_start":324,"line_end":324,"column_start":5,"column_end":67}},{"value":"/ must be only one piece whose size is all of the object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652238,"byte_end":652297,"line_start":325,"line_end":325,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6876},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652944,"byte_end":652954,"line_start":338,"line_end":338,"column_start":9,"column_end":19},"name":"bit_offset","qualname":"::read::op::Piece::bit_offset","value":"core::option::Option<u64>","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":" If given, the bit offset of the piece within the location.\n If the location is a `Location::Register` or `Location::Value`,\n then this offset is from the least significant bit end of\n the register or value.\n If the location is a `Location::Address` then the offset uses\n the bit numbering and direction conventions of the language\n and target system.","sig":null,"attributes":[{"value":"/ If given, the bit offset of the piece within the location.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652337,"byte_end":652399,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/ If the location is a `Location::Register` or `Location::Value`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652404,"byte_end":652471,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/ then this offset is from the least significant bit end of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652476,"byte_end":652537,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/ the register or value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652542,"byte_end":652568,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ If the location is a `Location::Address` then the offset uses","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652573,"byte_end":652638,"line_start":331,"line_end":331,"column_start":5,"column_end":70}},{"value":"/ the bit numbering and direction conventions of the language","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652643,"byte_end":652706,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ and target system.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652711,"byte_end":652733,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652738,"byte_end":652741,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If `None`, the piece starts at the location. If the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652746,"byte_end":652801,"line_start":335,"line_end":335,"column_start":5,"column_end":60}},{"value":"/ location is a register whose size is larger than the piece,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652806,"byte_end":652869,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ then placement within the register is defined by the ABI.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652874,"byte_end":652935,"line_start":337,"line_end":337,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653018,"byte_end":653026,"line_start":340,"line_end":340,"column_start":9,"column_end":17},"name":"location","qualname":"::read::op::Piece::location","value":"read::op::Location<R, Offset>","parent":{"krate":0,"index":6872},"children":[],"decl_id":null,"docs":" Where this piece is to be found.\n","sig":null,"attributes":[{"value":"/ Where this piece is to be found.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":652973,"byte_end":653009,"line_start":339,"line_end":339,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":654065,"byte_end":654070,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"parse","qualname":"<Operation<R, Offset>>::parse","value":"pub fn parse(&mut R, Encoding) -> Result<Operation<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single DWARF expression operation.","sig":null,"attributes":[{"value":"/ Parse a single DWARF expression operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653724,"byte_end":653770,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653775,"byte_end":653778,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This is useful when examining a DWARF expression for reasons other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653783,"byte_end":653853,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ than direct evaluation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653858,"byte_end":653885,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653890,"byte_end":653893,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ `bytes` points to a the operation to decode.  It should point into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653898,"byte_end":653968,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ the same array as `bytecode`, which should be the entire","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653973,"byte_end":654033,"line_start":371,"line_end":371,"column_start":5,"column_end":65}},{"value":"/ expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":654038,"byte_end":654053,"line_start":372,"line_end":372,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6948},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670659,"byte_end":670667,"line_start":786,"line_end":786,"column_start":5,"column_end":13},"name":"Complete","qualname":"::read::op::EvaluationResult::Complete","value":"EvaluationResult::Complete","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` is complete, and `Evaluation::result()` can be called.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` is complete, and `Evaluation::result()` can be called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670579,"byte_end":670654,"line_start":785,"line_end":785,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":6950},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670889,"byte_end":670903,"line_start":790,"line_end":790,"column_start":5,"column_end":19},"name":"RequiresMemory","qualname":"::read::op::EvaluationResult::RequiresMemory","value":"EvaluationResult::RequiresMemory { address, size, space, base_type }","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from memory to proceed further.  Once the\n caller determines what value to provide it should resume the `Evaluation`\n by calling `Evaluation::resume_with_memory`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from memory to proceed further.  Once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670673,"byte_end":670749,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/ caller determines what value to provide it should resume the `Evaluation`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670754,"byte_end":670831,"line_start":788,"line_end":788,"column_start":5,"column_end":82}},{"value":"/ by calling `Evaluation::resume_with_memory`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670836,"byte_end":670884,"line_start":789,"line_end":789,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":6955},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671564,"byte_end":671580,"line_start":804,"line_end":804,"column_start":5,"column_end":21},"name":"RequiresRegister","qualname":"::read::op::EvaluationResult::RequiresRegister","value":"EvaluationResult::RequiresRegister { register, base_type }","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from a register to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_register`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from a register to proceed further.  Once","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671342,"byte_end":671418,"line_start":801,"line_end":801,"column_start":5,"column_end":81}},{"value":"/ the caller determines what value to provide it should resume the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671423,"byte_end":671491,"line_start":802,"line_end":802,"column_start":5,"column_end":73}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_register`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671496,"byte_end":671559,"line_start":803,"line_end":803,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6958},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672144,"byte_end":672161,"line_start":815,"line_end":815,"column_start":5,"column_end":22},"name":"RequiresFrameBase","qualname":"::read::op::EvaluationResult::RequiresFrameBase","value":"EvaluationResult::RequiresFrameBase","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the frame base address to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame\n base address is the address produced by the location description in the\n `DW_AT_frame_base` attribute of the current function.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the frame base address to proceed further.  Once","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671768,"byte_end":671843,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/ the caller determines what value to provide it should resume the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671848,"byte_end":671916,"line_start":811,"line_end":811,"column_start":5,"column_end":73}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":671921,"byte_end":671997,"line_start":812,"line_end":812,"column_start":5,"column_end":81}},{"value":"/ base address is the address produced by the location description in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672002,"byte_end":672077,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ `DW_AT_frame_base` attribute of the current function.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672082,"byte_end":672139,"line_start":814,"line_end":814,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6960},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672377,"byte_end":672388,"line_start":819,"line_end":819,"column_start":5,"column_end":16},"name":"RequiresTls","qualname":"::read::op::EvaluationResult::RequiresTls","value":"EvaluationResult::RequiresTls(u64)","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from TLS to proceed further.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_tls`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs a value from TLS to proceed further.  Once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672167,"byte_end":672240,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ caller determines what value to provide it should resume the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672245,"byte_end":672309,"line_start":817,"line_end":817,"column_start":5,"column_end":69}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_tls`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672314,"byte_end":672372,"line_start":818,"line_end":818,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6963},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672611,"byte_end":672631,"line_start":823,"line_end":823,"column_start":5,"column_end":25},"name":"RequiresCallFrameCfa","qualname":"::read::op::EvaluationResult::RequiresCallFrameCfa","value":"EvaluationResult::RequiresCallFrameCfa","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the CFA to proceed further.  Once the caller\n determines what value to provide it should resume the `Evaluation` by\n calling `Evaluation::resume_with_call_frame_cfa`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the CFA to proceed further.  Once the caller","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672399,"byte_end":672470,"line_start":820,"line_end":820,"column_start":5,"column_end":76}},{"value":"/ determines what value to provide it should resume the `Evaluation` by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672475,"byte_end":672548,"line_start":821,"line_end":821,"column_start":5,"column_end":78}},{"value":"/ calling `Evaluation::resume_with_call_frame_cfa`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672553,"byte_end":672606,"line_start":822,"line_end":822,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6965},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672889,"byte_end":672907,"line_start":828,"line_end":828,"column_start":5,"column_end":23},"name":"RequiresAtLocation","qualname":"::read::op::EvaluationResult::RequiresAtLocation","value":"EvaluationResult::RequiresAtLocation(DieReference<R::Offset>)","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the DWARF expression at the given location to\n proceed further.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_at_location`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the DWARF expression at the given location to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672637,"byte_end":672709,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ proceed further.  Once the caller determines what value to provide it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672714,"byte_end":672787,"line_start":825,"line_end":825,"column_start":5,"column_end":78}},{"value":"/ should resume the `Evaluation` by calling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672792,"byte_end":672837,"line_start":826,"line_end":826,"column_start":5,"column_end":50}},{"value":"/ `Evaluation::resume_with_at_location`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672842,"byte_end":672884,"line_start":827,"line_end":827,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6968},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673225,"byte_end":673243,"line_start":833,"line_end":833,"column_start":5,"column_end":23},"name":"RequiresEntryValue","qualname":"::read::op::EvaluationResult::RequiresEntryValue","value":"EvaluationResult::RequiresEntryValue(Expression<R>)","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value produced by evaluating a DWARF\n expression at the entry point of the current subprogram.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_entry_value`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the value produced by evaluating a DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":672938,"byte_end":673005,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/ expression at the entry point of the current subprogram.  Once the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673010,"byte_end":673080,"line_start":830,"line_end":830,"column_start":5,"column_end":75}},{"value":"/ caller determines what value to provide it should resume the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673085,"byte_end":673149,"line_start":831,"line_end":831,"column_start":5,"column_end":69}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_entry_value`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673154,"byte_end":673220,"line_start":832,"line_end":832,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6971},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673538,"byte_end":673558,"line_start":838,"line_end":838,"column_start":5,"column_end":25},"name":"RequiresParameterRef","qualname":"::read::op::EvaluationResult::RequiresParameterRef","value":"EvaluationResult::RequiresParameterRef(UnitOffset<R::Offset>)","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value of the parameter at the given location\n in the current function's caller.  Once the caller determines what value\n to provide it should resume the `Evaluation` by calling\n `Evaluation::resume_with_parameter_ref`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the value of the parameter at the given location","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673264,"byte_end":673339,"line_start":834,"line_end":834,"column_start":5,"column_end":80}},{"value":"/ in the current function's caller.  Once the caller determines what value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673344,"byte_end":673420,"line_start":835,"line_end":835,"column_start":5,"column_end":81}},{"value":"/ to provide it should resume the `Evaluation` by calling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673425,"byte_end":673484,"line_start":836,"line_end":836,"column_start":5,"column_end":64}},{"value":"/ `Evaluation::resume_with_parameter_ref`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673489,"byte_end":673533,"line_start":837,"line_end":837,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6974},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673820,"byte_end":673844,"line_start":842,"line_end":842,"column_start":5,"column_end":29},"name":"RequiresRelocatedAddress","qualname":"::read::op::EvaluationResult::RequiresRelocatedAddress","value":"EvaluationResult::RequiresRelocatedAddress(u64)","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address to be relocated to proceed further.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_relocated_address`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs an address to be relocated to proceed further.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673587,"byte_end":673660,"line_start":839,"line_end":839,"column_start":5,"column_end":78}},{"value":"/ Once the caller determines what value to provide it should resume the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673665,"byte_end":673738,"line_start":840,"line_end":840,"column_start":5,"column_end":78}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_relocated_address`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673743,"byte_end":673815,"line_start":841,"line_end":841,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":6977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674134,"byte_end":674156,"line_start":847,"line_end":847,"column_start":5,"column_end":27},"name":"RequiresIndexedAddress","qualname":"::read::op::EvaluationResult::RequiresIndexedAddress","value":"EvaluationResult::RequiresIndexedAddress { index, relocate }","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address from the `.debug_addr` section.\n This address may also need to be relocated.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_indexed_address`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs an address from the `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673855,"byte_end":673924,"line_start":843,"line_end":843,"column_start":5,"column_end":74}},{"value":"/ This address may also need to be relocated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673929,"byte_end":673976,"line_start":844,"line_end":844,"column_start":5,"column_end":52}},{"value":"/ Once the caller determines what value to provide it should resume the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":673981,"byte_end":674054,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ `Evaluation` by calling `Evaluation::resume_with_indexed_address`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674059,"byte_end":674129,"line_start":846,"line_end":846,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6980},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674684,"byte_end":674700,"line_start":858,"line_end":858,"column_start":5,"column_end":21},"name":"RequiresBaseType","qualname":"::read::op::EvaluationResult::RequiresBaseType","value":"EvaluationResult::RequiresBaseType(UnitOffset<R::Offset>)","parent":{"krate":0,"index":6946},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the `ValueType` for the base type DIE at\n the give unit offset.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_base_type`.\n","sig":null,"attributes":[{"value":"/ The `Evaluation` needs the `ValueType` for the base type DIE at","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674434,"byte_end":674501,"line_start":854,"line_end":854,"column_start":5,"column_end":72}},{"value":"/ the give unit offset.  Once the caller determines what value to provide it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674506,"byte_end":674584,"line_start":855,"line_end":855,"column_start":5,"column_end":83}},{"value":"/ should resume the `Evaluation` by calling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674589,"byte_end":674634,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ `Evaluation::resume_with_base_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674639,"byte_end":674679,"line_start":857,"line_end":857,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":6946},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670545,"byte_end":670561,"line_start":784,"line_end":784,"column_start":10,"column_end":26},"name":"EvaluationResult","qualname":"::read::op::EvaluationResult","value":"pub enum EvaluationResult<R: Reader> {\n    Complete,\n    RequiresMemory {\n        address: u64,\n        size: u8,\n        space: Option<u64>,\n        base_type: UnitOffset<R::Offset>,\n    },\n    RequiresRegister {\n        register: Register,\n        base_type: UnitOffset<R::Offset>,\n    },\n    RequiresFrameBase,\n    RequiresTls(u64),\n    RequiresCallFrameCfa,\n    RequiresAtLocation(DieReference<R::Offset>),\n    RequiresEntryValue(Expression<R>),\n    RequiresParameterRef(UnitOffset<R::Offset>),\n    RequiresRelocatedAddress(u64),\n    RequiresIndexedAddress {\n        index: DebugAddrIndex<R::Offset>,\n        relocate: bool,\n    },\n    RequiresBaseType(UnitOffset<R::Offset>),\n}","parent":null,"children":[{"krate":0,"index":6948},{"krate":0,"index":6950},{"krate":0,"index":6955},{"krate":0,"index":6958},{"krate":0,"index":6960},{"krate":0,"index":6963},{"krate":0,"index":6965},{"krate":0,"index":6968},{"krate":0,"index":6971},{"krate":0,"index":6974},{"krate":0,"index":6977},{"krate":0,"index":6980}],"decl_id":null,"docs":" The state of an `Evaluation` after evaluating a DWARF expression.\n The evaluation is either `Complete`, or it requires more data\n to continue, as described by the variant.\n","sig":null,"attributes":[{"value":"/ The state of an `Evaluation` after evaluating a DWARF expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670326,"byte_end":670395,"line_start":780,"line_end":780,"column_start":1,"column_end":70}},{"value":"/ The evaluation is either `Complete`, or it requires more data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670396,"byte_end":670461,"line_start":781,"line_end":781,"column_start":1,"column_end":66}},{"value":"/ to continue, as described by the variant.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":670462,"byte_end":670507,"line_start":782,"line_end":782,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6992},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674855,"byte_end":674865,"line_start":863,"line_end":863,"column_start":12,"column_end":22},"name":"Expression","qualname":"::read::op::Expression","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bytecode for a DWARF expression or location description.\n","sig":null,"attributes":[{"value":"/ The bytecode for a DWARF expression or location description.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674728,"byte_end":674792,"line_start":861,"line_end":861,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6995},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674877,"byte_end":674882,"line_start":863,"line_end":863,"column_start":34,"column_end":39},"name":"0","qualname":"::read::op::Expression::0","value":"R","parent":{"krate":0,"index":6992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675736,"byte_end":675746,"line_start":885,"line_end":885,"column_start":12,"column_end":22},"name":"evaluation","qualname":"<Expression<R>>::evaluation","value":"pub fn evaluation(Self, Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an evaluation for this expression.","sig":null,"attributes":[{"value":"/ Create an evaluation for this expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674922,"byte_end":674967,"line_start":866,"line_end":866,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674972,"byte_end":674975,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The `encoding` is determined by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674980,"byte_end":675019,"line_start":868,"line_end":868,"column_start":5,"column_end":44}},{"value":"/ [`CompilationUnitHeader`](struct.CompilationUnitHeader.html) or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675024,"byte_end":675091,"line_start":869,"line_end":869,"column_start":5,"column_end":72}},{"value":"/ [`TypeUnitHeader`](struct.TypeUnitHeader.html) that this expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675096,"byte_end":675167,"line_start":870,"line_end":870,"column_start":5,"column_end":76}},{"value":"/ relates to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675172,"byte_end":675187,"line_start":871,"line_end":871,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675192,"byte_end":675195,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675200,"byte_end":675214,"line_start":873,"line_end":873,"column_start":5,"column_end":19}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675219,"byte_end":675237,"line_start":874,"line_end":874,"column_start":5,"column_end":23}},{"value":"/ use gimli::Expression;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675242,"byte_end":675268,"line_start":875,"line_end":875,"column_start":5,"column_end":31}},{"value":"/ # let endian = gimli::LittleEndian;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675273,"byte_end":675312,"line_start":876,"line_end":876,"column_start":5,"column_end":44}},{"value":"/ # let debug_info = gimli::DebugInfo::from(gimli::EndianSlice::new(&[], endian));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675317,"byte_end":675401,"line_start":877,"line_end":877,"column_start":5,"column_end":89}},{"value":"/ # let unit = debug_info.units().next().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675406,"byte_end":675467,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/ # let bytecode = gimli::EndianSlice::new(&[], endian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675472,"byte_end":675530,"line_start":879,"line_end":879,"column_start":5,"column_end":63}},{"value":"/ let expression = gimli::Expression(bytecode);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675535,"byte_end":675584,"line_start":880,"line_end":880,"column_start":5,"column_end":54}},{"value":"/ let mut eval = expression.evaluation(unit.encoding());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675589,"byte_end":675647,"line_start":881,"line_end":881,"column_start":5,"column_end":63}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675652,"byte_end":675698,"line_start":882,"line_end":882,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675703,"byte_end":675710,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675715,"byte_end":675724,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675917,"byte_end":675927,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"operations","qualname":"<Expression<R>>::operations","value":"pub fn operations(Self, Encoding) -> OperationIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the operations in the expression.\n","sig":null,"attributes":[{"value":"/ Return an iterator for the operations in the expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":675845,"byte_end":675905,"line_start":889,"line_end":889,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":7019},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676162,"byte_end":676175,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"OperationIter","qualname":"::read::op::OperationIter","value":"OperationIter {  }","parent":null,"children":[{"krate":0,"index":7021},{"krate":0,"index":7022}],"decl_id":null,"docs":" An iterator for the operations in an expression.\n","sig":null,"attributes":[{"value":"/ An iterator for the operations in an expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676068,"byte_end":676120,"line_start":898,"line_end":898,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676326,"byte_end":676330,"line_start":907,"line_end":907,"column_start":12,"column_end":16},"name":"next","qualname":"<OperationIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<Operation<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Read the next operation in an expression.\n","sig":null,"attributes":[{"value":"/ Read the next operation in an expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676269,"byte_end":676314,"line_start":906,"line_end":906,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676732,"byte_end":676743,"line_start":921,"line_end":921,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<OperationIter<R>>::offset_from","value":"pub fn offset_from(&Self, &Expression<R>) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the current byte offset of the iterator.\n","sig":null,"attributes":[{"value":"/ Return the current byte offset of the iterator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676669,"byte_end":676720,"line_start":920,"line_end":920,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7031},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678871,"byte_end":678881,"line_start":972,"line_end":972,"column_start":12,"column_end":22},"name":"Evaluation","qualname":"::read::op::Evaluation","value":"Evaluation {  }","parent":null,"children":[{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7043}],"decl_id":null,"docs":" A DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ A DWARF expression evaluator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676849,"byte_end":676882,"line_start":926,"line_end":926,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676883,"byte_end":676886,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676887,"byte_end":676898,"line_start":928,"line_end":928,"column_start":1,"column_end":12}},{"value":"/ A DWARF expression may require additional data to produce a final result,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676899,"byte_end":676976,"line_start":929,"line_end":929,"column_start":1,"column_end":78}},{"value":"/ such as the value of a register or a memory location.  Once initial setup","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676977,"byte_end":677054,"line_start":930,"line_end":930,"column_start":1,"column_end":78}},{"value":"/ is complete (i.e. `set_initial_value()`, `set_object_address()`) the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677055,"byte_end":677127,"line_start":931,"line_end":931,"column_start":1,"column_end":73}},{"value":"/ consumer calls the `evaluate()` method.  That returns an `EvaluationResult`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677128,"byte_end":677208,"line_start":932,"line_end":932,"column_start":1,"column_end":81}},{"value":"/ which is either `EvaluationResult::Complete` or a value indicating what","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677209,"byte_end":677284,"line_start":933,"line_end":933,"column_start":1,"column_end":76}},{"value":"/ data is needed to resume the `Evaluation`.  The consumer is responsible for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677285,"byte_end":677364,"line_start":934,"line_end":934,"column_start":1,"column_end":80}},{"value":"/ producing that data and resuming the computation with the correct method,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677365,"byte_end":677442,"line_start":935,"line_end":935,"column_start":1,"column_end":78}},{"value":"/ as documented for `EvaluationResult`.  Only once an `EvaluationResult::Complete`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677443,"byte_end":677527,"line_start":936,"line_end":936,"column_start":1,"column_end":85}},{"value":"/ is returned can the consumer call `result()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677528,"byte_end":677577,"line_start":937,"line_end":937,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677578,"byte_end":677581,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ This design allows the consumer of `Evaluation` to decide how and when to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677582,"byte_end":677659,"line_start":939,"line_end":939,"column_start":1,"column_end":78}},{"value":"/ produce the required data and resume the computation.  The `Evaluation` can","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677660,"byte_end":677739,"line_start":940,"line_end":940,"column_start":1,"column_end":80}},{"value":"/ be driven synchronously (as shown below) or by some asynchronous mechanism","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677740,"byte_end":677818,"line_start":941,"line_end":941,"column_start":1,"column_end":79}},{"value":"/ such as futures.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677819,"byte_end":677839,"line_start":942,"line_end":942,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677840,"byte_end":677843,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677844,"byte_end":677858,"line_start":944,"line_end":944,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677859,"byte_end":677877,"line_start":945,"line_end":945,"column_start":1,"column_end":19}},{"value":"/ use gimli::{EndianSlice, Evaluation, EvaluationResult, Format, LittleEndian, Value};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677878,"byte_end":677966,"line_start":946,"line_end":946,"column_start":1,"column_end":89}},{"value":"/ # let bytecode = EndianSlice::new(&[], LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":677967,"byte_end":678024,"line_start":947,"line_end":947,"column_start":1,"column_end":58}},{"value":"/ # let encoding = unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678025,"byte_end":678063,"line_start":948,"line_end":948,"column_start":1,"column_end":39}},{"value":"/ # let get_register_value = |_, _| Value::Generic(42);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678064,"byte_end":678121,"line_start":949,"line_end":949,"column_start":1,"column_end":58}},{"value":"/ # let get_frame_base = || 0xdeadbeef;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678122,"byte_end":678163,"line_start":950,"line_end":950,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678164,"byte_end":678167,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ let mut eval = Evaluation::new(bytecode, encoding);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678168,"byte_end":678223,"line_start":952,"line_end":952,"column_start":1,"column_end":56}},{"value":"/ let mut result = eval.evaluate().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678224,"byte_end":678270,"line_start":953,"line_end":953,"column_start":1,"column_end":47}},{"value":"/ while result != EvaluationResult::Complete {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678271,"byte_end":678319,"line_start":954,"line_end":954,"column_start":1,"column_end":49}},{"value":"/   match result {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678320,"byte_end":678340,"line_start":955,"line_end":955,"column_start":1,"column_end":21}},{"value":"/     EvaluationResult::RequiresRegister { register, base_type } => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678341,"byte_end":678412,"line_start":956,"line_end":956,"column_start":1,"column_end":72}},{"value":"/       let value = get_register_value(register, base_type);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678413,"byte_end":678475,"line_start":957,"line_end":957,"column_start":1,"column_end":63}},{"value":"/       result = eval.resume_with_register(value).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678476,"byte_end":678537,"line_start":958,"line_end":958,"column_start":1,"column_end":62}},{"value":"/     },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678538,"byte_end":678548,"line_start":959,"line_end":959,"column_start":1,"column_end":11}},{"value":"/     EvaluationResult::RequiresFrameBase => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678549,"byte_end":678597,"line_start":960,"line_end":960,"column_start":1,"column_end":49}},{"value":"/       let frame_base = get_frame_base();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678598,"byte_end":678642,"line_start":961,"line_end":961,"column_start":1,"column_end":45}},{"value":"/       result = eval.resume_with_frame_base(frame_base).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678643,"byte_end":678711,"line_start":962,"line_end":962,"column_start":1,"column_end":69}},{"value":"/     },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678712,"byte_end":678722,"line_start":963,"line_end":963,"column_start":1,"column_end":11}},{"value":"/     _ => unimplemented!(),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678723,"byte_end":678753,"line_start":964,"line_end":964,"column_start":1,"column_end":31}},{"value":"/   };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678754,"byte_end":678762,"line_start":965,"line_end":965,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678763,"byte_end":678768,"line_start":966,"line_end":966,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678769,"byte_end":678772,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ let result = eval.result();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678773,"byte_end":678804,"line_start":968,"line_end":968,"column_start":1,"column_end":32}},{"value":"/ println!(\"{:?}\", result);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678805,"byte_end":678834,"line_start":969,"line_end":969,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":678835,"byte_end":678842,"line_start":970,"line_end":970,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679776,"byte_end":679779,"line_start":1003,"line_end":1003,"column_start":12,"column_end":15},"name":"new","qualname":"<Evaluation<R>>::new","value":"pub fn new(R, Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DWARF expression evaluator.","sig":null,"attributes":[{"value":"/ Create a new DWARF expression evaluator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679570,"byte_end":679614,"line_start":999,"line_end":999,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679619,"byte_end":679622,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ The new evaluator is created without an initial value, without","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679627,"byte_end":679693,"line_start":1001,"line_end":1001,"column_start":5,"column_end":71}},{"value":"/ an object address, and without a maximum number of iterations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679698,"byte_end":679764,"line_start":1002,"line_end":1002,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680929,"byte_end":680946,"line_start":1034,"line_end":1034,"column_start":12,"column_end":29},"name":"set_initial_value","qualname":"<Evaluation<R>>::set_initial_value","value":"pub fn set_initial_value(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set an initial value to be pushed on the DWARF expression\n evaluator's stack.  This can be used in cases like\n `DW_AT_vtable_elem_location`, which require a value on the\n stack before evaluation commences.  If no initial value is\n set, and the expression uses an opcode requiring the initial\n value, then evaluation will fail with an error.","sig":null,"attributes":[{"value":"/ Set an initial value to be pushed on the DWARF expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680396,"byte_end":680457,"line_start":1024,"line_end":1024,"column_start":5,"column_end":66}},{"value":"/ evaluator's stack.  This can be used in cases like","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680462,"byte_end":680516,"line_start":1025,"line_end":1025,"column_start":5,"column_end":59}},{"value":"/ `DW_AT_vtable_elem_location`, which require a value on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680521,"byte_end":680583,"line_start":1026,"line_end":1026,"column_start":5,"column_end":67}},{"value":"/ stack before evaluation commences.  If no initial value is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680588,"byte_end":680650,"line_start":1027,"line_end":1027,"column_start":5,"column_end":67}},{"value":"/ set, and the expression uses an opcode requiring the initial","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680655,"byte_end":680719,"line_start":1028,"line_end":1028,"column_start":5,"column_end":69}},{"value":"/ value, then evaluation will fail with an error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680724,"byte_end":680775,"line_start":1029,"line_end":1029,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680780,"byte_end":680783,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680788,"byte_end":680800,"line_start":1031,"line_end":1031,"column_start":5,"column_end":17}},{"value":"/ Panics if `set_initial_value()` has already been called, or if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680805,"byte_end":680871,"line_start":1032,"line_end":1032,"column_start":5,"column_end":71}},{"value":"/ `evaluate()` has already been called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":680876,"byte_end":680917,"line_start":1033,"line_end":1033,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681532,"byte_end":681550,"line_start":1049,"line_end":1049,"column_start":12,"column_end":30},"name":"set_object_address","qualname":"<Evaluation<R>>::set_object_address","value":"pub fn set_object_address(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the enclosing object's address, as used by\n `DW_OP_push_object_address`.  If no object address is set, and\n the expression uses an opcode requiring the object address,\n then evaluation will fail with an error.\n","sig":null,"attributes":[{"value":"/ Set the enclosing object's address, as used by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681282,"byte_end":681332,"line_start":1045,"line_end":1045,"column_start":5,"column_end":55}},{"value":"/ `DW_OP_push_object_address`.  If no object address is set, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681337,"byte_end":681403,"line_start":1046,"line_end":1046,"column_start":5,"column_end":71}},{"value":"/ the expression uses an opcode requiring the object address,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681408,"byte_end":681471,"line_start":1047,"line_end":1047,"column_start":5,"column_end":68}},{"value":"/ then evaluation will fail with an error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681476,"byte_end":681520,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":682156,"byte_end":682174,"line_start":1062,"line_end":1062,"column_start":12,"column_end":30},"name":"set_max_iterations","qualname":"<Evaluation<R>>::set_max_iterations","value":"pub fn set_max_iterations(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of iterations to be allowed by the\n expression evaluator.","sig":null,"attributes":[{"value":"/ Set the maximum number of iterations to be allowed by the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681630,"byte_end":681691,"line_start":1053,"line_end":1053,"column_start":5,"column_end":66}},{"value":"/ expression evaluator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681696,"byte_end":681721,"line_start":1054,"line_end":1054,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681726,"byte_end":681729,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ An iteration corresponds approximately to the evaluation of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681734,"byte_end":681799,"line_start":1056,"line_end":1056,"column_start":5,"column_end":70}},{"value":"/ single operation in an expression (\"approximately\" because the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681804,"byte_end":681870,"line_start":1057,"line_end":1057,"column_start":5,"column_end":71}},{"value":"/ implementation may allow two such operations in some cases).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681875,"byte_end":681939,"line_start":1058,"line_end":1058,"column_start":5,"column_end":69}},{"value":"/ The default is not to have a maximum; once set, it's not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":681944,"byte_end":682004,"line_start":1059,"line_end":1059,"column_start":5,"column_end":65}},{"value":"/ possible to go back to this default state.  This value can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":682009,"byte_end":682074,"line_start":1060,"line_end":1060,"column_start":5,"column_end":70}},{"value":"/ set to avoid denial of service attacks by bad DWARF bytecode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":682079,"byte_end":682144,"line_start":1061,"line_end":1061,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":695672,"byte_end":695678,"line_start":1443,"line_end":1443,"column_start":12,"column_end":18},"name":"result","qualname":"<Evaluation<R>>::result","value":"pub fn result(Self) -> Vec<Piece<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the result of this `Evaluation`.","sig":null,"attributes":[{"value":"/ Get the result of this `Evaluation`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":695524,"byte_end":695564,"line_start":1439,"line_end":1439,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":695569,"byte_end":695572,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":695577,"byte_end":695589,"line_start":1441,"line_end":1441,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` has not been driven to completion.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":695594,"byte_end":695660,"line_start":1442,"line_end":1442,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":696269,"byte_end":696277,"line_start":1457,"line_end":1457,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Evaluation<R>>::evaluate","value":"pub fn evaluate(&mut Self) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression.  This method should only ever be called\n once.  If the returned `EvaluationResult` is not\n `EvaluationResult::Complete`, the caller should provide the required\n value and resume the evaluation by calling the appropriate resume_with\n method on `Evaluation`.\n","sig":null,"attributes":[{"value":"/ Evaluate a DWARF expression.  This method should only ever be called","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":695940,"byte_end":696012,"line_start":1452,"line_end":1452,"column_start":5,"column_end":77}},{"value":"/ once.  If the returned `EvaluationResult` is not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":696017,"byte_end":696069,"line_start":1453,"line_end":1453,"column_start":5,"column_end":57}},{"value":"/ `EvaluationResult::Complete`, the caller should provide the required","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":696074,"byte_end":696146,"line_start":1454,"line_end":1454,"column_start":5,"column_end":77}},{"value":"/ value and resume the evaluation by calling the appropriate resume_with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":696151,"byte_end":696225,"line_start":1455,"line_end":1455,"column_start":5,"column_end":79}},{"value":"/ method on `Evaluation`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":696230,"byte_end":696257,"line_start":1456,"line_end":1456,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697451,"byte_end":697469,"line_start":1487,"line_end":1487,"column_start":12,"column_end":30},"name":"resume_with_memory","qualname":"<Evaluation<R>>::resume_with_memory","value":"pub fn resume_with_memory(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided memory `value`.  This will apply\n the provided memory value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided memory `value`.  This will apply","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697049,"byte_end":697127,"line_start":1480,"line_end":1480,"column_start":5,"column_end":83}},{"value":"/ the provided memory value to the evaluation and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697132,"byte_end":697203,"line_start":1481,"line_end":1481,"column_start":5,"column_end":76}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697208,"byte_end":697281,"line_start":1482,"line_end":1482,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697286,"byte_end":697313,"line_start":1483,"line_end":1483,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697318,"byte_end":697321,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697326,"byte_end":697338,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresMemory`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697343,"byte_end":697439,"line_start":1486,"line_end":1486,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698349,"byte_end":698369,"line_start":1508,"line_end":1508,"column_start":12,"column_end":32},"name":"resume_with_register","qualname":"<Evaluation<R>>::resume_with_register","value":"pub fn resume_with_register(&mut Self, Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `register` value.  This will apply\n the provided register value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `register` value.  This will apply","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":697941,"byte_end":698021,"line_start":1501,"line_end":1501,"column_start":5,"column_end":85}},{"value":"/ the provided register value to the evaluation and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698026,"byte_end":698099,"line_start":1502,"line_end":1502,"column_start":5,"column_end":78}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698104,"byte_end":698177,"line_start":1503,"line_end":1503,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698182,"byte_end":698209,"line_start":1504,"line_end":1504,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698214,"byte_end":698217,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698222,"byte_end":698234,"line_start":1506,"line_end":1506,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresRegister`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":698239,"byte_end":698337,"line_start":1507,"line_end":1507,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699411,"byte_end":699433,"line_start":1531,"line_end":1531,"column_start":12,"column_end":34},"name":"resume_with_frame_base","qualname":"<Evaluation<R>>::resume_with_frame_base","value":"pub fn resume_with_frame_base(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `frame_base`.  This will\n apply the provided frame base value to the evaluation and continue\n evaluating opcodes until the evaluation is completed, reaches an error,\n or needs more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `frame_base`.  This will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699004,"byte_end":699074,"line_start":1524,"line_end":1524,"column_start":5,"column_end":75}},{"value":"/ apply the provided frame base value to the evaluation and continue","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699079,"byte_end":699149,"line_start":1525,"line_end":1525,"column_start":5,"column_end":75}},{"value":"/ evaluating opcodes until the evaluation is completed, reaches an error,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699154,"byte_end":699229,"line_start":1526,"line_end":1526,"column_start":5,"column_end":80}},{"value":"/ or needs more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699234,"byte_end":699270,"line_start":1527,"line_end":1527,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699275,"byte_end":699278,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699283,"byte_end":699295,"line_start":1529,"line_end":1529,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresFrameBase`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699300,"byte_end":699399,"line_start":1530,"line_end":1530,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700367,"byte_end":700382,"line_start":1552,"line_end":1552,"column_start":12,"column_end":27},"name":"resume_with_tls","qualname":"<Evaluation<R>>::resume_with_tls","value":"pub fn resume_with_tls(&mut Self, u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `value`.  This will apply\n the provided TLS value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `value`.  This will apply","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":699978,"byte_end":700049,"line_start":1545,"line_end":1545,"column_start":5,"column_end":76}},{"value":"/ the provided TLS value to the evaluation and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700054,"byte_end":700122,"line_start":1546,"line_end":1546,"column_start":5,"column_end":73}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700127,"byte_end":700200,"line_start":1547,"line_end":1547,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700205,"byte_end":700232,"line_start":1548,"line_end":1548,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700237,"byte_end":700240,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700245,"byte_end":700257,"line_start":1550,"line_end":1550,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresTls`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700262,"byte_end":700355,"line_start":1551,"line_end":1551,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701255,"byte_end":701281,"line_start":1573,"line_end":1573,"column_start":12,"column_end":38},"name":"resume_with_call_frame_cfa","qualname":"<Evaluation<R>>::resume_with_call_frame_cfa","value":"pub fn resume_with_call_frame_cfa(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `cfa`.  This will\n apply the provided CFA value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `cfa`.  This will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700859,"byte_end":700922,"line_start":1566,"line_end":1566,"column_start":5,"column_end":68}},{"value":"/ apply the provided CFA value to the evaluation and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":700927,"byte_end":701001,"line_start":1567,"line_end":1567,"column_start":5,"column_end":79}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701006,"byte_end":701079,"line_start":1568,"line_end":1568,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701084,"byte_end":701111,"line_start":1569,"line_end":1569,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701116,"byte_end":701119,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701124,"byte_end":701136,"line_start":1571,"line_end":1571,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresCallFrameCfa`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701141,"byte_end":701243,"line_start":1572,"line_end":1572,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":702159,"byte_end":702182,"line_start":1594,"line_end":1594,"column_start":12,"column_end":35},"name":"resume_with_at_location","qualname":"<Evaluation<R>>::resume_with_at_location","value":"pub fn resume_with_at_location(&mut Self, R) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `bytes`.  This will\n continue processing the evaluation with the new expression provided\n until the evaluation is completed, reaches an error, or needs more\n information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `bytes`.  This will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701774,"byte_end":701839,"line_start":1587,"line_end":1587,"column_start":5,"column_end":70}},{"value":"/ continue processing the evaluation with the new expression provided","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701844,"byte_end":701915,"line_start":1588,"line_end":1588,"column_start":5,"column_end":76}},{"value":"/ until the evaluation is completed, reaches an error, or needs more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701920,"byte_end":701990,"line_start":1589,"line_end":1589,"column_start":5,"column_end":75}},{"value":"/ information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":701995,"byte_end":702017,"line_start":1590,"line_end":1590,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":702022,"byte_end":702025,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":702030,"byte_end":702042,"line_start":1592,"line_end":1592,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresAtLocation`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":702047,"byte_end":702147,"line_start":1593,"line_end":1593,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703321,"byte_end":703344,"line_start":1620,"line_end":1620,"column_start":12,"column_end":35},"name":"resume_with_entry_value","qualname":"<Evaluation<R>>::resume_with_entry_value","value":"pub fn resume_with_entry_value(&mut Self, Value)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `entry_value`.  This will\n apply the provided entry value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `entry_value`.  This will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":702917,"byte_end":702988,"line_start":1613,"line_end":1613,"column_start":5,"column_end":76}},{"value":"/ apply the provided entry value to the evaluation and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":702993,"byte_end":703069,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703074,"byte_end":703147,"line_start":1615,"line_end":1615,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703152,"byte_end":703179,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703184,"byte_end":703187,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703192,"byte_end":703204,"line_start":1618,"line_end":1618,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresEntryValue`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703209,"byte_end":703309,"line_start":1619,"line_end":1619,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704255,"byte_end":704280,"line_start":1641,"line_end":1641,"column_start":12,"column_end":37},"name":"resume_with_parameter_ref","qualname":"<Evaluation<R>>::resume_with_parameter_ref","value":"pub fn resume_with_parameter_ref(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `parameter_value`.  This will\n apply the provided parameter value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `parameter_value`.  This will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703841,"byte_end":703916,"line_start":1634,"line_end":1634,"column_start":5,"column_end":80}},{"value":"/ apply the provided parameter value to the evaluation and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":703921,"byte_end":704001,"line_start":1635,"line_end":1635,"column_start":5,"column_end":85}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704006,"byte_end":704079,"line_start":1636,"line_end":1636,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704084,"byte_end":704111,"line_start":1637,"line_end":1637,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704116,"byte_end":704119,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704124,"byte_end":704136,"line_start":1639,"line_end":1639,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresParameterRef`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704141,"byte_end":704243,"line_start":1640,"line_end":1640,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705274,"byte_end":705303,"line_start":1666,"line_end":1666,"column_start":12,"column_end":41},"name":"resume_with_relocated_address","qualname":"<Evaluation<R>>::resume_with_relocated_address","value":"pub fn resume_with_relocated_address(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided relocated `address`.  This will use the\n provided relocated address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided relocated `address`.  This will use the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704828,"byte_end":704913,"line_start":1658,"line_end":1658,"column_start":5,"column_end":90}},{"value":"/ provided relocated address for the operation that required it, and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":704918,"byte_end":705008,"line_start":1659,"line_end":1659,"column_start":5,"column_end":95}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705013,"byte_end":705086,"line_start":1660,"line_end":1660,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705091,"byte_end":705118,"line_start":1661,"line_end":1661,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705123,"byte_end":705126,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705131,"byte_end":705143,"line_start":1663,"line_end":1663,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705148,"byte_end":705208,"line_start":1664,"line_end":1664,"column_start":5,"column_end":65}},{"value":"/ `EvaluationResult::RequiresRelocatedAddress`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705213,"byte_end":705262,"line_start":1665,"line_end":1665,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706264,"byte_end":706291,"line_start":1688,"line_end":1688,"column_start":12,"column_end":39},"name":"resume_with_indexed_address","qualname":"<Evaluation<R>>::resume_with_indexed_address","value":"pub fn resume_with_indexed_address(&mut Self, u64)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided indexed `address`.  This will use the\n provided indexed address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided indexed `address`.  This will use the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705824,"byte_end":705907,"line_start":1680,"line_end":1680,"column_start":5,"column_end":88}},{"value":"/ provided indexed address for the operation that required it, and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":705912,"byte_end":706000,"line_start":1681,"line_end":1681,"column_start":5,"column_end":93}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706005,"byte_end":706078,"line_start":1682,"line_end":1682,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706083,"byte_end":706110,"line_start":1683,"line_end":1683,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706115,"byte_end":706118,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706123,"byte_end":706135,"line_start":1685,"line_end":1685,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706140,"byte_end":706200,"line_start":1686,"line_end":1686,"column_start":5,"column_end":65}},{"value":"/ `EvaluationResult::RequiresIndexedAddress`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706205,"byte_end":706252,"line_start":1687,"line_end":1687,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":707220,"byte_end":707241,"line_start":1709,"line_end":1709,"column_start":12,"column_end":33},"name":"resume_with_base_type","qualname":"<Evaluation<R>>::resume_with_base_type","value":"pub fn resume_with_base_type(&mut Self, ValueType)\n-> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `base_type`.  This will use the\n provided base type for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[{"value":"/ Resume the `Evaluation` with the provided `base_type`.  This will use the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706806,"byte_end":706883,"line_start":1702,"line_end":1702,"column_start":5,"column_end":82}},{"value":"/ provided base type for the operation that required it, and continue evaluating","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706888,"byte_end":706970,"line_start":1703,"line_end":1703,"column_start":5,"column_end":87}},{"value":"/ opcodes until the evaluation is completed, reaches an error, or needs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":706975,"byte_end":707048,"line_start":1704,"line_end":1704,"column_start":5,"column_end":78}},{"value":"/ more information again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":707053,"byte_end":707080,"line_start":1705,"line_end":1705,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":707085,"byte_end":707088,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":707093,"byte_end":707105,"line_start":1707,"line_end":1707,"column_start":5,"column_end":17}},{"value":"/ Panics if this `Evaluation` did not previously stop with `EvaluationResult::RequiresBaseType`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":707110,"byte_end":707208,"line_start":1708,"line_end":1708,"column_start":5,"column_end":103}}]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778164,"byte_end":778177,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubNamesEntry","qualname":"::read::pubnames::PubNamesEntry","value":"PubNamesEntry {  }","parent":null,"children":[{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051}],"decl_id":null,"docs":" A single parsed pubname.\n","sig":null,"attributes":[{"value":"/ A single parsed pubname.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778100,"byte_end":778128,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778391,"byte_end":778395,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubNamesEntry<R>>::name","value":"pub fn name(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name this entry refers to.\n","sig":null,"attributes":[{"value":"/ Returns the name this entry refers to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778337,"byte_end":778379,"line_start":15,"line_end":15,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778577,"byte_end":778595,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubNamesEntry<R>>::unit_header_offset","value":"pub fn unit_header_offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the .debug_info section for the header of the compilation unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778441,"byte_end":778531,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ which contains this name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778536,"byte_end":778565,"line_start":21,"line_end":21,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778803,"byte_end":778813,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubNamesEntry<R>>::die_offset","value":"pub fn die_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n has this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the compilation unit for the debugging information entry which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778678,"byte_end":778768,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ has this name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778773,"byte_end":778791,"line_start":27,"line_end":27,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7058},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779354,"byte_end":779367,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubNames","qualname":"::read::pubnames::DebugPubNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubNames` struct represents the DWARF public names information\n found in the `.debug_pubnames` section.\n","sig":null,"attributes":[{"value":"/ The `DebugPubNames` struct represents the DWARF public names information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779198,"byte_end":779274,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_pubnames` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779275,"byte_end":779318,"line_start":48,"line_end":48,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780145,"byte_end":780148,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubNames<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779533,"byte_end":779616,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779621,"byte_end":779633,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779638,"byte_end":779641,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_pubnames` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779646,"byte_end":779725,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779730,"byte_end":779800,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779805,"byte_end":779844,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779849,"byte_end":779852,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779857,"byte_end":779864,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubNames, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779869,"byte_end":779914,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779919,"byte_end":779922,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779927,"byte_end":779946,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubnames_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779951,"byte_end":780007,"line_start":67,"line_end":67,"column_start":5,"column_end":61}},{"value":"/ let debug_pubnames =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780012,"byte_end":780036,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/     DebugPubNames::new(read_debug_pubnames_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780041,"byte_end":780121,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780126,"byte_end":780133,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780899,"byte_end":780904,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubNames<R>>::items","value":"pub fn items(&Self) -> PubNamesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubnames in the `.debug_pubnames` section.","sig":null,"attributes":[{"value":"/ Iterate the pubnames in the `.debug_pubnames` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780330,"byte_end":780388,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780393,"byte_end":780396,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780401,"byte_end":780408,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubNames, EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780413,"byte_end":780471,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780476,"byte_end":780479,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780484,"byte_end":780503,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubnames_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780508,"byte_end":780564,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ let debug_pubnames =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780569,"byte_end":780593,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     DebugPubNames::new(read_debug_pubnames_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780598,"byte_end":780678,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780683,"byte_end":780686,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_pubnames.items();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780691,"byte_end":780733,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/ while let Some(pubname) = iter.next().unwrap() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780738,"byte_end":780790,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/   println!(\"pubname {} found!\", pubname.name().to_string_lossy());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780795,"byte_end":780865,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780870,"byte_end":780875,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780880,"byte_end":780887,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7068},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781534,"byte_end":781551,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubNamesEntryIter","qualname":"::read::pubnames::PubNamesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubnames from a `.debug_pubnames` section.","sig":null,"attributes":[{"value":"/ An iterator over the pubnames from a `.debug_pubnames` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781338,"byte_end":781405,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781406,"byte_end":781409,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781410,"byte_end":781431,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781432,"byte_end":781498,"line_start":116,"line_end":116,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":782072,"byte_end":782076,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubNamesEntryIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<PubNamesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubname.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next pubname.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781665,"byte_end":781718,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781723,"byte_end":781726,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed pubname as `Ok(Some(pubname))`. Returns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781731,"byte_end":781799,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` when iteration is complete and all pubnames have already been","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781804,"byte_end":781880,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ parsed and yielded. If an error occurs while parsing the next pubname,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781885,"byte_end":781959,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781964,"byte_end":782040,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":782045,"byte_end":782060,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7078},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":782765,"byte_end":782778,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubTypesEntry","qualname":"::read::pubtypes::PubTypesEntry","value":"PubTypesEntry {  }","parent":null,"children":[{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":7082}],"decl_id":null,"docs":" A single parsed pubtype.\n","sig":null,"attributes":[{"value":"/ A single parsed pubtype.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":782701,"byte_end":782729,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783004,"byte_end":783008,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubTypesEntry<R>>::name","value":"pub fn name(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the type this entry refers to.\n","sig":null,"attributes":[{"value":"/ Returns the name of the type this entry refers to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":782938,"byte_end":782992,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783204,"byte_end":783222,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubTypesEntry<R>>::unit_header_offset","value":"pub fn unit_header_offset(&Self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains the type with this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the .debug_info section for the header of the compilation unit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783054,"byte_end":783144,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ which contains the type with this name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783149,"byte_end":783192,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783440,"byte_end":783450,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubTypesEntry<R>>::die_offset","value":"pub fn die_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n the type with this name.\n","sig":null,"attributes":[{"value":"/ Returns the offset into the compilation unit for the debugging information entry which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783305,"byte_end":783395,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ the type with this name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783400,"byte_end":783428,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7089},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783987,"byte_end":784000,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubTypes","qualname":"::read::pubtypes::DebugPubTypes","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubTypes` struct represents the DWARF public types information\n found in the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `DebugPubTypes` struct represents the DWARF public types information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783835,"byte_end":783911,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ found in the `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783912,"byte_end":783951,"line_start":48,"line_end":48,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784762,"byte_end":784765,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubTypes<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784166,"byte_end":784249,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784254,"byte_end":784266,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784271,"byte_end":784274,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_pubtypes` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784279,"byte_end":784358,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784363,"byte_end":784433,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784438,"byte_end":784477,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784482,"byte_end":784485,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784490,"byte_end":784497,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubTypes, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784502,"byte_end":784547,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784552,"byte_end":784555,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784560,"byte_end":784579,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubtypes_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784584,"byte_end":784632,"line_start":67,"line_end":67,"column_start":5,"column_end":53}},{"value":"/ let debug_pubtypes =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784637,"byte_end":784661,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/     DebugPubTypes::new(read_debug_pubtypes_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784666,"byte_end":784738,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784743,"byte_end":784750,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785516,"byte_end":785521,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubTypes<R>>::items","value":"pub fn items(&Self) -> PubTypesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubtypes in the `.debug_pubtypes` section.","sig":null,"attributes":[{"value":"/ Iterate the pubtypes in the `.debug_pubtypes` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784947,"byte_end":785005,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785010,"byte_end":785013,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785018,"byte_end":785025,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugPubTypes, EndianSlice, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785030,"byte_end":785088,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785093,"byte_end":785096,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785101,"byte_end":785120,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_pubtypes_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785125,"byte_end":785181,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ let debug_pubtypes =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785186,"byte_end":785210,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     DebugPubTypes::new(read_debug_pubtypes_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785215,"byte_end":785295,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785300,"byte_end":785303,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_pubtypes.items();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785308,"byte_end":785350,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/ while let Some(pubtype) = iter.next().unwrap() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785355,"byte_end":785407,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/   println!(\"pubtype {} found!\", pubtype.name().to_string_lossy());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785412,"byte_end":785482,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785487,"byte_end":785492,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785497,"byte_end":785504,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786151,"byte_end":786168,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubTypesEntryIter","qualname":"::read::pubtypes::PubTypesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubtypes from a `.debug_pubtypes` section.","sig":null,"attributes":[{"value":"/ An iterator over the pubtypes from a `.debug_pubtypes` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785955,"byte_end":786022,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786023,"byte_end":786026,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786027,"byte_end":786048,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786049,"byte_end":786115,"line_start":116,"line_end":116,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786689,"byte_end":786693,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubTypesEntryIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<PubTypesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubtype.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next pubtype.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786282,"byte_end":786335,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786340,"byte_end":786343,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns the newly parsed pubtype as `Ok(Some(pubtype))`. Returns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786348,"byte_end":786416,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` when iteration is complete and all pubtypes have already been","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786421,"byte_end":786497,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ parsed and yielded. If an error occurs while parsing the next pubtype,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786502,"byte_end":786576,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ then this error is returned as `Err(e)`, and all subsequent calls return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786581,"byte_end":786657,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ `Ok(None)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786662,"byte_end":786677,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7109},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787529,"byte_end":787540,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"DebugRanges","qualname":"::read::rnglists::DebugRanges","value":"DebugRanges {  }","parent":null,"children":[{"krate":0,"index":7111}],"decl_id":null,"docs":" The raw contents of the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_ranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787426,"byte_end":787478,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788279,"byte_end":788282,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRanges<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRanges` instance from the data in the `.debug_ranges`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugRanges` instance from the data in the `.debug_ranges`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787673,"byte_end":787752,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787757,"byte_end":787769,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787774,"byte_end":787777,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_ranges` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787782,"byte_end":787859,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787864,"byte_end":787934,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787939,"byte_end":787978,"line_start":27,"line_end":27,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787983,"byte_end":787986,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787991,"byte_end":787998,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugRanges, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788003,"byte_end":788046,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788051,"byte_end":788054,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788059,"byte_end":788100,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_ranges_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788105,"byte_end":788159,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ let debug_ranges = DebugRanges::new(read_debug_ranges_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788164,"byte_end":788255,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788260,"byte_end":788267,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7123},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788815,"byte_end":788828,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"DebugRngLists","qualname":"::read::rnglists::DebugRngLists","value":"DebugRngLists {  }","parent":null,"children":[{"krate":0,"index":7125}],"decl_id":null,"docs":" The `DebugRngLists` struct represents the contents of the\n `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ The `DebugRngLists` struct represents the contents of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788672,"byte_end":788733,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788734,"byte_end":788764,"line_start":58,"line_end":58,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789586,"byte_end":789589,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRngLists<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRngLists` instance from the data in the\n `.debug_rnglists` section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugRngLists` instance from the data in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788952,"byte_end":789017,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789022,"byte_end":789052,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789057,"byte_end":789060,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_rnglists`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789065,"byte_end":789132,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ section and present it as a `&[u8]` slice. That means using some ELF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789137,"byte_end":789209,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ loader on Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789214,"byte_end":789263,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789268,"byte_end":789271,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789276,"byte_end":789283,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugRngLists, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789288,"byte_end":789333,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789338,"byte_end":789341,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789346,"byte_end":789387,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_rnglists_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789392,"byte_end":789448,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ let debug_rnglists =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789453,"byte_end":789477,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/     DebugRngLists::new(read_debug_rnglists_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789482,"byte_end":789562,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789567,"byte_end":789574,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":790273,"byte_end":790302,"line_start":113,"line_end":113,"column_start":12,"column_end":41},"name":"default_for_encoding_and_file","qualname":"<DebugRngListsBase<Offset>>::default_for_encoding_and_file","value":"pub fn default_for_encoding_and_file(Encoding, DwarfFileType)\n-> DebugRngListsBase<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DebugRngListsBase` with the default value of DW_AT_rnglists_base\n for the given `Encoding` and `DwarfFileType`.\n","sig":null,"attributes":[{"value":"/ Returns a `DebugRngListsBase` with the default value of DW_AT_rnglists_base","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":790128,"byte_end":790207,"line_start":111,"line_end":111,"column_start":5,"column_end":84}},{"value":"/ for the given `Encoding` and `DwarfFileType`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":790212,"byte_end":790261,"line_start":112,"line_end":112,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7137},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791020,"byte_end":791030,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"RangeLists","qualname":"::read::rnglists::RangeLists","value":"RangeLists {  }","parent":null,"children":[{"krate":0,"index":7139},{"krate":0,"index":7140}],"decl_id":null,"docs":" The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":790894,"byte_end":790969,"line_start":128,"line_end":128,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791269,"byte_end":791272,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeLists<R>>::new","value":"pub fn new(DebugRanges<R>, DebugRngLists<R>) -> RangeLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `RangeLists` instance from the data in the `.debug_ranges` and\n `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ Construct a new `RangeLists` instance from the data in the `.debug_ranges` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791139,"byte_end":791221,"line_start":136,"line_end":136,"column_start":5,"column_end":87}},{"value":"/ `.debug_rnglists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791226,"byte_end":791257,"line_start":137,"line_end":137,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792102,"byte_end":792108,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"borrow","qualname":"<RangeLists<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> RangeLists<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `RangeLists` that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `RangeLists` that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791478,"byte_end":791539,"line_start":147,"line_end":147,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791544,"byte_end":791547,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791552,"byte_end":791617,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791622,"byte_end":791625,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791630,"byte_end":791650,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791655,"byte_end":791658,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791663,"byte_end":791681,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791686,"byte_end":791731,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791736,"byte_end":791820,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::RangeLists<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791825,"byte_end":791892,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791897,"byte_end":791944,"line_start":157,"line_end":157,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791949,"byte_end":791999,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792004,"byte_end":792066,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792071,"byte_end":792078,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792083,"byte_end":792090,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792928,"byte_end":792934,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"ranges","qualname":"<RangeLists<R>>::ranges","value":"pub fn ranges(&Self, RangeListsOffset<R::Offset>, Encoding, u64,\n              &DebugAddr<R>, DebugAddrBase<R::Offset>)\n-> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `Range` list entries starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `Range` list entries starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792425,"byte_end":792496,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792501,"byte_end":792504,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The `unit_version` and `address_size` must match the compilation unit that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792509,"byte_end":792591,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/ offset was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792596,"byte_end":792624,"line_start":177,"line_end":177,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792629,"byte_end":792632,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The `base_address` should be obtained from the `DW_AT_low_pc` attribute in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792637,"byte_end":792719,"line_start":179,"line_end":179,"column_start":5,"column_end":87}},{"value":"/ `DW_TAG_compile_unit` entry for the compilation unit that contains this range list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792724,"byte_end":792811,"line_start":180,"line_end":180,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792816,"byte_end":792819,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792824,"byte_end":792845,"line_start":182,"line_end":182,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792850,"byte_end":792916,"line_start":183,"line_end":183,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793790,"byte_end":793800,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"raw_ranges","qualname":"<RangeLists<R>>::raw_ranges","value":"pub fn raw_ranges(&Self, RangeListsOffset<R::Offset>, Encoding)\n-> Result<RawRngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RawRngListEntry`ies starting at the given offset.","sig":null,"attributes":[{"value":"/ Iterate over the `RawRngListEntry`ies starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793367,"byte_end":793438,"line_start":200,"line_end":200,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793443,"byte_end":793446,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793451,"byte_end":793515,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ offset was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793520,"byte_end":793548,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793553,"byte_end":793556,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This iterator does not perform any processing of the range entries,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793561,"byte_end":793632,"line_start":205,"line_end":205,"column_start":5,"column_end":76}},{"value":"/ such as handling base addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793637,"byte_end":793673,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793678,"byte_end":793681,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793686,"byte_end":793707,"line_start":208,"line_end":208,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":793712,"byte_end":793778,"line_start":209,"line_end":209,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794722,"byte_end":794732,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<RangeLists<R>>::get_offset","value":"pub fn get_offset(&Self, Encoding, DebugRngListsBase<R::Offset>,\n                  DebugRngListsIndex<R::Offset>)\n-> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_rnglists` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_rnglists` offset at the given `base` and `index`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794275,"byte_end":794348,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794353,"byte_end":794356,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_rnglists_base` value from the compilation unit DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794361,"byte_end":794446,"line_start":226,"line_end":226,"column_start":5,"column_end":90}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794451,"byte_end":794525,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794530,"byte_end":794533,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_rnglistx` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794538,"byte_end":794601,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794606,"byte_end":794609,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `unit_encoding` must match the compilation unit that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794614,"byte_end":794678,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/ index was contained in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":794683,"byte_end":794710,"line_start":232,"line_end":232,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795373,"byte_end":795389,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<RangeLists<R>>::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[{"value":"/ Call `Reader::lookup_offset_id` for each section, and return the first match.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795280,"byte_end":795361,"line_start":250,"line_end":250,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":7168},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795985,"byte_end":795999,"line_start":271,"line_end":271,"column_start":12,"column_end":26},"name":"RawRngListIter","qualname":"::read::rnglists::RawRngListIter","value":"RawRngListIter {  }","parent":null,"children":[{"krate":0,"index":7170},{"krate":0,"index":7171},{"krate":0,"index":7172}],"decl_id":null,"docs":" A raw iterator over an address range list.","sig":null,"attributes":[{"value":"/ A raw iterator over an address range list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795797,"byte_end":795843,"line_start":266,"line_end":266,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795844,"byte_end":795847,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ This iterator does not perform any processing of the range entries,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795848,"byte_end":795919,"line_start":268,"line_end":268,"column_start":1,"column_end":72}},{"value":"/ such as handling base addresses.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":795920,"byte_end":795956,"line_start":269,"line_end":269,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796218,"byte_end":796237,"line_start":281,"line_end":281,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::rnglists::RawRngListEntry::AddressOrOffsetPair","value":"RawRngListEntry::AddressOrOffsetPair { begin, end }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" A range from DWARF version <= 4.\n","sig":null,"attributes":[{"value":"/ A range from DWARF version <= 4.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796177,"byte_end":796213,"line_start":280,"line_end":280,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":7181},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796435,"byte_end":796446,"line_start":288,"line_end":288,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::rnglists::RawRngListEntry::BaseAddress","value":"RawRngListEntry::BaseAddress { addr }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_base_address\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_address","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796407,"byte_end":796430,"line_start":287,"line_end":287,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":7183},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796533,"byte_end":796545,"line_start":293,"line_end":293,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::rnglists::RawRngListEntry::BaseAddressx","value":"RawRngListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_base_addressx\n","sig":null,"attributes":[{"value":"/ DW_RLE_base_addressx","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796504,"byte_end":796528,"line_start":292,"line_end":292,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":7185},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796644,"byte_end":796654,"line_start":298,"line_end":298,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::rnglists::RawRngListEntry::StartxEndx","value":"RawRngListEntry::StartxEndx { begin, end }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_startx_endx\n","sig":null,"attributes":[{"value":"/ DW_RLE_startx_endx","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796617,"byte_end":796639,"line_start":297,"line_end":297,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":7188},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796815,"byte_end":796827,"line_start":305,"line_end":305,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::rnglists::RawRngListEntry::StartxLength","value":"RawRngListEntry::StartxLength { begin, length }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_startx_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_startx_length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796786,"byte_end":796810,"line_start":304,"line_end":304,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":7191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796978,"byte_end":796988,"line_start":312,"line_end":312,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::rnglists::RawRngListEntry::OffsetPair","value":"RawRngListEntry::OffsetPair { begin, end }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_offset_pair\n","sig":null,"attributes":[{"value":"/ DW_RLE_offset_pair","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796951,"byte_end":796973,"line_start":311,"line_end":311,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":7194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":797117,"byte_end":797125,"line_start":319,"line_end":319,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::rnglists::RawRngListEntry::StartEnd","value":"RawRngListEntry::StartEnd { begin, end }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_start_end\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_end","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":797092,"byte_end":797112,"line_start":318,"line_end":318,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":7197},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":797257,"byte_end":797268,"line_start":326,"line_end":326,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::rnglists::RawRngListEntry::StartLength","value":"RawRngListEntry::StartLength { begin, length }","parent":{"krate":0,"index":7176},"children":[],"decl_id":null,"docs":" DW_RLE_start_length\n","sig":null,"attributes":[{"value":"/ DW_RLE_start_length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":797229,"byte_end":797252,"line_start":325,"line_end":325,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":7176},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796152,"byte_end":796167,"line_start":279,"line_end":279,"column_start":10,"column_end":25},"name":"RawRngListEntry","qualname":"::read::rnglists::RawRngListEntry","value":"pub enum RawRngListEntry<T> {\n    AddressOrOffsetPair {\n        begin: u64,\n        end: u64,\n    },\n    BaseAddress {\n        addr: u64,\n    },\n    BaseAddressx {\n        addr: DebugAddrIndex<T>,\n    },\n    StartxEndx {\n        begin: DebugAddrIndex<T>,\n        end: DebugAddrIndex<T>,\n    },\n    StartxLength {\n        begin: DebugAddrIndex<T>,\n        length: u64,\n    },\n    OffsetPair {\n        begin: u64,\n        end: u64,\n    },\n    StartEnd {\n        begin: u64,\n        end: u64,\n    },\n    StartLength {\n        begin: u64,\n        length: u64,\n    },\n}","parent":null,"children":[{"krate":0,"index":7178},{"krate":0,"index":7181},{"krate":0,"index":7183},{"krate":0,"index":7185},{"krate":0,"index":7188},{"krate":0,"index":7191},{"krate":0,"index":7194},{"krate":0,"index":7197}],"decl_id":null,"docs":" A raw entry in .debug_rnglists\n","sig":null,"attributes":[{"value":"/ A raw entry in .debug_rnglists","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":796084,"byte_end":796118,"line_start":277,"line_end":277,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":800411,"byte_end":800415,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"next","qualname":"<RawRngListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<RawRngListEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":800356,"byte_end":800399,"line_start":401,"line_end":401,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7206},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801495,"byte_end":801506,"line_start":438,"line_end":438,"column_start":12,"column_end":23},"name":"RngListIter","qualname":"::read::rnglists::RngListIter","value":"RngListIter {  }","parent":null,"children":[{"krate":0,"index":7208},{"krate":0,"index":7209},{"krate":0,"index":7210},{"krate":0,"index":7211}],"decl_id":null,"docs":" An iterator over an address range list.","sig":null,"attributes":[{"value":"/ An iterator over an address range list.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801223,"byte_end":801266,"line_start":432,"line_end":432,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801267,"byte_end":801270,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ This iterator internally handles processing of base addresses and different","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801271,"byte_end":801350,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/ entry types.  Thus, it only returns range entries that are valid","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801351,"byte_end":801419,"line_start":435,"line_end":435,"column_start":1,"column_end":69}},{"value":"/ and already adjusted for the base address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801420,"byte_end":801466,"line_start":436,"line_end":436,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":802303,"byte_end":802307,"line_start":468,"line_end":468,"column_start":12,"column_end":16},"name":"next","qualname":"<RngListIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":802248,"byte_end":802291,"line_start":467,"line_end":467,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7233},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805779,"byte_end":805784,"line_start":568,"line_end":568,"column_start":12,"column_end":17},"name":"Range","qualname":"::read::rnglists::Range","value":"Range { begin, end }","parent":null,"children":[{"krate":0,"index":7234},{"krate":0,"index":7235}],"decl_id":null,"docs":" An address range from the `.debug_ranges` or `.debug_rnglists` sections.\n","sig":null,"attributes":[{"value":"/ An address range from the `.debug_ranges` or `.debug_rnglists` sections.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805640,"byte_end":805716,"line_start":566,"line_end":566,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":7234},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805839,"byte_end":805844,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::Range::begin","value":"u64","parent":{"krate":0,"index":7233},"children":[],"decl_id":null,"docs":" The beginning address of the range.\n","sig":null,"attributes":[{"value":"/ The beginning address of the range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805791,"byte_end":805830,"line_start":569,"line_end":569,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":7235},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805913,"byte_end":805916,"line_start":573,"line_end":573,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::Range::end","value":"u64","parent":{"krate":0,"index":7233},"children":[],"decl_id":null,"docs":" The first address past the end of the range.\n","sig":null,"attributes":[{"value":"/ The first address past the end of the range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805856,"byte_end":805904,"line_start":572,"line_end":572,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":7251},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829232,"byte_end":829240,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"DebugStr","qualname":"::read::str::DebugStr","value":"DebugStr {  }","parent":null,"children":[{"krate":0,"index":7253}],"decl_id":null,"docs":" The `DebugStr` struct represents the DWARF strings\n found in the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ The `DebugStr` struct represents the DWARF strings","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829088,"byte_end":829142,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/ found in the `.debug_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829143,"byte_end":829181,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829951,"byte_end":829954,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugStr<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugStr` instance from the data in the `.debug_str`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugStr` instance from the data in the `.debug_str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829369,"byte_end":829442,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829447,"byte_end":829459,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829464,"byte_end":829467,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_str` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829472,"byte_end":829546,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829551,"byte_end":829621,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829626,"byte_end":829665,"line_start":25,"line_end":25,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829670,"byte_end":829673,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829678,"byte_end":829685,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugStr, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829690,"byte_end":829730,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829735,"byte_end":829738,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829743,"byte_end":829784,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_str_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829789,"byte_end":829840,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/ let debug_str = DebugStr::new(read_debug_str_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829845,"byte_end":829927,"line_start":32,"line_end":32,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829932,"byte_end":829939,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830665,"byte_end":830672,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugStr<R>>::get_str","value":"pub fn get_str(&Self, DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_str` section by DebugStrOffset.","sig":null,"attributes":[{"value":"/ Lookup a string from the `.debug_str` section by DebugStrOffset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830121,"byte_end":830189,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830194,"byte_end":830197,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830202,"byte_end":830209,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugStr, DebugStrOffset, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830214,"byte_end":830270,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830275,"byte_end":830278,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x01, 0x02, 0x00];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830283,"byte_end":830318,"line_start":45,"line_end":45,"column_start":5,"column_end":40}},{"value":"/ # let offset = DebugStrOffset(0);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830323,"byte_end":830360,"line_start":46,"line_end":46,"column_start":5,"column_end":42}},{"value":"/ # let read_debug_str_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830365,"byte_end":830416,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"/ # let debug_str_offset_somehow = || offset;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830421,"byte_end":830468,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/ let debug_str = DebugStr::new(read_debug_str_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830473,"byte_end":830555,"line_start":49,"line_end":49,"column_start":5,"column_end":87}},{"value":"/ println!(\"Found string {:?}\", debug_str.get_str(debug_str_offset_somehow()));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830560,"byte_end":830641,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830646,"byte_end":830653,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831524,"byte_end":831530,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStr<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugStr<R> where F: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugStr` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830896,"byte_end":830963,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830968,"byte_end":830971,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830976,"byte_end":831041,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831046,"byte_end":831049,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831054,"byte_end":831074,"line_start":64,"line_end":64,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831079,"byte_end":831082,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831087,"byte_end":831105,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831110,"byte_end":831155,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831160,"byte_end":831244,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugStr<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831249,"byte_end":831314,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831319,"byte_end":831366,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831371,"byte_end":831421,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831426,"byte_end":831488,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831493,"byte_end":831500,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831505,"byte_end":831512,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7265},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832086,"byte_end":832101,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"DebugStrOffsets","qualname":"::read::str::DebugStrOffsets","value":"DebugStrOffsets {  }","parent":null,"children":[{"krate":0,"index":7267}],"decl_id":null,"docs":" The raw contents of the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ The raw contents of the `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831978,"byte_end":832035,"line_start":99,"line_end":99,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833054,"byte_end":833068,"line_start":122,"line_end":122,"column_start":12,"column_end":26},"name":"get_str_offset","qualname":"<DebugStrOffsets<R>>::get_str_offset","value":"pub fn get_str_offset(&Self, Format, DebugStrOffsetsBase<R::Offset>,\n                      DebugStrOffsetsIndex<R::Offset>)\n-> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_str` offset at the given `base` and `index`.","sig":null,"attributes":[{"value":"/ Returns the `.debug_str` offset at the given `base` and `index`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832304,"byte_end":832372,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832377,"byte_end":832380,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ A set of entries in the `.debug_str_offsets` section consists of a header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832385,"byte_end":832462,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ followed by a series of string table offsets.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832467,"byte_end":832516,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832521,"byte_end":832524,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The `base` must be the `DW_AT_str_offsets_base` value from the compilation unit DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832529,"byte_end":832617,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ This is an offset that points to the first entry following the header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832622,"byte_end":832696,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832701,"byte_end":832704,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The `index` is the value of a `DW_FORM_strx` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832709,"byte_end":832768,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832773,"byte_end":832776,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `format` must be the DWARF format of the compilation unit. This format must","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832781,"byte_end":832864,"line_start":119,"line_end":119,"column_start":5,"column_end":88}},{"value":"/ match the header. However, note that we do not parse the header to validate this,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832869,"byte_end":832954,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ since locating the header is unreliable, and the GNU extensions do not emit it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832959,"byte_end":833042,"line_start":121,"line_end":121,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834180,"byte_end":834186,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStrOffsets<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugStrOffsets<R> where\nF: FnMut(&'a T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStrOffsets` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugStrOffsets` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833538,"byte_end":833612,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833617,"byte_end":833620,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833625,"byte_end":833690,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833695,"byte_end":833698,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833703,"byte_end":833723,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833728,"byte_end":833731,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833736,"byte_end":833754,"line_start":144,"line_end":144,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833759,"byte_end":833804,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833809,"byte_end":833893,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugStrOffsets<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833898,"byte_end":833970,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833975,"byte_end":834022,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834027,"byte_end":834077,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834082,"byte_end":834144,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834149,"byte_end":834156,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834161,"byte_end":834168,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834858,"byte_end":834887,"line_start":183,"line_end":183,"column_start":12,"column_end":41},"name":"default_for_encoding_and_file","qualname":"<DebugStrOffsetsBase<Offset>>::default_for_encoding_and_file","value":"pub fn default_for_encoding_and_file(Encoding, DwarfFileType)\n-> DebugStrOffsetsBase<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DebugStrOffsetsBase` with the default value of DW_AT_str_offsets_base\n for the given `Encoding` and `DwarfFileType`.\n","sig":null,"attributes":[{"value":"/ Returns a `DebugStrOffsetsBase` with the default value of DW_AT_str_offsets_base","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834708,"byte_end":834792,"line_start":181,"line_end":181,"column_start":5,"column_end":89}},{"value":"/ for the given `Encoding` and `DwarfFileType`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834797,"byte_end":834846,"line_start":182,"line_end":182,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7279},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835741,"byte_end":835753,"line_start":204,"line_end":204,"column_start":12,"column_end":24},"name":"DebugLineStr","qualname":"::read::str::DebugLineStr","value":"DebugLineStr {  }","parent":null,"children":[{"krate":0,"index":7281}],"decl_id":null,"docs":" The `DebugLineStr` struct represents the DWARF strings\n found in the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ The `DebugLineStr` struct represents the DWARF strings","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835588,"byte_end":835646,"line_start":201,"line_end":201,"column_start":1,"column_end":59}},{"value":"/ found in the `.debug_line_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835647,"byte_end":835690,"line_start":202,"line_end":202,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835905,"byte_end":835912,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugLineStr<R>>::get_str","value":"pub fn get_str(&Self, DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.\n","sig":null,"attributes":[{"value":"/ Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835816,"byte_end":835893,"line_start":209,"line_end":209,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836770,"byte_end":836776,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLineStr<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugLineStr<R> where F: FnMut(&'a T)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLineStr` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugLineStr` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836134,"byte_end":836205,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836210,"byte_end":836213,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836218,"byte_end":836283,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836288,"byte_end":836291,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836296,"byte_end":836316,"line_start":222,"line_end":222,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836321,"byte_end":836324,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836329,"byte_end":836347,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836352,"byte_end":836397,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836402,"byte_end":836486,"line_start":226,"line_end":226,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugLineStr<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836491,"byte_end":836560,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836565,"byte_end":836612,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836617,"byte_end":836667,"line_start":229,"line_end":229,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836672,"byte_end":836734,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836739,"byte_end":836746,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836751,"byte_end":836758,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":839831,"byte_end":839845,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugTypesOffset<T>>::to_unit_offset","value":"pub fn to_unit_offset<R>(&Self, &UnitHeader<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_types section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":839612,"byte_end":839680,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the .debug_types section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":839685,"byte_end":839750,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/ Returns `None` if the offset is not within the unit entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":839755,"byte_end":839819,"line_start":24,"line_end":24,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840459,"byte_end":840473,"line_start":42,"line_end":42,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugInfoOffset<T>>::to_unit_offset","value":"pub fn to_unit_offset<R>(&Self, &UnitHeader<R>) -> Option<UnitOffset<T>> where\nR: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_info section.\n Returns `None` if the offset is not within this unit entries.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the given unit,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840240,"byte_end":840308,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ instead of relative to the start of the .debug_info section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840313,"byte_end":840377,"line_start":40,"line_end":40,"column_start":5,"column_end":69}},{"value":"/ Returns `None` if the offset is not within this unit entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840382,"byte_end":840447,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":7293},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840956,"byte_end":840966,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"UnitOffset","qualname":"::read::unit::UnitOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the current compilation or type unit.\n","sig":null,"attributes":[{"value":"/ An offset into the current compilation or type unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840820,"byte_end":840876,"line_start":55,"line_end":55,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7296},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840978,"byte_end":840983,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"name":"0","qualname":"::read::unit::UnitOffset::0","value":"T","parent":{"krate":0,"index":7293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841255,"byte_end":841275,"line_start":63,"line_end":63,"column_start":12,"column_end":32},"name":"to_debug_info_offset","qualname":"<UnitOffset<T>>::to_debug_info_offset","value":"pub fn to_debug_info_offset<R>(&Self, &UnitHeader<R>)\n-> Option<DebugInfoOffset<T>> where R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given unit. Returns None if the\n provided unit lives in the .debug_types section.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_info section,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841029,"byte_end":841106,"line_start":60,"line_end":60,"column_start":5,"column_end":82}},{"value":"/ instead of relative to the start of the given unit. Returns None if the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841111,"byte_end":841186,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ provided unit lives in the .debug_types section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841191,"byte_end":841243,"line_start":62,"line_end":62,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841741,"byte_end":841762,"line_start":74,"line_end":74,"column_start":12,"column_end":33},"name":"to_debug_types_offset","qualname":"<UnitOffset<T>>::to_debug_types_offset","value":"pub fn to_debug_types_offset<R>(&Self, &UnitHeader<R>)\n-> Option<DebugTypesOffset<T>> where R: Reader<Offset = T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_types section,\n instead of relative to the start of the given unit. Returns None if the\n provided unit lives in the .debug_info section.\n","sig":null,"attributes":[{"value":"/ Convert an offset to be relative to the start of the .debug_types section,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841515,"byte_end":841593,"line_start":71,"line_end":71,"column_start":5,"column_end":83}},{"value":"/ instead of relative to the start of the given unit. Returns None if the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841598,"byte_end":841673,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ provided unit lives in the .debug_info section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841678,"byte_end":841729,"line_start":73,"line_end":73,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7326},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842163,"byte_end":842172,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"DebugInfo","qualname":"::read::unit::DebugInfo","value":"DebugInfo {  }","parent":null,"children":[{"krate":0,"index":7328}],"decl_id":null,"docs":" The `DebugInfo` struct represents the DWARF debugging information found in\n the `.debug_info` section.\n","sig":null,"attributes":[{"value":"/ The `DebugInfo` struct represents the DWARF debugging information found in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842003,"byte_end":842081,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ the `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842082,"byte_end":842112,"line_start":84,"line_end":84,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842893,"byte_end":842896,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugInfo<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugInfo` instance from the data in the `.debug_info`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugInfo` instance from the data in the `.debug_info`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842303,"byte_end":842378,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842383,"byte_end":842395,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842400,"byte_end":842403,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_info` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842408,"byte_end":842483,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842488,"byte_end":842558,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842563,"byte_end":842602,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842607,"byte_end":842610,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842615,"byte_end":842622,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842627,"byte_end":842668,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842673,"byte_end":842676,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842681,"byte_end":842722,"line_start":104,"line_end":104,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_info_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842727,"byte_end":842779,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842784,"byte_end":842869,"line_start":106,"line_end":106,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842874,"byte_end":842881,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843672,"byte_end":843677,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugInfo<R>>::units","value":"pub fn units(&Self) -> DebugInfoUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the units in this `.debug_info` section.","sig":null,"attributes":[{"value":"/ Iterate the units in this `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843066,"byte_end":843118,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843123,"byte_end":843126,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843131,"byte_end":843138,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugInfo, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843143,"byte_end":843184,"line_start":117,"line_end":117,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843189,"byte_end":843192,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843197,"byte_end":843216,"line_start":119,"line_end":119,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_info_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843221,"byte_end":843273,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843278,"byte_end":843363,"line_start":121,"line_end":121,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843368,"byte_end":843371,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_info.units();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843376,"byte_end":843414,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/ while let Some(unit) = iter.next().unwrap() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843419,"byte_end":843468,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/     println!(\"unit's length is {}\", unit.unit_length());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843473,"byte_end":843533,"line_start":125,"line_end":125,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843538,"byte_end":843543,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843548,"byte_end":843555,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843560,"byte_end":843563,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843568,"byte_end":843589,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843594,"byte_end":843660,"line_start":130,"line_end":130,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843985,"byte_end":844003,"line_start":141,"line_end":141,"column_start":12,"column_end":30},"name":"header_from_offset","qualname":"<DebugInfo<R>>::header_from_offset","value":"pub fn header_from_offset(&Self, DebugInfoOffset<R::Offset>)\n-> Result<UnitHeader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the UnitHeader located at offset from this .debug_info section.","sig":null,"attributes":[{"value":"/ Get the UnitHeader located at offset from this .debug_info section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843886,"byte_end":843957,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843962,"byte_end":843965,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843970,"byte_end":843973,"line_start":140,"line_end":140,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844877,"byte_end":844883,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugInfo<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugInfo<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugInfo` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugInfo` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844247,"byte_end":844315,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844320,"byte_end":844323,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844328,"byte_end":844393,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844398,"byte_end":844401,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844406,"byte_end":844426,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844431,"byte_end":844434,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844439,"byte_end":844457,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844462,"byte_end":844507,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844512,"byte_end":844596,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugInfo<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844601,"byte_end":844667,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844672,"byte_end":844719,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844724,"byte_end":844774,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844779,"byte_end":844841,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844846,"byte_end":844853,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844858,"byte_end":844865,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7340},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845545,"byte_end":845569,"line_start":193,"line_end":193,"column_start":12,"column_end":36},"name":"DebugInfoUnitHeadersIter","qualname":"::read::unit::DebugInfoUnitHeadersIter","value":"DebugInfoUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":7342},{"krate":0,"index":7343}],"decl_id":null,"docs":" An iterator over the units of a .debug_info section.","sig":null,"attributes":[{"value":"/ An iterator over the units of a .debug_info section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845340,"byte_end":845396,"line_start":188,"line_end":188,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845397,"byte_end":845400,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845401,"byte_end":845430,"line_start":190,"line_end":190,"column_start":1,"column_end":30}},{"value":"/ `DebugInfo::units`](./struct.DebugInfo.html#method.units) for more detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845431,"byte_end":845509,"line_start":191,"line_end":191,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845751,"byte_end":845755,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"next","qualname":"<DebugInfoUnitHeadersIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<UnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next unit header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next unit header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845690,"byte_end":845739,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7352},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847676,"byte_end":847687,"line_start":261,"line_end":261,"column_start":5,"column_end":16},"name":"Compilation","qualname":"::read::unit::UnitType::Compilation","value":"UnitType::Compilation","parent":{"krate":0,"index":7350},"children":[],"decl_id":null,"docs":" In DWARF5, a unit with type `DW_UT_compile`. In previous DWARF versions,\n any unit appearing in the .debug_info section.\n","sig":null,"attributes":[{"value":"/ In DWARF5, a unit with type `DW_UT_compile`. In previous DWARF versions,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847540,"byte_end":847616,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ any unit appearing in the .debug_info section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847621,"byte_end":847671,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":7354},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847810,"byte_end":847814,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"Type","qualname":"::read::unit::UnitType::Type","value":"UnitType::Type { type_signature, type_offset }","parent":{"krate":0,"index":7350},"children":[],"decl_id":null,"docs":" In DWARF5, a unit with type `DW_UT_type`. In DWARF4, any unit appearing\n in the .debug_types section.\n","sig":null,"attributes":[{"value":"/ In DWARF5, a unit with type `DW_UT_type`. In DWARF4, any unit appearing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847693,"byte_end":847768,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ in the .debug_types section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847773,"byte_end":847805,"line_start":263,"line_end":263,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848154,"byte_end":848161,"line_start":272,"line_end":272,"column_start":5,"column_end":12},"name":"Partial","qualname":"::read::unit::UnitType::Partial","value":"UnitType::Partial","parent":{"krate":0,"index":7350},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_partial`. The root DIE of this unit should be a\n `DW_TAG_partial_unit`.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_partial`. The root DIE of this unit should be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848043,"byte_end":848118,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ `DW_TAG_partial_unit`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848123,"byte_end":848149,"line_start":271,"line_end":271,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7359},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848501,"byte_end":848509,"line_start":278,"line_end":278,"column_start":5,"column_end":13},"name":"Skeleton","qualname":"::read::unit::UnitType::Skeleton","value":"UnitType::Skeleton(DwoId)","parent":{"krate":0,"index":7350},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_skeleton`. The enclosed dwo_id can be used to\n link this with the corresponding `SplitCompilation` unit in a dwo file.\n NB: The non-standard GNU split DWARF extension to DWARF 4 will instead\n be a `Compilation` unit with the dwo_id present as an attribute on the\n root DIE.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_skeleton`. The enclosed dwo_id can be used to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848167,"byte_end":848240,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ link this with the corresponding `SplitCompilation` unit in a dwo file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848245,"byte_end":848320,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ NB: The non-standard GNU split DWARF extension to DWARF 4 will instead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848325,"byte_end":848399,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ be a `Compilation` unit with the dwo_id present as an attribute on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848404,"byte_end":848478,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ root DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848483,"byte_end":848496,"line_start":277,"line_end":277,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7362},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848862,"byte_end":848878,"line_start":284,"line_end":284,"column_start":5,"column_end":21},"name":"SplitCompilation","qualname":"::read::unit::UnitType::SplitCompilation","value":"UnitType::SplitCompilation(DwoId)","parent":{"krate":0,"index":7350},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_split_compile`. The enclosed dwo_id can be used to\n link this with the corresponding `Skeleton` unit in the original binary.\n NB: The non-standard GNU split DWARF extension to DWARF 4 will instead\n be a `Compilation` unit with the dwo_id present as an attribute on the\n root DIE.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_split_compile`. The enclosed dwo_id can be used to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848522,"byte_end":848600,"line_start":279,"line_end":279,"column_start":5,"column_end":83}},{"value":"/ link this with the corresponding `Skeleton` unit in the original binary.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848605,"byte_end":848681,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ NB: The non-standard GNU split DWARF extension to DWARF 4 will instead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848686,"byte_end":848760,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/ be a `Compilation` unit with the dwo_id present as an attribute on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848765,"byte_end":848839,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ root DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848844,"byte_end":848857,"line_start":283,"line_end":283,"column_start":5,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":7365},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":849047,"byte_end":849056,"line_start":287,"line_end":287,"column_start":5,"column_end":14},"name":"SplitType","qualname":"::read::unit::UnitType::SplitType","value":"UnitType::SplitType { type_signature, type_offset }","parent":{"krate":0,"index":7350},"children":[],"decl_id":null,"docs":" A unit with type `DW_UT_split_type`. A split type unit is identical to a\n conventional type unit except for the section in which it appears.\n","sig":null,"attributes":[{"value":"/ A unit with type `DW_UT_split_type`. A split type unit is identical to a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848891,"byte_end":848967,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ conventional type unit except for the section in which it appears.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":848972,"byte_end":849042,"line_start":286,"line_end":286,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":7350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847485,"byte_end":847493,"line_start":255,"line_end":255,"column_start":10,"column_end":18},"name":"UnitType","qualname":"::read::unit::UnitType","value":"pub enum UnitType<Offset> where Offset: ReaderOffset {\n    Compilation,\n    Type {\n        type_signature: DebugTypeSignature,\n        type_offset: UnitOffset<Offset>,\n    },\n    Partial,\n    Skeleton(DwoId),\n    SplitCompilation(DwoId),\n    SplitType {\n        type_signature: DebugTypeSignature,\n        type_offset: UnitOffset<Offset>,\n    },\n}","parent":null,"children":[{"krate":0,"index":7352},{"krate":0,"index":7354},{"krate":0,"index":7357},{"krate":0,"index":7359},{"krate":0,"index":7362},{"krate":0,"index":7365}],"decl_id":null,"docs":" This enum specifies the type of the unit and any type\n specific data carried in the header (e.g. the type\n signature/type offset of a type unit).\n","sig":null,"attributes":[{"value":"/ This enum specifies the type of the unit and any type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847275,"byte_end":847332,"line_start":251,"line_end":251,"column_start":1,"column_end":58}},{"value":"/ specific data carried in the header (e.g. the type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847333,"byte_end":847387,"line_start":252,"line_end":252,"column_start":1,"column_end":55}},{"value":"/ signature/type offset of a type unit).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":847388,"byte_end":847430,"line_start":253,"line_end":253,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7387},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":850119,"byte_end":850129,"line_start":317,"line_end":317,"column_start":12,"column_end":22},"name":"UnitHeader","qualname":"::read::unit::UnitHeader","value":"UnitHeader {  }","parent":null,"children":[{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395}],"decl_id":null,"docs":" The common fields for the headers of compilation units and\n type units.\n","sig":null,"attributes":[{"value":"/ The common fields for the headers of compilation units and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":849984,"byte_end":850046,"line_start":314,"line_end":314,"column_start":1,"column_end":63}},{"value":"/ type units.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":850047,"byte_end":850062,"line_start":315,"line_end":315,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":850605,"byte_end":850608,"line_start":337,"line_end":337,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitHeader<R, Offset>>::new","value":"pub fn new(Encoding, Offset, UnitType<Offset>, DebugAbbrevOffset<Offset>,\n           UnitSectionOffset<Offset>, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnitHeader`.\n","sig":null,"attributes":[{"value":"/ Construct a new `UnitHeader`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":850560,"byte_end":850593,"line_start":336,"line_end":336,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851234,"byte_end":851240,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"offset","qualname":"<UnitHeader<R, Offset>>::offset","value":"pub fn offset(&Self) -> UnitSectionOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this unit within its section.\n","sig":null,"attributes":[{"value":"/ Get the offset of this unit within its section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851171,"byte_end":851222,"line_start":362,"line_end":362,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851419,"byte_end":851433,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<UnitHeader<R, Offset>>::size_of_header","value":"pub fn size_of_header(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the common unit header for the given\n DWARF format.\n","sig":null,"attributes":[{"value":"/ Return the serialized size of the common unit header for the given","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851315,"byte_end":851385,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ DWARF format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851390,"byte_end":851407,"line_start":368,"line_end":368,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852567,"byte_end":852578,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<UnitHeader<R, Offset>>::unit_length","value":"pub fn unit_length(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit, not\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit, not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852420,"byte_end":852491,"line_start":393,"line_end":393,"column_start":5,"column_end":76}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852496,"byte_end":852555,"line_start":394,"line_end":394,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852777,"byte_end":852798,"line_start":401,"line_end":401,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<UnitHeader<R, Offset>>::length_including_self","value":"pub fn length_including_self(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[{"value":"/ Get the length of the debugging info for this compilation unit,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852634,"byte_end":852701,"line_start":399,"line_end":399,"column_start":5,"column_end":72}},{"value":"/ including the byte length of the encoded length itself.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852706,"byte_end":852765,"line_start":400,"line_end":400,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852970,"byte_end":852978,"line_start":406,"line_end":406,"column_start":12,"column_end":20},"name":"encoding","qualname":"<UnitHeader<R, Offset>>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"/ Return the encoding parameters for this unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":852909,"byte_end":852958,"line_start":405,"line_end":405,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853119,"byte_end":853126,"line_start":411,"line_end":411,"column_start":12,"column_end":19},"name":"version","qualname":"<UnitHeader<R, Offset>>::version","value":"pub fn version(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this compilation unit.\n","sig":null,"attributes":[{"value":"/ Get the DWARF version of the debugging info for this compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853033,"byte_end":853107,"line_start":410,"line_end":410,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853230,"byte_end":853235,"line_start":416,"line_end":416,"column_start":12,"column_end":17},"name":"type_","qualname":"<UnitHeader<R, Offset>>::type_","value":"pub fn type_(&Self) -> UnitType<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the UnitType of this unit.\n","sig":null,"attributes":[{"value":"/ Get the UnitType of this unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853184,"byte_end":853218,"line_start":415,"line_end":415,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853440,"byte_end":853459,"line_start":422,"line_end":422,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<UnitHeader<R, Offset>>::debug_abbrev_offset","value":"pub fn debug_abbrev_offset(&Self) -> DebugAbbrevOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this compilation unit's\n debugging information entries' abbreviations.\n","sig":null,"attributes":[{"value":"/ The offset into the `.debug_abbrev` section for this compilation unit's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853299,"byte_end":853374,"line_start":420,"line_end":420,"column_start":5,"column_end":80}},{"value":"/ debugging information entries' abbreviations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853379,"byte_end":853428,"line_start":421,"line_end":421,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853616,"byte_end":853628,"line_start":427,"line_end":427,"column_start":12,"column_end":24},"name":"address_size","qualname":"<UnitHeader<R, Offset>>::address_size","value":"pub fn address_size(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this compilation unit.\n","sig":null,"attributes":[{"value":"/ The size of addresses (in bytes) in this compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853542,"byte_end":853604,"line_start":426,"line_end":426,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853770,"byte_end":853776,"line_start":432,"line_end":432,"column_start":12,"column_end":18},"name":"format","qualname":"<UnitHeader<R, Offset>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this compilation unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[{"value":"/ Whether this compilation unit is encoded in 64- or 32-bit DWARF.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853690,"byte_end":853758,"line_start":431,"line_end":431,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853912,"byte_end":853923,"line_start":437,"line_end":437,"column_start":12,"column_end":23},"name":"header_size","qualname":"<UnitHeader<R, Offset>>::header_size","value":"pub fn header_size(&Self) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this compilation unit.\n","sig":null,"attributes":[{"value":"/ The serialized size of the header for this compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":853836,"byte_end":853900,"line_start":436,"line_end":436,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":854413,"byte_end":854418,"line_start":452,"line_end":452,"column_start":12,"column_end":17},"name":"range","qualname":"<UnitHeader<R, Offset>>::range","value":"pub fn range(&Self, Range<UnitOffset<Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":854349,"byte_end":854401,"line_start":451,"line_end":451,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":855076,"byte_end":855086,"line_start":470,"line_end":470,"column_start":12,"column_end":22},"name":"range_from","qualname":"<UnitHeader<R, Offset>>::range_from","value":"pub fn range_from(&Self, RangeFrom<UnitOffset<Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":855012,"byte_end":855064,"line_start":469,"line_end":469,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":855476,"byte_end":855484,"line_start":481,"line_end":481,"column_start":12,"column_end":20},"name":"range_to","qualname":"<UnitHeader<R, Offset>>::range_to","value":"pub fn range_to(&Self, RangeTo<UnitOffset<Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[{"value":"/ Get the underlying bytes for the supplied range.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":855412,"byte_end":855464,"line_start":480,"line_end":480,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":855877,"byte_end":855882,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"entry","qualname":"<UnitHeader<R, Offset>>::entry","value":"pub fn entry<'me,\n             'abbrev>(&'me Self, &'abbrev Abbreviations, UnitOffset<Offset>)\n-> Result<DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[{"value":"/ Read the `DebuggingInformationEntry` at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":855804,"byte_end":855865,"line_start":491,"line_end":491,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":856328,"byte_end":856335,"line_start":503,"line_end":503,"column_start":12,"column_end":19},"name":"entries","qualname":"<UnitHeader<R, Offset>>::entries","value":"pub fn entries<'me, 'abbrev>(&'me Self, &'abbrev Abbreviations)\n-> EntriesCursor","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":856262,"byte_end":856316,"line_start":502,"line_end":502,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":856777,"byte_end":856794,"line_start":518,"line_end":518,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<UnitHeader<R, Offset>>::entries_at_offset","value":"pub fn entries_at_offset<'me,\n                         'abbrev>(&'me Self, &'abbrev Abbreviations,\n                                  UnitOffset<Offset>) -> Result<EntriesCursor>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this compilation unit's `DebuggingInformationEntry`s","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":856662,"byte_end":856727,"line_start":516,"line_end":516,"column_start":5,"column_end":70}},{"value":"/ starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":856732,"byte_end":856765,"line_start":517,"line_end":517,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":857304,"byte_end":857316,"line_start":535,"line_end":535,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<UnitHeader<R, Offset>>::entries_tree","value":"pub fn entries_tree<'me,\n                    'abbrev>(&'me Self, &'abbrev Abbreviations,\n                             Option<UnitOffset<Offset>>)\n-> Result<EntriesTree>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"/ Navigate this unit's `DebuggingInformationEntry`s as a tree","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":857191,"byte_end":857254,"line_start":533,"line_end":533,"column_start":5,"column_end":68}},{"value":"/ starting at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":857259,"byte_end":857292,"line_start":534,"line_end":534,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":857787,"byte_end":857798,"line_start":548,"line_end":548,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<UnitHeader<R, Offset>>::entries_raw","value":"pub fn entries_raw<'me,\n                   'abbrev>(&'me Self, &'abbrev Abbreviations,\n                            Option<UnitOffset<Offset>>) -> Result<EntriesRaw>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"/ Read the raw data that defines the Debugging Information Entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":857706,"byte_end":857775,"line_start":547,"line_end":547,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":858305,"byte_end":858318,"line_start":566,"line_end":566,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<UnitHeader<R, Offset>>::abbreviations","value":"pub fn abbreviations(&Self, &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this unit's abbreviations.\n","sig":null,"attributes":[{"value":"/ Parse this unit's abbreviations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":858257,"byte_end":858293,"line_start":565,"line_end":565,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7422},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861423,"byte_end":861448,"line_start":661,"line_end":661,"column_start":12,"column_end":37},"name":"DebuggingInformationEntry","qualname":"::read::unit::DebuggingInformationEntry","value":"DebuggingInformationEntry {  }","parent":null,"children":[{"krate":0,"index":7427},{"krate":0,"index":7428},{"krate":0,"index":7429},{"krate":0,"index":7430},{"krate":0,"index":7431}],"decl_id":null,"docs":" A Debugging Information Entry (DIE).","sig":null,"attributes":[{"value":"/ A Debugging Information Entry (DIE).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861266,"byte_end":861306,"line_start":657,"line_end":657,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861307,"byte_end":861310,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ DIEs have a set of attributes and optionally have children DIEs as well.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861311,"byte_end":861387,"line_start":659,"line_end":659,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861948,"byte_end":861951,"line_start":679,"line_end":679,"column_start":12,"column_end":15},"name":"new","qualname":"<DebuggingInformationEntry>::new","value":"pub fn new(UnitOffset<Offset>, R, &'abbrev Abbreviation,\n           &'unit UnitHeader<R, Offset>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ Construct a new `DebuggingInformationEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861888,"byte_end":861936,"line_start":678,"line_end":678,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862330,"byte_end":862334,"line_start":695,"line_end":695,"column_start":12,"column_end":16},"name":"code","qualname":"<DebuggingInformationEntry>::code","value":"pub fn code(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's code.\n","sig":null,"attributes":[{"value":"/ Get this entry's code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862292,"byte_end":862318,"line_start":694,"line_end":694,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862429,"byte_end":862435,"line_start":700,"line_end":700,"column_start":12,"column_end":18},"name":"offset","qualname":"<DebuggingInformationEntry>::offset","value":"pub fn offset(&Self) -> UnitOffset<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's offset.\n","sig":null,"attributes":[{"value":"/ Get this entry's offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862389,"byte_end":862417,"line_start":699,"line_end":699,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864828,"byte_end":864831,"line_start":767,"line_end":767,"column_start":12,"column_end":15},"name":"tag","qualname":"<DebuggingInformationEntry>::tag","value":"pub fn tag(&Self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's `DW_TAG_whatever` tag.","sig":null,"attributes":[{"value":"/ Get this entry's `DW_TAG_whatever` tag.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862498,"byte_end":862541,"line_start":704,"line_end":704,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862546,"byte_end":862549,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862554,"byte_end":862561,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862566,"byte_end":862622,"line_start":707,"line_end":707,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862627,"byte_end":862649,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862654,"byte_end":862689,"line_start":709,"line_end":709,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862694,"byte_end":862699,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 12","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862704,"byte_end":862740,"line_start":711,"line_end":711,"column_start":5,"column_end":41}},{"value":"/ #     0x0c, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862745,"byte_end":862778,"line_start":712,"line_end":712,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862783,"byte_end":862805,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862810,"byte_end":862831,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862836,"byte_end":862868,"line_start":715,"line_end":715,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862873,"byte_end":862906,"line_start":716,"line_end":716,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862911,"byte_end":862936,"line_start":717,"line_end":717,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862941,"byte_end":862956,"line_start":718,"line_end":718,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862961,"byte_end":862966,"line_start":719,"line_end":719,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862971,"byte_end":862988,"line_start":720,"line_end":720,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":862993,"byte_end":862998,"line_start":721,"line_end":721,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863003,"byte_end":863033,"line_start":722,"line_end":722,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863038,"byte_end":863053,"line_start":723,"line_end":723,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863058,"byte_end":863113,"line_start":724,"line_end":724,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863118,"byte_end":863151,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863156,"byte_end":863164,"line_start":726,"line_end":726,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863169,"byte_end":863232,"line_start":727,"line_end":727,"column_start":5,"column_end":68}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863237,"byte_end":863261,"line_start":728,"line_end":728,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863266,"byte_end":863283,"line_start":729,"line_end":729,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863288,"byte_end":863303,"line_start":730,"line_end":730,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863308,"byte_end":863338,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863343,"byte_end":863358,"line_start":732,"line_end":732,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863363,"byte_end":863390,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863395,"byte_end":863410,"line_start":734,"line_end":734,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863415,"byte_end":863444,"line_start":735,"line_end":735,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863449,"byte_end":863491,"line_start":736,"line_end":736,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863496,"byte_end":863513,"line_start":737,"line_end":737,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863518,"byte_end":863564,"line_start":738,"line_end":738,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863569,"byte_end":863586,"line_start":739,"line_end":739,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863591,"byte_end":863618,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863623,"byte_end":863638,"line_start":741,"line_end":741,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863643,"byte_end":863658,"line_start":742,"line_end":742,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863663,"byte_end":863691,"line_start":743,"line_end":743,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863696,"byte_end":863710,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863715,"byte_end":863723,"line_start":745,"line_end":745,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863728,"byte_end":863797,"line_start":746,"line_end":746,"column_start":5,"column_end":74}},{"value":"/ # let unit = debug_info.units().next().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863802,"byte_end":863863,"line_start":747,"line_end":747,"column_start":5,"column_end":66}},{"value":"/ # let abbrevs = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863868,"byte_end":863931,"line_start":748,"line_end":748,"column_start":5,"column_end":68}},{"value":"/ # let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863936,"byte_end":863982,"line_start":749,"line_end":749,"column_start":5,"column_end":51}},{"value":"/ # let (_, entry) = cursor.next_dfs().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":863987,"byte_end":864046,"line_start":750,"line_end":750,"column_start":5,"column_end":64}},{"value":"/ # let mut get_some_entry = || entry;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864051,"byte_end":864091,"line_start":751,"line_end":751,"column_start":5,"column_end":45}},{"value":"/ let entry = get_some_entry();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864096,"byte_end":864129,"line_start":752,"line_end":752,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864134,"byte_end":864137,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ match entry.tag() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864142,"byte_end":864165,"line_start":754,"line_end":754,"column_start":5,"column_end":28}},{"value":"/     gimli::DW_TAG_subprogram =>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864170,"byte_end":864205,"line_start":755,"line_end":755,"column_start":5,"column_end":40}},{"value":"/         println!(\"this entry contains debug info about a function\"),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864210,"byte_end":864282,"line_start":756,"line_end":756,"column_start":5,"column_end":77}},{"value":"/     gimli::DW_TAG_inlined_subroutine =>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864287,"byte_end":864330,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/         println!(\"this entry contains debug info about a particular instance of inlining\"),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864335,"byte_end":864430,"line_start":758,"line_end":758,"column_start":5,"column_end":100}},{"value":"/     gimli::DW_TAG_variable =>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864435,"byte_end":864468,"line_start":759,"line_end":759,"column_start":5,"column_end":38}},{"value":"/         println!(\"this entry contains debug info about a local variable\"),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864473,"byte_end":864551,"line_start":760,"line_end":760,"column_start":5,"column_end":83}},{"value":"/     gimli::DW_TAG_formal_parameter =>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864556,"byte_end":864597,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/         println!(\"this entry contains debug info about a function parameter\"),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864602,"byte_end":864684,"line_start":762,"line_end":762,"column_start":5,"column_end":87}},{"value":"/     otherwise =>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864689,"byte_end":864709,"line_start":763,"line_end":763,"column_start":5,"column_end":25}},{"value":"/         println!(\"this entry is some other kind of data: {:?}\", otherwise),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864714,"byte_end":864793,"line_start":764,"line_end":764,"column_start":5,"column_end":84}},{"value":"/ };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864798,"byte_end":864804,"line_start":765,"line_end":765,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864809,"byte_end":864816,"line_start":766,"line_end":766,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864982,"byte_end":864994,"line_start":772,"line_end":772,"column_start":12,"column_end":24},"name":"has_children","qualname":"<DebuggingInformationEntry>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this entry's type can have children, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if this entry's type can have children, false otherwise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":864898,"byte_end":864970,"line_start":771,"line_end":771,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867734,"byte_end":867739,"line_start":854,"line_end":854,"column_start":12,"column_end":17},"name":"attrs","qualname":"<DebuggingInformationEntry>::attrs","value":"pub fn attrs<'me>(&'me Self) -> AttrsIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this entry's set of attributes.","sig":null,"attributes":[{"value":"/ Iterate over this entry's set of attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865058,"byte_end":865106,"line_start":776,"line_end":776,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865111,"byte_end":865114,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865119,"byte_end":865126,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865131,"byte_end":865185,"line_start":779,"line_end":779,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865190,"byte_end":865193,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ // Read the `.debug_info` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865198,"byte_end":865236,"line_start":781,"line_end":781,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865241,"byte_end":865244,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # let info_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865249,"byte_end":865271,"line_start":783,"line_end":783,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865276,"byte_end":865311,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865316,"byte_end":865321,"line_start":785,"line_end":785,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 12","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865326,"byte_end":865362,"line_start":786,"line_end":786,"column_start":5,"column_end":41}},{"value":"/ #     0x0c, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865367,"byte_end":865400,"line_start":787,"line_end":787,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865405,"byte_end":865427,"line_start":788,"line_end":788,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865432,"byte_end":865453,"line_start":789,"line_end":789,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865458,"byte_end":865490,"line_start":790,"line_end":790,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865495,"byte_end":865528,"line_start":791,"line_end":791,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865533,"byte_end":865558,"line_start":792,"line_end":792,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865563,"byte_end":865578,"line_start":793,"line_end":793,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865583,"byte_end":865588,"line_start":794,"line_end":794,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865593,"byte_end":865610,"line_start":795,"line_end":795,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865615,"byte_end":865620,"line_start":796,"line_end":796,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865625,"byte_end":865655,"line_start":797,"line_end":797,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865660,"byte_end":865675,"line_start":798,"line_end":798,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865680,"byte_end":865735,"line_start":799,"line_end":799,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865740,"byte_end":865773,"line_start":800,"line_end":800,"column_start":5,"column_end":38}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865778,"byte_end":865786,"line_start":801,"line_end":801,"column_start":5,"column_end":13}},{"value":"/ # let read_debug_info_section_somehow = || &info_buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865791,"byte_end":865848,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ let debug_info = DebugInfo::new(read_debug_info_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865853,"byte_end":865938,"line_start":803,"line_end":803,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865943,"byte_end":865946,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // Get the data about the first compilation unit out of the `.debug_info`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":865951,"byte_end":866029,"line_start":805,"line_end":805,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866034,"byte_end":866037,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let unit = debug_info.units().next()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866042,"byte_end":866082,"line_start":807,"line_end":807,"column_start":5,"column_end":45}},{"value":"/     .expect(\"Should have at least one compilation unit\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866087,"byte_end":866147,"line_start":808,"line_end":808,"column_start":5,"column_end":65}},{"value":"/     .expect(\"and it should parse ok\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866152,"byte_end":866194,"line_start":809,"line_end":809,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866199,"byte_end":866202,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ // Read the `.debug_abbrev` section and parse the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866207,"byte_end":866260,"line_start":811,"line_end":811,"column_start":5,"column_end":58}},{"value":"/ // abbreviations for our compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866265,"byte_end":866311,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866316,"byte_end":866319,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866324,"byte_end":866348,"line_start":814,"line_end":814,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866353,"byte_end":866370,"line_start":815,"line_end":815,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866375,"byte_end":866390,"line_start":816,"line_end":816,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866395,"byte_end":866425,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866430,"byte_end":866445,"line_start":818,"line_end":818,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866450,"byte_end":866477,"line_start":819,"line_end":819,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866482,"byte_end":866497,"line_start":820,"line_end":820,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866502,"byte_end":866531,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866536,"byte_end":866578,"line_start":822,"line_end":822,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866583,"byte_end":866600,"line_start":823,"line_end":823,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866605,"byte_end":866651,"line_start":824,"line_end":824,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866656,"byte_end":866673,"line_start":825,"line_end":825,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866678,"byte_end":866705,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866710,"byte_end":866725,"line_start":827,"line_end":827,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866730,"byte_end":866745,"line_start":828,"line_end":828,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866750,"byte_end":866778,"line_start":829,"line_end":829,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866783,"byte_end":866797,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866802,"byte_end":866810,"line_start":831,"line_end":831,"column_start":5,"column_end":13}},{"value":"/ # let read_debug_abbrev_section_somehow = || &abbrev_buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866815,"byte_end":866876,"line_start":832,"line_end":832,"column_start":5,"column_end":66}},{"value":"/ let debug_abbrev = DebugAbbrev::new(read_debug_abbrev_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866881,"byte_end":866972,"line_start":833,"line_end":833,"column_start":5,"column_end":96}},{"value":"/ let abbrevs = unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":866977,"byte_end":867038,"line_start":834,"line_end":834,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867043,"byte_end":867046,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ // Get the first entry from that compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867051,"byte_end":867105,"line_start":836,"line_end":836,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867110,"byte_end":867113,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867118,"byte_end":867162,"line_start":838,"line_end":838,"column_start":5,"column_end":49}},{"value":"/ let (_, entry) = cursor.next_dfs()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867167,"byte_end":867205,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/     .expect(\"Should parse next entry\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867210,"byte_end":867252,"line_start":840,"line_end":840,"column_start":5,"column_end":47}},{"value":"/     .expect(\"Should have at least one entry\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867257,"byte_end":867307,"line_start":841,"line_end":841,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867312,"byte_end":867315,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ // Finally, print the first entry's attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867320,"byte_end":867371,"line_start":843,"line_end":843,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867376,"byte_end":867379,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ let mut attrs = entry.attrs();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867384,"byte_end":867418,"line_start":845,"line_end":845,"column_start":5,"column_end":39}},{"value":"/ while let Some(attr) = attrs.next().unwrap() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867423,"byte_end":867473,"line_start":846,"line_end":846,"column_start":5,"column_end":55}},{"value":"/     println!(\"Attribute name = {:?}\", attr.name());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867478,"byte_end":867533,"line_start":847,"line_end":847,"column_start":5,"column_end":60}},{"value":"/     println!(\"Attribute value = {:?}\", attr.value());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867538,"byte_end":867595,"line_start":848,"line_end":848,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867600,"byte_end":867605,"line_start":849,"line_end":849,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867610,"byte_end":867617,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867622,"byte_end":867625,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867630,"byte_end":867651,"line_start":852,"line_end":852,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867656,"byte_end":867722,"line_start":853,"line_end":853,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868104,"byte_end":868108,"line_start":864,"line_end":864,"column_start":12,"column_end":16},"name":"attr","qualname":"<DebuggingInformationEntry>::attr","value":"pub fn attr(&Self, constants::DwAt) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return it. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":867956,"byte_end":868024,"line_start":862,"line_end":862,"column_start":5,"column_end":73}},{"value":"/ and return it. Returns `Ok(None)` if no attribute is found.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868029,"byte_end":868092,"line_start":863,"line_end":863,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868545,"byte_end":868559,"line_start":876,"line_end":876,"column_start":12,"column_end":26},"name":"attr_value_raw","qualname":"<DebuggingInformationEntry>::attr_value_raw","value":"pub fn attr_value_raw(&Self, constants::DwAt)\n-> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its raw value. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868386,"byte_end":868454,"line_start":874,"line_end":874,"column_start":5,"column_end":73}},{"value":"/ and return its raw value. Returns `Ok(None)` if no attribute is found.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868459,"byte_end":868533,"line_start":875,"line_end":875,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868898,"byte_end":868908,"line_start":884,"line_end":884,"column_start":12,"column_end":22},"name":"attr_value","qualname":"<DebuggingInformationEntry>::attr_value","value":"pub fn attr_value(&Self, constants::DwAt) -> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its normalized value.  Returns `Ok(None)` if no\n attribute is found.\n","sig":null,"attributes":[{"value":"/ Find the first attribute in this entry which has the given name,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868723,"byte_end":868791,"line_start":881,"line_end":881,"column_start":5,"column_end":73}},{"value":"/ and return its normalized value.  Returns `Ok(None)` if no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868796,"byte_end":868858,"line_start":882,"line_end":882,"column_start":5,"column_end":67}},{"value":"/ attribute is found.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":868863,"byte_end":868886,"line_start":883,"line_end":883,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7447},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871302,"byte_end":871306,"line_start":953,"line_end":953,"column_start":5,"column_end":9},"name":"Addr","qualname":"::read::unit::AttributeValue::Addr","value":"AttributeValue::Addr(u64)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" \"Refers to some location in the address space of the described program.\"\n","sig":null,"attributes":[{"value":"/ \"Refers to some location in the address space of the described program.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871221,"byte_end":871297,"line_start":952,"line_end":952,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7450},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871367,"byte_end":871372,"line_start":956,"line_end":956,"column_start":5,"column_end":10},"name":"Block","qualname":"::read::unit::AttributeValue::Block","value":"AttributeValue::Block(R)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A slice of an arbitrary number of bytes.\n","sig":null,"attributes":[{"value":"/ A slice of an arbitrary number of bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871318,"byte_end":871362,"line_start":955,"line_end":955,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7453},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871650,"byte_end":871655,"line_start":963,"line_end":963,"column_start":5,"column_end":10},"name":"Data1","qualname":"::read::unit::AttributeValue::Data1","value":"AttributeValue::Data1(u8)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A one byte constant data value. How to interpret the byte depends on context.","sig":null,"attributes":[{"value":"/ A one byte constant data value. How to interpret the byte depends on context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871382,"byte_end":871463,"line_start":958,"line_end":958,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871468,"byte_end":871471,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871476,"byte_end":871546,"line_start":960,"line_end":960,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871551,"byte_end":871621,"line_start":961,"line_end":961,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871626,"byte_end":871645,"line_start":962,"line_end":962,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7456},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872064,"byte_end":872069,"line_start":973,"line_end":973,"column_start":5,"column_end":10},"name":"Data2","qualname":"::read::unit::AttributeValue::Data2","value":"AttributeValue::Data2(u16)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A two byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A two byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871666,"byte_end":871748,"line_start":965,"line_end":965,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871753,"byte_end":871756,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871761,"byte_end":871843,"line_start":967,"line_end":967,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871848,"byte_end":871877,"line_start":968,"line_end":968,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871882,"byte_end":871885,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871890,"byte_end":871960,"line_start":970,"line_end":970,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871965,"byte_end":872035,"line_start":971,"line_end":971,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872040,"byte_end":872059,"line_start":972,"line_end":972,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7459},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872480,"byte_end":872485,"line_start":983,"line_end":983,"column_start":5,"column_end":10},"name":"Data4","qualname":"::read::unit::AttributeValue::Data4","value":"AttributeValue::Data4(u32)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A four byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ A four byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872081,"byte_end":872164,"line_start":975,"line_end":975,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872169,"byte_end":872172,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872177,"byte_end":872259,"line_start":977,"line_end":977,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872264,"byte_end":872293,"line_start":978,"line_end":978,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872298,"byte_end":872301,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872306,"byte_end":872376,"line_start":980,"line_end":980,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872381,"byte_end":872451,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872456,"byte_end":872475,"line_start":982,"line_end":982,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7462},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872898,"byte_end":872903,"line_start":993,"line_end":993,"column_start":5,"column_end":10},"name":"Data8","qualname":"::read::unit::AttributeValue::Data8","value":"AttributeValue::Data8(u64)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An eight byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[{"value":"/ An eight byte constant data value. How to interpret the bytes depends on context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872497,"byte_end":872582,"line_start":985,"line_end":985,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872587,"byte_end":872590,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ These bytes have been converted from `R::Endian`. This may need to be reversed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872595,"byte_end":872677,"line_start":987,"line_end":987,"column_start":5,"column_end":87}},{"value":"/ if this was not required.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872682,"byte_end":872711,"line_start":988,"line_end":988,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872716,"byte_end":872719,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ From section 7 of the standard: \"Depending on context, it may be a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872724,"byte_end":872794,"line_start":990,"line_end":990,"column_start":5,"column_end":75}},{"value":"/ signed integer, an unsigned integer, a floating-point constant, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872799,"byte_end":872869,"line_start":991,"line_end":991,"column_start":5,"column_end":75}},{"value":"/ anything else.\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872874,"byte_end":872893,"line_start":992,"line_end":992,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7465},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872950,"byte_end":872955,"line_start":996,"line_end":996,"column_start":5,"column_end":10},"name":"Sdata","qualname":"::read::unit::AttributeValue::Sdata","value":"AttributeValue::Sdata(i64)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A signed integer constant.\n","sig":null,"attributes":[{"value":"/ A signed integer constant.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872915,"byte_end":872945,"line_start":995,"line_end":995,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873005,"byte_end":873010,"line_start":999,"line_end":999,"column_start":5,"column_end":10},"name":"Udata","qualname":"::read::unit::AttributeValue::Udata","value":"AttributeValue::Udata(u64)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An unsigned integer constant.\n","sig":null,"attributes":[{"value":"/ An unsigned integer constant.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":872967,"byte_end":873000,"line_start":998,"line_end":998,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7471},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873150,"byte_end":873157,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12},"name":"Exprloc","qualname":"::read::unit::AttributeValue::Exprloc","value":"AttributeValue::Exprloc(Expression<R>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" \"The information bytes contain a DWARF expression (see Section 2.5) or\n location description (see Section 2.6).\"\n","sig":null,"attributes":[{"value":"/ \"The information bytes contain a DWARF expression (see Section 2.5) or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873022,"byte_end":873096,"line_start":1001,"line_end":1001,"column_start":5,"column_end":79}},{"value":"/ location description (see Section 2.6).\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873101,"byte_end":873145,"line_start":1002,"line_end":1002,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873250,"byte_end":873254,"line_start":1006,"line_end":1006,"column_start":5,"column_end":9},"name":"Flag","qualname":"::read::unit::AttributeValue::Flag","value":"AttributeValue::Flag(bool)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A boolean that indicates presence or absence of the attribute.\n","sig":null,"attributes":[{"value":"/ A boolean that indicates presence or absence of the attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873179,"byte_end":873245,"line_start":1005,"line_end":1005,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873372,"byte_end":873381,"line_start":1010,"line_end":1010,"column_start":5,"column_end":14},"name":"SecOffset","qualname":"::read::unit::AttributeValue::SecOffset","value":"AttributeValue::SecOffset(Offset)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into another section. Which section this is an offset into\n depends on context.\n","sig":null,"attributes":[{"value":"/ An offset into another section. Which section this is an offset into","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873267,"byte_end":873339,"line_start":1008,"line_end":1008,"column_start":5,"column_end":77}},{"value":"/ depends on context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873344,"byte_end":873367,"line_start":1009,"line_end":1009,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7480},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873466,"byte_end":873479,"line_start":1013,"line_end":1013,"column_start":5,"column_end":18},"name":"DebugAddrBase","qualname":"::read::unit::AttributeValue::DebugAddrBase","value":"AttributeValue::DebugAddrBase(DebugAddrBase<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset to a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of addresses in the `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873396,"byte_end":873461,"line_start":1012,"line_end":1012,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7483},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873580,"byte_end":873594,"line_start":1016,"line_end":1016,"column_start":5,"column_end":19},"name":"DebugAddrIndex","qualname":"::read::unit::AttributeValue::DebugAddrIndex","value":"AttributeValue::DebugAddrIndex(DebugAddrIndex<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of addresses in the `.debug_addr` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873509,"byte_end":873575,"line_start":1015,"line_end":1015,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7486},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873678,"byte_end":873685,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::unit::AttributeValue::UnitRef","value":"AttributeValue::UnitRef(UnitOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the current compilation unit.\n","sig":null,"attributes":[{"value":"/ An offset into the current compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873625,"byte_end":873673,"line_start":1018,"line_end":1018,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873842,"byte_end":873854,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::unit::AttributeValue::DebugInfoRef","value":"AttributeValue::DebugInfoRef(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the current `.debug_info` section, but possibly a\n different compilation unit from the current one.\n","sig":null,"attributes":[{"value":"/ An offset into the current `.debug_info` section, but possibly a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873712,"byte_end":873780,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/ different compilation unit from the current one.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873785,"byte_end":873837,"line_start":1022,"line_end":1022,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7492},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873969,"byte_end":873984,"line_start":1026,"line_end":1026,"column_start":5,"column_end":20},"name":"DebugInfoRefSup","qualname":"::read::unit::AttributeValue::DebugInfoRefSup","value":"AttributeValue::DebugInfoRefSup(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section of the supplementary object file.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_info` section of the supplementary object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":873886,"byte_end":873964,"line_start":1025,"line_end":1025,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7495},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874066,"byte_end":874078,"line_start":1029,"line_end":1029,"column_start":5,"column_end":17},"name":"DebugLineRef","qualname":"::read::unit::AttributeValue::DebugLineRef","value":"AttributeValue::DebugLineRef(DebugLineOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874016,"byte_end":874061,"line_start":1028,"line_end":1028,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874199,"byte_end":874215,"line_start":1032,"line_end":1032,"column_start":5,"column_end":21},"name":"LocationListsRef","qualname":"::read::unit::AttributeValue::LocationListsRef","value":"AttributeValue::LocationListsRef(LocationListsOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset into either the `.debug_loc` section or the `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874110,"byte_end":874194,"line_start":1031,"line_end":1031,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874323,"byte_end":874340,"line_start":1035,"line_end":1035,"column_start":5,"column_end":22},"name":"DebugLocListsBase","qualname":"::read::unit::AttributeValue::DebugLocListsBase","value":"AttributeValue::DebugLocListsBase(DebugLocListsBase<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of offsets in the `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874251,"byte_end":874318,"line_start":1034,"line_end":1034,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7504},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874447,"byte_end":874465,"line_start":1038,"line_end":1038,"column_start":5,"column_end":23},"name":"DebugLocListsIndex","qualname":"::read::unit::AttributeValue::DebugLocListsIndex","value":"AttributeValue::DebugLocListsIndex(DebugLocListsIndex<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of offsets in the `.debug_loclists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874374,"byte_end":874442,"line_start":1037,"line_end":1037,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874553,"byte_end":874568,"line_start":1041,"line_end":1041,"column_start":5,"column_end":20},"name":"DebugMacinfoRef","qualname":"::read::unit::AttributeValue::DebugMacinfoRef","value":"AttributeValue::DebugMacinfoRef(DebugMacinfoOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macinfo` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874500,"byte_end":874548,"line_start":1040,"line_end":1040,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7510},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874654,"byte_end":874667,"line_start":1044,"line_end":1044,"column_start":5,"column_end":18},"name":"DebugMacroRef","qualname":"::read::unit::AttributeValue::DebugMacroRef","value":"AttributeValue::DebugMacroRef(DebugMacroOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_macro` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874603,"byte_end":874649,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7513},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874752,"byte_end":874765,"line_start":1047,"line_end":1047,"column_start":5,"column_end":18},"name":"RangeListsRef","qualname":"::read::unit::AttributeValue::RangeListsRef","value":"AttributeValue::RangeListsRef(RangeListsOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_ranges` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_ranges` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874700,"byte_end":874747,"line_start":1046,"line_end":1046,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7516},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874870,"byte_end":874887,"line_start":1050,"line_end":1050,"column_start":5,"column_end":22},"name":"DebugRngListsBase","qualname":"::read::unit::AttributeValue::DebugRngListsBase","value":"AttributeValue::DebugRngListsBase(DebugRngListsBase<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of offsets in the `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874798,"byte_end":874865,"line_start":1049,"line_end":1049,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7519},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874994,"byte_end":875012,"line_start":1053,"line_end":1053,"column_start":5,"column_end":23},"name":"DebugRngListsIndex","qualname":"::read::unit::AttributeValue::DebugRngListsIndex","value":"AttributeValue::DebugRngListsIndex(DebugRngListsIndex<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of offsets in the `.debug_rnglists` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":874921,"byte_end":874989,"line_start":1052,"line_end":1052,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7522},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875073,"byte_end":875086,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18},"name":"DebugTypesRef","qualname":"::read::unit::AttributeValue::DebugTypesRef","value":"AttributeValue::DebugTypesRef(DebugTypeSignature)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A type signature.\n","sig":null,"attributes":[{"value":"/ A type signature.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875047,"byte_end":875068,"line_start":1055,"line_end":1055,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7525},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875162,"byte_end":875173,"line_start":1059,"line_end":1059,"column_start":5,"column_end":16},"name":"DebugStrRef","qualname":"::read::unit::AttributeValue::DebugStrRef","value":"AttributeValue::DebugStrRef(DebugStrOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875113,"byte_end":875157,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875286,"byte_end":875300,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19},"name":"DebugStrRefSup","qualname":"::read::unit::AttributeValue::DebugStrRefSup","value":"AttributeValue::DebugStrRefSup(DebugStrOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section of the supplementary object file.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_str` section of the supplementary object file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875204,"byte_end":875281,"line_start":1061,"line_end":1061,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7531},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875406,"byte_end":875425,"line_start":1065,"line_end":1065,"column_start":5,"column_end":24},"name":"DebugStrOffsetsBase","qualname":"::read::unit::AttributeValue::DebugStrOffsetsBase","value":"AttributeValue::DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An offset to a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875331,"byte_end":875401,"line_start":1064,"line_end":1064,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7534},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875537,"byte_end":875557,"line_start":1068,"line_end":1068,"column_start":5,"column_end":25},"name":"DebugStrOffsetsIndex","qualname":"::read::unit::AttributeValue::DebugStrOffsetsIndex","value":"AttributeValue::DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[{"value":"/ An index into a set of entries in the `.debug_str_offsets` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875461,"byte_end":875532,"line_start":1067,"line_end":1067,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875648,"byte_end":875663,"line_start":1071,"line_end":1071,"column_start":5,"column_end":20},"name":"DebugLineStrRef","qualname":"::read::unit::AttributeValue::DebugLineStrRef","value":"AttributeValue::DebugLineStrRef(DebugLineStrOffset<Offset>)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[{"value":"/ An offset into the `.debug_line_str` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875594,"byte_end":875643,"line_start":1070,"line_end":1070,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7540},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875840,"byte_end":875846,"line_start":1075,"line_end":1075,"column_start":5,"column_end":11},"name":"String","qualname":"::read::unit::AttributeValue::String","value":"AttributeValue::String(R)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" A slice of bytes representing a string. Does not include a final null byte.\n Not guaranteed to be UTF-8 or anything like that.\n","sig":null,"attributes":[{"value":"/ A slice of bytes representing a string. Does not include a final null byte.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875698,"byte_end":875777,"line_start":1073,"line_end":1073,"column_start":5,"column_end":84}},{"value":"/ Not guaranteed to be UTF-8 or anything like that.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875782,"byte_end":875835,"line_start":1074,"line_end":1074,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875907,"byte_end":875915,"line_start":1078,"line_end":1078,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::read::unit::AttributeValue::Encoding","value":"AttributeValue::Encoding(constants::DwAte)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_encoding` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_encoding` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875856,"byte_end":875902,"line_start":1077,"line_end":1077,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875995,"byte_end":876006,"line_start":1081,"line_end":1081,"column_start":5,"column_end":16},"name":"DecimalSign","qualname":"::read::unit::AttributeValue::DecimalSign","value":"AttributeValue::DecimalSign(constants::DwDs)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_decimal_sign` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_decimal_sign` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":875940,"byte_end":875990,"line_start":1080,"line_end":1080,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7549},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876082,"byte_end":876091,"line_start":1084,"line_end":1084,"column_start":5,"column_end":14},"name":"Endianity","qualname":"::read::unit::AttributeValue::Endianity","value":"AttributeValue::Endianity(constants::DwEnd)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_endianity` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_endianity` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876030,"byte_end":876077,"line_start":1083,"line_end":1083,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7552},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876172,"byte_end":876185,"line_start":1087,"line_end":1087,"column_start":5,"column_end":18},"name":"Accessibility","qualname":"::read::unit::AttributeValue::Accessibility","value":"AttributeValue::Accessibility(constants::DwAccess)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_accessibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_accessibility` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876116,"byte_end":876167,"line_start":1086,"line_end":1086,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7555},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876266,"byte_end":876276,"line_start":1090,"line_end":1090,"column_start":5,"column_end":15},"name":"Visibility","qualname":"::read::unit::AttributeValue::Visibility","value":"AttributeValue::Visibility(constants::DwVis)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_visibility` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_visibility` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876213,"byte_end":876261,"line_start":1089,"line_end":1089,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7558},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876354,"byte_end":876364,"line_start":1093,"line_end":1093,"column_start":5,"column_end":15},"name":"Virtuality","qualname":"::read::unit::AttributeValue::Virtuality","value":"AttributeValue::Virtuality(constants::DwVirtuality)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_virtuality` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_virtuality` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876301,"byte_end":876349,"line_start":1092,"line_end":1092,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7561},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876447,"byte_end":876455,"line_start":1096,"line_end":1096,"column_start":5,"column_end":13},"name":"Language","qualname":"::read::unit::AttributeValue::Language","value":"AttributeValue::Language(constants::DwLang)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_language` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_language` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876396,"byte_end":876442,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876537,"byte_end":876549,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17},"name":"AddressClass","qualname":"::read::unit::AttributeValue::AddressClass","value":"AttributeValue::AddressClass(constants::DwAddr)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_address_class` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_address_class` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876481,"byte_end":876532,"line_start":1098,"line_end":1098,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7567},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876633,"byte_end":876647,"line_start":1102,"line_end":1102,"column_start":5,"column_end":19},"name":"IdentifierCase","qualname":"::read::unit::AttributeValue::IdentifierCase","value":"AttributeValue::IdentifierCase(constants::DwId)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_identifier_case` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_identifier_case` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876575,"byte_end":876628,"line_start":1101,"line_end":1101,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7570},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876732,"byte_end":876749,"line_start":1105,"line_end":1105,"column_start":5,"column_end":22},"name":"CallingConvention","qualname":"::read::unit::AttributeValue::CallingConvention","value":"AttributeValue::CallingConvention(constants::DwCc)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_calling_convention` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_calling_convention` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876671,"byte_end":876727,"line_start":1104,"line_end":1104,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876822,"byte_end":876828,"line_start":1108,"line_end":1108,"column_start":5,"column_end":11},"name":"Inline","qualname":"::read::unit::AttributeValue::Inline","value":"AttributeValue::Inline(constants::DwInl)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_inline` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_inline` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876773,"byte_end":876817,"line_start":1107,"line_end":1107,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7576},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876904,"byte_end":876912,"line_start":1111,"line_end":1111,"column_start":5,"column_end":13},"name":"Ordering","qualname":"::read::unit::AttributeValue::Ordering","value":"AttributeValue::Ordering(constants::DwOrd)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_ordering` attribute.\n","sig":null,"attributes":[{"value":"/ The value of a `DW_AT_ordering` attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876853,"byte_end":876899,"line_start":1110,"line_end":1110,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7579},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877075,"byte_end":877084,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14},"name":"FileIndex","qualname":"::read::unit::AttributeValue::FileIndex","value":"AttributeValue::FileIndex(u64)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An index into the filename entries from the line number information\n table for the compilation unit containing this value.\n","sig":null,"attributes":[{"value":"/ An index into the filename entries from the line number information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":876937,"byte_end":877008,"line_start":1113,"line_end":1113,"column_start":5,"column_end":76}},{"value":"/ table for the compilation unit containing this value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877013,"byte_end":877070,"line_start":1114,"line_end":1114,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7582},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877190,"byte_end":877195,"line_start":1119,"line_end":1119,"column_start":5,"column_end":10},"name":"DwoId","qualname":"::read::unit::AttributeValue::DwoId","value":"AttributeValue::DwoId(DwoId)","parent":{"krate":0,"index":7444},"children":[],"decl_id":null,"docs":" An implementation-defined identifier uniquely identifying a compilation\n unit.\n","sig":null,"attributes":[{"value":"/ An implementation-defined identifier uniquely identifying a compilation","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877096,"byte_end":877171,"line_start":1117,"line_end":1117,"column_start":5,"column_end":80}},{"value":"/ unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877176,"byte_end":877185,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":7444},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871101,"byte_end":871115,"line_start":947,"line_end":947,"column_start":10,"column_end":24},"name":"AttributeValue","qualname":"::read::unit::AttributeValue","value":"pub enum AttributeValue<R, Offset = <R as Reader>::Offset> where\n         R: Reader<Offset = Offset>, Offset: ReaderOffset {\n    Addr(u64),\n    Block(R),\n    Data1(u8),\n    Data2(u16),\n    Data4(u32),\n    Data8(u64),\n    Sdata(i64),\n    Udata(u64),\n    Exprloc(Expression<R>),\n    Flag(bool),\n    SecOffset(Offset),\n    DebugAddrBase(DebugAddrBase<Offset>),\n    DebugAddrIndex(DebugAddrIndex<Offset>),\n    UnitRef(UnitOffset<Offset>),\n    DebugInfoRef(DebugInfoOffset<Offset>),\n    DebugInfoRefSup(DebugInfoOffset<Offset>),\n    DebugLineRef(DebugLineOffset<Offset>),\n    LocationListsRef(LocationListsOffset<Offset>),\n    DebugLocListsBase(DebugLocListsBase<Offset>),\n    DebugLocListsIndex(DebugLocListsIndex<Offset>),\n    DebugMacinfoRef(DebugMacinfoOffset<Offset>),\n    DebugMacroRef(DebugMacroOffset<Offset>),\n    RangeListsRef(RangeListsOffset<Offset>),\n    DebugRngListsBase(DebugRngListsBase<Offset>),\n    DebugRngListsIndex(DebugRngListsIndex<Offset>),\n    DebugTypesRef(DebugTypeSignature),\n    DebugStrRef(DebugStrOffset<Offset>),\n    DebugStrRefSup(DebugStrOffset<Offset>),\n    DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>),\n    DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>),\n    DebugLineStrRef(DebugLineStrOffset<Offset>),\n    String(R),\n    Encoding(constants::DwAte),\n    DecimalSign(constants::DwDs),\n    Endianity(constants::DwEnd),\n    Accessibility(constants::DwAccess),\n    Visibility(constants::DwVis),\n    Virtuality(constants::DwVirtuality),\n    Language(constants::DwLang),\n    AddressClass(constants::DwAddr),\n    IdentifierCase(constants::DwId),\n    CallingConvention(constants::DwCc),\n    Inline(constants::DwInl),\n    Ordering(constants::DwOrd),\n    FileIndex(u64),\n    DwoId(DwoId),\n}","parent":null,"children":[{"krate":0,"index":7447},{"krate":0,"index":7450},{"krate":0,"index":7453},{"krate":0,"index":7456},{"krate":0,"index":7459},{"krate":0,"index":7462},{"krate":0,"index":7465},{"krate":0,"index":7468},{"krate":0,"index":7471},{"krate":0,"index":7474},{"krate":0,"index":7477},{"krate":0,"index":7480},{"krate":0,"index":7483},{"krate":0,"index":7486},{"krate":0,"index":7489},{"krate":0,"index":7492},{"krate":0,"index":7495},{"krate":0,"index":7498},{"krate":0,"index":7501},{"krate":0,"index":7504},{"krate":0,"index":7507},{"krate":0,"index":7510},{"krate":0,"index":7513},{"krate":0,"index":7516},{"krate":0,"index":7519},{"krate":0,"index":7522},{"krate":0,"index":7525},{"krate":0,"index":7528},{"krate":0,"index":7531},{"krate":0,"index":7534},{"krate":0,"index":7537},{"krate":0,"index":7540},{"krate":0,"index":7543},{"krate":0,"index":7546},{"krate":0,"index":7549},{"krate":0,"index":7552},{"krate":0,"index":7555},{"krate":0,"index":7558},{"krate":0,"index":7561},{"krate":0,"index":7564},{"krate":0,"index":7567},{"krate":0,"index":7570},{"krate":0,"index":7573},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7582}],"decl_id":null,"docs":" The value of an attribute in a `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"/ The value of an attribute in a `DebuggingInformationEntry`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":870818,"byte_end":870881,"line_start":941,"line_end":941,"column_start":1,"column_end":64}},{"value":"repr(u64)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":871034,"byte_end":871046,"line_start":945,"line_end":945,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":7611},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877361,"byte_end":877370,"line_start":1125,"line_end":1125,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::read::unit::Attribute","value":"Attribute {  }","parent":null,"children":[{"krate":0,"index":7613},{"krate":0,"index":7614}],"decl_id":null,"docs":" An attribute in a `DebuggingInformationEntry`, consisting of a name and\n associated value.\n","sig":null,"attributes":[{"value":"/ An attribute in a `DebuggingInformationEntry`, consisting of a name and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877207,"byte_end":877282,"line_start":1122,"line_end":1122,"column_start":1,"column_end":76}},{"value":"/ associated value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877283,"byte_end":877304,"line_start":1123,"line_end":1123,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877521,"byte_end":877525,"line_start":1132,"line_end":1132,"column_start":12,"column_end":16},"name":"name","qualname":"<Attribute<R>>::name","value":"pub fn name(&Self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's name.\n","sig":null,"attributes":[{"value":"/ Get this attribute's name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877479,"byte_end":877509,"line_start":1131,"line_end":1131,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877630,"byte_end":877639,"line_start":1137,"line_end":1137,"column_start":12,"column_end":21},"name":"raw_value","qualname":"<Attribute<R>>::raw_value","value":"pub fn raw_value(&Self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's raw value.\n","sig":null,"attributes":[{"value":"/ Get this attribute's raw value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877583,"byte_end":877618,"line_start":1136,"line_end":1136,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":878208,"byte_end":878213,"line_start":1151,"line_end":1151,"column_start":12,"column_end":17},"name":"value","qualname":"<Attribute<R>>::value","value":"pub fn value(&Self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's normalized value.","sig":null,"attributes":[{"value":"/ Get this attribute's normalized value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877708,"byte_end":877750,"line_start":1141,"line_end":1141,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877755,"byte_end":877758,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Attribute values can potentially be encoded in multiple equivalent forms,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877763,"byte_end":877840,"line_start":1143,"line_end":1143,"column_start":5,"column_end":82}},{"value":"/ and may have special meaning depending on the attribute name.  This method","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877845,"byte_end":877923,"line_start":1144,"line_end":1144,"column_start":5,"column_end":83}},{"value":"/ converts the attribute value to a normalized form based on the attribute","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877928,"byte_end":878004,"line_start":1145,"line_end":1145,"column_start":5,"column_end":81}},{"value":"/ name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":878009,"byte_end":878018,"line_start":1146,"line_end":1146,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":878023,"byte_end":878026,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ See \"Table 7.5: Attribute encodings\" and \"Table 7.6: Attribute form encodings\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":878031,"byte_end":878114,"line_start":1148,"line_end":1148,"column_start":5,"column_end":88}},{"value":"allow(clippy :: cyclomatic_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":878119,"byte_end":878158,"line_start":1149,"line_end":1149,"column_start":5,"column_end":44}},{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":878163,"byte_end":878196,"line_start":1150,"line_end":1150,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897331,"byte_end":897339,"line_start":1742,"line_end":1742,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<Attribute<R>>::u8_value","value":"pub fn u8_value(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897255,"byte_end":897305,"line_start":1740,"line_end":1740,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897310,"byte_end":897319,"line_start":1741,"line_end":1741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897481,"byte_end":897490,"line_start":1748,"line_end":1748,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<Attribute<R>>::u16_value","value":"pub fn u16_value(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897404,"byte_end":897455,"line_start":1746,"line_end":1746,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897460,"byte_end":897469,"line_start":1747,"line_end":1747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897648,"byte_end":897659,"line_start":1754,"line_end":1754,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<Attribute<R>>::udata_value","value":"pub fn udata_value(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an unsigned integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897557,"byte_end":897622,"line_start":1752,"line_end":1752,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897627,"byte_end":897636,"line_start":1753,"line_end":1753,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897816,"byte_end":897827,"line_start":1760,"line_end":1760,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<Attribute<R>>::sdata_value","value":"pub fn sdata_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a signed integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897728,"byte_end":897790,"line_start":1758,"line_end":1758,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897795,"byte_end":897804,"line_start":1759,"line_end":1759,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897977,"byte_end":897989,"line_start":1766,"line_end":1766,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<Attribute<R>>::offset_value","value":"pub fn offset_value(&Self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897896,"byte_end":897951,"line_start":1764,"line_end":1764,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":897956,"byte_end":897965,"line_start":1765,"line_end":1765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898374,"byte_end":898387,"line_start":1776,"line_end":1776,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<Attribute<R>>::exprloc_value","value":"pub fn exprloc_value(&Self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an expression or location buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898065,"byte_end":898143,"line_start":1770,"line_end":1770,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898148,"byte_end":898151,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ Expressions and locations may be `DW_FORM_block*` or `DW_FORM_exprloc`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898156,"byte_end":898231,"line_start":1772,"line_end":1772,"column_start":5,"column_end":80}},{"value":"/ The standard doesn't mention `DW_FORM_block*` as a possible form, but","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898236,"byte_end":898309,"line_start":1773,"line_end":1773,"column_start":5,"column_end":78}},{"value":"/ it is encountered in practice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898314,"byte_end":898348,"line_start":1774,"line_end":1774,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898353,"byte_end":898362,"line_start":1775,"line_end":1775,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898961,"byte_end":898973,"line_start":1790,"line_end":1790,"column_start":12,"column_end":24},"name":"string_value","qualname":"<Attribute<R>>::string_value","value":"pub fn string_value(&Self, &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898468,"byte_end":898527,"line_start":1780,"line_end":1780,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898532,"byte_end":898535,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898540,"byte_end":898614,"line_start":1782,"line_end":1782,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898619,"byte_end":898687,"line_start":1783,"line_end":1783,"column_start":5,"column_end":73}},{"value":"/ section, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898692,"byte_end":898767,"line_start":1784,"line_end":1784,"column_start":5,"column_end":80}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898772,"byte_end":898811,"line_start":1785,"line_end":1785,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898816,"byte_end":898819,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898824,"byte_end":898893,"line_start":1787,"line_end":1787,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898898,"byte_end":898935,"line_start":1788,"line_end":1788,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":898940,"byte_end":898949,"line_start":1789,"line_end":1789,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899657,"byte_end":899673,"line_start":1805,"line_end":1805,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<Attribute<R>>::string_value_sup","value":"pub fn string_value_sup(&Self, &DebugStr<R>, Option<&DebugStr<R>>)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899075,"byte_end":899134,"line_start":1794,"line_end":1794,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899139,"byte_end":899142,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899147,"byte_end":899221,"line_start":1796,"line_end":1796,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899226,"byte_end":899294,"line_start":1797,"line_end":1797,"column_start":5,"column_end":73}},{"value":"/ section, or a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899299,"byte_end":899379,"line_start":1798,"line_end":1798,"column_start":5,"column_end":85}},{"value":"/ object file, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899384,"byte_end":899463,"line_start":1799,"line_end":1799,"column_start":5,"column_end":84}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899468,"byte_end":899507,"line_start":1800,"line_end":1800,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899512,"byte_end":899515,"line_start":1801,"line_end":1801,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899520,"byte_end":899589,"line_start":1802,"line_end":1802,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899594,"byte_end":899631,"line_start":1803,"line_end":1803,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899636,"byte_end":899645,"line_start":1804,"line_end":1804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":900034,"byte_end":900042,"line_start":1820,"line_end":1820,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<AttributeValue<R, Offset>>::u8_value","value":"pub fn u8_value(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899972,"byte_end":900022,"line_start":1819,"line_end":1819,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":900314,"byte_end":900323,"line_start":1830,"line_end":1830,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<AttributeValue<R, Offset>>::u16_value","value":"pub fn u16_value(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a u16.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":900251,"byte_end":900302,"line_start":1829,"line_end":1829,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":900612,"byte_end":900623,"line_start":1840,"line_end":1840,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<AttributeValue<R, Offset>>::udata_value","value":"pub fn udata_value(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an unsigned integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":900535,"byte_end":900600,"line_start":1839,"line_end":1839,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":901306,"byte_end":901317,"line_start":1859,"line_end":1859,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<AttributeValue<R, Offset>>::sdata_value","value":"pub fn sdata_value(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to a signed integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":901232,"byte_end":901294,"line_start":1858,"line_end":1858,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902042,"byte_end":902054,"line_start":1878,"line_end":1878,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<AttributeValue<R, Offset>>::offset_value","value":"pub fn offset_value(&Self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":901975,"byte_end":902030,"line_start":1877,"line_end":1877,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902650,"byte_end":902663,"line_start":1893,"line_end":1893,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<AttributeValue<R, Offset>>::exprloc_value","value":"pub fn exprloc_value(&Self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"/ Try to convert this attribute's value to an expression or location buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902355,"byte_end":902433,"line_start":1888,"line_end":1888,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902438,"byte_end":902441,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ Expressions and locations may be `DW_FORM_block*` or `DW_FORM_exprloc`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902446,"byte_end":902521,"line_start":1890,"line_end":1890,"column_start":5,"column_end":80}},{"value":"/ The standard doesn't mention `DW_FORM_block*` as a possible form, but","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902526,"byte_end":902599,"line_start":1891,"line_end":1891,"column_start":5,"column_end":78}},{"value":"/ it is encountered in practice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902604,"byte_end":902638,"line_start":1892,"line_end":1892,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903392,"byte_end":903404,"line_start":1910,"line_end":1910,"column_start":12,"column_end":24},"name":"string_value","qualname":"<AttributeValue<R, Offset>>::string_value","value":"pub fn string_value(&Self, &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902913,"byte_end":902972,"line_start":1901,"line_end":1901,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902977,"byte_end":902980,"line_start":1902,"line_end":1902,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":902985,"byte_end":903059,"line_start":1903,"line_end":1903,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903064,"byte_end":903132,"line_start":1904,"line_end":1904,"column_start":5,"column_end":73}},{"value":"/ section, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903137,"byte_end":903212,"line_start":1905,"line_end":1905,"column_start":5,"column_end":80}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903217,"byte_end":903256,"line_start":1906,"line_end":1906,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903261,"byte_end":903264,"line_start":1907,"line_end":1907,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903269,"byte_end":903338,"line_start":1908,"line_end":1908,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903343,"byte_end":903380,"line_start":1909,"line_end":1909,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":904241,"byte_end":904257,"line_start":1928,"line_end":1928,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<AttributeValue<R, Offset>>::string_value_sup","value":"pub fn string_value_sup(&Self, &DebugStr<R>, Option<&DebugStr<R>>)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"/ Try to return this attribute's value as a string slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903673,"byte_end":903732,"line_start":1918,"line_end":1918,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903737,"byte_end":903740,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ If this attribute's value is either an inline `DW_FORM_string` string,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903745,"byte_end":903819,"line_start":1920,"line_end":1920,"column_start":5,"column_end":79}},{"value":"/ or a `DW_FORM_strp` reference to an offset into the `.debug_str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903824,"byte_end":903892,"line_start":1921,"line_end":1921,"column_start":5,"column_end":73}},{"value":"/ section, or a `DW_FORM_strp_sup` reference to an offset into a supplementary","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903897,"byte_end":903977,"line_start":1922,"line_end":1922,"column_start":5,"column_end":85}},{"value":"/ object file, return the attribute's string value as `Some`. Other attribute","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":903982,"byte_end":904061,"line_start":1923,"line_end":1923,"column_start":5,"column_end":84}},{"value":"/ value forms are returned as `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":904066,"byte_end":904105,"line_start":1924,"line_end":1924,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":904110,"byte_end":904113,"line_start":1925,"line_end":1925,"column_start":5,"column_end":8}},{"value":"/ Warning: this function does not handle all possible string forms.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":904118,"byte_end":904187,"line_start":1926,"line_end":1926,"column_start":5,"column_end":74}},{"value":"/ Use `Dwarf::attr_string` instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":904192,"byte_end":904229,"line_start":1927,"line_end":1927,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7634},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916655,"byte_end":916664,"line_start":2220,"line_end":2220,"column_start":12,"column_end":21},"name":"AttrsIter","qualname":"::read::unit::AttrsIter","value":"AttrsIter {  }","parent":null,"children":[{"krate":0,"index":7639},{"krate":0,"index":7640},{"krate":0,"index":7641}],"decl_id":null,"docs":" An iterator over a particular entry's attributes.","sig":null,"attributes":[{"value":"/ An iterator over a particular entry's attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916319,"byte_end":916372,"line_start":2211,"line_end":2211,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916373,"byte_end":916376,"line_start":2212,"line_end":2212,"column_start":1,"column_end":4}},{"value":"/ See [the documentation for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916377,"byte_end":916407,"line_start":2213,"line_end":2213,"column_start":1,"column_end":31}},{"value":"/ `DebuggingInformationEntry::attrs()`](./struct.DebuggingInformationEntry.html#method.attrs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916408,"byte_end":916503,"line_start":2214,"line_end":2214,"column_start":1,"column_end":96}},{"value":"/ for details.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916504,"byte_end":916520,"line_start":2215,"line_end":2215,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916521,"byte_end":916524,"line_start":2216,"line_end":2216,"column_start":1,"column_end":4}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916525,"byte_end":916546,"line_start":2217,"line_end":2217,"column_start":1,"column_end":22}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916547,"byte_end":916613,"line_start":2218,"line_end":2218,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":917240,"byte_end":917244,"line_start":2234,"line_end":2234,"column_start":12,"column_end":16},"name":"next","qualname":"<AttrsIter>::next","value":"pub fn next(&mut Self) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next attribute.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916918,"byte_end":916973,"line_start":2227,"line_end":2227,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916978,"byte_end":916981,"line_start":2228,"line_end":2228,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when iteration is finished. If an error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916986,"byte_end":917044,"line_start":2229,"line_end":2229,"column_start":5,"column_end":63}},{"value":"/ occurs while parsing the next attribute, then this error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":917049,"byte_end":917109,"line_start":2230,"line_end":2230,"column_start":5,"column_end":65}},{"value":"/ is returned, and all subsequent calls return `None`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":917114,"byte_end":917170,"line_start":2231,"line_end":2231,"column_start":5,"column_end":61}},{"value":"allow(clippy :: inline_always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":917175,"byte_end":917206,"line_start":2232,"line_end":2232,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":917211,"byte_end":917228,"line_start":2233,"line_end":2233,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7659},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920995,"byte_end":921005,"line_start":2333,"line_end":2333,"column_start":12,"column_end":22},"name":"EntriesRaw","qualname":"::read::unit::EntriesRaw","value":"EntriesRaw {  }","parent":null,"children":[{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7665},{"krate":0,"index":7666}],"decl_id":null,"docs":" A raw reader of the data that defines the Debugging Information Entries.","sig":null,"attributes":[{"value":"/ A raw reader of the data that defines the Debugging Information Entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":918686,"byte_end":918762,"line_start":2278,"line_end":2278,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":918763,"byte_end":918766,"line_start":2279,"line_end":2279,"column_start":1,"column_end":4}},{"value":"/ `EntriesRaw` provides primitives to read the components of Debugging Information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":918767,"byte_end":918851,"line_start":2280,"line_end":2280,"column_start":1,"column_end":85}},{"value":"/ Entries (DIEs). A DIE consists of an abbreviation code (read with `read_abbreviation`)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":918852,"byte_end":918942,"line_start":2281,"line_end":2281,"column_start":1,"column_end":91}},{"value":"/ followed by a number of attributes (read with `read_attribute`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":918943,"byte_end":919011,"line_start":2282,"line_end":2282,"column_start":1,"column_end":69}},{"value":"/ The user must provide the control flow to read these correctly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919012,"byte_end":919079,"line_start":2283,"line_end":2283,"column_start":1,"column_end":68}},{"value":"/ In particular, all attributes must always be read before reading another","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919080,"byte_end":919156,"line_start":2284,"line_end":2284,"column_start":1,"column_end":77}},{"value":"/ abbreviation code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919157,"byte_end":919179,"line_start":2285,"line_end":2285,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919180,"byte_end":919183,"line_start":2286,"line_end":2286,"column_start":1,"column_end":4}},{"value":"/ `EntriesRaw` lacks some features of `EntriesCursor`, such as the ability to skip","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919184,"byte_end":919268,"line_start":2287,"line_end":2287,"column_start":1,"column_end":85}},{"value":"/ to the next sibling DIE. However, this also allows it to optimize better, since it","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919269,"byte_end":919355,"line_start":2288,"line_end":2288,"column_start":1,"column_end":87}},{"value":"/ does not need to perform the extra bookkeeping required to support these features,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919356,"byte_end":919442,"line_start":2289,"line_end":2289,"column_start":1,"column_end":87}},{"value":"/ and thus it is suitable for cases where performance is important.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919443,"byte_end":919512,"line_start":2290,"line_end":2290,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919513,"byte_end":919516,"line_start":2291,"line_end":2291,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919517,"byte_end":919537,"line_start":2292,"line_end":2292,"column_start":1,"column_end":21}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919538,"byte_end":919556,"line_start":2293,"line_end":2293,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919557,"byte_end":919605,"line_start":2294,"line_end":2294,"column_start":1,"column_end":49}},{"value":"/ # let debug_info = gimli::DebugInfo::new(&[], gimli::LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919606,"byte_end":919677,"line_start":2295,"line_end":2295,"column_start":1,"column_end":72}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919678,"byte_end":919751,"line_start":2296,"line_end":2296,"column_start":1,"column_end":74}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919752,"byte_end":919783,"line_start":2297,"line_end":2297,"column_start":1,"column_end":32}},{"value":"/ # let debug_abbrev = gimli::DebugAbbrev::new(&[], gimli::LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919784,"byte_end":919859,"line_start":2298,"line_end":2298,"column_start":1,"column_end":76}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919860,"byte_end":919940,"line_start":2299,"line_end":2299,"column_start":1,"column_end":81}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919941,"byte_end":919987,"line_start":2300,"line_end":2300,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919988,"byte_end":919991,"line_start":2301,"line_end":2301,"column_start":1,"column_end":4}},{"value":"/ let mut entries = unit.entries_raw(&abbrevs, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":919992,"byte_end":920048,"line_start":2302,"line_end":2302,"column_start":1,"column_end":57}},{"value":"/ while !entries.is_empty() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920049,"byte_end":920080,"line_start":2303,"line_end":2303,"column_start":1,"column_end":32}},{"value":"/     let abbrev = if let Some(abbrev) = entries.read_abbreviation()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920081,"byte_end":920154,"line_start":2304,"line_end":2304,"column_start":1,"column_end":74}},{"value":"/         abbrev","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920155,"byte_end":920173,"line_start":2305,"line_end":2305,"column_start":1,"column_end":19}},{"value":"/     } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920174,"byte_end":920190,"line_start":2306,"line_end":2306,"column_start":1,"column_end":17}},{"value":"/         // Null entry with no attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920191,"byte_end":920236,"line_start":2307,"line_end":2307,"column_start":1,"column_end":46}},{"value":"/         continue","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920237,"byte_end":920257,"line_start":2308,"line_end":2308,"column_start":1,"column_end":21}},{"value":"/     };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920258,"byte_end":920268,"line_start":2309,"line_end":2309,"column_start":1,"column_end":11}},{"value":"/     match abbrev.tag() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920269,"byte_end":920297,"line_start":2310,"line_end":2310,"column_start":1,"column_end":29}},{"value":"/         gimli::DW_TAG_subprogram => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920298,"byte_end":920339,"line_start":2311,"line_end":2311,"column_start":1,"column_end":42}},{"value":"/             // Loop over attributes for DIEs we care about.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920340,"byte_end":920403,"line_start":2312,"line_end":2312,"column_start":1,"column_end":64}},{"value":"/             for spec in abbrev.attributes() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920404,"byte_end":920453,"line_start":2313,"line_end":2313,"column_start":1,"column_end":50}},{"value":"/                 let attr = entries.read_attribute(*spec)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920454,"byte_end":920516,"line_start":2314,"line_end":2314,"column_start":1,"column_end":63}},{"value":"/                 match attr.name() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920517,"byte_end":920556,"line_start":2315,"line_end":2315,"column_start":1,"column_end":40}},{"value":"/                     // Handle attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920557,"byte_end":920602,"line_start":2316,"line_end":2316,"column_start":1,"column_end":46}},{"value":"/                     _ => {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920603,"byte_end":920634,"line_start":2317,"line_end":2317,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920635,"byte_end":920656,"line_start":2318,"line_end":2318,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920657,"byte_end":920674,"line_start":2319,"line_end":2319,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920675,"byte_end":920688,"line_start":2320,"line_end":2320,"column_start":1,"column_end":14}},{"value":"/         _ => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920689,"byte_end":920707,"line_start":2321,"line_end":2321,"column_start":1,"column_end":19}},{"value":"/             // Skip attributes for DIEs we don't care about.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920708,"byte_end":920772,"line_start":2322,"line_end":2322,"column_start":1,"column_end":65}},{"value":"/             for spec in abbrev.attributes() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920773,"byte_end":920822,"line_start":2323,"line_end":2323,"column_start":1,"column_end":50}},{"value":"/                 entries.read_attribute(*spec)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920823,"byte_end":920874,"line_start":2324,"line_end":2324,"column_start":1,"column_end":52}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920875,"byte_end":920892,"line_start":2325,"line_end":2325,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920893,"byte_end":920906,"line_start":2326,"line_end":2326,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920907,"byte_end":920916,"line_start":2327,"line_end":2327,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920917,"byte_end":920922,"line_start":2328,"line_end":2328,"column_start":1,"column_end":6}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920923,"byte_end":920943,"line_start":2329,"line_end":2329,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920944,"byte_end":920951,"line_start":2330,"line_end":2330,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":920952,"byte_end":920959,"line_start":2331,"line_end":2331,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921294,"byte_end":921302,"line_start":2346,"line_end":2346,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EntriesRaw>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if there is no more input.\n","sig":null,"attributes":[{"value":"/ Return true if there is no more input.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921226,"byte_end":921268,"line_start":2344,"line_end":2344,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921273,"byte_end":921282,"line_start":2345,"line_end":2345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921559,"byte_end":921570,"line_start":2354,"line_end":2354,"column_start":12,"column_end":23},"name":"next_offset","qualname":"<EntriesRaw>::next_offset","value":"pub fn next_offset(&Self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the unit offset at which the reader will read next.","sig":null,"attributes":[{"value":"/ Return the unit offset at which the reader will read next.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921361,"byte_end":921423,"line_start":2350,"line_end":2350,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921428,"byte_end":921431,"line_start":2351,"line_end":2351,"column_start":5,"column_end":8}},{"value":"/ If you want the offset of the next entry, then this must be called prior to reading","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921436,"byte_end":921523,"line_start":2352,"line_end":2352,"column_start":5,"column_end":92}},{"value":"/ the next entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921528,"byte_end":921547,"line_start":2353,"line_end":2353,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921943,"byte_end":921953,"line_start":2363,"line_end":2363,"column_start":12,"column_end":22},"name":"next_depth","qualname":"<EntriesRaw>::next_depth","value":"pub fn next_depth(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of the next entry.","sig":null,"attributes":[{"value":"/ Return the depth of the next entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921709,"byte_end":921748,"line_start":2358,"line_end":2358,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921753,"byte_end":921756,"line_start":2359,"line_end":2359,"column_start":5,"column_end":8}},{"value":"/ This depth is updated when `read_abbreviation` is called, and is updated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921761,"byte_end":921837,"line_start":2360,"line_end":2360,"column_start":5,"column_end":81}},{"value":"/ based on null entries and the `has_children` field in the abbreviation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921842,"byte_end":921917,"line_start":2361,"line_end":2361,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921922,"byte_end":921931,"line_start":2362,"line_end":2362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922155,"byte_end":922172,"line_start":2371,"line_end":2371,"column_start":12,"column_end":29},"name":"read_abbreviation","qualname":"<EntriesRaw>::read_abbreviation","value":"pub fn read_abbreviation(&mut Self) -> Result<Option<&'abbrev Abbreviation>>","parent":null,"children":[],"decl_id":null,"docs":" Read an abbreviation code and lookup the corresponding `Abbreviation`.","sig":null,"attributes":[{"value":"/ Read an abbreviation code and lookup the corresponding `Abbreviation`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922002,"byte_end":922076,"line_start":2367,"line_end":2367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922081,"byte_end":922084,"line_start":2368,"line_end":2368,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` for null entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922089,"byte_end":922129,"line_start":2369,"line_end":2369,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922134,"byte_end":922143,"line_start":2370,"line_end":2370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922649,"byte_end":922663,"line_start":2389,"line_end":2389,"column_start":12,"column_end":26},"name":"read_attribute","qualname":"<EntriesRaw>::read_attribute","value":"pub fn read_attribute(&mut Self, AttributeSpecification)\n-> Result<Attribute<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read an attribute.\n","sig":null,"attributes":[{"value":"/ Read an attribute.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922601,"byte_end":922623,"line_start":2387,"line_end":2387,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922628,"byte_end":922637,"line_start":2388,"line_end":2388,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7677},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923648,"byte_end":923661,"line_start":2408,"line_end":2408,"column_start":12,"column_end":25},"name":"EntriesCursor","qualname":"::read::unit::EntriesCursor","value":"EntriesCursor {  }","parent":null,"children":[{"krate":0,"index":7681},{"krate":0,"index":7682},{"krate":0,"index":7683},{"krate":0,"index":7684},{"krate":0,"index":7685}],"decl_id":null,"docs":" A cursor into the Debugging Information Entries tree for a compilation unit.","sig":null,"attributes":[{"value":"/ A cursor into the Debugging Information Entries tree for a compilation unit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922809,"byte_end":922889,"line_start":2394,"line_end":2394,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922890,"byte_end":922893,"line_start":2395,"line_end":2395,"column_start":1,"column_end":4}},{"value":"/ The `EntriesCursor` can traverse the DIE tree in DFS order using `next_dfs()`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922894,"byte_end":922976,"line_start":2396,"line_end":2396,"column_start":1,"column_end":83}},{"value":"/ or skip to the next sibling of the entry the cursor is currently pointing to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":922977,"byte_end":923057,"line_start":2397,"line_end":2397,"column_start":1,"column_end":81}},{"value":"/ using `next_sibling()`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923058,"byte_end":923085,"line_start":2398,"line_end":2398,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923086,"byte_end":923089,"line_start":2399,"line_end":2399,"column_start":1,"column_end":4}},{"value":"/ It is also possible to traverse the DIE tree at a lower abstraction level","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923090,"byte_end":923167,"line_start":2400,"line_end":2400,"column_start":1,"column_end":78}},{"value":"/ using `next_entry()`. This method does not skip over null entries, or provide","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923168,"byte_end":923249,"line_start":2401,"line_end":2401,"column_start":1,"column_end":82}},{"value":"/ any indication of the current tree depth. In this case, you must use `current()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923250,"byte_end":923334,"line_start":2402,"line_end":2402,"column_start":1,"column_end":85}},{"value":"/ to obtain the current entry, and `current().has_children()` to determine if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923335,"byte_end":923414,"line_start":2403,"line_end":2403,"column_start":1,"column_end":80}},{"value":"/ the entry following the current entry will be a sibling or child. `current()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923415,"byte_end":923496,"line_start":2404,"line_end":2404,"column_start":1,"column_end":82}},{"value":"/ will return `None` if the current entry is a null entry, which signifies the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923497,"byte_end":923577,"line_start":2405,"line_end":2405,"column_start":1,"column_end":81}},{"value":"/ end of the current tree depth.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923578,"byte_end":923612,"line_start":2406,"line_end":2406,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924198,"byte_end":924205,"line_start":2425,"line_end":2425,"column_start":12,"column_end":19},"name":"current","qualname":"<EntriesCursor>::current","value":"pub fn current(&Self) -> Option<&DebuggingInformationEntry>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the entry that the cursor is currently pointing to.","sig":null,"attributes":[{"value":"/ Get a reference to the entry that the cursor is currently pointing to.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923965,"byte_end":924039,"line_start":2420,"line_end":2420,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924044,"byte_end":924047,"line_start":2421,"line_end":2421,"column_start":5,"column_end":8}},{"value":"/ If the cursor is not pointing at an entry, or if the current entry is a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924052,"byte_end":924127,"line_start":2422,"line_end":2422,"column_start":5,"column_end":80}},{"value":"/ null entry, then `None` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924132,"byte_end":924172,"line_start":2423,"line_end":2423,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924177,"byte_end":924186,"line_start":2424,"line_end":2424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924525,"byte_end":924535,"line_start":2433,"line_end":2433,"column_start":12,"column_end":22},"name":"next_entry","qualname":"<EntriesCursor>::next_entry","value":"pub fn next_entry(&mut Self) -> Result<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree.","sig":null,"attributes":[{"value":"/ Move the cursor to the next DIE in the tree.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924320,"byte_end":924368,"line_start":2429,"line_end":2429,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924373,"byte_end":924376,"line_start":2430,"line_end":2430,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if there is a next entry, even if this entry is null.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924381,"byte_end":924453,"line_start":2431,"line_end":2431,"column_start":5,"column_end":77}},{"value":"/ If there is no next entry, then `None` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":924458,"byte_end":924513,"line_start":2432,"line_end":2432,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929534,"byte_end":929542,"line_start":2582,"line_end":2582,"column_start":12,"column_end":20},"name":"next_dfs","qualname":"<EntriesCursor>::next_dfs","value":"pub fn next_dfs(&mut Self)\n-> Result<Option<(isize, &DebuggingInformationEntry)>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree in DFS order.","sig":null,"attributes":[{"value":"/ Move the cursor to the next DIE in the tree in DFS order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925479,"byte_end":925540,"line_start":2464,"line_end":2464,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925545,"byte_end":925548,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ Upon successful movement of the cursor, return the delta traversal","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925553,"byte_end":925623,"line_start":2466,"line_end":2466,"column_start":5,"column_end":75}},{"value":"/ depth and the entry:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925628,"byte_end":925652,"line_start":2467,"line_end":2467,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925657,"byte_end":925660,"line_start":2468,"line_end":2468,"column_start":5,"column_end":8}},{"value":"/   * If we moved down into the previous current entry's children, we get","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925665,"byte_end":925740,"line_start":2469,"line_end":2469,"column_start":5,"column_end":80}},{"value":"/     `Some((1, entry))`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925745,"byte_end":925772,"line_start":2470,"line_end":2470,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925777,"byte_end":925780,"line_start":2471,"line_end":2471,"column_start":5,"column_end":8}},{"value":"/   * If we moved to the previous current entry's sibling, we get","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925785,"byte_end":925852,"line_start":2472,"line_end":2472,"column_start":5,"column_end":72}},{"value":"/     `Some((0, entry))`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925857,"byte_end":925884,"line_start":2473,"line_end":2473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925889,"byte_end":925892,"line_start":2474,"line_end":2474,"column_start":5,"column_end":8}},{"value":"/   * If the previous entry does not have any siblings and we move up to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925897,"byte_end":925971,"line_start":2475,"line_end":2475,"column_start":5,"column_end":79}},{"value":"/     its parent's next sibling, then we get `Some((-1, entry))`. Note that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":925976,"byte_end":926053,"line_start":2476,"line_end":2476,"column_start":5,"column_end":82}},{"value":"/     if the parent doesn't have a next sibling, then it could go up to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926058,"byte_end":926135,"line_start":2477,"line_end":2477,"column_start":5,"column_end":82}},{"value":"/     parent's parent's next sibling and return `Some((-2, entry))`, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926140,"byte_end":926215,"line_start":2478,"line_end":2478,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926220,"byte_end":926223,"line_start":2479,"line_end":2479,"column_start":5,"column_end":8}},{"value":"/ If there is no next entry, then `None` is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926228,"byte_end":926283,"line_start":2480,"line_end":2480,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926288,"byte_end":926291,"line_start":2481,"line_end":2481,"column_start":5,"column_end":8}},{"value":"/ Here is an example that finds the first entry in a compilation unit that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926296,"byte_end":926372,"line_start":2482,"line_end":2482,"column_start":5,"column_end":81}},{"value":"/ does not have any children.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926377,"byte_end":926408,"line_start":2483,"line_end":2483,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926413,"byte_end":926416,"line_start":2484,"line_end":2484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926421,"byte_end":926428,"line_start":2485,"line_end":2485,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926433,"byte_end":926489,"line_start":2486,"line_end":2486,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926494,"byte_end":926516,"line_start":2487,"line_end":2487,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926521,"byte_end":926556,"line_start":2488,"line_end":2488,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926561,"byte_end":926566,"line_start":2489,"line_end":2489,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926571,"byte_end":926607,"line_start":2490,"line_end":2490,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926612,"byte_end":926645,"line_start":2491,"line_end":2491,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926650,"byte_end":926672,"line_start":2492,"line_end":2492,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926677,"byte_end":926698,"line_start":2493,"line_end":2493,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926703,"byte_end":926735,"line_start":2494,"line_end":2494,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926740,"byte_end":926773,"line_start":2495,"line_end":2495,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926778,"byte_end":926803,"line_start":2496,"line_end":2496,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926808,"byte_end":926823,"line_start":2497,"line_end":2497,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926828,"byte_end":926833,"line_start":2498,"line_end":2498,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926838,"byte_end":926855,"line_start":2499,"line_end":2499,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926860,"byte_end":926865,"line_start":2500,"line_end":2500,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926870,"byte_end":926900,"line_start":2501,"line_end":2501,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926905,"byte_end":926920,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926925,"byte_end":926980,"line_start":2503,"line_end":2503,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":926985,"byte_end":927018,"line_start":2504,"line_end":2504,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927023,"byte_end":927028,"line_start":2505,"line_end":2505,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927033,"byte_end":927056,"line_start":2506,"line_end":2506,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927061,"byte_end":927066,"line_start":2507,"line_end":2507,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927071,"byte_end":927103,"line_start":2508,"line_end":2508,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927108,"byte_end":927125,"line_start":2509,"line_end":2509,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927130,"byte_end":927187,"line_start":2510,"line_end":2510,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927192,"byte_end":927227,"line_start":2511,"line_end":2511,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927232,"byte_end":927237,"line_start":2512,"line_end":2512,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927242,"byte_end":927267,"line_start":2513,"line_end":2513,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927272,"byte_end":927277,"line_start":2514,"line_end":2514,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927282,"byte_end":927316,"line_start":2515,"line_end":2515,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927321,"byte_end":927340,"line_start":2516,"line_end":2516,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927345,"byte_end":927404,"line_start":2517,"line_end":2517,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927409,"byte_end":927446,"line_start":2518,"line_end":2518,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927451,"byte_end":927456,"line_start":2519,"line_end":2519,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927461,"byte_end":927488,"line_start":2520,"line_end":2520,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927493,"byte_end":927498,"line_start":2521,"line_end":2521,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927503,"byte_end":927537,"line_start":2522,"line_end":2522,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927542,"byte_end":927563,"line_start":2523,"line_end":2523,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927568,"byte_end":927573,"line_start":2524,"line_end":2524,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927578,"byte_end":927610,"line_start":2525,"line_end":2525,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927615,"byte_end":927634,"line_start":2526,"line_end":2526,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927639,"byte_end":927644,"line_start":2527,"line_end":2527,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927649,"byte_end":927679,"line_start":2528,"line_end":2528,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927684,"byte_end":927701,"line_start":2529,"line_end":2529,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927706,"byte_end":927714,"line_start":2530,"line_end":2530,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927719,"byte_end":927782,"line_start":2531,"line_end":2531,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927787,"byte_end":927792,"line_start":2532,"line_end":2532,"column_start":5,"column_end":10}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927797,"byte_end":927821,"line_start":2533,"line_end":2533,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927826,"byte_end":927843,"line_start":2534,"line_end":2534,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927848,"byte_end":927863,"line_start":2535,"line_end":2535,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927868,"byte_end":927898,"line_start":2536,"line_end":2536,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927903,"byte_end":927918,"line_start":2537,"line_end":2537,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927923,"byte_end":927951,"line_start":2538,"line_end":2538,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927956,"byte_end":927971,"line_start":2539,"line_end":2539,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":927976,"byte_end":928005,"line_start":2540,"line_end":2540,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928010,"byte_end":928052,"line_start":2541,"line_end":2541,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928057,"byte_end":928074,"line_start":2542,"line_end":2542,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928079,"byte_end":928125,"line_start":2543,"line_end":2543,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928130,"byte_end":928147,"line_start":2544,"line_end":2544,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928152,"byte_end":928179,"line_start":2545,"line_end":2545,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928184,"byte_end":928199,"line_start":2546,"line_end":2546,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928204,"byte_end":928219,"line_start":2547,"line_end":2547,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928224,"byte_end":928252,"line_start":2548,"line_end":2548,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928257,"byte_end":928271,"line_start":2549,"line_end":2549,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928276,"byte_end":928284,"line_start":2550,"line_end":2550,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928289,"byte_end":928358,"line_start":2551,"line_end":2551,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928363,"byte_end":928368,"line_start":2552,"line_end":2552,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928373,"byte_end":928446,"line_start":2553,"line_end":2553,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928451,"byte_end":928454,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928459,"byte_end":928490,"line_start":2555,"line_end":2555,"column_start":5,"column_end":36}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928495,"byte_end":928575,"line_start":2556,"line_end":2556,"column_start":5,"column_end":85}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928580,"byte_end":928626,"line_start":2557,"line_end":2557,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928631,"byte_end":928634,"line_start":2558,"line_end":2558,"column_start":5,"column_end":8}},{"value":"/ let mut first_entry_with_no_children = None;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928639,"byte_end":928687,"line_start":2559,"line_end":2559,"column_start":5,"column_end":53}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928692,"byte_end":928736,"line_start":2560,"line_end":2560,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928741,"byte_end":928744,"line_start":2561,"line_end":2561,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928749,"byte_end":928784,"line_start":2562,"line_end":2562,"column_start":5,"column_end":40}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928789,"byte_end":928839,"line_start":2563,"line_end":2563,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928844,"byte_end":928847,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ // Traverse the DIE tree in depth-first search order.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928852,"byte_end":928909,"line_start":2565,"line_end":2565,"column_start":5,"column_end":62}},{"value":"/ let mut depth = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928914,"byte_end":928936,"line_start":2566,"line_end":2566,"column_start":5,"column_end":27}},{"value":"/ while let Some((delta_depth, current)) = cursor.next_dfs().expect(\"Should parse next dfs\") {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":928941,"byte_end":929037,"line_start":2567,"line_end":2567,"column_start":5,"column_end":101}},{"value":"/     // Update depth value, and break out of the loop when we","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929042,"byte_end":929106,"line_start":2568,"line_end":2568,"column_start":5,"column_end":69}},{"value":"/     // return to the original starting position.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929111,"byte_end":929163,"line_start":2569,"line_end":2569,"column_start":5,"column_end":57}},{"value":"/     depth += delta_depth;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929168,"byte_end":929197,"line_start":2570,"line_end":2570,"column_start":5,"column_end":34}},{"value":"/     if depth <= 0 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929202,"byte_end":929225,"line_start":2571,"line_end":2571,"column_start":5,"column_end":28}},{"value":"/         break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929230,"byte_end":929248,"line_start":2572,"line_end":2572,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929253,"byte_end":929262,"line_start":2573,"line_end":2573,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929267,"byte_end":929270,"line_start":2574,"line_end":2574,"column_start":5,"column_end":8}},{"value":"/     first_entry_with_no_children = Some(current.clone());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929275,"byte_end":929336,"line_start":2575,"line_end":2575,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929341,"byte_end":929346,"line_start":2576,"line_end":2576,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929351,"byte_end":929354,"line_start":2577,"line_end":2577,"column_start":5,"column_end":8}},{"value":"/ println!(\"The first entry with no children is {:?}\",","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929359,"byte_end":929415,"line_start":2578,"line_end":2578,"column_start":5,"column_end":61}},{"value":"/          first_entry_with_no_children.unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929420,"byte_end":929472,"line_start":2579,"line_end":2579,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929477,"byte_end":929484,"line_start":2580,"line_end":2580,"column_start":5,"column_end":12}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":929489,"byte_end":929522,"line_start":2581,"line_end":2581,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933581,"byte_end":933593,"line_start":2707,"line_end":2707,"column_start":12,"column_end":24},"name":"next_sibling","qualname":"<EntriesCursor>::next_sibling","value":"pub fn next_sibling(&mut Self) -> Result<Option<&DebuggingInformationEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next sibling DIE of the current one.","sig":null,"attributes":[{"value":"/ Move the cursor to the next sibling DIE of the current one.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930141,"byte_end":930204,"line_start":2601,"line_end":2601,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930209,"byte_end":930212,"line_start":2602,"line_end":2602,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Some(entry))` when the cursor has been moved to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930217,"byte_end":930280,"line_start":2603,"line_end":2603,"column_start":5,"column_end":68}},{"value":"/ the next sibling, `Ok(None)` when there is no next sibling.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930285,"byte_end":930348,"line_start":2604,"line_end":2604,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930353,"byte_end":930356,"line_start":2605,"line_end":2605,"column_start":5,"column_end":8}},{"value":"/ The depth of the cursor is never changed if this method returns `Ok`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930361,"byte_end":930434,"line_start":2606,"line_end":2606,"column_start":5,"column_end":78}},{"value":"/ Once `Ok(None)` is returned, this method will continue to return","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930439,"byte_end":930507,"line_start":2607,"line_end":2607,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` until either `next_entry` or `next_dfs` is called.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930512,"byte_end":930577,"line_start":2608,"line_end":2608,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930582,"byte_end":930585,"line_start":2609,"line_end":2609,"column_start":5,"column_end":8}},{"value":"/ Here is an example that iterates over all of the direct children of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930590,"byte_end":930665,"line_start":2610,"line_end":2610,"column_start":5,"column_end":80}},{"value":"/ root entry:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930670,"byte_end":930685,"line_start":2611,"line_end":2611,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930690,"byte_end":930693,"line_start":2612,"line_end":2612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930698,"byte_end":930705,"line_start":2613,"line_end":2613,"column_start":5,"column_end":12}},{"value":"/ # use gimli::{DebugAbbrev, DebugInfo, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930710,"byte_end":930766,"line_start":2614,"line_end":2614,"column_start":5,"column_end":61}},{"value":"/ # let info_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930771,"byte_end":930793,"line_start":2615,"line_end":2615,"column_start":5,"column_end":27}},{"value":"/ #     // Comilation unit header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930798,"byte_end":930833,"line_start":2616,"line_end":2616,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930838,"byte_end":930843,"line_start":2617,"line_end":2617,"column_start":5,"column_end":10}},{"value":"/ #     // 32-bit unit length = 25","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930848,"byte_end":930884,"line_start":2618,"line_end":2618,"column_start":5,"column_end":41}},{"value":"/ #     0x19, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930889,"byte_end":930922,"line_start":2619,"line_end":2619,"column_start":5,"column_end":38}},{"value":"/ #     // Version 4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930927,"byte_end":930949,"line_start":2620,"line_end":2620,"column_start":5,"column_end":27}},{"value":"/ #     0x04, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930954,"byte_end":930975,"line_start":2621,"line_end":2621,"column_start":5,"column_end":26}},{"value":"/ #     // debug_abbrev_offset","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":930980,"byte_end":931012,"line_start":2622,"line_end":2622,"column_start":5,"column_end":37}},{"value":"/ #     0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931017,"byte_end":931050,"line_start":2623,"line_end":2623,"column_start":5,"column_end":38}},{"value":"/ #     // Address size","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931055,"byte_end":931080,"line_start":2624,"line_end":2624,"column_start":5,"column_end":30}},{"value":"/ #     0x04,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931085,"byte_end":931100,"line_start":2625,"line_end":2625,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931105,"byte_end":931110,"line_start":2626,"line_end":2626,"column_start":5,"column_end":10}},{"value":"/ #     // DIEs","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931115,"byte_end":931132,"line_start":2627,"line_end":2627,"column_start":5,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931137,"byte_end":931142,"line_start":2628,"line_end":2628,"column_start":5,"column_end":10}},{"value":"/ #     // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931147,"byte_end":931177,"line_start":2629,"line_end":2629,"column_start":5,"column_end":35}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931182,"byte_end":931197,"line_start":2630,"line_end":2630,"column_start":5,"column_end":20}},{"value":"/ #     // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931202,"byte_end":931257,"line_start":2631,"line_end":2631,"column_start":5,"column_end":60}},{"value":"/ #     0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931262,"byte_end":931295,"line_start":2632,"line_end":2632,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931300,"byte_end":931305,"line_start":2633,"line_end":2633,"column_start":5,"column_end":10}},{"value":"/ #       // Children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931310,"byte_end":931333,"line_start":2634,"line_end":2634,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931338,"byte_end":931343,"line_start":2635,"line_end":2635,"column_start":5,"column_end":10}},{"value":"/ #       // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931348,"byte_end":931380,"line_start":2636,"line_end":2636,"column_start":5,"column_end":37}},{"value":"/ #       0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931385,"byte_end":931402,"line_start":2637,"line_end":2637,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931407,"byte_end":931464,"line_start":2638,"line_end":2638,"column_start":5,"column_end":62}},{"value":"/ #       0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931469,"byte_end":931504,"line_start":2639,"line_end":2639,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931509,"byte_end":931514,"line_start":2640,"line_end":2640,"column_start":5,"column_end":10}},{"value":"/ #         // Children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931519,"byte_end":931544,"line_start":2641,"line_end":2641,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931549,"byte_end":931554,"line_start":2642,"line_end":2642,"column_start":5,"column_end":10}},{"value":"/ #         // Abbreviation code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931559,"byte_end":931593,"line_start":2643,"line_end":2643,"column_start":5,"column_end":39}},{"value":"/ #         0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931598,"byte_end":931617,"line_start":2644,"line_end":2644,"column_start":5,"column_end":24}},{"value":"/ #         // Attribute of form DW_FORM_string = \"foo\\0\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931622,"byte_end":931681,"line_start":2645,"line_end":2645,"column_start":5,"column_end":64}},{"value":"/ #         0x66, 0x6f, 0x6f, 0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931686,"byte_end":931723,"line_start":2646,"line_end":2646,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931728,"byte_end":931733,"line_start":2647,"line_end":2647,"column_start":5,"column_end":10}},{"value":"/ #           // Children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931738,"byte_end":931765,"line_start":2648,"line_end":2648,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931770,"byte_end":931775,"line_start":2649,"line_end":2649,"column_start":5,"column_end":10}},{"value":"/ #           // End of children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931780,"byte_end":931814,"line_start":2650,"line_end":2650,"column_start":5,"column_end":39}},{"value":"/ #           0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931819,"byte_end":931840,"line_start":2651,"line_end":2651,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931845,"byte_end":931850,"line_start":2652,"line_end":2652,"column_start":5,"column_end":10}},{"value":"/ #         // End of children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931855,"byte_end":931887,"line_start":2653,"line_end":2653,"column_start":5,"column_end":37}},{"value":"/ #         0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931892,"byte_end":931911,"line_start":2654,"line_end":2654,"column_start":5,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931916,"byte_end":931921,"line_start":2655,"line_end":2655,"column_start":5,"column_end":10}},{"value":"/ #       // End of children","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931926,"byte_end":931956,"line_start":2656,"line_end":2656,"column_start":5,"column_end":35}},{"value":"/ #       0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931961,"byte_end":931978,"line_start":2657,"line_end":2657,"column_start":5,"column_end":22}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931983,"byte_end":931991,"line_start":2658,"line_end":2658,"column_start":5,"column_end":13}},{"value":"/ # let debug_info = DebugInfo::new(&info_buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":931996,"byte_end":932059,"line_start":2659,"line_end":2659,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932064,"byte_end":932069,"line_start":2660,"line_end":2660,"column_start":5,"column_end":10}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932074,"byte_end":932147,"line_start":2661,"line_end":2661,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932152,"byte_end":932155,"line_start":2662,"line_end":2662,"column_start":5,"column_end":8}},{"value":"/ # let abbrev_buf = [","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932160,"byte_end":932184,"line_start":2663,"line_end":2663,"column_start":5,"column_end":29}},{"value":"/ #     // Code","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932189,"byte_end":932206,"line_start":2664,"line_end":2664,"column_start":5,"column_end":22}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932211,"byte_end":932226,"line_start":2665,"line_end":2665,"column_start":5,"column_end":20}},{"value":"/ #     // DW_TAG_subprogram","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932231,"byte_end":932261,"line_start":2666,"line_end":2666,"column_start":5,"column_end":35}},{"value":"/ #     0x2e,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932266,"byte_end":932281,"line_start":2667,"line_end":2667,"column_start":5,"column_end":20}},{"value":"/ #     // DW_CHILDREN_yes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932286,"byte_end":932314,"line_start":2668,"line_end":2668,"column_start":5,"column_end":33}},{"value":"/ #     0x01,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932319,"byte_end":932334,"line_start":2669,"line_end":2669,"column_start":5,"column_end":20}},{"value":"/ #     // Begin attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932339,"byte_end":932368,"line_start":2670,"line_end":2670,"column_start":5,"column_end":34}},{"value":"/ #       // Attribute name = DW_AT_name","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932373,"byte_end":932415,"line_start":2671,"line_end":2671,"column_start":5,"column_end":47}},{"value":"/ #       0x03,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932420,"byte_end":932437,"line_start":2672,"line_end":2672,"column_start":5,"column_end":22}},{"value":"/ #       // Attribute form = DW_FORM_string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932442,"byte_end":932488,"line_start":2673,"line_end":2673,"column_start":5,"column_end":51}},{"value":"/ #       0x08,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932493,"byte_end":932510,"line_start":2674,"line_end":2674,"column_start":5,"column_end":22}},{"value":"/ #     // End attributes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932515,"byte_end":932542,"line_start":2675,"line_end":2675,"column_start":5,"column_end":32}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932547,"byte_end":932562,"line_start":2676,"line_end":2676,"column_start":5,"column_end":20}},{"value":"/ #     0x00,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932567,"byte_end":932582,"line_start":2677,"line_end":2677,"column_start":5,"column_end":20}},{"value":"/ #     // Null terminator","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932587,"byte_end":932615,"line_start":2678,"line_end":2678,"column_start":5,"column_end":33}},{"value":"/ #     0x00","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932620,"byte_end":932634,"line_start":2679,"line_end":2679,"column_start":5,"column_end":19}},{"value":"/ # ];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932639,"byte_end":932647,"line_start":2680,"line_end":2680,"column_start":5,"column_end":13}},{"value":"/ # let debug_abbrev = DebugAbbrev::new(&abbrev_buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932652,"byte_end":932721,"line_start":2681,"line_end":2681,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932726,"byte_end":932731,"line_start":2682,"line_end":2682,"column_start":5,"column_end":10}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932736,"byte_end":932767,"line_start":2683,"line_end":2683,"column_start":5,"column_end":36}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932772,"byte_end":932852,"line_start":2684,"line_end":2684,"column_start":5,"column_end":85}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932857,"byte_end":932903,"line_start":2685,"line_end":2685,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932908,"byte_end":932911,"line_start":2686,"line_end":2686,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = unit.entries(&abbrevs);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932916,"byte_end":932960,"line_start":2687,"line_end":2687,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932965,"byte_end":932968,"line_start":2688,"line_end":2688,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":932973,"byte_end":933008,"line_start":2689,"line_end":2689,"column_start":5,"column_end":40}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933013,"byte_end":933063,"line_start":2690,"line_end":2690,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933068,"byte_end":933071,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/ // Move the cursor to the root's first child.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933076,"byte_end":933125,"line_start":2692,"line_end":2692,"column_start":5,"column_end":54}},{"value":"/ assert!(cursor.next_dfs().unwrap().is_some());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933130,"byte_end":933180,"line_start":2693,"line_end":2693,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933185,"byte_end":933188,"line_start":2694,"line_end":2694,"column_start":5,"column_end":8}},{"value":"/ // Iterate the root's children.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933193,"byte_end":933228,"line_start":2695,"line_end":2695,"column_start":5,"column_end":40}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933233,"byte_end":933243,"line_start":2696,"line_end":2696,"column_start":5,"column_end":15}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933248,"byte_end":933257,"line_start":2697,"line_end":2697,"column_start":5,"column_end":14}},{"value":"/         let current = cursor.current().expect(\"Should be at an entry\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933262,"byte_end":933337,"line_start":2698,"line_end":2698,"column_start":5,"column_end":80}},{"value":"/         println!(\"{:?} is a child of the root\", current);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933342,"byte_end":933403,"line_start":2699,"line_end":2699,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933408,"byte_end":933417,"line_start":2700,"line_end":2700,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933422,"byte_end":933425,"line_start":2701,"line_end":2701,"column_start":5,"column_end":8}},{"value":"/     if cursor.next_sibling().expect(\"Should parse next sibling\").is_none() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933430,"byte_end":933510,"line_start":2702,"line_end":2702,"column_start":5,"column_end":85}},{"value":"/         break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933515,"byte_end":933533,"line_start":2703,"line_end":2703,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933538,"byte_end":933547,"line_start":2704,"line_end":2704,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933552,"byte_end":933557,"line_start":2705,"line_end":2705,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":933562,"byte_end":933569,"line_start":2706,"line_end":2706,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7696},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936662,"byte_end":936673,"line_start":2793,"line_end":2793,"column_start":12,"column_end":23},"name":"EntriesTree","qualname":"::read::unit::EntriesTree","value":"EntriesTree {  }","parent":null,"children":[{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705}],"decl_id":null,"docs":" The state information for a tree view of the Debugging Information Entries.","sig":null,"attributes":[{"value":"/ The state information for a tree view of the Debugging Information Entries.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935149,"byte_end":935228,"line_start":2752,"line_end":2752,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935229,"byte_end":935232,"line_start":2753,"line_end":2753,"column_start":1,"column_end":4}},{"value":"/ The `EntriesTree` can be used to recursively iterate through the DIE","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935233,"byte_end":935305,"line_start":2754,"line_end":2754,"column_start":1,"column_end":73}},{"value":"/ tree, following the parent/child relationships. The `EntriesTree` contains","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935306,"byte_end":935384,"line_start":2755,"line_end":2755,"column_start":1,"column_end":79}},{"value":"/ shared state for all nodes in the tree, avoiding any duplicate parsing of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935385,"byte_end":935462,"line_start":2756,"line_end":2756,"column_start":1,"column_end":78}},{"value":"/ entries during the traversal.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935463,"byte_end":935496,"line_start":2757,"line_end":2757,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935497,"byte_end":935500,"line_start":2758,"line_end":2758,"column_start":1,"column_end":4}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935501,"byte_end":935521,"line_start":2759,"line_end":2759,"column_start":1,"column_end":21}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935522,"byte_end":935540,"line_start":2760,"line_end":2760,"column_start":1,"column_end":19}},{"value":"/ # fn example() -> Result<(), gimli::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935541,"byte_end":935589,"line_start":2761,"line_end":2761,"column_start":1,"column_end":49}},{"value":"/ # let debug_info = gimli::DebugInfo::new(&[], gimli::LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935590,"byte_end":935661,"line_start":2762,"line_end":2762,"column_start":1,"column_end":72}},{"value":"/ # let get_some_unit = || debug_info.units().next().unwrap().unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935662,"byte_end":935735,"line_start":2763,"line_end":2763,"column_start":1,"column_end":74}},{"value":"/ let unit = get_some_unit();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935736,"byte_end":935767,"line_start":2764,"line_end":2764,"column_start":1,"column_end":32}},{"value":"/ # let debug_abbrev = gimli::DebugAbbrev::new(&[], gimli::LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935768,"byte_end":935843,"line_start":2765,"line_end":2765,"column_start":1,"column_end":76}},{"value":"/ # let get_abbrevs_for_unit = |_| unit.abbreviations(&debug_abbrev).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935844,"byte_end":935924,"line_start":2766,"line_end":2766,"column_start":1,"column_end":81}},{"value":"/ let abbrevs = get_abbrevs_for_unit(&unit);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935925,"byte_end":935971,"line_start":2767,"line_end":2767,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935972,"byte_end":935975,"line_start":2768,"line_end":2768,"column_start":1,"column_end":4}},{"value":"/ let mut tree = unit.entries_tree(&abbrevs, None)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":935976,"byte_end":936030,"line_start":2769,"line_end":2769,"column_start":1,"column_end":55}},{"value":"/ let root = tree.root()?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936031,"byte_end":936059,"line_start":2770,"line_end":2770,"column_start":1,"column_end":29}},{"value":"/ process_tree(root)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936060,"byte_end":936084,"line_start":2771,"line_end":2771,"column_start":1,"column_end":25}},{"value":"/ # unreachable!()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936085,"byte_end":936105,"line_start":2772,"line_end":2772,"column_start":1,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936106,"byte_end":936113,"line_start":2773,"line_end":2773,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936114,"byte_end":936117,"line_start":2774,"line_end":2774,"column_start":1,"column_end":4}},{"value":"/ fn process_tree<R>(mut node: gimli::EntriesTreeNode<R>) -> gimli::Result<()>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936118,"byte_end":936198,"line_start":2775,"line_end":2775,"column_start":1,"column_end":81}},{"value":"/     where R: gimli::Reader","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936199,"byte_end":936229,"line_start":2776,"line_end":2776,"column_start":1,"column_end":31}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936230,"byte_end":936235,"line_start":2777,"line_end":2777,"column_start":1,"column_end":6}},{"value":"/     {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936236,"byte_end":936245,"line_start":2778,"line_end":2778,"column_start":1,"column_end":10}},{"value":"/         // Examine the entry attributes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936246,"byte_end":936290,"line_start":2779,"line_end":2779,"column_start":1,"column_end":45}},{"value":"/         let mut attrs = node.entry().attrs();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936291,"byte_end":936340,"line_start":2780,"line_end":2780,"column_start":1,"column_end":50}},{"value":"/         while let Some(attr) = attrs.next()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936341,"byte_end":936391,"line_start":2781,"line_end":2781,"column_start":1,"column_end":51}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936392,"byte_end":936405,"line_start":2782,"line_end":2782,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936406,"byte_end":936415,"line_start":2783,"line_end":2783,"column_start":1,"column_end":10}},{"value":"/     let mut children = node.children();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936416,"byte_end":936459,"line_start":2784,"line_end":2784,"column_start":1,"column_end":44}},{"value":"/     while let Some(child) = children.next()? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936460,"byte_end":936510,"line_start":2785,"line_end":2785,"column_start":1,"column_end":51}},{"value":"/         // Recursively process a child.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936511,"byte_end":936554,"line_start":2786,"line_end":2786,"column_start":1,"column_end":44}},{"value":"/         process_tree(child);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936555,"byte_end":936587,"line_start":2787,"line_end":2787,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936588,"byte_end":936597,"line_start":2788,"line_end":2788,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936598,"byte_end":936612,"line_start":2789,"line_end":2789,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936613,"byte_end":936618,"line_start":2790,"line_end":2790,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936619,"byte_end":936626,"line_start":2791,"line_end":2791,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":937322,"byte_end":937326,"line_start":2819,"line_end":2819,"column_start":12,"column_end":16},"name":"root","qualname":"<EntriesTree>::root","value":"pub fn root<'me>(&'me mut Self) -> Result<EntriesTreeNode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the root node of the tree.\n","sig":null,"attributes":[{"value":"/ Returns the root node of the tree.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":937272,"byte_end":937310,"line_start":2818,"line_end":2818,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7716},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":940959,"byte_end":940974,"line_start":2925,"line_end":2925,"column_start":12,"column_end":27},"name":"EntriesTreeNode","qualname":"::read::unit::EntriesTreeNode","value":"EntriesTreeNode {  }","parent":null,"children":[{"krate":0,"index":7721},{"krate":0,"index":7722}],"decl_id":null,"docs":" A node in the Debugging Information Entry tree.","sig":null,"attributes":[{"value":"/ A node in the Debugging Information Entry tree.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":940761,"byte_end":940812,"line_start":2920,"line_end":2920,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":940813,"byte_end":940816,"line_start":2921,"line_end":2921,"column_start":1,"column_end":4}},{"value":"/ The root node of a tree can be obtained","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":940817,"byte_end":940860,"line_start":2922,"line_end":2922,"column_start":1,"column_end":44}},{"value":"/ via [`EntriesTree::root`](./struct.EntriesTree.html#method.root).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":940861,"byte_end":940930,"line_start":2923,"line_end":2923,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941462,"byte_end":941467,"line_start":2940,"line_end":2940,"column_start":12,"column_end":17},"name":"entry","qualname":"<EntriesTreeNode>::entry","value":"pub fn entry(&Self) -> &DebuggingInformationEntry","parent":null,"children":[],"decl_id":null,"docs":" Returns the current entry in the tree.\n","sig":null,"attributes":[{"value":"/ Returns the current entry in the tree.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941408,"byte_end":941450,"line_start":2939,"line_end":2939,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941801,"byte_end":941809,"line_start":2949,"line_end":2949,"column_start":12,"column_end":20},"name":"children","qualname":"<EntriesTreeNode>::children","value":"pub fn children(Self) -> EntriesTreeIter","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator for the children of the current entry.","sig":null,"attributes":[{"value":"/ Create an iterator for the children of the current entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941631,"byte_end":941692,"line_start":2945,"line_end":2945,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941697,"byte_end":941700,"line_start":2946,"line_end":2946,"column_start":5,"column_end":8}},{"value":"/ The current entry can no longer be accessed after creating the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941705,"byte_end":941771,"line_start":2947,"line_end":2947,"column_start":5,"column_end":71}},{"value":"/ iterator.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941776,"byte_end":941789,"line_start":2948,"line_end":2948,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7729},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942167,"byte_end":942182,"line_start":2960,"line_end":2960,"column_start":12,"column_end":27},"name":"EntriesTreeIter","qualname":"::read::unit::EntriesTreeIter","value":"EntriesTreeIter {  }","parent":null,"children":[{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736}],"decl_id":null,"docs":" An iterator that allows traversal of the children of an\n `EntriesTreeNode`.","sig":null,"attributes":[{"value":"/ An iterator that allows traversal of the children of an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941924,"byte_end":941983,"line_start":2954,"line_end":2954,"column_start":1,"column_end":60}},{"value":"/ `EntriesTreeNode`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941984,"byte_end":942006,"line_start":2955,"line_end":2955,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942007,"byte_end":942010,"line_start":2956,"line_end":2956,"column_start":1,"column_end":4}},{"value":"/ The items returned by this iterator are also `EntriesTreeNode`s,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942011,"byte_end":942079,"line_start":2957,"line_end":2957,"column_start":1,"column_end":69}},{"value":"/ which allow recursive traversal of grandchildren, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942080,"byte_end":942138,"line_start":2958,"line_end":2958,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942779,"byte_end":942783,"line_start":2981,"line_end":2981,"column_start":12,"column_end":16},"name":"next","qualname":"<EntriesTreeIter>::next","value":"pub fn next<'me>(&'me mut Self) -> Result<Option<EntriesTreeNode>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EntriesTreeNode` for the next child entry.","sig":null,"attributes":[{"value":"/ Returns an `EntriesTreeNode` for the next child entry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942647,"byte_end":942705,"line_start":2978,"line_end":2978,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942710,"byte_end":942713,"line_start":2979,"line_end":2979,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there are no more children.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942718,"byte_end":942767,"line_start":2980,"line_end":2980,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7743},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943696,"byte_end":943706,"line_start":3007,"line_end":3007,"column_start":12,"column_end":22},"name":"DebugTypes","qualname":"::read::unit::DebugTypes","value":"DebugTypes {  }","parent":null,"children":[{"krate":0,"index":7745}],"decl_id":null,"docs":" The `DebugTypes` struct represents the DWARF type information\n found in the `.debug_types` section.\n","sig":null,"attributes":[{"value":"/ The `DebugTypes` struct represents the DWARF type information","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943539,"byte_end":943604,"line_start":3004,"line_end":3004,"column_start":1,"column_end":66}},{"value":"/ found in the `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943605,"byte_end":943645,"line_start":3005,"line_end":3005,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944437,"byte_end":944440,"line_start":3029,"line_end":3029,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugTypes<EndianSlice>>::new","value":"pub fn new(&'input [u8], Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugTypes` instance from the data in the `.debug_types`\n section.","sig":null,"attributes":[{"value":"/ Construct a new `DebugTypes` instance from the data in the `.debug_types`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943839,"byte_end":943916,"line_start":3015,"line_end":3015,"column_start":5,"column_end":82}},{"value":"/ section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943921,"byte_end":943933,"line_start":3016,"line_end":3016,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943938,"byte_end":943941,"line_start":3017,"line_end":3017,"column_start":5,"column_end":8}},{"value":"/ It is the caller's responsibility to read the `.debug_types` section and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943946,"byte_end":944022,"line_start":3018,"line_end":3018,"column_start":5,"column_end":81}},{"value":"/ present it as a `&[u8]` slice. That means using some ELF loader on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944027,"byte_end":944097,"line_start":3019,"line_end":3019,"column_start":5,"column_end":75}},{"value":"/ Linux, a Mach-O loader on OSX, etc.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944102,"byte_end":944141,"line_start":3020,"line_end":3020,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944146,"byte_end":944149,"line_start":3021,"line_end":3021,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944154,"byte_end":944161,"line_start":3022,"line_end":3022,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944166,"byte_end":944208,"line_start":3023,"line_end":3023,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944213,"byte_end":944216,"line_start":3024,"line_end":3024,"column_start":5,"column_end":8}},{"value":"/ # let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944221,"byte_end":944262,"line_start":3025,"line_end":3025,"column_start":5,"column_end":46}},{"value":"/ # let read_debug_types_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944267,"byte_end":944320,"line_start":3026,"line_end":3026,"column_start":5,"column_end":58}},{"value":"/ let debug_types = DebugTypes::new(read_debug_types_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944325,"byte_end":944413,"line_start":3027,"line_end":3027,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944418,"byte_end":944425,"line_start":3028,"line_end":3028,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945237,"byte_end":945243,"line_start":3050,"line_end":3050,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugTypes<T>>::borrow","value":"pub fn borrow<'a, F, R>(&'a Self, F) -> DebugTypes<R> where F: FnMut(&'a T) ->\nR","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugTypes` section that references the data in `self`.","sig":null,"attributes":[{"value":"/ Create a `DebugTypes` section that references the data in `self`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944605,"byte_end":944674,"line_start":3035,"line_end":3035,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944679,"byte_end":944682,"line_start":3036,"line_end":3036,"column_start":5,"column_end":8}},{"value":"/ This is useful when `R` implements `Reader` but `T` does not.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944687,"byte_end":944752,"line_start":3037,"line_end":3037,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944757,"byte_end":944760,"line_start":3038,"line_end":3038,"column_start":5,"column_end":8}},{"value":"/ ## Example Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944765,"byte_end":944785,"line_start":3039,"line_end":3039,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944790,"byte_end":944793,"line_start":3040,"line_end":3040,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944798,"byte_end":944816,"line_start":3041,"line_end":3041,"column_start":5,"column_end":23}},{"value":"/ # let load_section = || unimplemented!();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944821,"byte_end":944866,"line_start":3042,"line_end":3042,"column_start":5,"column_end":50}},{"value":"/ // Read the DWARF section into a `Vec` with whatever object loader you're using.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944871,"byte_end":944955,"line_start":3043,"line_end":3043,"column_start":5,"column_end":89}},{"value":"/ let owned_section: gimli::DebugTypes<Vec<u8>> = load_section();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944960,"byte_end":945027,"line_start":3044,"line_end":3044,"column_start":5,"column_end":72}},{"value":"/ // Create a reference to the DWARF section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945032,"byte_end":945079,"line_start":3045,"line_end":3045,"column_start":5,"column_end":52}},{"value":"/ let section = owned_section.borrow(|section| {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945084,"byte_end":945134,"line_start":3046,"line_end":3046,"column_start":5,"column_end":55}},{"value":"/     gimli::EndianSlice::new(&section, gimli::LittleEndian)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945139,"byte_end":945201,"line_start":3047,"line_end":3047,"column_start":5,"column_end":67}},{"value":"/ });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945206,"byte_end":945213,"line_start":3048,"line_end":3048,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945218,"byte_end":945225,"line_start":3049,"line_end":3049,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946384,"byte_end":946389,"line_start":3094,"line_end":3094,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugTypes<R>>::units","value":"pub fn units(&Self) -> DebugTypesUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-units in this `.debug_types` section.","sig":null,"attributes":[{"value":"/ Iterate the type-units in this `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945766,"byte_end":945824,"line_start":3077,"line_end":3077,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945829,"byte_end":945832,"line_start":3078,"line_end":3078,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945837,"byte_end":945844,"line_start":3079,"line_end":3079,"column_start":5,"column_end":12}},{"value":"/ use gimli::{DebugTypes, LittleEndian};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945849,"byte_end":945891,"line_start":3080,"line_end":3080,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945896,"byte_end":945899,"line_start":3081,"line_end":3081,"column_start":5,"column_end":8}},{"value":"/ # let buf = [];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945904,"byte_end":945923,"line_start":3082,"line_end":3082,"column_start":5,"column_end":24}},{"value":"/ # let read_debug_types_section_somehow = || &buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945928,"byte_end":945981,"line_start":3083,"line_end":3083,"column_start":5,"column_end":58}},{"value":"/ let debug_types = DebugTypes::new(read_debug_types_section_somehow(), LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945986,"byte_end":946074,"line_start":3084,"line_end":3084,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946079,"byte_end":946082,"line_start":3085,"line_end":3085,"column_start":5,"column_end":8}},{"value":"/ let mut iter = debug_types.units();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946087,"byte_end":946126,"line_start":3086,"line_end":3086,"column_start":5,"column_end":44}},{"value":"/ while let Some(unit) = iter.next().unwrap() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946131,"byte_end":946180,"line_start":3087,"line_end":3087,"column_start":5,"column_end":54}},{"value":"/     println!(\"unit's length is {}\", unit.unit_length());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946185,"byte_end":946245,"line_start":3088,"line_end":3088,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946250,"byte_end":946255,"line_start":3089,"line_end":3089,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946260,"byte_end":946267,"line_start":3090,"line_end":3090,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946272,"byte_end":946275,"line_start":3091,"line_end":3091,"column_start":5,"column_end":8}},{"value":"/ Can be [used with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946280,"byte_end":946301,"line_start":3092,"line_end":3092,"column_start":5,"column_end":26}},{"value":"/ `FallibleIterator`](./index.html#using-with-fallibleiterator).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946306,"byte_end":946372,"line_start":3093,"line_end":3093,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7757},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946822,"byte_end":946847,"line_start":3108,"line_end":3108,"column_start":12,"column_end":37},"name":"DebugTypesUnitHeadersIter","qualname":"::read::unit::DebugTypesUnitHeadersIter","value":"DebugTypesUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":7759},{"krate":0,"index":7760}],"decl_id":null,"docs":" An iterator over the type-units of this `.debug_types` section.","sig":null,"attributes":[{"value":"/ An iterator over the type-units of this `.debug_types` section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946600,"byte_end":946667,"line_start":3102,"line_end":3102,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946668,"byte_end":946671,"line_start":3103,"line_end":3103,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946672,"byte_end":946701,"line_start":3104,"line_end":3104,"column_start":1,"column_end":30}},{"value":"/ `DebugTypes::units`](./struct.DebugTypes.html#method.units) for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946702,"byte_end":946769,"line_start":3105,"line_end":3105,"column_start":1,"column_end":68}},{"value":"/ more detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946770,"byte_end":946786,"line_start":3106,"line_end":3106,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":947036,"byte_end":947040,"line_start":3115,"line_end":3115,"column_start":12,"column_end":16},"name":"next","qualname":"<DebugTypesUnitHeadersIter<R>>::next","value":"pub fn next(&mut Self) -> Result<Option<UnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next type unit header.\n","sig":null,"attributes":[{"value":"/ Advance the iterator to the next type unit header.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946970,"byte_end":947024,"line_start":3114,"line_end":3114,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7768},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055832,"byte_end":1055839,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::ValueType::Generic","value":"ValueType::Generic","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" The generic type, which is address-sized and of unspecified sign,\n as specified in the DWARF 5 standard, section 2.5.1.\n This type is also used to represent address base types.\n","sig":null,"attributes":[{"value":"/ The generic type, which is address-sized and of unspecified sign,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055633,"byte_end":1055702,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ as specified in the DWARF 5 standard, section 2.5.1.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055707,"byte_end":1055763,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"/ This type is also used to represent address base types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055768,"byte_end":1055827,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7770},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055880,"byte_end":1055882,"line_start":32,"line_end":32,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::ValueType::I8","value":"ValueType::I8","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Signed 8-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 8-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055845,"byte_end":1055875,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7772},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055925,"byte_end":1055927,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::ValueType::U8","value":"ValueType::U8","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Unsigned 8-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 8-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055888,"byte_end":1055920,"line_start":33,"line_end":33,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7774},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055969,"byte_end":1055972,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::ValueType::I16","value":"ValueType::I16","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Signed 16-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 16-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055933,"byte_end":1055964,"line_start":35,"line_end":35,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7776},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056016,"byte_end":1056019,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::ValueType::U16","value":"ValueType::U16","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Unsigned 16-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 16-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055978,"byte_end":1056011,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7778},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056061,"byte_end":1056064,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Signed 32-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 32-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056025,"byte_end":1056056,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7780},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056108,"byte_end":1056111,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::ValueType::U32","value":"ValueType::U32","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Unsigned 32-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 32-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056070,"byte_end":1056103,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7782},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056153,"byte_end":1056156,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Signed 64-bit integer type.\n","sig":null,"attributes":[{"value":"/ Signed 64-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056117,"byte_end":1056148,"line_start":43,"line_end":43,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7784},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056200,"byte_end":1056203,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::ValueType::U64","value":"ValueType::U64","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" Unsigned 64-bit integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned 64-bit integer type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056162,"byte_end":1056195,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7786},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056245,"byte_end":1056248,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" 32-bit floating point type.\n","sig":null,"attributes":[{"value":"/ 32-bit floating point type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056209,"byte_end":1056240,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7788},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056290,"byte_end":1056293,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":7767},"children":[],"decl_id":null,"docs":" 64-bit floating point type.\n","sig":null,"attributes":[{"value":"/ 64-bit floating point type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056254,"byte_end":1056285,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":7767},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055617,"byte_end":1055626,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::read::value::ValueType","value":"pub enum ValueType {\n    Generic,\n    I8,\n    U8,\n    I16,\n    U16,\n    I32,\n    U32,\n    I64,\n    U64,\n    F32,\n    F64,\n}","parent":null,"children":[{"krate":0,"index":7768},{"krate":0,"index":7770},{"krate":0,"index":7772},{"krate":0,"index":7774},{"krate":0,"index":7776},{"krate":0,"index":7778},{"krate":0,"index":7780},{"krate":0,"index":7782},{"krate":0,"index":7784},{"krate":0,"index":7786},{"krate":0,"index":7788}],"decl_id":null,"docs":" The type of an entry on the DWARF stack.\n","sig":null,"attributes":[{"value":"/ The type of an entry on the DWARF stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1055518,"byte_end":1055562,"line_start":24,"line_end":24,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7802},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056479,"byte_end":1056486,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::Value::Generic","value":"Value::Generic(u64)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A generic value, which is address-sized and of unspecified sign.\n","sig":null,"attributes":[{"value":"/ A generic value, which is address-sized and of unspecified sign.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056406,"byte_end":1056474,"line_start":56,"line_end":56,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7805},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056535,"byte_end":1056537,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::Value::I8","value":"Value::I8(i8)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A signed 8-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 8-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056497,"byte_end":1056530,"line_start":58,"line_end":58,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7808},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056588,"byte_end":1056590,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::Value::U8","value":"Value::U8(u8)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" An unsigned 8-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 8-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056547,"byte_end":1056583,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7811},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056639,"byte_end":1056642,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::Value::I16","value":"Value::I16(i16)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A signed 16-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 16-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056600,"byte_end":1056634,"line_start":62,"line_end":62,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7814},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056695,"byte_end":1056698,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::Value::U16","value":"Value::U16(u16)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" An unsigned 16-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 16-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056653,"byte_end":1056690,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7817},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056748,"byte_end":1056751,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::Value::I32","value":"Value::I32(i32)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A signed 32-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 32-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056709,"byte_end":1056743,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7820},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056804,"byte_end":1056807,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::Value::U32","value":"Value::U32(u32)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" An unsigned 32-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 32-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056762,"byte_end":1056799,"line_start":68,"line_end":68,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7823},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056857,"byte_end":1056860,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::Value::I64","value":"Value::I64(i64)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ A signed 64-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056818,"byte_end":1056852,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7826},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056913,"byte_end":1056916,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::Value::U64","value":"Value::U64(u64)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" An unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ An unsigned 64-bit integer value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056871,"byte_end":1056908,"line_start":72,"line_end":72,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7829},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056966,"byte_end":1056969,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::Value::F32","value":"Value::F32(f32)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A 32-bit floating point value.\n","sig":null,"attributes":[{"value":"/ A 32-bit floating point value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056927,"byte_end":1056961,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7832},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057019,"byte_end":1057022,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::Value::F64","value":"Value::F64(f64)","parent":{"krate":0,"index":7801},"children":[],"decl_id":null,"docs":" A 64-bit floating point value.\n","sig":null,"attributes":[{"value":"/ A 64-bit floating point value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056980,"byte_end":1057014,"line_start":76,"line_end":76,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":7801},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056394,"byte_end":1056399,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Value","qualname":"::read::value::Value","value":"pub enum Value {\n    Generic(u64),\n    I8(i8),\n    U8(u8),\n    I16(i16),\n    U16(u16),\n    I32(i32),\n    U32(u32),\n    I64(i64),\n    U64(u64),\n    F32(f32),\n    F64(f64),\n}","parent":null,"children":[{"krate":0,"index":7802},{"krate":0,"index":7805},{"krate":0,"index":7808},{"krate":0,"index":7811},{"krate":0,"index":7814},{"krate":0,"index":7817},{"krate":0,"index":7820},{"krate":0,"index":7823},{"krate":0,"index":7826},{"krate":0,"index":7829},{"krate":0,"index":7832}],"decl_id":null,"docs":" The value of an entry on the DWARF stack.\n","sig":null,"attributes":[{"value":"/ The value of an entry on the DWARF stack.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1056298,"byte_end":1056343,"line_start":53,"line_end":53,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057111,"byte_end":1057119,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"bit_size","qualname":"<ValueType>::bit_size","value":"pub fn bit_size(Self, u64) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size in bits of a value for this type.\n","sig":null,"attributes":[{"value":"/ The size in bits of a value for this type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057053,"byte_end":1057099,"line_start":81,"line_end":81,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057567,"byte_end":1057580,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"from_encoding","qualname":"<ValueType>::from_encoding","value":"pub fn from_encoding(constants::DwAte, u64) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from the attributes of a base type DIE.\n","sig":null,"attributes":[{"value":"/ Construct a `ValueType` from the attributes of a base type DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057488,"byte_end":1057555,"line_start":92,"line_end":92,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1058418,"byte_end":1058428,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"from_entry","qualname":"<ValueType>::from_entry","value":"pub fn from_entry<R: Reader>(&DebuggingInformationEntry<, , R>)\n-> Result<Option<ValueType>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from a base type DIE.\n","sig":null,"attributes":[{"value":"/ Construct a `ValueType` from a base type DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1058357,"byte_end":1058406,"line_start":109,"line_end":109,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1059903,"byte_end":1059913,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"value_type","qualname":"<Value>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Return the `ValueType` corresponding to this `Value`.\n","sig":null,"attributes":[{"value":"/ Return the `ValueType` corresponding to this `Value`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1059834,"byte_end":1059891,"line_start":152,"line_end":152,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1060553,"byte_end":1060558,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"parse","qualname":"<Value>::parse","value":"pub fn parse<R: Reader>(ValueType, R) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Read a `Value` with the given `value_type` from a `Reader`.\n","sig":null,"attributes":[{"value":"/ Read a `Value` with the given `value_type` from a `Reader`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1060478,"byte_end":1060541,"line_start":169,"line_end":169,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1061540,"byte_end":1061546,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Value>::to_u64","value":"pub fn to_u64(Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to a `u64`.","sig":null,"attributes":[{"value":"/ Convert a `Value` to a `u64`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1061371,"byte_end":1061404,"line_start":187,"line_end":187,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1061409,"byte_end":1061412,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The `ValueType` of `self` must be integral.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1061417,"byte_end":1061464,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/ Values are sign extended if the source value is signed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1061469,"byte_end":1061528,"line_start":190,"line_end":190,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1062411,"byte_end":1062419,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Value>::from_u64","value":"pub fn from_u64(ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Value` with the given `value_type` from a `u64` value.","sig":null,"attributes":[{"value":"/ Create a `Value` with the given `value_type` from a `u64` value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1062159,"byte_end":1062227,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1062232,"byte_end":1062235,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The `value_type` may be integral or floating point.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1062240,"byte_end":1062295,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/ The result is truncated if the `u64` value does","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1062300,"byte_end":1062351,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ not fit the bounds of the `value_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1062356,"byte_end":1062399,"line_start":211,"line_end":211,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065603,"byte_end":1065610,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"convert","qualname":"<Value>::convert","value":"pub fn convert(Self, ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to the given `value_type`.","sig":null,"attributes":[{"value":"/ Convert a `Value` to the given `value_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065167,"byte_end":1065215,"line_start":273,"line_end":273,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065220,"byte_end":1065223,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ When converting between integral types, the result is truncated","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065228,"byte_end":1065295,"line_start":275,"line_end":275,"column_start":5,"column_end":72}},{"value":"/ if the source value does not fit the bounds of the `value_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065300,"byte_end":1065368,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/ When converting from floating point types, the result is not defined","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065373,"byte_end":1065445,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ if the source value does not fit the bounds of the `value_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065450,"byte_end":1065518,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065523,"byte_end":1065526,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_convert` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065531,"byte_end":1065591,"line_start":280,"line_end":280,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1066152,"byte_end":1066163,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"reinterpret","qualname":"<Value>::reinterpret","value":"pub fn reinterpret(Self, ValueType, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Reinterpret the bits in a `Value` as the given `value_type`.","sig":null,"attributes":[{"value":"/ Reinterpret the bits in a `Value` as the given `value_type`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065926,"byte_end":1065990,"line_start":289,"line_end":289,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1065995,"byte_end":1065998,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The source and result value types must have equal sizes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1066003,"byte_end":1066063,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1066068,"byte_end":1066071,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_reinterpret` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1066076,"byte_end":1066140,"line_start":293,"line_end":293,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1067899,"byte_end":1067902,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"abs","qualname":"<Value>::abs","value":"pub fn abs(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an absolute value operation.","sig":null,"attributes":[{"value":"/ Perform an absolute value operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1067688,"byte_end":1067728,"line_start":327,"line_end":327,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1067733,"byte_end":1067736,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1067741,"byte_end":1067818,"line_start":329,"line_end":329,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1067823,"byte_end":1067826,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_abs` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1067831,"byte_end":1067887,"line_start":331,"line_end":331,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1069067,"byte_end":1069070,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"neg","qualname":"<Value>::neg","value":"pub fn neg(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a negation operation.","sig":null,"attributes":[{"value":"/ Perform a negation operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1068863,"byte_end":1068896,"line_start":351,"line_end":351,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1068901,"byte_end":1068904,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1068909,"byte_end":1068986,"line_start":353,"line_end":353,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1068991,"byte_end":1068994,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_neg` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1068999,"byte_end":1069055,"line_start":355,"line_end":355,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1070278,"byte_end":1070281,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"add","qualname":"<Value>::add","value":"pub fn add(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an addition operation.","sig":null,"attributes":[{"value":"/ Perform an addition operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1070106,"byte_end":1070140,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1070145,"byte_end":1070148,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1070153,"byte_end":1070196,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1070201,"byte_end":1070204,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_plus` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1070209,"byte_end":1070266,"line_start":382,"line_end":382,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1071556,"byte_end":1071559,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"sub","qualname":"<Value>::sub","value":"pub fn sub(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a subtraction operation.","sig":null,"attributes":[{"value":"/ Perform a subtraction operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1071381,"byte_end":1071417,"line_start":403,"line_end":403,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1071422,"byte_end":1071425,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1071430,"byte_end":1071473,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1071478,"byte_end":1071481,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_minus` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1071486,"byte_end":1071544,"line_start":407,"line_end":407,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1072835,"byte_end":1072838,"line_start":433,"line_end":433,"column_start":12,"column_end":15},"name":"mul","qualname":"<Value>::mul","value":"pub fn mul(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a multiplication operation.","sig":null,"attributes":[{"value":"/ Perform a multiplication operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1072659,"byte_end":1072698,"line_start":428,"line_end":428,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1072703,"byte_end":1072706,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1072711,"byte_end":1072754,"line_start":430,"line_end":430,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1072759,"byte_end":1072762,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_mul` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1072767,"byte_end":1072823,"line_start":432,"line_end":432,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1074190,"byte_end":1074193,"line_start":459,"line_end":459,"column_start":12,"column_end":15},"name":"div","qualname":"<Value>::div","value":"pub fn div(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a division operation.","sig":null,"attributes":[{"value":"/ Perform a division operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1073938,"byte_end":1073971,"line_start":453,"line_end":453,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1073976,"byte_end":1073979,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1073984,"byte_end":1074027,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1074032,"byte_end":1074109,"line_start":456,"line_end":456,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1074114,"byte_end":1074117,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_div` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1074122,"byte_end":1074178,"line_start":458,"line_end":458,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1076151,"byte_end":1076154,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"rem","qualname":"<Value>::rem","value":"pub fn rem(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a remainder operation.","sig":null,"attributes":[{"value":"/ Perform a remainder operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1075886,"byte_end":1075920,"line_start":498,"line_end":498,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1075925,"byte_end":1075928,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1075933,"byte_end":1075985,"line_start":500,"line_end":500,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as an unsigned value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1075990,"byte_end":1076070,"line_start":501,"line_end":501,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1076075,"byte_end":1076078,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_mod` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1076083,"byte_end":1076139,"line_start":503,"line_end":503,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1077990,"byte_end":1077993,"line_start":546,"line_end":546,"column_start":12,"column_end":15},"name":"not","qualname":"<Value>::not","value":"pub fn not(Self, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise not operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise not operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1077808,"byte_end":1077844,"line_start":541,"line_end":541,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1077849,"byte_end":1077852,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1077857,"byte_end":1077909,"line_start":543,"line_end":543,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1077914,"byte_end":1077917,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_not` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1077922,"byte_end":1077978,"line_start":545,"line_end":545,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078353,"byte_end":1078356,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"and","qualname":"<Value>::and","value":"pub fn and(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise and operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise and operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078171,"byte_end":1078207,"line_start":552,"line_end":552,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078212,"byte_end":1078215,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078220,"byte_end":1078272,"line_start":554,"line_end":554,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078277,"byte_end":1078280,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_and` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078285,"byte_end":1078341,"line_start":556,"line_end":556,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078872,"byte_end":1078874,"line_start":572,"line_end":572,"column_start":12,"column_end":14},"name":"or","qualname":"<Value>::or","value":"pub fn or(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise or operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise or operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078692,"byte_end":1078727,"line_start":567,"line_end":567,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078732,"byte_end":1078735,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078740,"byte_end":1078792,"line_start":569,"line_end":569,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078797,"byte_end":1078800,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_or` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1078805,"byte_end":1078860,"line_start":571,"line_end":571,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1079401,"byte_end":1079404,"line_start":587,"line_end":587,"column_start":12,"column_end":15},"name":"xor","qualname":"<Value>::xor","value":"pub fn xor(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise exclusive-or operation.","sig":null,"attributes":[{"value":"/ Perform a bitwise exclusive-or operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1079210,"byte_end":1079255,"line_start":582,"line_end":582,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1079260,"byte_end":1079263,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1079268,"byte_end":1079320,"line_start":584,"line_end":584,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1079325,"byte_end":1079328,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_xor` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1079333,"byte_end":1079389,"line_start":586,"line_end":586,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080837,"byte_end":1080840,"line_start":623,"line_end":623,"column_start":12,"column_end":15},"name":"shl","qualname":"<Value>::shl","value":"pub fn shl(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a shift left operation.","sig":null,"attributes":[{"value":"/ Perform a shift left operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080527,"byte_end":1080562,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080567,"byte_end":1080570,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This operation requires integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080575,"byte_end":1080618,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ If the shift length exceeds the type size, then 0 is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080623,"byte_end":1080689,"line_start":619,"line_end":619,"column_start":5,"column_end":71}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080694,"byte_end":1080756,"line_start":620,"line_end":620,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080761,"byte_end":1080764,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shl` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1080769,"byte_end":1080825,"line_start":622,"line_end":622,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082387,"byte_end":1082390,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"shr","qualname":"<Value>::shr","value":"pub fn shr(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a logical shift right operation.","sig":null,"attributes":[{"value":"/ Perform a logical shift right operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1081879,"byte_end":1081923,"line_start":644,"line_end":644,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1081928,"byte_end":1081931,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This operation requires an unsigned integral type for the value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1081936,"byte_end":1082004,"line_start":646,"line_end":646,"column_start":5,"column_end":73}},{"value":"/ If the value type is `Generic`, then it is interpreted as an unsigned value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082009,"byte_end":1082089,"line_start":647,"line_end":647,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082094,"byte_end":1082097,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This operation requires an integral type for the shift length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082102,"byte_end":1082168,"line_start":649,"line_end":649,"column_start":5,"column_end":71}},{"value":"/ If the shift length exceeds the type size, then 0 is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082173,"byte_end":1082239,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082244,"byte_end":1082306,"line_start":651,"line_end":651,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082311,"byte_end":1082314,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shr` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1082319,"byte_end":1082375,"line_start":653,"line_end":653,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083983,"byte_end":1083987,"line_start":687,"line_end":687,"column_start":12,"column_end":16},"name":"shra","qualname":"<Value>::shra","value":"pub fn shra(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an arithmetic shift right operation.","sig":null,"attributes":[{"value":"/ Perform an arithmetic shift right operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083408,"byte_end":1083456,"line_start":676,"line_end":676,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083461,"byte_end":1083464,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This operation requires a signed integral type for the value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083469,"byte_end":1083534,"line_start":678,"line_end":678,"column_start":5,"column_end":70}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083539,"byte_end":1083616,"line_start":679,"line_end":679,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083621,"byte_end":1083624,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This operation requires an integral type for the shift length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083629,"byte_end":1083695,"line_start":681,"line_end":681,"column_start":5,"column_end":71}},{"value":"/ If the shift length exceeds the type size, then 0 is returned for positive values,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083700,"byte_end":1083786,"line_start":682,"line_end":682,"column_start":5,"column_end":91}},{"value":"/ and -1 is returned for negative values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083791,"byte_end":1083834,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/ If the shift length is negative then an error is returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083839,"byte_end":1083901,"line_start":684,"line_end":684,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083906,"byte_end":1083909,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_shra` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1083914,"byte_end":1083971,"line_start":686,"line_end":686,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1086133,"byte_end":1086135,"line_start":755,"line_end":755,"column_start":12,"column_end":14},"name":"eq","qualname":"<Value>::eq","value":"pub fn eq(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `==` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `==` relational operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1085864,"byte_end":1085906,"line_start":749,"line_end":749,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1085911,"byte_end":1085914,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1085919,"byte_end":1085971,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1085976,"byte_end":1086053,"line_start":752,"line_end":752,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1086058,"byte_end":1086061,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_eq` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1086066,"byte_end":1086121,"line_start":754,"line_end":754,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087332,"byte_end":1087334,"line_start":781,"line_end":781,"column_start":12,"column_end":14},"name":"ge","qualname":"<Value>::ge","value":"pub fn ge(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>=` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `>=` relational operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087063,"byte_end":1087105,"line_start":775,"line_end":775,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087110,"byte_end":1087113,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087118,"byte_end":1087170,"line_start":777,"line_end":777,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087175,"byte_end":1087252,"line_start":778,"line_end":778,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087257,"byte_end":1087260,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_ge` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1087265,"byte_end":1087320,"line_start":780,"line_end":780,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088530,"byte_end":1088532,"line_start":807,"line_end":807,"column_start":12,"column_end":14},"name":"gt","qualname":"<Value>::gt","value":"pub fn gt(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>` relational operation.","sig":null,"attributes":[{"value":"/ Perform the `>` relational operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088262,"byte_end":1088303,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088308,"byte_end":1088311,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088316,"byte_end":1088368,"line_start":803,"line_end":803,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088373,"byte_end":1088450,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088455,"byte_end":1088458,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_gt` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1088463,"byte_end":1088518,"line_start":806,"line_end":806,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089717,"byte_end":1089719,"line_start":833,"line_end":833,"column_start":12,"column_end":14},"name":"le","qualname":"<Value>::le","value":"pub fn le(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `<= relational operation.","sig":null,"attributes":[{"value":"/ Perform the `<= relational operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089449,"byte_end":1089490,"line_start":827,"line_end":827,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089495,"byte_end":1089498,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089503,"byte_end":1089555,"line_start":829,"line_end":829,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089560,"byte_end":1089637,"line_start":830,"line_end":830,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089642,"byte_end":1089645,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_le` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1089650,"byte_end":1089705,"line_start":832,"line_end":832,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090914,"byte_end":1090916,"line_start":859,"line_end":859,"column_start":12,"column_end":14},"name":"lt","qualname":"<Value>::lt","value":"pub fn lt(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `< relational operation.","sig":null,"attributes":[{"value":"/ Perform the `< relational operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090647,"byte_end":1090687,"line_start":853,"line_end":853,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090692,"byte_end":1090695,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090700,"byte_end":1090752,"line_start":855,"line_end":855,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090757,"byte_end":1090834,"line_start":856,"line_end":856,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090839,"byte_end":1090842,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_lt` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1090847,"byte_end":1090902,"line_start":858,"line_end":858,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1092101,"byte_end":1092103,"line_start":885,"line_end":885,"column_start":12,"column_end":14},"name":"ne","qualname":"<Value>::ne","value":"pub fn ne(Self, Value, u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `!= relational operation.","sig":null,"attributes":[{"value":"/ Perform the `!= relational operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1091833,"byte_end":1091874,"line_start":879,"line_end":879,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1091879,"byte_end":1091882,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This operation requires matching integral types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1091887,"byte_end":1091939,"line_start":881,"line_end":881,"column_start":5,"column_end":57}},{"value":"/ If the value type is `Generic`, then it is interpreted as a signed value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1091944,"byte_end":1092021,"line_start":882,"line_end":882,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1092026,"byte_end":1092029,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the DWARF `DW_OP_ne` operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1092034,"byte_end":1092089,"line_start":884,"line_end":884,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2665},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90200,"byte_end":90209,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"name":"EndianBuf","qualname":"::read::EndianBuf","value":"EndianSlice","parent":null,"children":[],"decl_id":null,"docs":" `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across\n `gimli` versions, we export this type alias.\n","sig":null,"attributes":[{"value":"/ `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":89977,"byte_end":90056,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ `gimli` versions, we export this type alias.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90057,"byte_end":90105,"line_start":231,"line_end":231,"column_start":1,"column_end":49}},{"value":"deprecated(note =\n             \"EndianBuf has been renamed to EndianSlice, use that instead.\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90106,"byte_end":90190,"line_start":232,"line_end":232,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7845},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90410,"byte_end":90412,"line_start":239,"line_end":239,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::Error::Io","value":"Error::Io","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An I/O error occurred while reading.\n","sig":null,"attributes":[{"value":"/ An I/O error occurred while reading.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90365,"byte_end":90405,"line_start":238,"line_end":238,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7847},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90490,"byte_end":90532,"line_start":241,"line_end":241,"column_start":5,"column_end":47},"name":"PcRelativePointerButSectionBaseIsUndefined","qualname":"::read::Error::PcRelativePointerButSectionBaseIsUndefined","value":"Error::PcRelativePointerButSectionBaseIsUndefined","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found a PC relative pointer, but the section base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a PC relative pointer, but the section base is undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90418,"byte_end":90485,"line_start":240,"line_end":240,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7849},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90615,"byte_end":90656,"line_start":243,"line_end":243,"column_start":5,"column_end":46},"name":"TextRelativePointerButTextBaseIsUndefined","qualname":"::read::Error::TextRelativePointerButTextBaseIsUndefined","value":"Error::TextRelativePointerButTextBaseIsUndefined","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found a `.text` relative pointer, but the `.text` base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a `.text` relative pointer, but the `.text` base is undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90538,"byte_end":90610,"line_start":242,"line_end":242,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7851},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90733,"byte_end":90774,"line_start":245,"line_end":245,"column_start":5,"column_end":46},"name":"DataRelativePointerButDataBaseIsUndefined","qualname":"::read::Error::DataRelativePointerButDataBaseIsUndefined","value":"Error::DataRelativePointerButDataBaseIsUndefined","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found a data relative pointer, but the data base is undefined.\n","sig":null,"attributes":[{"value":"/ Found a data relative pointer, but the data base is undefined.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90662,"byte_end":90728,"line_start":244,"line_end":244,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7853},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90879,"byte_end":90910,"line_start":248,"line_end":248,"column_start":5,"column_end":36},"name":"FuncRelativePointerInBadContext","qualname":"::read::Error::FuncRelativePointerInBadContext","value":"Error::FuncRelativePointerInBadContext","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found a function relative pointer in a context that does not have a\n function base.\n","sig":null,"attributes":[{"value":"/ Found a function relative pointer in a context that does not have a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90780,"byte_end":90851,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ function base.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90856,"byte_end":90874,"line_start":247,"line_end":247,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7855},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90980,"byte_end":91010,"line_start":250,"line_end":250,"column_start":5,"column_end":35},"name":"CannotParseOmitPointerEncoding","qualname":"::read::Error::CannotParseOmitPointerEncoding","value":"Error::CannotParseOmitPointerEncoding","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Cannot parse a pointer with a `DW_EH_PE_omit` encoding.\n","sig":null,"attributes":[{"value":"/ Cannot parse a pointer with a `DW_EH_PE_omit` encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90916,"byte_end":90975,"line_start":249,"line_end":249,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7857},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91067,"byte_end":91084,"line_start":252,"line_end":252,"column_start":5,"column_end":22},"name":"BadUnsignedLeb128","qualname":"::read::Error::BadUnsignedLeb128","value":"Error::BadUnsignedLeb128","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An error parsing an unsigned LEB128 value.\n","sig":null,"attributes":[{"value":"/ An error parsing an unsigned LEB128 value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91016,"byte_end":91062,"line_start":251,"line_end":251,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7859},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91138,"byte_end":91153,"line_start":254,"line_end":254,"column_start":5,"column_end":20},"name":"BadSignedLeb128","qualname":"::read::Error::BadSignedLeb128","value":"Error::BadSignedLeb128","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An error parsing a signed LEB128 value.\n","sig":null,"attributes":[{"value":"/ An error parsing a signed LEB128 value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91090,"byte_end":91133,"line_start":253,"line_end":253,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7861},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91261,"byte_end":91280,"line_start":257,"line_end":257,"column_start":5,"column_end":24},"name":"AbbreviationTagZero","qualname":"::read::Error::AbbreviationTagZero","value":"Error::AbbreviationTagZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An abbreviation declared that its tag is zero, but zero is reserved for\n null records.\n","sig":null,"attributes":[{"value":"/ An abbreviation declared that its tag is zero, but zero is reserved for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91159,"byte_end":91234,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ null records.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91239,"byte_end":91256,"line_start":256,"line_end":256,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7863},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91400,"byte_end":91417,"line_start":260,"line_end":260,"column_start":5,"column_end":22},"name":"AttributeFormZero","qualname":"::read::Error::AttributeFormZero","value":"Error::AttributeFormZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An attribute specification declared that its form is zero, but zero is\n reserved for null records.\n","sig":null,"attributes":[{"value":"/ An attribute specification declared that its form is zero, but zero is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91286,"byte_end":91360,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ reserved for null records.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91365,"byte_end":91395,"line_start":259,"line_end":259,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7865},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91515,"byte_end":91529,"line_start":263,"line_end":263,"column_start":5,"column_end":19},"name":"BadHasChildren","qualname":"::read::Error::BadHasChildren","value":"Error::BadHasChildren","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The abbreviation's has-children byte was not one of\n `DW_CHILDREN_{yes,no}`.\n","sig":null,"attributes":[{"value":"/ The abbreviation's has-children byte was not one of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91423,"byte_end":91478,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/ `DW_CHILDREN_{yes,no}`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91483,"byte_end":91510,"line_start":262,"line_end":262,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7867},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91579,"byte_end":91588,"line_start":265,"line_end":265,"column_start":5,"column_end":14},"name":"BadLength","qualname":"::read::Error::BadLength","value":"Error::BadLength","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The specified length is impossible.\n","sig":null,"attributes":[{"value":"/ The specified length is impossible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91535,"byte_end":91574,"line_start":264,"line_end":264,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7869},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91637,"byte_end":91648,"line_start":267,"line_end":267,"column_start":5,"column_end":16},"name":"UnknownForm","qualname":"::read::Error::UnknownForm","value":"Error::UnknownForm","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an unknown `DW_FORM_*` type.\n","sig":null,"attributes":[{"value":"/ Found an unknown `DW_FORM_*` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91594,"byte_end":91632,"line_start":266,"line_end":266,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7871},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91701,"byte_end":91713,"line_start":269,"line_end":269,"column_start":5,"column_end":17},"name":"ExpectedZero","qualname":"::read::Error::ExpectedZero","value":"Error::ExpectedZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Expected a zero, found something else.\n","sig":null,"attributes":[{"value":"/ Expected a zero, found something else.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91654,"byte_end":91696,"line_start":268,"line_end":268,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7873},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91782,"byte_end":91807,"line_start":271,"line_end":271,"column_start":5,"column_end":30},"name":"DuplicateAbbreviationCode","qualname":"::read::Error::DuplicateAbbreviationCode","value":"Error::DuplicateAbbreviationCode","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an abbreviation code that has already been used.\n","sig":null,"attributes":[{"value":"/ Found an abbreviation code that has already been used.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91719,"byte_end":91777,"line_start":270,"line_end":270,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7875},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91847,"byte_end":91862,"line_start":273,"line_end":273,"column_start":5,"column_end":20},"name":"DuplicateArange","qualname":"::read::Error::DuplicateArange","value":"Error::DuplicateArange","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found a duplicate arange.\n","sig":null,"attributes":[{"value":"/ Found a duplicate arange.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91813,"byte_end":91842,"line_start":272,"line_end":272,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7877},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91916,"byte_end":91937,"line_start":275,"line_end":275,"column_start":5,"column_end":26},"name":"UnknownReservedLength","qualname":"::read::Error::UnknownReservedLength","value":"Error::UnknownReservedLength","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an unknown reserved length value.\n","sig":null,"attributes":[{"value":"/ Found an unknown reserved length value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91868,"byte_end":91911,"line_start":274,"line_end":274,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7879},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91983,"byte_end":91997,"line_start":277,"line_end":277,"column_start":5,"column_end":19},"name":"UnknownVersion","qualname":"::read::Error::UnknownVersion","value":"Error::UnknownVersion(u64)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an unknown DWARF version.\n","sig":null,"attributes":[{"value":"/ Found an unknown DWARF version.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":91943,"byte_end":91978,"line_start":276,"line_end":276,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7882},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92066,"byte_end":92085,"line_start":279,"line_end":279,"column_start":5,"column_end":24},"name":"UnknownAbbreviation","qualname":"::read::Error::UnknownAbbreviation","value":"Error::UnknownAbbreviation","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found a record with an unknown abbreviation code.\n","sig":null,"attributes":[{"value":"/ Found a record with an unknown abbreviation code.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92008,"byte_end":92061,"line_start":278,"line_end":278,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7884},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92144,"byte_end":92157,"line_start":281,"line_end":281,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::read::Error::UnexpectedEof","value":"Error::UnexpectedEof(ReaderOffsetId)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Hit the end of input before it was expected.\n","sig":null,"attributes":[{"value":"/ Hit the end of input before it was expected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92091,"byte_end":92139,"line_start":280,"line_end":280,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7887},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92229,"byte_end":92243,"line_start":283,"line_end":283,"column_start":5,"column_end":19},"name":"UnexpectedNull","qualname":"::read::Error::UnexpectedNull","value":"Error::UnexpectedNull","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Read a null entry before it was expected.\n","sig":null,"attributes":[{"value":"/ Read a null entry before it was expected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92179,"byte_end":92224,"line_start":282,"line_end":282,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7889},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92291,"byte_end":92312,"line_start":285,"line_end":285,"column_start":5,"column_end":26},"name":"UnknownStandardOpcode","qualname":"::read::Error::UnknownStandardOpcode","value":"Error::UnknownStandardOpcode(constants::DwLns)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an unknown standard opcode.\n","sig":null,"attributes":[{"value":"/ Found an unknown standard opcode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92249,"byte_end":92286,"line_start":284,"line_end":284,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7892},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92378,"byte_end":92399,"line_start":287,"line_end":287,"column_start":5,"column_end":26},"name":"UnknownExtendedOpcode","qualname":"::read::Error::UnknownExtendedOpcode","value":"Error::UnknownExtendedOpcode(constants::DwLne)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an unknown extended opcode.\n","sig":null,"attributes":[{"value":"/ Found an unknown extended opcode.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92336,"byte_end":92373,"line_start":286,"line_end":286,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7895},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92476,"byte_end":92498,"line_start":289,"line_end":289,"column_start":5,"column_end":27},"name":"UnsupportedAddressSize","qualname":"::read::Error::UnsupportedAddressSize","value":"Error::UnsupportedAddressSize(u8)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The specified address size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified address size is not supported.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92423,"byte_end":92471,"line_start":288,"line_end":288,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7898},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92560,"byte_end":92581,"line_start":291,"line_end":291,"column_start":5,"column_end":26},"name":"UnsupportedOffsetSize","qualname":"::read::Error::UnsupportedOffsetSize","value":"Error::UnsupportedOffsetSize(u8)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The specified offset size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified offset size is not supported.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92508,"byte_end":92555,"line_start":290,"line_end":290,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7901},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92642,"byte_end":92662,"line_start":293,"line_end":293,"column_start":5,"column_end":25},"name":"UnsupportedFieldSize","qualname":"::read::Error::UnsupportedFieldSize","value":"Error::UnsupportedFieldSize(u8)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The specified field size is not supported.\n","sig":null,"attributes":[{"value":"/ The specified field size is not supported.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92591,"byte_end":92637,"line_start":292,"line_end":292,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7904},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92729,"byte_end":92757,"line_start":295,"line_end":295,"column_start":5,"column_end":33},"name":"MinimumInstructionLengthZero","qualname":"::read::Error::MinimumInstructionLengthZero","value":"Error::MinimumInstructionLengthZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The minimum instruction length must not be zero.\n","sig":null,"attributes":[{"value":"/ The minimum instruction length must not be zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92672,"byte_end":92724,"line_start":294,"line_end":294,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7906},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92828,"byte_end":92863,"line_start":297,"line_end":297,"column_start":5,"column_end":40},"name":"MaximumOperationsPerInstructionZero","qualname":"::read::Error::MaximumOperationsPerInstructionZero","value":"Error::MaximumOperationsPerInstructionZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The maximum operations per instruction must not be zero.\n","sig":null,"attributes":[{"value":"/ The maximum operations per instruction must not be zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92763,"byte_end":92823,"line_start":296,"line_end":296,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7908},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92910,"byte_end":92923,"line_start":299,"line_end":299,"column_start":5,"column_end":18},"name":"LineRangeZero","qualname":"::read::Error::LineRangeZero","value":"Error::LineRangeZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The line range must not be zero.\n","sig":null,"attributes":[{"value":"/ The line range must not be zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92869,"byte_end":92905,"line_start":298,"line_end":298,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7910},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92971,"byte_end":92985,"line_start":301,"line_end":301,"column_start":5,"column_end":19},"name":"OpcodeBaseZero","qualname":"::read::Error::OpcodeBaseZero","value":"Error::OpcodeBaseZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The opcode base must not be zero.\n","sig":null,"attributes":[{"value":"/ The opcode base must not be zero.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92929,"byte_end":92966,"line_start":300,"line_end":300,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7912},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93030,"byte_end":93037,"line_start":303,"line_end":303,"column_start":5,"column_end":12},"name":"BadUtf8","qualname":"::read::Error::BadUtf8","value":"Error::BadUtf8","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an invalid UTF-8 string.\n","sig":null,"attributes":[{"value":"/ Found an invalid UTF-8 string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":92991,"byte_end":93025,"line_start":302,"line_end":302,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7914},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93106,"byte_end":93114,"line_start":305,"line_end":305,"column_start":5,"column_end":13},"name":"NotCieId","qualname":"::read::Error::NotCieId","value":"Error::NotCieId","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Expected to find the CIE ID, but found something else.\n","sig":null,"attributes":[{"value":"/ Expected to find the CIE ID, but found something else.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93043,"byte_end":93101,"line_start":304,"line_end":304,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7916},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93195,"byte_end":93208,"line_start":307,"line_end":307,"column_start":5,"column_end":18},"name":"NotCiePointer","qualname":"::read::Error::NotCiePointer","value":"Error::NotCiePointer","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Expected to find a pointer to a CIE, but found the CIE ID instead.\n","sig":null,"attributes":[{"value":"/ Expected to find a pointer to a CIE, but found the CIE ID instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93120,"byte_end":93190,"line_start":306,"line_end":306,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7918},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93285,"byte_end":93298,"line_start":309,"line_end":309,"column_start":5,"column_end":18},"name":"NotFdePointer","qualname":"::read::Error::NotFdePointer","value":"Error::NotFdePointer","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Expected to find a pointer to an FDE, but found a CIE instead.\n","sig":null,"attributes":[{"value":"/ Expected to find a pointer to an FDE, but found a CIE instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93214,"byte_end":93280,"line_start":308,"line_end":308,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7920},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93365,"byte_end":93380,"line_start":311,"line_end":311,"column_start":5,"column_end":20},"name":"BadBranchTarget","qualname":"::read::Error::BadBranchTarget","value":"Error::BadBranchTarget(u64)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Invalid branch target for a DW_OP_bra or DW_OP_skip.\n","sig":null,"attributes":[{"value":"/ Invalid branch target for a DW_OP_bra or DW_OP_skip.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93304,"byte_end":93360,"line_start":310,"line_end":310,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7923},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93456,"byte_end":93480,"line_start":313,"line_end":313,"column_start":5,"column_end":29},"name":"InvalidPushObjectAddress","qualname":"::read::Error::InvalidPushObjectAddress","value":"Error::InvalidPushObjectAddress","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" DW_OP_push_object_address used but no address passed in.\n","sig":null,"attributes":[{"value":"/ DW_OP_push_object_address used but no address passed in.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93391,"byte_end":93451,"line_start":312,"line_end":312,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7925},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93555,"byte_end":93574,"line_start":315,"line_end":315,"column_start":5,"column_end":24},"name":"NotEnoughStackItems","qualname":"::read::Error::NotEnoughStackItems","value":"Error::NotEnoughStackItems","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Not enough items on the stack when evaluating an expression.\n","sig":null,"attributes":[{"value":"/ Not enough items on the stack when evaluating an expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93486,"byte_end":93550,"line_start":314,"line_end":314,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7927},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93635,"byte_end":93652,"line_start":317,"line_end":317,"column_start":5,"column_end":22},"name":"TooManyIterations","qualname":"::read::Error::TooManyIterations","value":"Error::TooManyIterations","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Too many iterations to compute the expression.\n","sig":null,"attributes":[{"value":"/ Too many iterations to compute the expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93580,"byte_end":93630,"line_start":316,"line_end":316,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7929},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93744,"byte_end":93761,"line_start":320,"line_end":320,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::read::Error::InvalidExpression","value":"Error::InvalidExpression(constants::DwOp)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An unrecognized operation was found while parsing a DWARF\n expression.\n","sig":null,"attributes":[{"value":"/ An unrecognized operation was found while parsing a DWARF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93658,"byte_end":93719,"line_start":318,"line_end":318,"column_start":5,"column_end":66}},{"value":"/ expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93724,"byte_end":93739,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7932},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93881,"byte_end":93893,"line_start":323,"line_end":323,"column_start":5,"column_end":17},"name":"InvalidPiece","qualname":"::read::Error::InvalidPiece","value":"Error::InvalidPiece","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The expression had a piece followed by an expression\n terminator without a piece.\n","sig":null,"attributes":[{"value":"/ The expression had a piece followed by an expression","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93784,"byte_end":93840,"line_start":321,"line_end":321,"column_start":5,"column_end":61}},{"value":"/ terminator without a piece.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93845,"byte_end":93876,"line_start":322,"line_end":322,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7934},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94036,"byte_end":94063,"line_start":326,"line_end":326,"column_start":5,"column_end":32},"name":"InvalidExpressionTerminator","qualname":"::read::Error::InvalidExpressionTerminator","value":"Error::InvalidExpressionTerminator(u64)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An expression-terminating operation was followed by something\n other than the end of the expression or a piece operation.\n","sig":null,"attributes":[{"value":"/ An expression-terminating operation was followed by something","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93899,"byte_end":93964,"line_start":324,"line_end":324,"column_start":5,"column_end":70}},{"value":"/ other than the end of the expression or a piece operation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":93969,"byte_end":94031,"line_start":325,"line_end":325,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7937},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94141,"byte_end":94155,"line_start":328,"line_end":328,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::read::Error::DivisionByZero","value":"Error::DivisionByZero","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Division or modulus by zero when evaluating an expression.\n","sig":null,"attributes":[{"value":"/ Division or modulus by zero when evaluating an expression.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94074,"byte_end":94136,"line_start":327,"line_end":327,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7939},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94217,"byte_end":94229,"line_start":330,"line_end":330,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::read::Error::TypeMismatch","value":"Error::TypeMismatch","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An expression operation used mismatching types.\n","sig":null,"attributes":[{"value":"/ An expression operation used mismatching types.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94161,"byte_end":94212,"line_start":329,"line_end":329,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7941},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94332,"byte_end":94352,"line_start":333,"line_end":333,"column_start":5,"column_end":25},"name":"IntegralTypeRequired","qualname":"::read::Error::IntegralTypeRequired","value":"Error::IntegralTypeRequired","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An expression operation required an integral type but saw a\n floating point type.\n","sig":null,"attributes":[{"value":"/ An expression operation required an integral type but saw a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94235,"byte_end":94298,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/ floating point type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94303,"byte_end":94327,"line_start":332,"line_end":332,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7943},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94425,"byte_end":94449,"line_start":335,"line_end":335,"column_start":5,"column_end":29},"name":"UnsupportedTypeOperation","qualname":"::read::Error::UnsupportedTypeOperation","value":"Error::UnsupportedTypeOperation","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An expression operation used types that are not supported.\n","sig":null,"attributes":[{"value":"/ An expression operation used types that are not supported.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94358,"byte_end":94420,"line_start":334,"line_end":334,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7945},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94528,"byte_end":94550,"line_start":337,"line_end":337,"column_start":5,"column_end":27},"name":"InvalidShiftExpression","qualname":"::read::Error::InvalidShiftExpression","value":"Error::InvalidShiftExpression","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The shift value in an expression must be a non-negative integer.\n","sig":null,"attributes":[{"value":"/ The shift value in an expression must be a non-negative integer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94455,"byte_end":94523,"line_start":336,"line_end":336,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7947},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94597,"byte_end":94624,"line_start":339,"line_end":339,"column_start":5,"column_end":32},"name":"UnknownCallFrameInstruction","qualname":"::read::Error::UnknownCallFrameInstruction","value":"Error::UnknownCallFrameInstruction(constants::DwCfa)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An unknown DW_CFA_* instruction.\n","sig":null,"attributes":[{"value":"/ An unknown DW_CFA_* instruction.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94556,"byte_end":94592,"line_start":338,"line_end":338,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7950},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94710,"byte_end":94729,"line_start":341,"line_end":341,"column_start":5,"column_end":24},"name":"InvalidAddressRange","qualname":"::read::Error::InvalidAddressRange","value":"Error::InvalidAddressRange","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The end of an address range was before the beginning.\n","sig":null,"attributes":[{"value":"/ The end of an address range was before the beginning.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94648,"byte_end":94705,"line_start":340,"line_end":340,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7952},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94804,"byte_end":94831,"line_start":343,"line_end":343,"column_start":5,"column_end":32},"name":"InvalidLocationAddressRange","qualname":"::read::Error::InvalidLocationAddressRange","value":"Error::InvalidLocationAddressRange","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The end offset of a loc list entry was before the beginning.\n","sig":null,"attributes":[{"value":"/ The end offset of a loc list entry was before the beginning.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94735,"byte_end":94799,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7954},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94929,"byte_end":94959,"line_start":346,"line_end":346,"column_start":5,"column_end":35},"name":"CfiInstructionInInvalidContext","qualname":"::read::Error::CfiInstructionInInvalidContext","value":"Error::CfiInstructionInInvalidContext","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Encountered a call frame instruction in a context in which it is not\n valid.\n","sig":null,"attributes":[{"value":"/ Encountered a call frame instruction in a context in which it is not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94837,"byte_end":94909,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ valid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94914,"byte_end":94924,"line_start":345,"line_end":345,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7956},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95125,"byte_end":95142,"line_start":349,"line_end":349,"column_start":5,"column_end":22},"name":"PopWithEmptyStack","qualname":"::read::Error::PopWithEmptyStack","value":"Error::PopWithEmptyStack","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" When evaluating call frame instructions, found a `DW_CFA_restore_state`\n stack pop instruction, but the stack was empty, and had nothing to pop.\n","sig":null,"attributes":[{"value":"/ When evaluating call frame instructions, found a `DW_CFA_restore_state`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":94965,"byte_end":95040,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ stack pop instruction, but the stack was empty, and had nothing to pop.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95045,"byte_end":95120,"line_start":348,"line_end":348,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7958},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95203,"byte_end":95225,"line_start":351,"line_end":351,"column_start":5,"column_end":27},"name":"NoUnwindInfoForAddress","qualname":"::read::Error::NoUnwindInfoForAddress","value":"Error::NoUnwindInfoForAddress","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Do not have unwind info for the given address.\n","sig":null,"attributes":[{"value":"/ Do not have unwind info for the given address.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95148,"byte_end":95198,"line_start":350,"line_end":350,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7960},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95300,"byte_end":95317,"line_start":353,"line_end":353,"column_start":5,"column_end":22},"name":"UnsupportedOffset","qualname":"::read::Error::UnsupportedOffset","value":"Error::UnsupportedOffset","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" An offset value was larger than the maximum supported value.\n","sig":null,"attributes":[{"value":"/ An offset value was larger than the maximum supported value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95231,"byte_end":95295,"line_start":352,"line_end":352,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7962},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95388,"byte_end":95410,"line_start":355,"line_end":355,"column_start":5,"column_end":27},"name":"UnknownPointerEncoding","qualname":"::read::Error::UnknownPointerEncoding","value":"Error::UnknownPointerEncoding","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The given pointer encoding is either unknown or invalid.\n","sig":null,"attributes":[{"value":"/ The given pointer encoding is either unknown or invalid.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95323,"byte_end":95383,"line_start":354,"line_end":354,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7964},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95467,"byte_end":95487,"line_start":357,"line_end":357,"column_start":5,"column_end":25},"name":"NoEntryAtGivenOffset","qualname":"::read::Error::NoEntryAtGivenOffset","value":"Error::NoEntryAtGivenOffset","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Did not find an entry at the given offset.\n","sig":null,"attributes":[{"value":"/ Did not find an entry at the given offset.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95416,"byte_end":95462,"line_start":356,"line_end":356,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7966},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95536,"byte_end":95553,"line_start":359,"line_end":359,"column_start":5,"column_end":22},"name":"OffsetOutOfBounds","qualname":"::read::Error::OffsetOutOfBounds","value":"Error::OffsetOutOfBounds","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The given offset is out of bounds.\n","sig":null,"attributes":[{"value":"/ The given offset is out of bounds.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95493,"byte_end":95531,"line_start":358,"line_end":358,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7968},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95602,"byte_end":95621,"line_start":361,"line_end":361,"column_start":5,"column_end":24},"name":"UnknownAugmentation","qualname":"::read::Error::UnknownAugmentation","value":"Error::UnknownAugmentation","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Found an unknown CFI augmentation.\n","sig":null,"attributes":[{"value":"/ Found an unknown CFI augmentation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95559,"byte_end":95597,"line_start":360,"line_end":360,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7970},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95685,"byte_end":95711,"line_start":363,"line_end":363,"column_start":5,"column_end":31},"name":"UnsupportedPointerEncoding","qualname":"::read::Error::UnsupportedPointerEncoding","value":"Error::UnsupportedPointerEncoding","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" We do not support the given pointer encoding yet.\n","sig":null,"attributes":[{"value":"/ We do not support the given pointer encoding yet.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95627,"byte_end":95680,"line_start":362,"line_end":362,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7972},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95772,"byte_end":95791,"line_start":365,"line_end":365,"column_start":5,"column_end":24},"name":"UnsupportedRegister","qualname":"::read::Error::UnsupportedRegister","value":"Error::UnsupportedRegister(u64)","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Registers larger than `u16` are not supported.\n","sig":null,"attributes":[{"value":"/ Registers larger than `u16` are not supported.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95717,"byte_end":95767,"line_start":364,"line_end":364,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7975},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95880,"byte_end":95900,"line_start":367,"line_end":367,"column_start":5,"column_end":25},"name":"TooManyRegisterRules","qualname":"::read::Error::TooManyRegisterRules","value":"Error::TooManyRegisterRules","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The CFI program defined more register rules than we have storage for.\n","sig":null,"attributes":[{"value":"/ The CFI program defined more register rules than we have storage for.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95802,"byte_end":95875,"line_start":366,"line_end":366,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7977},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95997,"byte_end":96009,"line_start":370,"line_end":370,"column_start":5,"column_end":17},"name":"CfiStackFull","qualname":"::read::Error::CfiStackFull","value":"Error::CfiStackFull","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Attempted to push onto the CFI stack, but it was already at full\n capacity.\n","sig":null,"attributes":[{"value":"/ Attempted to push onto the CFI stack, but it was already at full","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95906,"byte_end":95974,"line_start":368,"line_end":368,"column_start":5,"column_end":73}},{"value":"/ capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":95979,"byte_end":95992,"line_start":369,"line_end":369,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7979},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96147,"byte_end":96172,"line_start":373,"line_end":373,"column_start":5,"column_end":30},"name":"VariableLengthSearchTable","qualname":"::read::Error::VariableLengthSearchTable","value":"Error::VariableLengthSearchTable","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` binary search table claims to be variable-length encoded,\n which makes binary search impossible.\n","sig":null,"attributes":[{"value":"/ The `.eh_frame_hdr` binary search table claims to be variable-length encoded,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96015,"byte_end":96096,"line_start":371,"line_end":371,"column_start":5,"column_end":86}},{"value":"/ which makes binary search impossible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96101,"byte_end":96142,"line_start":372,"line_end":372,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7981},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96242,"byte_end":96261,"line_start":375,"line_end":375,"column_start":5,"column_end":24},"name":"UnsupportedUnitType","qualname":"::read::Error::UnsupportedUnitType","value":"Error::UnsupportedUnitType","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" The `DW_UT_*` value for this unit is not supported yet.\n","sig":null,"attributes":[{"value":"/ The `DW_UT_*` value for this unit is not supported yet.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96178,"byte_end":96237,"line_start":374,"line_end":374,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7983},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96324,"byte_end":96347,"line_start":377,"line_end":377,"column_start":5,"column_end":28},"name":"UnsupportedAddressIndex","qualname":"::read::Error::UnsupportedAddressIndex","value":"Error::UnsupportedAddressIndex","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Ranges using AddressIndex are not supported yet.\n","sig":null,"attributes":[{"value":"/ Ranges using AddressIndex are not supported yet.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96267,"byte_end":96319,"line_start":376,"line_end":376,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7985},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96414,"byte_end":96436,"line_start":379,"line_end":379,"column_start":5,"column_end":27},"name":"UnsupportedSegmentSize","qualname":"::read::Error::UnsupportedSegmentSize","value":"Error::UnsupportedSegmentSize","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Nonzero segment selector sizes aren't supported yet.\n","sig":null,"attributes":[{"value":"/ Nonzero segment selector sizes aren't supported yet.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96353,"byte_end":96409,"line_start":378,"line_end":378,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7987},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96512,"byte_end":96526,"line_start":381,"line_end":381,"column_start":5,"column_end":19},"name":"MissingUnitDie","qualname":"::read::Error::MissingUnitDie","value":"Error::MissingUnitDie","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" A compilation unit or type unit is missing its top level DIE.\n","sig":null,"attributes":[{"value":"/ A compilation unit or type unit is missing its top level DIE.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96442,"byte_end":96507,"line_start":380,"line_end":380,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7989},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96582,"byte_end":96606,"line_start":383,"line_end":383,"column_start":5,"column_end":29},"name":"UnsupportedAttributeForm","qualname":"::read::Error::UnsupportedAttributeForm","value":"Error::UnsupportedAttributeForm","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" A DIE attribute used an unsupported form.\n","sig":null,"attributes":[{"value":"/ A DIE attribute used an unsupported form.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96532,"byte_end":96577,"line_start":382,"line_end":382,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7991},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96663,"byte_end":96689,"line_start":385,"line_end":385,"column_start":5,"column_end":31},"name":"MissingFileEntryFormatPath","qualname":"::read::Error::MissingFileEntryFormatPath","value":"Error::MissingFileEntryFormatPath","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Missing DW_LNCT_path in file entry format.\n","sig":null,"attributes":[{"value":"/ Missing DW_LNCT_path in file entry format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96612,"byte_end":96658,"line_start":384,"line_end":384,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7993},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96752,"byte_end":96780,"line_start":387,"line_end":387,"column_start":5,"column_end":33},"name":"ExpectedStringAttributeValue","qualname":"::read::Error::ExpectedStringAttributeValue","value":"Error::ExpectedStringAttributeValue","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" Expected an attribute value to be a string form.\n","sig":null,"attributes":[{"value":"/ Expected an attribute value to be a string form.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96695,"byte_end":96747,"line_start":386,"line_end":386,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7995},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96847,"byte_end":96867,"line_start":389,"line_end":389,"column_start":5,"column_end":25},"name":"InvalidImplicitConst","qualname":"::read::Error::InvalidImplicitConst","value":"Error::InvalidImplicitConst","parent":{"krate":0,"index":7844},"children":[],"decl_id":null,"docs":" `DW_FORM_implicit_const` used in an invalid context.\n","sig":null,"attributes":[{"value":"/ `DW_FORM_implicit_const` used in an invalid context.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96786,"byte_end":96842,"line_start":388,"line_end":388,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":7844},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90353,"byte_end":90358,"line_start":237,"line_end":237,"column_start":10,"column_end":15},"name":"Error","qualname":"::read::Error","value":"pub enum Error {\n    Io,\n    PcRelativePointerButSectionBaseIsUndefined,\n    TextRelativePointerButTextBaseIsUndefined,\n    DataRelativePointerButDataBaseIsUndefined,\n    FuncRelativePointerInBadContext,\n    CannotParseOmitPointerEncoding,\n    BadUnsignedLeb128,\n    BadSignedLeb128,\n    AbbreviationTagZero,\n    AttributeFormZero,\n    BadHasChildren,\n    BadLength,\n    UnknownForm,\n    ExpectedZero,\n    DuplicateAbbreviationCode,\n    DuplicateArange,\n    UnknownReservedLength,\n    UnknownVersion(u64),\n    UnknownAbbreviation,\n    UnexpectedEof(ReaderOffsetId),\n    UnexpectedNull,\n    UnknownStandardOpcode(constants::DwLns),\n    UnknownExtendedOpcode(constants::DwLne),\n    UnsupportedAddressSize(u8),\n    UnsupportedOffsetSize(u8),\n    UnsupportedFieldSize(u8),\n    MinimumInstructionLengthZero,\n    MaximumOperationsPerInstructionZero,\n    LineRangeZero,\n    OpcodeBaseZero,\n    BadUtf8,\n    NotCieId,\n    NotCiePointer,\n    NotFdePointer,\n    BadBranchTarget(u64),\n    InvalidPushObjectAddress,\n    NotEnoughStackItems,\n    TooManyIterations,\n    InvalidExpression(constants::DwOp),\n    InvalidPiece,\n    InvalidExpressionTerminator(u64),\n    DivisionByZero,\n    TypeMismatch,\n    IntegralTypeRequired,\n    UnsupportedTypeOperation,\n    InvalidShiftExpression,\n    UnknownCallFrameInstruction(constants::DwCfa),\n    InvalidAddressRange,\n    InvalidLocationAddressRange,\n    CfiInstructionInInvalidContext,\n    PopWithEmptyStack,\n    NoUnwindInfoForAddress,\n    UnsupportedOffset,\n    UnknownPointerEncoding,\n    NoEntryAtGivenOffset,\n    OffsetOutOfBounds,\n    UnknownAugmentation,\n    UnsupportedPointerEncoding,\n    UnsupportedRegister(u64),\n    TooManyRegisterRules,\n    CfiStackFull,\n    VariableLengthSearchTable,\n    UnsupportedUnitType,\n    UnsupportedAddressIndex,\n    UnsupportedSegmentSize,\n    MissingUnitDie,\n    UnsupportedAttributeForm,\n    MissingFileEntryFormatPath,\n    ExpectedStringAttributeValue,\n    InvalidImplicitConst,\n}","parent":null,"children":[{"krate":0,"index":7845},{"krate":0,"index":7847},{"krate":0,"index":7849},{"krate":0,"index":7851},{"krate":0,"index":7853},{"krate":0,"index":7855},{"krate":0,"index":7857},{"krate":0,"index":7859},{"krate":0,"index":7861},{"krate":0,"index":7863},{"krate":0,"index":7865},{"krate":0,"index":7867},{"krate":0,"index":7869},{"krate":0,"index":7871},{"krate":0,"index":7873},{"krate":0,"index":7875},{"krate":0,"index":7877},{"krate":0,"index":7879},{"krate":0,"index":7882},{"krate":0,"index":7884},{"krate":0,"index":7887},{"krate":0,"index":7889},{"krate":0,"index":7892},{"krate":0,"index":7895},{"krate":0,"index":7898},{"krate":0,"index":7901},{"krate":0,"index":7904},{"krate":0,"index":7906},{"krate":0,"index":7908},{"krate":0,"index":7910},{"krate":0,"index":7912},{"krate":0,"index":7914},{"krate":0,"index":7916},{"krate":0,"index":7918},{"krate":0,"index":7920},{"krate":0,"index":7923},{"krate":0,"index":7925},{"krate":0,"index":7927},{"krate":0,"index":7929},{"krate":0,"index":7932},{"krate":0,"index":7934},{"krate":0,"index":7937},{"krate":0,"index":7939},{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7945},{"krate":0,"index":7947},{"krate":0,"index":7950},{"krate":0,"index":7952},{"krate":0,"index":7954},{"krate":0,"index":7956},{"krate":0,"index":7958},{"krate":0,"index":7960},{"krate":0,"index":7962},{"krate":0,"index":7964},{"krate":0,"index":7966},{"krate":0,"index":7968},{"krate":0,"index":7970},{"krate":0,"index":7972},{"krate":0,"index":7975},{"krate":0,"index":7977},{"krate":0,"index":7979},{"krate":0,"index":7981},{"krate":0,"index":7983},{"krate":0,"index":7985},{"krate":0,"index":7987},{"krate":0,"index":7989},{"krate":0,"index":7991},{"krate":0,"index":7993},{"krate":0,"index":7995}],"decl_id":null,"docs":" An error that occurred when parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred when parsing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":90258,"byte_end":90298,"line_start":235,"line_end":235,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":97121,"byte_end":97132,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"description","qualname":"<Error>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" A short description of the error.\n","sig":null,"attributes":[{"value":"/ A short description of the error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":97072,"byte_end":97109,"line_start":400,"line_end":400,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2672},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105327,"byte_end":105333,"line_start":549,"line_end":549,"column_start":10,"column_end":16},"name":"Result","qualname":"::read::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a parse.\n","sig":null,"attributes":[{"value":"/ The result of a parse.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105291,"byte_end":105317,"line_start":548,"line_end":548,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2674},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105787,"byte_end":105794,"line_start":563,"line_end":563,"column_start":11,"column_end":18},"name":"Section","qualname":"::read::Section","value":"Section<R>: From<R>","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2683}],"decl_id":null,"docs":" A convenience trait for loading DWARF sections from object files.  To be\n used like:","sig":null,"attributes":[{"value":"/ A convenience trait for loading DWARF sections from object files.  To be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105366,"byte_end":105442,"line_start":551,"line_end":551,"column_start":1,"column_end":77}},{"value":"/ used like:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105443,"byte_end":105457,"line_start":552,"line_end":552,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105458,"byte_end":105461,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105462,"byte_end":105469,"line_start":554,"line_end":554,"column_start":1,"column_end":8}},{"value":"/ use gimli::{DebugInfo, EndianSlice, LittleEndian, Reader, Section};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105470,"byte_end":105541,"line_start":555,"line_end":555,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105542,"byte_end":105545,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ let buf = [0x00, 0x01, 0x02, 0x03];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105546,"byte_end":105585,"line_start":557,"line_end":557,"column_start":1,"column_end":40}},{"value":"/ let reader = EndianSlice::new(&buf, LittleEndian);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105586,"byte_end":105640,"line_start":558,"line_end":558,"column_start":1,"column_end":55}},{"value":"/ let loader = |name| -> Result<_, ()> { Ok(reader) };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105641,"byte_end":105697,"line_start":559,"line_end":559,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105698,"byte_end":105701,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ let debug_info: DebugInfo<_> = Section::load(loader).unwrap();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105702,"byte_end":105768,"line_start":561,"line_end":561,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105769,"byte_end":105776,"line_start":562,"line_end":562,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105862,"byte_end":105864,"line_start":565,"line_end":565,"column_start":8,"column_end":10},"name":"id","qualname":"::read::Section::id","value":"pub fn id() -> SectionId","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Returns the section id for this type.\n","sig":null,"attributes":[{"value":"/ Returns the section id for this type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105813,"byte_end":105854,"line_start":564,"line_end":564,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105941,"byte_end":105953,"line_start":568,"line_end":568,"column_start":8,"column_end":20},"name":"section_name","qualname":"::read::Section::section_name","value":"pub fn section_name() -> &'static str","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Returns the ELF section name for this type.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name for this type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105886,"byte_end":105933,"line_start":567,"line_end":567,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106107,"byte_end":106123,"line_start":574,"line_end":574,"column_start":8,"column_end":24},"name":"dwo_section_name","qualname":"::read::Section::dwo_section_name","value":"pub fn dwo_section_name() -> Option<&'static str>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Returns the ELF section name (if any) for this type when used in a dwo\n file.\n","sig":null,"attributes":[{"value":"/ Returns the ELF section name (if any) for this type when used in a dwo","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106011,"byte_end":106085,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106090,"byte_end":106099,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106261,"byte_end":106265,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"load","qualname":"::read::Section::load","value":"pub fn load<F, E>(F) -> core::result::Result<Self, E> where\nF: FnOnce(SectionId) -> core::result::Result<R, E>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Try to load the section using the given loader function.\n","sig":null,"attributes":[{"value":"/ Try to load the section using the given loader function.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106193,"byte_end":106253,"line_start":578,"line_end":578,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106486,"byte_end":106492,"line_start":587,"line_end":587,"column_start":8,"column_end":14},"name":"reader","qualname":"::read::Section::reader","value":"pub fn reader(&Self) -> &R where R: Reader","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[{"value":"/ Returns the `Reader` for this section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106436,"byte_end":106478,"line_start":586,"line_end":586,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106590,"byte_end":106606,"line_start":592,"line_end":592,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::Section::lookup_offset_id","value":"pub fn lookup_offset_id(&Self, ReaderOffsetId)\n-> Option<(SectionId, R::Offset)> where R: Reader","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[{"value":"/ Returns the `Reader` for this section.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106540,"byte_end":106582,"line_start":591,"line_end":591,"column_start":5,"column_end":47}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2352,"byte_end":2358,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4101,"byte_end":4113,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8041,"byte_end":8057,"line_start":172,"line_end":172,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8302,"byte_end":8315,"line_start":183,"line_end":183,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8795,"byte_end":8812,"line_start":199,"line_end":199,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8966,"byte_end":8983,"line_start":205,"line_end":205,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9109,"byte_end":9126,"line_start":211,"line_end":211,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10997,"byte_end":11006,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13697,"byte_end":13710,"line_start":338,"line_end":338,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43480,"byte_end":43486,"line_start":836,"line_end":836,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55327,"byte_end":55333,"line_start":1289,"line_end":1289,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62475,"byte_end":62488,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62754,"byte_end":62767,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62992,"byte_end":63004,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63105,"byte_end":63117,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63312,"byte_end":63321,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63416,"byte_end":63425,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112546,"byte_end":112555,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113853,"byte_end":113862,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114675,"byte_end":114684,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114833,"byte_end":114842,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117952,"byte_end":117962,"line_start":35,"line_end":35,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118522,"byte_end":118532,"line_start":53,"line_end":53,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119362,"byte_end":119372,"line_start":77,"line_end":77,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119530,"byte_end":119540,"line_start":87,"line_end":87,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120413,"byte_end":120423,"line_start":117,"line_end":117,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120720,"byte_end":120730,"line_start":127,"line_end":127,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122469,"byte_end":122479,"line_start":176,"line_end":176,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122631,"byte_end":122641,"line_start":186,"line_end":186,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122734,"byte_end":122750,"line_start":192,"line_end":192,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124063,"byte_end":124073,"line_start":223,"line_end":223,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130430,"byte_end":130437,"line_start":408,"line_end":408,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130679,"byte_end":130686,"line_start":417,"line_end":417,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131520,"byte_end":131527,"line_start":441,"line_end":441,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131682,"byte_end":131689,"line_start":451,"line_end":451,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132466,"byte_end":132482,"line_start":482,"line_end":482,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132606,"byte_end":132619,"line_start":492,"line_end":492,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":140232,"byte_end":140242,"line_start":694,"line_end":694,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":141185,"byte_end":141195,"line_start":734,"line_end":734,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":141296,"byte_end":141303,"line_start":738,"line_end":738,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142112,"byte_end":142119,"line_start":774,"line_end":774,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144267,"byte_end":144280,"line_start":832,"line_end":832,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146975,"byte_end":146989,"line_start":914,"line_end":914,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":152668,"byte_end":152680,"line_start":1063,"line_end":1063,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":155213,"byte_end":155229,"line_start":1136,"line_end":1136,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":158744,"byte_end":158766,"line_start":1221,"line_end":1221,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161340,"byte_end":161362,"line_start":1305,"line_end":1305,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165949,"byte_end":165977,"line_start":1444,"line_end":1444,"column_start":26,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":168785,"byte_end":168806,"line_start":1526,"line_end":1526,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172839,"byte_end":172860,"line_start":1647,"line_end":1647,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177302,"byte_end":177328,"line_start":1769,"line_end":1769,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177544,"byte_end":177570,"line_start":1776,"line_end":1776,"column_start":29,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177794,"byte_end":177820,"line_start":1786,"line_end":1786,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":179485,"byte_end":179498,"line_start":1832,"line_end":1832,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":182592,"byte_end":182605,"line_start":1945,"line_end":1945,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185987,"byte_end":185998,"line_start":2024,"line_end":2024,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":197380,"byte_end":197395,"line_start":2319,"line_end":2319,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":197608,"byte_end":197623,"line_start":2327,"line_end":2327,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":197811,"byte_end":197826,"line_start":2336,"line_end":2336,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":198086,"byte_end":198101,"line_start":2346,"line_end":2346,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":198325,"byte_end":198340,"line_start":2356,"line_end":2356,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":201762,"byte_end":201777,"line_start":2455,"line_end":2455,"column_start":63,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":202350,"byte_end":202365,"line_start":2475,"line_end":2475,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":202866,"byte_end":202881,"line_start":2498,"line_end":2498,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203133,"byte_end":203149,"line_start":2506,"line_end":2506,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203680,"byte_end":203694,"line_start":2525,"line_end":2525,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203957,"byte_end":203971,"line_start":2537,"line_end":2537,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210425,"byte_end":210432,"line_start":2663,"line_end":2663,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210595,"byte_end":210602,"line_start":2672,"line_end":2672,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212404,"byte_end":212416,"line_start":2724,"line_end":2724,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":224280,"byte_end":224300,"line_start":3023,"line_end":3023,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232417,"byte_end":232441,"line_start":3235,"line_end":3235,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234097,"byte_end":234104,"line_start":3292,"line_end":3292,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234203,"byte_end":234210,"line_start":3299,"line_end":3299,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234359,"byte_end":234366,"line_start":3308,"line_end":3308,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374537,"byte_end":374542,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378436,"byte_end":378441,"line_start":141,"line_end":141,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392712,"byte_end":392716,"line_start":530,"line_end":530,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398538,"byte_end":398555,"line_start":678,"line_end":678,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399656,"byte_end":399666,"line_start":708,"line_end":708,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400699,"byte_end":400708,"line_start":740,"line_end":740,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400814,"byte_end":400823,"line_start":746,"line_end":746,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403691,"byte_end":403702,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406526,"byte_end":406537,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408444,"byte_end":408455,"line_start":167,"line_end":167,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408659,"byte_end":408670,"line_start":177,"line_end":177,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408869,"byte_end":408880,"line_start":187,"line_end":187,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":409063,"byte_end":409074,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":409218,"byte_end":409229,"line_start":206,"line_end":206,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427143,"byte_end":427154,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427983,"byte_end":427994,"line_start":46,"line_end":46,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428468,"byte_end":428479,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429311,"byte_end":429322,"line_start":85,"line_end":85,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429486,"byte_end":429497,"line_start":95,"line_end":95,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429939,"byte_end":429952,"line_start":114,"line_end":114,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":432667,"byte_end":432679,"line_start":192,"line_end":192,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":435686,"byte_end":435696,"line_start":299,"line_end":299,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436599,"byte_end":436609,"line_start":330,"line_end":330,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436728,"byte_end":436738,"line_start":336,"line_end":336,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436837,"byte_end":436847,"line_start":342,"line_end":342,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436867,"byte_end":436877,"line_start":344,"line_end":344,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437166,"byte_end":437176,"line_start":354,"line_end":354,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437475,"byte_end":437485,"line_start":367,"line_end":367,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437862,"byte_end":437884,"line_start":382,"line_end":382,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459183,"byte_end":459194,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459806,"byte_end":459817,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459962,"byte_end":459973,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":460422,"byte_end":460434,"line_start":76,"line_end":76,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":463954,"byte_end":463966,"line_start":175,"line_end":175,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464779,"byte_end":464791,"line_start":199,"line_end":199,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465470,"byte_end":465482,"line_start":219,"line_end":219,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465644,"byte_end":465656,"line_start":229,"line_end":229,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466058,"byte_end":466073,"line_start":242,"line_end":242,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":474983,"byte_end":474992,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475801,"byte_end":475810,"line_start":44,"line_end":44,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477449,"byte_end":477458,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478282,"byte_end":478291,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478451,"byte_end":478460,"line_start":118,"line_end":118,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":479367,"byte_end":479388,"line_start":142,"line_end":142,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":481083,"byte_end":481091,"line_start":195,"line_end":195,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489802,"byte_end":489817,"line_start":405,"line_end":405,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":494467,"byte_end":494482,"line_start":523,"line_end":523,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497641,"byte_end":497657,"line_start":589,"line_end":589,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497955,"byte_end":497971,"line_start":598,"line_end":598,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499682,"byte_end":499689,"line_start":652,"line_end":652,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":514900,"byte_end":514917,"line_start":1082,"line_end":1082,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526910,"byte_end":526931,"line_start":1444,"line_end":1444,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530222,"byte_end":530241,"line_start":1537,"line_end":1537,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531816,"byte_end":531825,"line_start":1590,"line_end":1590,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":535110,"byte_end":535125,"line_start":1688,"line_end":1688,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lists.rs","byte_start":582301,"byte_end":582312,"line_start":10,"line_end":10,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lists.rs","byte_start":582573,"byte_end":582584,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584489,"byte_end":584497,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585283,"byte_end":585291,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585439,"byte_end":585447,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585735,"byte_end":585748,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586574,"byte_end":586587,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586740,"byte_end":586753,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586896,"byte_end":586913,"line_start":105,"line_end":105,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587945,"byte_end":587958,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588284,"byte_end":588297,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589240,"byte_end":589253,"line_start":171,"line_end":171,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":596596,"byte_end":596611,"line_start":402,"line_end":402,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":600099,"byte_end":600113,"line_start":471,"line_end":471,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601658,"byte_end":601669,"line_start":525,"line_end":525,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":636749,"byte_end":636760,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":636980,"byte_end":636991,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":637557,"byte_end":637572,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":639866,"byte_end":639880,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651661,"byte_end":651669,"line_start":302,"line_end":302,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653633,"byte_end":653642,"line_start":360,"line_end":360,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674902,"byte_end":674912,"line_start":865,"line_end":865,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676246,"byte_end":676259,"line_start":905,"line_end":905,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679550,"byte_end":679560,"line_start":998,"line_end":998,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778314,"byte_end":778327,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778918,"byte_end":778931,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779455,"byte_end":779468,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780307,"byte_end":780320,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781020,"byte_end":781033,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1925},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781196,"byte_end":781209,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781638,"byte_end":781655,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":782915,"byte_end":782928,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783555,"byte_end":783568,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784088,"byte_end":784101,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784924,"byte_end":784937,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785637,"byte_end":785650,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785813,"byte_end":785826,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786255,"byte_end":786272,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787597,"byte_end":787608,"line_start":18,"line_end":18,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788418,"byte_end":788429,"line_start":41,"line_end":41,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788580,"byte_end":788591,"line_start":51,"line_end":51,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788874,"byte_end":788887,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789725,"byte_end":789738,"line_start":88,"line_end":88,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789891,"byte_end":789904,"line_start":98,"line_end":98,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":790064,"byte_end":790081,"line_start":107,"line_end":107,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791119,"byte_end":791129,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791458,"byte_end":791468,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792405,"byte_end":792415,"line_start":173,"line_end":173,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":797399,"byte_end":797414,"line_start":334,"line_end":334,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":800101,"byte_end":800115,"line_start":391,"line_end":391,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801667,"byte_end":801678,"line_start":445,"line_end":445,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":804707,"byte_end":804715,"line_start":537,"line_end":537,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805931,"byte_end":805936,"line_start":576,"line_end":576,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829296,"byte_end":829304,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830103,"byte_end":830111,"line_start":39,"line_end":39,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830878,"byte_end":830886,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831706,"byte_end":831714,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831872,"byte_end":831880,"line_start":93,"line_end":93,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832142,"byte_end":832157,"line_start":105,"line_end":105,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833513,"byte_end":833528,"line_start":137,"line_end":137,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834359,"byte_end":834374,"line_start":161,"line_end":161,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834529,"byte_end":834544,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834642,"byte_end":834661,"line_start":177,"line_end":177,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835794,"byte_end":835806,"line_start":208,"line_end":208,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836112,"byte_end":836124,"line_start":217,"line_end":217,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836946,"byte_end":836958,"line_start":241,"line_end":241,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":837110,"byte_end":837122,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":839586,"byte_end":839602,"line_start":21,"line_end":21,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840215,"byte_end":840230,"line_start":38,"line_end":38,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841009,"byte_end":841019,"line_start":59,"line_end":59,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842229,"byte_end":842238,"line_start":90,"line_end":90,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843047,"byte_end":843056,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844228,"byte_end":844237,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845061,"byte_end":845070,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845230,"byte_end":845239,"line_start":182,"line_end":182,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845656,"byte_end":845680,"line_start":198,"line_end":198,"column_start":17,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":849297,"byte_end":849305,"line_start":295,"line_end":295,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":850468,"byte_end":850478,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851079,"byte_end":851089,"line_start":357,"line_end":357,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861765,"byte_end":861790,"line_start":673,"line_end":673,"column_start":33,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877460,"byte_end":877469,"line_start":1130,"line_end":1130,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899876,"byte_end":899890,"line_start":1814,"line_end":1814,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916875,"byte_end":916884,"line_start":2226,"line_end":2226,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921190,"byte_end":921200,"line_start":2343,"line_end":2343,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923926,"byte_end":923939,"line_start":2419,"line_end":2419,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936936,"byte_end":936947,"line_start":2805,"line_end":2805,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941124,"byte_end":941139,"line_start":2930,"line_end":2930,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942349,"byte_end":942364,"line_start":2966,"line_end":2966,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943764,"byte_end":943774,"line_start":3011,"line_end":3011,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944585,"byte_end":944595,"line_start":3034,"line_end":3034,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945423,"byte_end":945433,"line_start":3058,"line_end":3058,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2591},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945595,"byte_end":945605,"line_start":3068,"line_end":3068,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945746,"byte_end":945756,"line_start":3076,"line_end":3076,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946935,"byte_end":946960,"line_start":3113,"line_end":3113,"column_start":17,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057037,"byte_end":1057046,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1059822,"byte_end":1059827,"line_start":151,"line_end":151,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96894,"byte_end":96899,"line_start":392,"line_end":392,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":97060,"byte_end":97065,"line_start":399,"line_end":399,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106821,"byte_end":106829,"line_start":602,"line_end":602,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1759,"byte_end":1768,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":39}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1942,"byte_end":1948,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":111}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/lib.rs","byte_start":1984,"byte_end":1988,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":143}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":2352,"byte_end":2358,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":4101,"byte_end":4113,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2728},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8041,"byte_end":8057,"line_start":172,"line_end":172,"column_start":21,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3243},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8302,"byte_end":8315,"line_start":183,"line_end":183,"column_start":21,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3270},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8795,"byte_end":8812,"line_start":199,"line_end":199,"column_start":38,"column_end":55},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3297},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":8966,"byte_end":8983,"line_start":205,"line_end":205,"column_start":39,"column_end":56},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3297},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":9109,"byte_end":9126,"line_start":211,"line_end":211,"column_start":9,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":10997,"byte_end":11006,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/common.rs","byte_start":13697,"byte_end":13710,"line_start":338,"line_end":338,"column_start":18,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3411},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":43480,"byte_end":43486,"line_start":836,"line_end":836,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/constants.rs","byte_start":55327,"byte_end":55333,"line_start":1289,"line_end":1289,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58156,"byte_end":58161,"line_start":7,"line_end":7,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58164,"byte_end":58171,"line_start":7,"line_end":7,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":2800},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58174,"byte_end":58179,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":2447},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58182,"byte_end":58186,"line_start":7,"line_end":7,"column_start":48,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58189,"byte_end":58198,"line_start":7,"line_end":7,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":1,"index":2477},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":58201,"byte_end":58203,"line_start":7,"line_end":7,"column_start":67,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2482},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62475,"byte_end":62488,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5190},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62754,"byte_end":62767,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5190},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":62992,"byte_end":63004,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5209},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63105,"byte_end":63117,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5209},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63312,"byte_end":63321,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5225},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/endianity.rs","byte_start":63416,"byte_end":63425,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5225},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":112546,"byte_end":112555,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":113853,"byte_end":113862,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114675,"byte_end":114684,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5241},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/addr.rs","byte_start":114833,"byte_end":114842,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5241},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":117952,"byte_end":117962,"line_start":35,"line_end":35,"column_start":17,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":118522,"byte_end":118532,"line_start":53,"line_end":53,"column_start":22,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119362,"byte_end":119372,"line_start":77,"line_end":77,"column_start":32,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5255},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":119530,"byte_end":119540,"line_start":87,"line_end":87,"column_start":29,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5255},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120413,"byte_end":120423,"line_start":117,"line_end":117,"column_start":22,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":120720,"byte_end":120730,"line_start":127,"line_end":127,"column_start":17,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122469,"byte_end":122479,"line_start":176,"line_end":176,"column_start":32,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5279},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122631,"byte_end":122641,"line_start":186,"line_end":186,"column_start":29,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5279},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":122734,"byte_end":122750,"line_start":192,"line_end":192,"column_start":17,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":124063,"byte_end":124073,"line_start":223,"line_end":223,"column_start":26,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130430,"byte_end":130437,"line_start":408,"line_end":408,"column_start":17,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":130679,"byte_end":130686,"line_start":417,"line_end":417,"column_start":22,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131520,"byte_end":131527,"line_start":441,"line_end":441,"column_start":32,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5328},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":131682,"byte_end":131689,"line_start":451,"line_end":451,"column_start":29,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5328},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132305,"byte_end":132309,"line_start":474,"line_end":474,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132312,"byte_end":132317,"line_start":474,"line_end":474,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132320,"byte_end":132322,"line_start":474,"line_end":474,"column_start":51,"column_end":53},"kind":"SuperTrait","from":{"krate":1,"index":2482},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132325,"byte_end":132329,"line_start":474,"line_end":474,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":1,"index":2728},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132466,"byte_end":132482,"line_start":482,"line_end":482,"column_start":29,"column_end":45},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3243},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":132606,"byte_end":132619,"line_start":492,"line_end":492,"column_start":29,"column_end":42},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3270},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134566,"byte_end":134571,"line_start":542,"line_end":542,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2447},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134574,"byte_end":134579,"line_start":542,"line_end":542,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":134582,"byte_end":134603,"line_start":542,"line_end":542,"column_start":53,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":357},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":140232,"byte_end":140242,"line_start":694,"line_end":694,"column_start":46,"column_end":56},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5255},"to":{"krate":0,"index":357}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":141185,"byte_end":141195,"line_start":734,"line_end":734,"column_start":38,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5255},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":141296,"byte_end":141303,"line_start":738,"line_end":738,"column_start":46,"column_end":53},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5328},"to":{"krate":0,"index":357}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":142112,"byte_end":142119,"line_start":774,"line_end":774,"column_start":38,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5328},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":144267,"byte_end":144280,"line_start":832,"line_end":832,"column_start":6,"column_end":19},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":146975,"byte_end":146989,"line_start":914,"line_end":914,"column_start":26,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":152668,"byte_end":152680,"line_start":1063,"line_end":1063,"column_start":6,"column_end":18},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":155213,"byte_end":155229,"line_start":1136,"line_end":1136,"column_start":6,"column_end":22},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":158744,"byte_end":158766,"line_start":1221,"line_end":1221,"column_start":17,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":161340,"byte_end":161362,"line_start":1305,"line_end":1305,"column_start":17,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":165949,"byte_end":165977,"line_start":1444,"line_end":1444,"column_start":26,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":168785,"byte_end":168806,"line_start":1526,"line_end":1526,"column_start":17,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":172839,"byte_end":172860,"line_start":1647,"line_end":1647,"column_start":17,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177302,"byte_end":177328,"line_start":1769,"line_end":1769,"column_start":17,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177544,"byte_end":177570,"line_start":1776,"line_end":1776,"column_start":29,"column_end":55},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5602},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":177794,"byte_end":177820,"line_start":1786,"line_end":1786,"column_start":17,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":179485,"byte_end":179498,"line_start":1832,"line_end":1832,"column_start":17,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":182592,"byte_end":182605,"line_start":1945,"line_end":1945,"column_start":43,"column_end":56},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5612},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":185987,"byte_end":185998,"line_start":2024,"line_end":2024,"column_start":21,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":197380,"byte_end":197395,"line_start":2319,"line_end":2319,"column_start":35,"column_end":50},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":197608,"byte_end":197623,"line_start":2327,"line_end":2327,"column_start":29,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":197811,"byte_end":197826,"line_start":2336,"line_end":2336,"column_start":35,"column_end":50},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":198086,"byte_end":198101,"line_start":2346,"line_end":2346,"column_start":26,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":198325,"byte_end":198340,"line_start":2356,"line_end":2356,"column_start":17,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":201762,"byte_end":201777,"line_start":2455,"line_end":2455,"column_start":63,"column_end":78},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":202350,"byte_end":202365,"line_start":2475,"line_end":2475,"column_start":23,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":202866,"byte_end":202881,"line_start":2498,"line_end":2498,"column_start":16,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203133,"byte_end":203149,"line_start":2506,"line_end":2506,"column_start":37,"column_end":53},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5645},"to":{"krate":1,"index":7161}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203680,"byte_end":203694,"line_start":2525,"line_end":2525,"column_start":29,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5658},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":203957,"byte_end":203971,"line_start":2537,"line_end":2537,"column_start":17,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210425,"byte_end":210432,"line_start":2663,"line_end":2663,"column_start":29,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5682},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":210595,"byte_end":210602,"line_start":2672,"line_end":2672,"column_start":17,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":212404,"byte_end":212416,"line_start":2724,"line_end":2724,"column_start":17,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":224280,"byte_end":224300,"line_start":3023,"line_end":3023,"column_start":17,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":232417,"byte_end":232441,"line_start":3235,"line_end":3235,"column_start":21,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234097,"byte_end":234104,"line_start":3292,"line_end":3292,"column_start":18,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5833},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234203,"byte_end":234210,"line_start":3299,"line_end":3299,"column_start":20,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5833},"to":{"krate":1,"index":2725}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/cfi.rs","byte_start":234359,"byte_end":234366,"line_start":3308,"line_end":3308,"column_start":6,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":374537,"byte_end":374542,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":378436,"byte_end":378441,"line_start":141,"line_end":141,"column_start":17,"column_end":22},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":392712,"byte_end":392716,"line_start":530,"line_end":530,"column_start":17,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":398538,"byte_end":398555,"line_start":678,"line_end":678,"column_start":23,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":399656,"byte_end":399666,"line_start":708,"line_end":708,"column_start":23,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400699,"byte_end":400708,"line_start":740,"line_end":740,"column_start":29,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5904},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/dwarf.rs","byte_start":400814,"byte_end":400823,"line_start":746,"line_end":746,"column_start":17,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":403691,"byte_end":403702,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":406526,"byte_end":406537,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408444,"byte_end":408455,"line_start":167,"line_end":167,"column_start":39,"column_end":50},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5922},"to":{"krate":1,"index":3111}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408659,"byte_end":408670,"line_start":177,"line_end":177,"column_start":50,"column_end":61},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5922},"to":{"krate":1,"index":3111}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":408869,"byte_end":408880,"line_start":187,"line_end":187,"column_start":32,"column_end":43},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5922},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":409063,"byte_end":409074,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5922},"to":{"krate":1,"index":2725}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/endian_slice.rs","byte_start":409218,"byte_end":409229,"line_start":206,"line_end":206,"column_start":33,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5922},"to":{"krate":0,"index":1038}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413128,"byte_end":413133,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413136,"byte_end":413140,"line_start":23,"line_end":23,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413143,"byte_end":413145,"line_start":23,"line_end":23,"column_start":20,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2482},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413148,"byte_end":413151,"line_start":23,"line_end":23,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2509},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413154,"byte_end":413158,"line_start":23,"line_end":23,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":8907},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413161,"byte_end":413164,"line_start":23,"line_end":23,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2889},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413182,"byte_end":413191,"line_start":23,"line_end":23,"column_start":59,"column_end":68},"kind":"SuperTrait","from":{"krate":1,"index":2920},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":413194,"byte_end":413197,"line_start":23,"line_end":23,"column_start":71,"column_end":74},"kind":"SuperTrait","from":{"krate":1,"index":2894},"to":{"krate":0,"index":1002}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418077,"byte_end":418082,"line_start":207,"line_end":207,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":8701},"to":{"krate":0,"index":1038}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/reader.rs","byte_start":418085,"byte_end":418090,"line_start":207,"line_end":207,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2447},"to":{"krate":0,"index":1038}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427143,"byte_end":427154,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":427983,"byte_end":427994,"line_start":46,"line_end":46,"column_start":17,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":428468,"byte_end":428479,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429311,"byte_end":429322,"line_start":85,"line_end":85,"column_start":24,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5977},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429486,"byte_end":429497,"line_start":95,"line_end":95,"column_start":21,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5977},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":429939,"byte_end":429952,"line_start":114,"line_end":114,"column_start":6,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":432667,"byte_end":432679,"line_start":192,"line_end":192,"column_start":6,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":435686,"byte_end":435696,"line_start":299,"line_end":299,"column_start":6,"column_end":16},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436599,"byte_end":436609,"line_start":330,"line_end":330,"column_start":16,"column_end":26},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436728,"byte_end":436738,"line_start":336,"line_end":336,"column_start":20,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436837,"byte_end":436847,"line_start":342,"line_end":342,"column_start":13,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":2482}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":436867,"byte_end":436877,"line_start":344,"line_end":344,"column_start":16,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437166,"byte_end":437176,"line_start":354,"line_end":354,"column_start":47,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437475,"byte_end":437485,"line_start":367,"line_end":367,"column_start":44,"column_end":54},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/abbrev.rs","byte_start":437862,"byte_end":437884,"line_start":382,"line_end":382,"column_start":6,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459183,"byte_end":459194,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459806,"byte_end":459817,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6065},"to":{"krate":1,"index":2520}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":459962,"byte_end":459973,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6065},"to":{"krate":1,"index":2509}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":460422,"byte_end":460434,"line_start":76,"line_end":76,"column_start":37,"column_end":49},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6088},"to":{"krate":0,"index":1749}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":463954,"byte_end":463966,"line_start":175,"line_end":175,"column_start":22,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":464779,"byte_end":464791,"line_start":199,"line_end":199,"column_start":17,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465470,"byte_end":465482,"line_start":219,"line_end":219,"column_start":32,"column_end":44},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6097},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":465644,"byte_end":465656,"line_start":229,"line_end":229,"column_start":29,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6097},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/aranges.rs","byte_start":466058,"byte_end":466073,"line_start":242,"line_end":242,"column_start":17,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":474983,"byte_end":474992,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":475801,"byte_end":475810,"line_start":44,"line_end":44,"column_start":17,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":477449,"byte_end":477458,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478282,"byte_end":478291,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6117},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":478451,"byte_end":478460,"line_start":118,"line_end":118,"column_start":21,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6117},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":479367,"byte_end":479388,"line_start":142,"line_end":142,"column_start":44,"column_end":65},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6343},"to":{"krate":0,"index":1396}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":481083,"byte_end":481091,"line_start":195,"line_end":195,"column_start":26,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":489802,"byte_end":489817,"line_start":405,"line_end":405,"column_start":17,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":494467,"byte_end":494482,"line_start":523,"line_end":523,"column_start":34,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6148},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497641,"byte_end":497657,"line_start":589,"line_end":589,"column_start":17,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":497955,"byte_end":497971,"line_start":598,"line_end":598,"column_start":17,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":499682,"byte_end":499689,"line_start":652,"line_end":652,"column_start":6,"column_end":13},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":514900,"byte_end":514917,"line_start":1082,"line_end":1082,"column_start":17,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":526910,"byte_end":526931,"line_start":1444,"line_end":1444,"column_start":17,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":530222,"byte_end":530241,"line_start":1537,"line_end":1537,"column_start":17,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":531816,"byte_end":531825,"line_start":1590,"line_end":1590,"column_start":17,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/line.rs","byte_start":535110,"byte_end":535125,"line_start":1688,"line_end":1688,"column_start":6,"column_end":21},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lists.rs","byte_start":582301,"byte_end":582312,"line_start":10,"line_end":10,"column_start":18,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6448},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lists.rs","byte_start":582573,"byte_end":582584,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":584489,"byte_end":584497,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585283,"byte_end":585291,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6456},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585439,"byte_end":585447,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6456},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":585735,"byte_end":585748,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586574,"byte_end":586587,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6470},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586740,"byte_end":586753,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6470},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":586896,"byte_end":586913,"line_start":105,"line_end":105,"column_start":14,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":587945,"byte_end":587958,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":588284,"byte_end":588297,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":589240,"byte_end":589253,"line_start":171,"line_end":171,"column_start":17,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":596596,"byte_end":596611,"line_start":402,"line_end":402,"column_start":17,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":600099,"byte_end":600113,"line_start":471,"line_end":471,"column_start":17,"column_end":31},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/loclists.rs","byte_start":601658,"byte_end":601669,"line_start":525,"line_end":525,"column_start":17,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":636749,"byte_end":636760,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6597},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":636980,"byte_end":636991,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":637557,"byte_end":637572,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/lookup.rs","byte_start":639866,"byte_end":639880,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6647},"to":{"krate":0,"index":1749}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":651661,"byte_end":651669,"line_start":302,"line_end":302,"column_start":17,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":653633,"byte_end":653642,"line_start":360,"line_end":360,"column_start":17,"column_end":26},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":674902,"byte_end":674912,"line_start":865,"line_end":865,"column_start":17,"column_end":27},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":676246,"byte_end":676259,"line_start":905,"line_end":905,"column_start":17,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/op.rs","byte_start":679550,"byte_end":679560,"line_start":998,"line_end":998,"column_start":17,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778314,"byte_end":778327,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":778918,"byte_end":778931,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7047},"to":{"krate":0,"index":1768}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":779455,"byte_end":779468,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":780307,"byte_end":780320,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781020,"byte_end":781033,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7058},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781196,"byte_end":781209,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7058},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubnames.rs","byte_start":781638,"byte_end":781655,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":782915,"byte_end":782928,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":783555,"byte_end":783568,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7078},"to":{"krate":0,"index":1768}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784088,"byte_end":784101,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":784924,"byte_end":784937,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":7089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785637,"byte_end":785650,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":7089},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":785813,"byte_end":785826,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7089},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/pubtypes.rs","byte_start":786255,"byte_end":786272,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":787597,"byte_end":787608,"line_start":18,"line_end":18,"column_start":22,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788418,"byte_end":788429,"line_start":41,"line_end":41,"column_start":24,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7109},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788580,"byte_end":788591,"line_start":51,"line_end":51,"column_start":21,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7109},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":788874,"byte_end":788887,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789725,"byte_end":789738,"line_start":88,"line_end":88,"column_start":24,"column_end":37},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7123},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":789891,"byte_end":789904,"line_start":98,"line_end":98,"column_start":21,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7123},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":790064,"byte_end":790081,"line_start":107,"line_end":107,"column_start":14,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791119,"byte_end":791129,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":791458,"byte_end":791468,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":792405,"byte_end":792415,"line_start":173,"line_end":173,"column_start":17,"column_end":27},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":797399,"byte_end":797414,"line_start":334,"line_end":334,"column_start":23,"column_end":38},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":7176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":800101,"byte_end":800115,"line_start":391,"line_end":391,"column_start":17,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":801667,"byte_end":801678,"line_start":445,"line_end":445,"column_start":17,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":804707,"byte_end":804715,"line_start":537,"line_end":537,"column_start":6,"column_end":14},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/rnglists.rs","byte_start":805931,"byte_end":805936,"line_start":576,"line_end":576,"column_start":6,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":829296,"byte_end":829304,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830103,"byte_end":830111,"line_start":39,"line_end":39,"column_start":17,"column_end":25},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":830878,"byte_end":830886,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831706,"byte_end":831714,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7251},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":831872,"byte_end":831880,"line_start":93,"line_end":93,"column_start":21,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7251},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":832142,"byte_end":832157,"line_start":105,"line_end":105,"column_start":17,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":833513,"byte_end":833528,"line_start":137,"line_end":137,"column_start":9,"column_end":24},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834359,"byte_end":834374,"line_start":161,"line_end":161,"column_start":24,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7265},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834529,"byte_end":834544,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7265},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":834642,"byte_end":834661,"line_start":177,"line_end":177,"column_start":14,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":835794,"byte_end":835806,"line_start":208,"line_end":208,"column_start":17,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836112,"byte_end":836124,"line_start":217,"line_end":217,"column_start":9,"column_end":21},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":836946,"byte_end":836958,"line_start":241,"line_end":241,"column_start":24,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7279},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/str.rs","byte_start":837110,"byte_end":837122,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7279},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":839586,"byte_end":839602,"line_start":21,"line_end":21,"column_start":23,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":840215,"byte_end":840230,"line_start":38,"line_end":38,"column_start":23,"column_end":38},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":841009,"byte_end":841019,"line_start":59,"line_end":59,"column_start":23,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":842229,"byte_end":842238,"line_start":90,"line_end":90,"column_start":22,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":7326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":843047,"byte_end":843056,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":844228,"byte_end":844237,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845061,"byte_end":845070,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7326},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845230,"byte_end":845239,"line_start":182,"line_end":182,"column_start":21,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7326},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":845656,"byte_end":845680,"line_start":198,"line_end":198,"column_start":17,"column_end":41},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":849297,"byte_end":849305,"line_start":295,"line_end":295,"column_start":14,"column_end":22},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":850468,"byte_end":850478,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":851079,"byte_end":851089,"line_start":357,"line_end":357,"column_start":17,"column_end":27},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":861765,"byte_end":861790,"line_start":673,"line_end":673,"column_start":33,"column_end":58},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":877460,"byte_end":877469,"line_start":1130,"line_end":1130,"column_start":17,"column_end":26},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":899876,"byte_end":899890,"line_start":1814,"line_end":1814,"column_start":17,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":916875,"byte_end":916884,"line_start":2226,"line_end":2226,"column_start":41,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":921190,"byte_end":921200,"line_start":2343,"line_end":2343,"column_start":33,"column_end":43},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":923926,"byte_end":923939,"line_start":2419,"line_end":2419,"column_start":33,"column_end":46},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":936936,"byte_end":936947,"line_start":2805,"line_end":2805,"column_start":33,"column_end":44},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":941124,"byte_end":941139,"line_start":2930,"line_end":2930,"column_start":40,"column_end":55},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":942349,"byte_end":942364,"line_start":2966,"line_end":2966,"column_start":40,"column_end":55},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":943764,"byte_end":943774,"line_start":3011,"line_end":3011,"column_start":22,"column_end":32},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":944585,"byte_end":944595,"line_start":3034,"line_end":3034,"column_start":9,"column_end":19},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945423,"byte_end":945433,"line_start":3058,"line_end":3058,"column_start":24,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7743},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945595,"byte_end":945605,"line_start":3068,"line_end":3068,"column_start":21,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7743},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":945746,"byte_end":945756,"line_start":3076,"line_end":3076,"column_start":17,"column_end":27},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/unit.rs","byte_start":946935,"byte_end":946960,"line_start":3113,"line_end":3113,"column_start":17,"column_end":42},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1057037,"byte_end":1057046,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":7767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/value.rs","byte_start":1059822,"byte_end":1059827,"line_start":151,"line_end":151,"column_start":6,"column_end":11},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":96894,"byte_end":96899,"line_start":392,"line_end":392,"column_start":23,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7844},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":97060,"byte_end":97065,"line_start":399,"line_end":399,"column_start":6,"column_end":11},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":105799,"byte_end":105803,"line_start":563,"line_end":563,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2728},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.23.0/src/read/mod.rs","byte_start":106821,"byte_end":106829,"line_start":602,"line_end":602,"column_start":6,"column_end":14},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2749},"to":{"krate":4294967295,"index":4294967295}}]}