{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","-C","metadata=c09dadaa048f734f","-C","extra-filename=-c09dadaa048f734f","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","bytes=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbytes-7a6e657daebb7eb8.rmeta","--extern","futures_core=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_core-0533940c6bc2bdcd.rmeta","--extern","futures_sink=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libfutures_sink-6d5600b9e29c95ed.rmeta","--extern","log=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/liblog-fac7a9de76e9754d.rmeta","--extern","pin_project_lite=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libpin_project_lite-70b5e349bb5ae177.rmeta","--extern","tokio=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio-d36f104b99e70419.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libtokio_util-c09dadaa048f734f.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[17488339846141952403,9164315025699559522]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":18,"id":{"name":"futures_core","disambiguator":[29397662539448121,8477785109263410569]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":19,"id":{"name":"futures_sink","disambiguator":[2922734123352180455,14403152685744851238]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":20,"id":{"name":"tokio","disambiguator":[16353378429824476342,2060103248263720111]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":21,"id":{"name":"parking_lot","disambiguator":[14331116733237037633,1733547897482442134]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":22,"id":{"name":"instant","disambiguator":[11361008649439768419,13512573952781869826]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[18197204475178301771,10109649757336546226]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[2181135905612754568,6053946559474066644]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[12086112946249549060,1314504070364395696]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[291282355886527283,13566040600539321920]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":28,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":29,"id":{"name":"mio","disambiguator":[980902961067663816,14858026113145421146]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","num":30,"id":{"name":"log","disambiguator":[9999652943946548626,13641826928383836309]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","num":31,"id":{"name":"pin_project_lite","disambiguator":[9145299615355368616,5447980798194890694]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[16605158223807296615,2139309927205400556]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":33,"id":{"name":"once_cell","disambiguator":[15381452257217144295,7635182210418599630]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[17518586050439928397,5930942372196096673]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":35,"id":{"name":"memchr","disambiguator":[13309440065246054461,9623703849673585728]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":36,"id":{"name":"num_cpus","disambiguator":[673716848283037980,13614879919095805843]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[3393182166626963142,14184042726220995224]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888017,"byte_end":11888027,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888066,"byte_end":11888073,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888112,"byte_end":11888119,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888281,"byte_end":11888287,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888289,"byte_end":11888300,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1687},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888348,"byte_end":11888358,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1646},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888407,"byte_end":11888418,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888480,"byte_end":11888500,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888502,"byte_end":11888527,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888576,"byte_end":11888586,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888588,"byte_end":11888603,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888668,"byte_end":11888685,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888687,"byte_end":11888709,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980254,"byte_end":11980262,"line_start":13,"line_end":13,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":1611},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980293,"byte_end":11980305,"line_start":14,"line_end":14,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980336,"byte_end":11980348,"line_start":15,"line_end":15,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980372,"byte_end":11980385,"line_start":16,"line_end":16,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980387,"byte_end":11980401,"line_start":16,"line_end":16,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":496},{"krate":0,"index":1308},{"krate":0,"index":14},{"krate":0,"index":378},{"krate":0,"index":447}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11877745,"byte_end":11877798,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11877799,"byte_end":11877802,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11877803,"byte_end":11877878,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11877879,"byte_end":11877944,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11877945,"byte_end":11877948,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11877949,"byte_end":11878029,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878030,"byte_end":11878105,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878106,"byte_end":11878154,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878155,"byte_end":11878158,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878159,"byte_end":11878182,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878183,"byte_end":11878186,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878187,"byte_end":11878266,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878267,"byte_end":11878346,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878347,"byte_end":11878418,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878419,"byte_end":11878489,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878490,"byte_end":11878568,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878569,"byte_end":11878645,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878646,"byte_end":11878679,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878680,"byte_end":11878683,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878684,"byte_end":11878764,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878765,"byte_end":11878845,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878846,"byte_end":11878896,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878897,"byte_end":11878900,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878901,"byte_end":11878952,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11878953,"byte_end":11879002,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879003,"byte_end":11879054,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879055,"byte_end":11879058,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879059,"byte_end":11879124,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879125,"byte_end":11879128,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879129,"byte_end":11879206,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879207,"byte_end":11879248,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879249,"byte_end":11879252,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879253,"byte_end":11879333,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879334,"byte_end":11879413,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879414,"byte_end":11879492,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879493,"byte_end":11879572,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879573,"byte_end":11879587,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879588,"byte_end":11879591,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879592,"byte_end":11879671,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879672,"byte_end":11879751,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879752,"byte_end":11879769,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879770,"byte_end":11879773,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879774,"byte_end":11879851,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879852,"byte_end":11879931,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11879932,"byte_end":11880009,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880010,"byte_end":11880080,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880081,"byte_end":11880130,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880131,"byte_end":11880134,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880135,"byte_end":11880148,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880149,"byte_end":11880181,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880182,"byte_end":11880249,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880250,"byte_end":11880364,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880365,"byte_end":11880402,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880403,"byte_end":11880464,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880465,"byte_end":11880514,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880515,"byte_end":11880518,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880519,"byte_end":11880560,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880561,"byte_end":11880571,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880572,"byte_end":11880656,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880657,"byte_end":11880713,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880714,"byte_end":11880717,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880718,"byte_end":11880739,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880740,"byte_end":11880807,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880808,"byte_end":11880836,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880837,"byte_end":11880850,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880851,"byte_end":11880869,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880870,"byte_end":11880879,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880880,"byte_end":11880883,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880884,"byte_end":11880943,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880944,"byte_end":11880968,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880969,"byte_end":11880978,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880979,"byte_end":11880984,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880985,"byte_end":11880993,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11880994,"byte_end":11881001,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881002,"byte_end":11881076,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881077,"byte_end":11881080,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881081,"byte_end":11881103,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881104,"byte_end":11881107,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881108,"byte_end":11881185,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881186,"byte_end":11881262,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881263,"byte_end":11881342,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881343,"byte_end":11881397,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881398,"byte_end":11881401,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881402,"byte_end":11881446,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881447,"byte_end":11881454,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881455,"byte_end":11881490,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881491,"byte_end":11881522,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881523,"byte_end":11881526,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881527,"byte_end":11881556,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881557,"byte_end":11881560,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881561,"byte_end":11881600,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881601,"byte_end":11881604,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881605,"byte_end":11881643,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881644,"byte_end":11881671,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881672,"byte_end":11881708,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881709,"byte_end":11881712,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881713,"byte_end":11881731,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881732,"byte_end":11881754,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881755,"byte_end":11881785,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881786,"byte_end":11881840,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881841,"byte_end":11881871,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881872,"byte_end":11881929,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881930,"byte_end":11881962,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881963,"byte_end":11881976,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881977,"byte_end":11881980,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11881981,"byte_end":11882015,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882016,"byte_end":11882060,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882061,"byte_end":11882113,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882114,"byte_end":11882181,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882182,"byte_end":11882185,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882186,"byte_end":11882260,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882261,"byte_end":11882327,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882328,"byte_end":11882357,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882358,"byte_end":11882405,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882406,"byte_end":11882458,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882459,"byte_end":11882530,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882531,"byte_end":11882550,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882551,"byte_end":11882564,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882565,"byte_end":11882568,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882569,"byte_end":11882608,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882609,"byte_end":11882664,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882665,"byte_end":11882683,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882684,"byte_end":11882760,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882761,"byte_end":11882827,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882828,"byte_end":11882880,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882881,"byte_end":11882884,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882885,"byte_end":11882965,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882966,"byte_end":11882991,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11882992,"byte_end":11883024,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883025,"byte_end":11883038,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883039,"byte_end":11883042,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883043,"byte_end":11883115,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883116,"byte_end":11883142,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883143,"byte_end":11883194,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883195,"byte_end":11883231,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883232,"byte_end":11883235,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883236,"byte_end":11883314,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883315,"byte_end":11883358,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883359,"byte_end":11883406,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883407,"byte_end":11883443,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883444,"byte_end":11883488,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883489,"byte_end":11883545,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883546,"byte_end":11883594,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883595,"byte_end":11883617,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883618,"byte_end":11883636,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883637,"byte_end":11883650,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883651,"byte_end":11883660,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883661,"byte_end":11883666,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883667,"byte_end":11883674,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883675,"byte_end":11883678,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883679,"byte_end":11883702,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883703,"byte_end":11883706,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883707,"byte_end":11883785,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883786,"byte_end":11883859,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883860,"byte_end":11883936,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11883937,"byte_end":11884017,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884018,"byte_end":11884034,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884035,"byte_end":11884038,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884039,"byte_end":11884119,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884120,"byte_end":11884199,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884200,"byte_end":11884280,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884281,"byte_end":11884353,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884354,"byte_end":11884357,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884358,"byte_end":11884435,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884436,"byte_end":11884514,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884515,"byte_end":11884588,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884589,"byte_end":11884655,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884656,"byte_end":11884659,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884660,"byte_end":11884673,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884674,"byte_end":11884707,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884708,"byte_end":11884742,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884743,"byte_end":11884780,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884781,"byte_end":11884848,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884849,"byte_end":11884884,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884885,"byte_end":11884946,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884947,"byte_end":11884993,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11884994,"byte_end":11885055,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885056,"byte_end":11885059,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885060,"byte_end":11885088,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885089,"byte_end":11885092,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885093,"byte_end":11885134,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885135,"byte_end":11885145,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885146,"byte_end":11885170,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885171,"byte_end":11885245,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885246,"byte_end":11885288,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885289,"byte_end":11885303,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885304,"byte_end":11885361,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885362,"byte_end":11885411,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885412,"byte_end":11885426,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885427,"byte_end":11885464,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885465,"byte_end":11885516,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885517,"byte_end":11885563,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885564,"byte_end":11885594,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885595,"byte_end":11885609,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885610,"byte_end":11885619,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885620,"byte_end":11885625,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885626,"byte_end":11885633,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885634,"byte_end":11885641,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885642,"byte_end":11885717,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885718,"byte_end":11885791,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885792,"byte_end":11885834,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885835,"byte_end":11885838,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885839,"byte_end":11885861,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885862,"byte_end":11885865,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885866,"byte_end":11885943,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11885944,"byte_end":11886020,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886021,"byte_end":11886097,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886098,"byte_end":11886121,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886122,"byte_end":11886125,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886126,"byte_end":11886171,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886172,"byte_end":11886179,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886180,"byte_end":11886215,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886216,"byte_end":11886240,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886241,"byte_end":11886244,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886245,"byte_end":11886274,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886275,"byte_end":11886278,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886279,"byte_end":11886318,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886319,"byte_end":11886322,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886323,"byte_end":11886369,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886370,"byte_end":11886406,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886407,"byte_end":11886410,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886411,"byte_end":11886502,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886503,"byte_end":11886577,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886578,"byte_end":11886600,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886601,"byte_end":11886634,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886635,"byte_end":11886682,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886683,"byte_end":11886735,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886736,"byte_end":11886811,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886812,"byte_end":11886831,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886832,"byte_end":11886845,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886846,"byte_end":11886849,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886850,"byte_end":11886902,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886903,"byte_end":11886980,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11886981,"byte_end":11887045,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887046,"byte_end":11887049,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887050,"byte_end":11887093,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887094,"byte_end":11887134,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887135,"byte_end":11887138,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887139,"byte_end":11887196,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887197,"byte_end":11887243,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887244,"byte_end":11887295,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887296,"byte_end":11887314,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887315,"byte_end":11887324,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887325,"byte_end":11887330,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887331,"byte_end":11887338,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887339,"byte_end":11887342,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887343,"byte_end":11887382,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887383,"byte_end":11887424,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887425,"byte_end":11887461,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887462,"byte_end":11887494,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887495,"byte_end":11887591,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887592,"byte_end":11887643,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887644,"byte_end":11887697,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887698,"byte_end":11887741,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887742,"byte_end":11887786,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887787,"byte_end":11887835,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887836,"byte_end":11887884,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887885,"byte_end":11887931,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11887932,"byte_end":11887971,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889995,"byte_end":11890005,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11888838,"byte_end":11888923,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11888924,"byte_end":11888927,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11888928,"byte_end":11888966,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11888967,"byte_end":11889005,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889006,"byte_end":11889009,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889010,"byte_end":11889023,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889024,"byte_end":11889027,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889028,"byte_end":11889109,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889110,"byte_end":11889113,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889114,"byte_end":11889153,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889154,"byte_end":11889187,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889188,"byte_end":11889217,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889218,"byte_end":11889221,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889222,"byte_end":11889229,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889230,"byte_end":11889248,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889249,"byte_end":11889279,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889280,"byte_end":11889304,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889305,"byte_end":11889312,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889313,"byte_end":11889342,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889343,"byte_end":11889395,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889396,"byte_end":11889399,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889400,"byte_end":11889418,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889419,"byte_end":11889436,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889437,"byte_end":11889517,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889518,"byte_end":11889552,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889553,"byte_end":11889606,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889607,"byte_end":11889618,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889619,"byte_end":11889626,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889627,"byte_end":11889632,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889633,"byte_end":11889680,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889681,"byte_end":11889734,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889735,"byte_end":11889793,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889794,"byte_end":11889873,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889874,"byte_end":11889886,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889887,"byte_end":11889894,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889895,"byte_end":11889902,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11889903,"byte_end":11889906,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890107,"byte_end":11890110,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890034,"byte_end":11890095,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892110,"byte_end":11892117,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11890825,"byte_end":11890860,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11890861,"byte_end":11890864,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11890865,"byte_end":11890934,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11890935,"byte_end":11891014,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891015,"byte_end":11891087,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891088,"byte_end":11891112,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891113,"byte_end":11891116,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891117,"byte_end":11891185,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891186,"byte_end":11891263,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891264,"byte_end":11891325,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891326,"byte_end":11891329,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891330,"byte_end":11891391,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891392,"byte_end":11891454,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891455,"byte_end":11891458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891459,"byte_end":11891522,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891523,"byte_end":11891586,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891587,"byte_end":11891666,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891667,"byte_end":11891741,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891742,"byte_end":11891761,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891762,"byte_end":11891765,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891766,"byte_end":11891834,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891835,"byte_end":11891897,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891898,"byte_end":11891973,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11891974,"byte_end":11892013,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892014,"byte_end":11892017,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892018,"byte_end":11892054,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892055,"byte_end":11892099,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892165,"byte_end":11892169,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892124,"byte_end":11892155,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892935,"byte_end":11892940,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892176,"byte_end":11892228,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892233,"byte_end":11892236,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892241,"byte_end":11892310,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892315,"byte_end":11892385,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892390,"byte_end":11892436,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892441,"byte_end":11892444,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892449,"byte_end":11892525,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892530,"byte_end":11892605,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892610,"byte_end":11892685,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892690,"byte_end":11892730,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892735,"byte_end":11892738,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892743,"byte_end":11892817,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892822,"byte_end":11892868,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892873,"byte_end":11892876,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892881,"byte_end":11892925,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895876,"byte_end":11895882,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11892964,"byte_end":11893029,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893034,"byte_end":11893037,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893042,"byte_end":11893116,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893121,"byte_end":11893193,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893198,"byte_end":11893271,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893276,"byte_end":11893319,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893324,"byte_end":11893327,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893332,"byte_end":11893405,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893410,"byte_end":11893473,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893478,"byte_end":11893553,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893558,"byte_end":11893633,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893638,"byte_end":11893661,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893666,"byte_end":11893669,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893674,"byte_end":11893746,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893751,"byte_end":11893825,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893830,"byte_end":11893900,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893905,"byte_end":11893908,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893913,"byte_end":11893981,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11893986,"byte_end":11894057,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894062,"byte_end":11894142,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894147,"byte_end":11894159,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894164,"byte_end":11894167,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894172,"byte_end":11894242,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894247,"byte_end":11894322,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894327,"byte_end":11894364,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894369,"byte_end":11894372,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894377,"byte_end":11894413,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894418,"byte_end":11894462,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894467,"byte_end":11894470,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894475,"byte_end":11894498,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894503,"byte_end":11894506,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894511,"byte_end":11894585,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894590,"byte_end":11894664,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894669,"byte_end":11894722,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894727,"byte_end":11894730,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894735,"byte_end":11894806,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894811,"byte_end":11894881,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894886,"byte_end":11894902,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894907,"byte_end":11894910,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894915,"byte_end":11894928,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894933,"byte_end":11894951,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894956,"byte_end":11894961,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894966,"byte_end":11894992,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11894997,"byte_end":11895034,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895039,"byte_end":11895044,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895049,"byte_end":11895070,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895075,"byte_end":11895080,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895085,"byte_end":11895115,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895120,"byte_end":11895134,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895139,"byte_end":11895170,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895175,"byte_end":11895208,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895213,"byte_end":11895216,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895221,"byte_end":11895314,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895319,"byte_end":11895337,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895342,"byte_end":11895345,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895350,"byte_end":11895422,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895427,"byte_end":11895487,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895492,"byte_end":11895544,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895549,"byte_end":11895611,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895616,"byte_end":11895683,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895688,"byte_end":11895691,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895696,"byte_end":11895724,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895729,"byte_end":11895738,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895743,"byte_end":11895748,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895753,"byte_end":11895760,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895765,"byte_end":11895768,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895773,"byte_end":11895842,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895847,"byte_end":11895868,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897048,"byte_end":11897058,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11895963,"byte_end":11896035,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896040,"byte_end":11896089,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896094,"byte_end":11896097,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896102,"byte_end":11896170,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896175,"byte_end":11896242,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896247,"byte_end":11896315,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896320,"byte_end":11896396,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896401,"byte_end":11896467,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896472,"byte_end":11896475,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896480,"byte_end":11896548,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896553,"byte_end":11896628,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896633,"byte_end":11896708,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896713,"byte_end":11896785,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896790,"byte_end":11896832,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896837,"byte_end":11896840,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896845,"byte_end":11896920,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11896925,"byte_end":11897003,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897008,"byte_end":11897040,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898666,"byte_end":11898672,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897476,"byte_end":11897556,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897561,"byte_end":11897637,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897642,"byte_end":11897645,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897650,"byte_end":11897725,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897730,"byte_end":11897800,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897805,"byte_end":11897876,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897881,"byte_end":11897953,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11897958,"byte_end":11898016,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898021,"byte_end":11898024,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898029,"byte_end":11898098,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898103,"byte_end":11898178,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898183,"byte_end":11898259,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898264,"byte_end":11898286,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898291,"byte_end":11898294,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898299,"byte_end":11898372,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898377,"byte_end":11898450,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898455,"byte_end":11898531,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898536,"byte_end":11898539,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898544,"byte_end":11898580,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898585,"byte_end":11898617,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/decoder.rs","byte_start":11898622,"byte_end":11898658,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899006,"byte_end":11899013,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11898851,"byte_end":11898923,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11898924,"byte_end":11898944,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11898945,"byte_end":11898948,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11898949,"byte_end":11898995,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899278,"byte_end":11899283,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899026,"byte_end":11899058,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899063,"byte_end":11899066,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899071,"byte_end":11899148,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899153,"byte_end":11899209,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899214,"byte_end":11899217,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899222,"byte_end":11899268,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899634,"byte_end":11899640,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899307,"byte_end":11899352,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899357,"byte_end":11899360,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899365,"byte_end":11899439,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899444,"byte_end":11899524,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899529,"byte_end":11899567,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899572,"byte_end":11899575,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/encoder.rs","byte_start":11899580,"byte_end":11899626,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1728},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910457,"byte_end":11910463,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1731}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912236,"byte_end":11912239,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910605,"byte_end":11910685,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910690,"byte_end":11910771,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910776,"byte_end":11910779,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910784,"byte_end":11910859,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910864,"byte_end":11910934,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910939,"byte_end":11911008,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911013,"byte_end":11911085,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911090,"byte_end":11911148,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911153,"byte_end":11911156,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911161,"byte_end":11911232,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911237,"byte_end":11911314,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911319,"byte_end":11911395,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911400,"byte_end":11911422,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911427,"byte_end":11911430,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911435,"byte_end":11911508,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911513,"byte_end":11911586,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911591,"byte_end":11911667,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911672,"byte_end":11911675,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911680,"byte_end":11911756,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911761,"byte_end":11911837,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911842,"byte_end":11911917,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911922,"byte_end":11911957,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911962,"byte_end":11911965,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11911970,"byte_end":11912006,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912011,"byte_end":11912043,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912048,"byte_end":11912085,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912090,"byte_end":11912128,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912133,"byte_end":11912224,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913847,"byte_end":11913860,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912452,"byte_end":11912532,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912537,"byte_end":11912618,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912623,"byte_end":11912672,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912677,"byte_end":11912680,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912685,"byte_end":11912760,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912765,"byte_end":11912835,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912840,"byte_end":11912909,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912914,"byte_end":11912986,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11912991,"byte_end":11913049,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913054,"byte_end":11913057,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913062,"byte_end":11913133,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913138,"byte_end":11913215,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913220,"byte_end":11913296,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913301,"byte_end":11913323,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913328,"byte_end":11913331,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913336,"byte_end":11913409,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913414,"byte_end":11913487,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913492,"byte_end":11913568,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913573,"byte_end":11913576,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913581,"byte_end":11913617,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913622,"byte_end":11913654,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913659,"byte_end":11913696,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913701,"byte_end":11913739,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11913744,"byte_end":11913835,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915963,"byte_end":11915973,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914386,"byte_end":11914466,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914471,"byte_end":11914552,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914557,"byte_end":11914560,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914565,"byte_end":11914640,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914645,"byte_end":11914715,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914720,"byte_end":11914791,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914796,"byte_end":11914868,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914873,"byte_end":11914931,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914936,"byte_end":11914939,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914944,"byte_end":11915015,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915020,"byte_end":11915097,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915102,"byte_end":11915178,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915183,"byte_end":11915205,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915210,"byte_end":11915213,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915218,"byte_end":11915297,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915302,"byte_end":11915379,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915384,"byte_end":11915387,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915392,"byte_end":11915465,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915470,"byte_end":11915543,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915548,"byte_end":11915624,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915629,"byte_end":11915632,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915637,"byte_end":11915673,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915678,"byte_end":11915710,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915715,"byte_end":11915753,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915758,"byte_end":11915796,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915801,"byte_end":11915855,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11915860,"byte_end":11915951,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916608,"byte_end":11916615,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916325,"byte_end":11916388,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916393,"byte_end":11916406,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916411,"byte_end":11916414,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916419,"byte_end":11916494,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916499,"byte_end":11916569,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916574,"byte_end":11916596,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916959,"byte_end":11916966,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916668,"byte_end":11916739,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916744,"byte_end":11916757,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916762,"byte_end":11916765,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916770,"byte_end":11916845,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916850,"byte_end":11916920,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11916925,"byte_end":11916947,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917329,"byte_end":11917340,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917031,"byte_end":11917109,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917114,"byte_end":11917127,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917132,"byte_end":11917135,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917140,"byte_end":11917215,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917220,"byte_end":11917290,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917295,"byte_end":11917317,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917687,"byte_end":11917692,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917436,"byte_end":11917494,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917499,"byte_end":11917512,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917517,"byte_end":11917520,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917525,"byte_end":11917599,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917604,"byte_end":11917675,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918004,"byte_end":11918013,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917745,"byte_end":11917811,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917816,"byte_end":11917829,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917834,"byte_end":11917837,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917842,"byte_end":11917916,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11917921,"byte_end":11917992,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918133,"byte_end":11918144,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918078,"byte_end":11918121,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918279,"byte_end":11918294,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918216,"byte_end":11918267,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918434,"byte_end":11918446,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918378,"byte_end":11918422,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918583,"byte_end":11918599,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918519,"byte_end":11918571,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918949,"byte_end":11918959,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918684,"byte_end":11918747,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918752,"byte_end":11918755,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918760,"byte_end":11918835,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918840,"byte_end":11918910,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11918915,"byte_end":11918937,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919331,"byte_end":11919341,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919009,"byte_end":11919083,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919088,"byte_end":11919129,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919134,"byte_end":11919137,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919142,"byte_end":11919217,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919222,"byte_end":11919292,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919297,"byte_end":11919319,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921315,"byte_end":11921326,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921000,"byte_end":11921071,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921072,"byte_end":11921144,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921145,"byte_end":11921205,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921206,"byte_end":11921209,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921210,"byte_end":11921246,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921264,"byte_end":11921303,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921412,"byte_end":11921414,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921339,"byte_end":11921403,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921446,"byte_end":11921451,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921424,"byte_end":11921437,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921516,"byte_end":11921524,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921461,"byte_end":11921507,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921611,"byte_end":11921620,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921541,"byte_end":11921602,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921853,"byte_end":11921856,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921801,"byte_end":11921841,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1687},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11922585,"byte_end":11922595,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1690}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11922846,"byte_end":11922849,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11922778,"byte_end":11922834,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923197,"byte_end":11923210,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923081,"byte_end":11923163,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923168,"byte_end":11923185,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923924,"byte_end":11923931,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923637,"byte_end":11923700,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923705,"byte_end":11923722,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923727,"byte_end":11923730,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923735,"byte_end":11923810,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923815,"byte_end":11923885,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923890,"byte_end":11923912,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924279,"byte_end":11924286,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923984,"byte_end":11924055,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924060,"byte_end":11924077,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924082,"byte_end":11924085,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924090,"byte_end":11924165,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924170,"byte_end":11924240,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924245,"byte_end":11924267,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924653,"byte_end":11924664,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924351,"byte_end":11924429,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924434,"byte_end":11924451,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924456,"byte_end":11924459,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924464,"byte_end":11924539,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924544,"byte_end":11924614,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924619,"byte_end":11924641,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925029,"byte_end":11925039,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924760,"byte_end":11924827,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924832,"byte_end":11924835,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924840,"byte_end":11924915,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924920,"byte_end":11924990,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11924995,"byte_end":11925017,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925151,"byte_end":11925158,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925089,"byte_end":11925139,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925281,"byte_end":11925292,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925211,"byte_end":11925269,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925412,"byte_end":11925423,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925357,"byte_end":11925400,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925553,"byte_end":11925568,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925490,"byte_end":11925541,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11927669,"byte_end":11927680,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1649}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11927887,"byte_end":11927890,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11927818,"byte_end":11927875,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928448,"byte_end":11928455,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928160,"byte_end":11928223,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928228,"byte_end":11928246,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928251,"byte_end":11928254,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928259,"byte_end":11928334,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928339,"byte_end":11928409,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928414,"byte_end":11928436,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928804,"byte_end":11928811,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928508,"byte_end":11928579,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928584,"byte_end":11928602,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928607,"byte_end":11928610,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928615,"byte_end":11928690,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928695,"byte_end":11928765,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928770,"byte_end":11928792,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929179,"byte_end":11929190,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928876,"byte_end":11928954,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928959,"byte_end":11928977,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928982,"byte_end":11928985,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928990,"byte_end":11929065,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929070,"byte_end":11929140,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929145,"byte_end":11929167,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929556,"byte_end":11929566,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929286,"byte_end":11929354,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929359,"byte_end":11929362,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929367,"byte_end":11929442,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929447,"byte_end":11929517,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929522,"byte_end":11929544,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929678,"byte_end":11929685,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929616,"byte_end":11929666,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929808,"byte_end":11929819,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929738,"byte_end":11929796,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929940,"byte_end":11929952,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11929884,"byte_end":11929928,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11930083,"byte_end":11930099,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11930019,"byte_end":11930071,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1218},{"krate":0,"index":1228},{"krate":0,"index":1226},{"krate":0,"index":1225},{"krate":0,"index":994},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1244},{"krate":0,"index":1242},{"krate":0,"index":1241},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931626,"byte_end":11931678,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931679,"byte_end":11931682,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931683,"byte_end":11931753,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931754,"byte_end":11931812,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931813,"byte_end":11931885,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931886,"byte_end":11931956,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11931957,"byte_end":11932024,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932025,"byte_end":11932028,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932029,"byte_end":11932050,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932051,"byte_end":11932054,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932055,"byte_end":11932130,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932131,"byte_end":11932202,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932203,"byte_end":11932274,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932275,"byte_end":11932345,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932346,"byte_end":11932386,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932387,"byte_end":11932390,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932391,"byte_end":11932398,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932399,"byte_end":11932442,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932443,"byte_end":11932501,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932502,"byte_end":11932505,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932506,"byte_end":11932561,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932562,"byte_end":11932604,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932605,"byte_end":11932610,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932611,"byte_end":11932663,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932664,"byte_end":11932669,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932670,"byte_end":11932692,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932693,"byte_end":11932700,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932701,"byte_end":11932704,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932705,"byte_end":11932777,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932778,"byte_end":11932849,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932850,"byte_end":11932869,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932870,"byte_end":11932873,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932874,"byte_end":11932885,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932886,"byte_end":11932935,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932936,"byte_end":11932985,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11932986,"byte_end":11933035,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933036,"byte_end":11933043,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933044,"byte_end":11933047,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933048,"byte_end":11933086,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933087,"byte_end":11933090,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933091,"byte_end":11933098,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933099,"byte_end":11933142,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933143,"byte_end":11933201,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933202,"byte_end":11933205,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933206,"byte_end":11933231,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933232,"byte_end":11933253,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933254,"byte_end":11933257,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933258,"byte_end":11933334,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933335,"byte_end":11933344,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933345,"byte_end":11933387,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933388,"byte_end":11933393,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933394,"byte_end":11933467,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933468,"byte_end":11933515,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933516,"byte_end":11933519,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933520,"byte_end":11933557,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933558,"byte_end":11933572,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933573,"byte_end":11933578,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933579,"byte_end":11933586,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933587,"byte_end":11933590,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933591,"byte_end":11933633,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933634,"byte_end":11933637,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933638,"byte_end":11933649,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933650,"byte_end":11933689,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933690,"byte_end":11933729,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933730,"byte_end":11933769,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933770,"byte_end":11933777,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933778,"byte_end":11933781,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933782,"byte_end":11933796,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933797,"byte_end":11933800,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933801,"byte_end":11933876,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933877,"byte_end":11933950,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11933951,"byte_end":11934017,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934018,"byte_end":11934087,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934088,"byte_end":11934153,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934154,"byte_end":11934157,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934158,"byte_end":11934174,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934175,"byte_end":11934178,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934179,"byte_end":11934255,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934256,"byte_end":11934297,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934298,"byte_end":11934301,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934302,"byte_end":11934309,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934310,"byte_end":11934341,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934342,"byte_end":11934392,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934393,"byte_end":11934434,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934435,"byte_end":11934470,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934471,"byte_end":11934519,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934520,"byte_end":11934551,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934552,"byte_end":11934600,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934601,"byte_end":11934650,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934651,"byte_end":11934673,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934674,"byte_end":11934681,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934682,"byte_end":11934704,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934705,"byte_end":11934712,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934713,"byte_end":11934716,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934717,"byte_end":11934765,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934766,"byte_end":11934769,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934770,"byte_end":11934781,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934782,"byte_end":11934834,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934835,"byte_end":11934900,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934901,"byte_end":11934966,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11934967,"byte_end":11935032,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935033,"byte_end":11935040,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935041,"byte_end":11935044,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935045,"byte_end":11935121,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935122,"byte_end":11935196,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935197,"byte_end":11935269,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935270,"byte_end":11935346,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935347,"byte_end":11935389,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935390,"byte_end":11935393,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935394,"byte_end":11935410,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935411,"byte_end":11935414,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935415,"byte_end":11935490,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935491,"byte_end":11935532,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935533,"byte_end":11935536,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935537,"byte_end":11935544,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935545,"byte_end":11935576,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935577,"byte_end":11935627,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935628,"byte_end":11935669,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935670,"byte_end":11935705,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935706,"byte_end":11935754,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935755,"byte_end":11935786,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935787,"byte_end":11935835,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935836,"byte_end":11935895,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935896,"byte_end":11935918,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935919,"byte_end":11935926,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935927,"byte_end":11935949,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935950,"byte_end":11935957,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935958,"byte_end":11935961,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11935962,"byte_end":11936010,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936011,"byte_end":11936014,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936015,"byte_end":11936026,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936027,"byte_end":11936076,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936077,"byte_end":11936131,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936132,"byte_end":11936186,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936187,"byte_end":11936241,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936242,"byte_end":11936249,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936250,"byte_end":11936253,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936254,"byte_end":11936327,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936328,"byte_end":11936395,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936396,"byte_end":11936399,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936400,"byte_end":11936416,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936417,"byte_end":11936420,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936421,"byte_end":11936497,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936498,"byte_end":11936570,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936571,"byte_end":11936610,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936611,"byte_end":11936614,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936615,"byte_end":11936622,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936623,"byte_end":11936654,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936655,"byte_end":11936705,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936706,"byte_end":11936747,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936748,"byte_end":11936783,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936784,"byte_end":11936832,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936833,"byte_end":11936864,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936865,"byte_end":11936912,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936913,"byte_end":11936933,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936934,"byte_end":11936956,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936957,"byte_end":11936964,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936965,"byte_end":11936987,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936988,"byte_end":11936995,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11936996,"byte_end":11936999,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937000,"byte_end":11937048,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937049,"byte_end":11937052,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937053,"byte_end":11937064,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937065,"byte_end":11937117,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937118,"byte_end":11937183,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937184,"byte_end":11937249,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937250,"byte_end":11937315,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937316,"byte_end":11937323,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937324,"byte_end":11937327,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937328,"byte_end":11937400,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937401,"byte_end":11937476,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937477,"byte_end":11937549,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937550,"byte_end":11937626,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937627,"byte_end":11937700,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937701,"byte_end":11937704,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937705,"byte_end":11937721,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937722,"byte_end":11937725,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937726,"byte_end":11937800,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937801,"byte_end":11937868,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937869,"byte_end":11937872,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937873,"byte_end":11937880,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937881,"byte_end":11937912,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937913,"byte_end":11937963,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11937964,"byte_end":11938005,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938006,"byte_end":11938041,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938042,"byte_end":11938090,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938091,"byte_end":11938122,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938123,"byte_end":11938171,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938172,"byte_end":11938192,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938193,"byte_end":11938215,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938216,"byte_end":11938223,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938224,"byte_end":11938246,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938247,"byte_end":11938254,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938255,"byte_end":11938258,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938259,"byte_end":11938307,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938308,"byte_end":11938311,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938312,"byte_end":11938323,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938324,"byte_end":11938350,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938351,"byte_end":11938396,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938397,"byte_end":11938442,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938443,"byte_end":11938488,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938489,"byte_end":11938492,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938493,"byte_end":11938521,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938522,"byte_end":11938567,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938568,"byte_end":11938613,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938614,"byte_end":11938659,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938660,"byte_end":11938667,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938668,"byte_end":11938671,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938672,"byte_end":11938744,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938745,"byte_end":11938821,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938822,"byte_end":11938892,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938893,"byte_end":11938962,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11938963,"byte_end":11939000,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939001,"byte_end":11939004,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939005,"byte_end":11939079,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939080,"byte_end":11939134,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939135,"byte_end":11939138,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939139,"byte_end":11939155,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939156,"byte_end":11939159,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939160,"byte_end":11939233,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939234,"byte_end":11939310,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939311,"byte_end":11939385,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939386,"byte_end":11939399,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939400,"byte_end":11939403,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939404,"byte_end":11939411,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939412,"byte_end":11939443,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939444,"byte_end":11939494,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939495,"byte_end":11939536,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939537,"byte_end":11939572,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939573,"byte_end":11939622,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939623,"byte_end":11939654,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939655,"byte_end":11939703,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939704,"byte_end":11939748,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939749,"byte_end":11939771,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939772,"byte_end":11939779,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939780,"byte_end":11939802,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939803,"byte_end":11939810,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939811,"byte_end":11939814,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939815,"byte_end":11939863,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939864,"byte_end":11939867,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939868,"byte_end":11939879,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939880,"byte_end":11939906,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939907,"byte_end":11939957,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11939958,"byte_end":11940008,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940009,"byte_end":11940059,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940060,"byte_end":11940063,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940064,"byte_end":11940084,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940085,"byte_end":11940115,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940116,"byte_end":11940146,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940147,"byte_end":11940177,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940178,"byte_end":11940185,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940186,"byte_end":11940189,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940190,"byte_end":11940263,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940264,"byte_end":11940339,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940340,"byte_end":11940412,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940413,"byte_end":11940451,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940452,"byte_end":11940455,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940456,"byte_end":11940530,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940531,"byte_end":11940607,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940608,"byte_end":11940681,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940682,"byte_end":11940710,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940711,"byte_end":11940714,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940715,"byte_end":11940731,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940732,"byte_end":11940735,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940736,"byte_end":11940809,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940810,"byte_end":11940886,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940887,"byte_end":11940961,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11940962,"byte_end":11941034,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941035,"byte_end":11941046,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941047,"byte_end":11941050,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941051,"byte_end":11941058,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941059,"byte_end":11941090,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941091,"byte_end":11941141,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941142,"byte_end":11941183,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941184,"byte_end":11941219,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941220,"byte_end":11941269,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941270,"byte_end":11941301,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941302,"byte_end":11941367,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941368,"byte_end":11941388,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941389,"byte_end":11941411,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941412,"byte_end":11941419,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941420,"byte_end":11941427,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941428,"byte_end":11941431,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941432,"byte_end":11941480,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941481,"byte_end":11941484,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941485,"byte_end":11941496,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941497,"byte_end":11941523,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941524,"byte_end":11941574,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941575,"byte_end":11941625,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941626,"byte_end":11941676,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941677,"byte_end":11941680,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941681,"byte_end":11941701,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941702,"byte_end":11941732,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941733,"byte_end":11941763,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941764,"byte_end":11941794,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941795,"byte_end":11941802,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941803,"byte_end":11941806,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941807,"byte_end":11941880,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941881,"byte_end":11941955,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11941956,"byte_end":11942030,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942031,"byte_end":11942104,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942105,"byte_end":11942181,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942182,"byte_end":11942215,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942216,"byte_end":11942219,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942220,"byte_end":11942236,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942237,"byte_end":11942240,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942241,"byte_end":11942315,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942316,"byte_end":11942383,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942384,"byte_end":11942387,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942388,"byte_end":11942395,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942396,"byte_end":11942427,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942428,"byte_end":11942478,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942479,"byte_end":11942520,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942521,"byte_end":11942556,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942557,"byte_end":11942605,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942606,"byte_end":11942637,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942638,"byte_end":11942685,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942686,"byte_end":11942732,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942733,"byte_end":11942755,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942756,"byte_end":11942763,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942764,"byte_end":11942786,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942787,"byte_end":11942794,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942795,"byte_end":11942798,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942799,"byte_end":11942847,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942848,"byte_end":11942851,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942852,"byte_end":11942863,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942864,"byte_end":11942920,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942921,"byte_end":11942982,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11942983,"byte_end":11943044,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943045,"byte_end":11943106,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943107,"byte_end":11943114,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943115,"byte_end":11943118,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943119,"byte_end":11943193,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943194,"byte_end":11943214,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943215,"byte_end":11943218,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943219,"byte_end":11943233,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943234,"byte_end":11943237,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943238,"byte_end":11943313,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943314,"byte_end":11943386,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943387,"byte_end":11943455,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943456,"byte_end":11943532,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943533,"byte_end":11943574,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943575,"byte_end":11943578,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943579,"byte_end":11943649,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943650,"byte_end":11943668,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943669,"byte_end":11943672,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943673,"byte_end":11943680,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943681,"byte_end":11943713,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943714,"byte_end":11943764,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943765,"byte_end":11943809,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943810,"byte_end":11943823,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943824,"byte_end":11943859,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943860,"byte_end":11943891,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943892,"byte_end":11943915,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943916,"byte_end":11943923,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943924,"byte_end":11943946,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943947,"byte_end":11943954,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943955,"byte_end":11943958,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11943959,"byte_end":11944009,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944010,"byte_end":11944013,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944014,"byte_end":11944025,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944026,"byte_end":11944059,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944060,"byte_end":11944093,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944094,"byte_end":11944127,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944128,"byte_end":11944135,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944136,"byte_end":11944139,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944140,"byte_end":11944209,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944210,"byte_end":11944247,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944248,"byte_end":11944287,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944288,"byte_end":11944333,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944334,"byte_end":11944381,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944382,"byte_end":11944412,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944413,"byte_end":11944446,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945008,"byte_end":11945015,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944690,"byte_end":11944745,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944746,"byte_end":11944749,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944750,"byte_end":11944825,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944826,"byte_end":11944906,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11944907,"byte_end":11944966,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945686,"byte_end":11945711,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945601,"byte_end":11945674,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946056,"byte_end":11946076,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945732,"byte_end":11945806,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945807,"byte_end":11945810,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945811,"byte_end":11945890,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945891,"byte_end":11945934,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945935,"byte_end":11945938,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945939,"byte_end":11945992,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945993,"byte_end":11945996,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11945997,"byte_end":11946027,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946420,"byte_end":11946423,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946329,"byte_end":11946408,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946650,"byte_end":11946657,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946547,"byte_end":11946622,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946627,"byte_end":11946638,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946879,"byte_end":11946895,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946707,"byte_end":11946748,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946753,"byte_end":11946756,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946761,"byte_end":11946834,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946839,"byte_end":11946867,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11947316,"byte_end":11947336,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946960,"byte_end":11946994,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946999,"byte_end":11947002,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11947007,"byte_end":11947077,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11947082,"byte_end":11947157,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11947162,"byte_end":11947234,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11947239,"byte_end":11947304,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952591,"byte_end":11952594,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952049,"byte_end":11952124,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952129,"byte_end":11952140,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952145,"byte_end":11952148,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952153,"byte_end":11952167,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952172,"byte_end":11952175,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952180,"byte_end":11952187,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952192,"byte_end":11952223,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952228,"byte_end":11952276,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952281,"byte_end":11952284,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952289,"byte_end":11952330,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952335,"byte_end":11952370,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952375,"byte_end":11952406,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952411,"byte_end":11952442,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952447,"byte_end":11952476,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952481,"byte_end":11952501,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952506,"byte_end":11952528,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952533,"byte_end":11952540,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952545,"byte_end":11952567,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952572,"byte_end":11952579,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953779,"byte_end":11953789,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953258,"byte_end":11953307,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953312,"byte_end":11953315,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953320,"byte_end":11953352,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953357,"byte_end":11953360,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953365,"byte_end":11953433,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953438,"byte_end":11953441,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953446,"byte_end":11953460,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953465,"byte_end":11953468,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953473,"byte_end":11953480,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953485,"byte_end":11953516,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953521,"byte_end":11953569,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953574,"byte_end":11953577,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953582,"byte_end":11953623,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953628,"byte_end":11953663,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953668,"byte_end":11953689,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953694,"byte_end":11953716,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953721,"byte_end":11953728,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953733,"byte_end":11953755,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953760,"byte_end":11953767,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954421,"byte_end":11954434,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953888,"byte_end":11953940,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953945,"byte_end":11953948,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953953,"byte_end":11953991,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11953996,"byte_end":11953999,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954004,"byte_end":11954072,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954077,"byte_end":11954080,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954085,"byte_end":11954099,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954104,"byte_end":11954107,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954112,"byte_end":11954119,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954124,"byte_end":11954155,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954160,"byte_end":11954208,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954213,"byte_end":11954216,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954221,"byte_end":11954262,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954267,"byte_end":11954302,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954307,"byte_end":11954331,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954336,"byte_end":11954358,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954363,"byte_end":11954370,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954375,"byte_end":11954397,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954402,"byte_end":11954409,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955067,"byte_end":11955080,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954534,"byte_end":11954586,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954591,"byte_end":11954594,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954599,"byte_end":11954637,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954642,"byte_end":11954645,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954650,"byte_end":11954718,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954723,"byte_end":11954726,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954731,"byte_end":11954745,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954750,"byte_end":11954753,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954758,"byte_end":11954765,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954770,"byte_end":11954801,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954806,"byte_end":11954854,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954859,"byte_end":11954862,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954867,"byte_end":11954908,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954913,"byte_end":11954948,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954953,"byte_end":11954977,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11954982,"byte_end":11955004,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955009,"byte_end":11955016,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955021,"byte_end":11955043,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955048,"byte_end":11955055,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956161,"byte_end":11956177,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955249,"byte_end":11955278,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955283,"byte_end":11955286,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955291,"byte_end":11955363,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955368,"byte_end":11955393,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955398,"byte_end":11955401,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955406,"byte_end":11955478,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955483,"byte_end":11955552,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955557,"byte_end":11955630,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955635,"byte_end":11955647,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955652,"byte_end":11955655,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955660,"byte_end":11955735,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955740,"byte_end":11955801,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955806,"byte_end":11955809,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955814,"byte_end":11955828,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955833,"byte_end":11955836,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955841,"byte_end":11955848,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955853,"byte_end":11955884,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955889,"byte_end":11955937,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955942,"byte_end":11955945,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955950,"byte_end":11955991,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11955996,"byte_end":11956031,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956036,"byte_end":11956071,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956076,"byte_end":11956098,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956103,"byte_end":11956110,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956115,"byte_end":11956137,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956142,"byte_end":11956149,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956838,"byte_end":11956857,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956274,"byte_end":11956337,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956342,"byte_end":11956345,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956350,"byte_end":11956401,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956406,"byte_end":11956409,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956414,"byte_end":11956482,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956487,"byte_end":11956490,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956495,"byte_end":11956509,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956514,"byte_end":11956517,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956522,"byte_end":11956529,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956534,"byte_end":11956565,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956570,"byte_end":11956618,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956623,"byte_end":11956626,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956631,"byte_end":11956672,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956677,"byte_end":11956712,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956717,"byte_end":11956748,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956753,"byte_end":11956775,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956780,"byte_end":11956787,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956792,"byte_end":11956814,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11956819,"byte_end":11956826,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957516,"byte_end":11957535,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957026,"byte_end":11957092,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957097,"byte_end":11957100,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957105,"byte_end":11957160,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957165,"byte_end":11957168,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957173,"byte_end":11957187,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957192,"byte_end":11957195,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957200,"byte_end":11957207,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957212,"byte_end":11957243,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957248,"byte_end":11957296,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957301,"byte_end":11957304,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957309,"byte_end":11957350,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957355,"byte_end":11957390,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957395,"byte_end":11957426,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957431,"byte_end":11957453,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957458,"byte_end":11957465,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957470,"byte_end":11957492,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957497,"byte_end":11957504,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958089,"byte_end":11958106,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957638,"byte_end":11957711,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957716,"byte_end":11957734,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957739,"byte_end":11957742,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957747,"byte_end":11957761,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957766,"byte_end":11957769,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957774,"byte_end":11957781,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957786,"byte_end":11957817,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957822,"byte_end":11957870,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957875,"byte_end":11957878,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957883,"byte_end":11957924,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957929,"byte_end":11957964,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11957969,"byte_end":11957999,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958004,"byte_end":11958026,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958031,"byte_end":11958038,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958043,"byte_end":11958065,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958070,"byte_end":11958077,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958756,"byte_end":11958764,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958207,"byte_end":11958270,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958275,"byte_end":11958278,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958283,"byte_end":11958344,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958349,"byte_end":11958352,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958357,"byte_end":11958411,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958416,"byte_end":11958419,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958424,"byte_end":11958438,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958443,"byte_end":11958446,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958451,"byte_end":11958458,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958463,"byte_end":11958494,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958499,"byte_end":11958547,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958552,"byte_end":11958555,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958560,"byte_end":11958601,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958606,"byte_end":11958641,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958646,"byte_end":11958666,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958671,"byte_end":11958693,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958698,"byte_end":11958705,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958710,"byte_end":11958732,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958737,"byte_end":11958744,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959284,"byte_end":11959293,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958862,"byte_end":11958925,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958930,"byte_end":11958933,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958938,"byte_end":11958952,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958957,"byte_end":11958960,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958965,"byte_end":11958972,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11958977,"byte_end":11959025,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959030,"byte_end":11959051,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959056,"byte_end":11959091,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959096,"byte_end":11959127,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959132,"byte_end":11959163,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959168,"byte_end":11959197,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959202,"byte_end":11959222,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959227,"byte_end":11959248,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959253,"byte_end":11959260,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959265,"byte_end":11959272,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959949,"byte_end":11959957,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959445,"byte_end":11959498,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959503,"byte_end":11959506,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959511,"byte_end":11959525,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959530,"byte_end":11959533,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959538,"byte_end":11959545,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959550,"byte_end":11959581,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959586,"byte_end":11959634,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959639,"byte_end":11959642,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959647,"byte_end":11959688,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959693,"byte_end":11959728,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959733,"byte_end":11959764,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959769,"byte_end":11959800,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959805,"byte_end":11959834,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959839,"byte_end":11959859,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959864,"byte_end":11959886,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959891,"byte_end":11959898,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959903,"byte_end":11959925,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11959930,"byte_end":11959937,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960530,"byte_end":11960539,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960121,"byte_end":11960175,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960180,"byte_end":11960183,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960188,"byte_end":11960202,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960207,"byte_end":11960210,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960215,"byte_end":11960222,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960227,"byte_end":11960259,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960264,"byte_end":11960314,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960319,"byte_end":11960363,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960368,"byte_end":11960403,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960408,"byte_end":11960439,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960444,"byte_end":11960467,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960472,"byte_end":11960479,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960484,"byte_end":11960506,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960511,"byte_end":11960518,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961148,"byte_end":11961158,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960700,"byte_end":11960749,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960754,"byte_end":11960757,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960762,"byte_end":11960776,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960781,"byte_end":11960784,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960789,"byte_end":11960796,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960801,"byte_end":11960846,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960851,"byte_end":11960901,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960906,"byte_end":11960962,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960967,"byte_end":11960980,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11960985,"byte_end":11961020,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961025,"byte_end":11961056,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961061,"byte_end":11961085,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961090,"byte_end":11961097,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961102,"byte_end":11961124,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961129,"byte_end":11961136,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11962537,"byte_end":11962547,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11962294,"byte_end":11962381,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11962382,"byte_end":11962385,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11962386,"byte_end":11962424,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11962425,"byte_end":11962463,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963647,"byte_end":11963650,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963228,"byte_end":11963288,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963293,"byte_end":11963296,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963301,"byte_end":11963311,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963316,"byte_end":11963319,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963324,"byte_end":11963396,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963401,"byte_end":11963474,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963479,"byte_end":11963546,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963551,"byte_end":11963554,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963559,"byte_end":11963635,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964781,"byte_end":11964800,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963808,"byte_end":11963868,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963873,"byte_end":11963876,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963881,"byte_end":11963944,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963949,"byte_end":11964027,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964032,"byte_end":11964099,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964104,"byte_end":11964176,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964181,"byte_end":11964251,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964256,"byte_end":11964279,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964284,"byte_end":11964287,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964292,"byte_end":11964302,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964307,"byte_end":11964310,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964315,"byte_end":11964390,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964395,"byte_end":11964468,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964473,"byte_end":11964549,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964554,"byte_end":11964627,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964632,"byte_end":11964702,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964707,"byte_end":11964710,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964715,"byte_end":11964769,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965366,"byte_end":11965376,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964928,"byte_end":11964978,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964983,"byte_end":11964986,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11964991,"byte_end":11964998,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965003,"byte_end":11965022,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965027,"byte_end":11965065,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965070,"byte_end":11965073,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965078,"byte_end":11965112,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965117,"byte_end":11965164,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965169,"byte_end":11965176,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965181,"byte_end":11965188,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965193,"byte_end":11965231,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965236,"byte_end":11965239,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965244,"byte_end":11965297,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965302,"byte_end":11965342,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965347,"byte_end":11965354,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969701,"byte_end":11969722,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969655,"byte_end":11969696,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969757,"byte_end":11969759,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969728,"byte_end":11969752,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969633,"byte_end":11969648,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969551,"byte_end":11969606,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971681,"byte_end":11971698,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970495,"byte_end":11970636,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970637,"byte_end":11970640,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970641,"byte_end":11970679,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970680,"byte_end":11970718,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970719,"byte_end":11970722,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970723,"byte_end":11970736,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970737,"byte_end":11970804,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970805,"byte_end":11970808,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970809,"byte_end":11970842,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970843,"byte_end":11970872,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970873,"byte_end":11970876,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970877,"byte_end":11970884,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970885,"byte_end":11970941,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970942,"byte_end":11970976,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970977,"byte_end":11970980,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970981,"byte_end":11970986,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11970987,"byte_end":11971034,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971035,"byte_end":11971088,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971089,"byte_end":11971166,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971167,"byte_end":11971202,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971203,"byte_end":11971224,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971225,"byte_end":11971275,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971276,"byte_end":11971339,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971340,"byte_end":11971403,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971404,"byte_end":11971467,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971468,"byte_end":11971524,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971525,"byte_end":11971574,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971575,"byte_end":11971587,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971588,"byte_end":11971595,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971596,"byte_end":11971603,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11971604,"byte_end":11971607,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973033,"byte_end":11973036,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972591,"byte_end":11972659,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972664,"byte_end":11972667,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972672,"byte_end":11972682,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972687,"byte_end":11972690,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972695,"byte_end":11972774,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972779,"byte_end":11972853,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972858,"byte_end":11972925,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972930,"byte_end":11972933,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972938,"byte_end":11973021,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974347,"byte_end":11974366,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973316,"byte_end":11973384,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973389,"byte_end":11973392,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973397,"byte_end":11973467,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973472,"byte_end":11973558,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973563,"byte_end":11973633,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973638,"byte_end":11973715,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973720,"byte_end":11973790,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973795,"byte_end":11973818,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973823,"byte_end":11973826,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973831,"byte_end":11973841,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973846,"byte_end":11973849,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973854,"byte_end":11973936,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11973941,"byte_end":11974014,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974019,"byte_end":11974096,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974101,"byte_end":11974174,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974179,"byte_end":11974254,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974259,"byte_end":11974262,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974267,"byte_end":11974335,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11975154,"byte_end":11975164,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974623,"byte_end":11974674,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974679,"byte_end":11974682,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974687,"byte_end":11974694,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974699,"byte_end":11974718,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974723,"byte_end":11974768,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974773,"byte_end":11974776,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974781,"byte_end":11974853,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974858,"byte_end":11974905,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974910,"byte_end":11974917,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974922,"byte_end":11974929,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974934,"byte_end":11974979,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974984,"byte_end":11974987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11974992,"byte_end":11975085,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11975090,"byte_end":11975130,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11975135,"byte_end":11975142,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979259,"byte_end":11979281,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979212,"byte_end":11979254,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979317,"byte_end":11979319,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979287,"byte_end":11979312,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979183,"byte_end":11979205,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979100,"byte_end":11979156,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1308},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1350},{"krate":0,"index":1388},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/cfg.rs","byte_start":6084,"byte_end":6106,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11979888,"byte_end":11979921,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11979922,"byte_end":11979925,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These types are often used in combination with hyper or reqwest, as they","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11979926,"byte_end":11980002,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980003,"byte_end":11980067,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980068,"byte_end":11980071,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980072,"byte_end":11980135,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/mod.rs","byte_start":11980136,"byte_end":11980175,"line_start":7,"line_end":7,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981463,"byte_end":11981471,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980540,"byte_end":11980618,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980619,"byte_end":11980622,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980623,"byte_end":11980652,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980653,"byte_end":11980656,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980657,"byte_end":11980670,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980671,"byte_end":11980674,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980675,"byte_end":11980682,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980683,"byte_end":11980716,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980717,"byte_end":11980748,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980749,"byte_end":11980775,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980776,"byte_end":11980825,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980826,"byte_end":11980846,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980847,"byte_end":11980893,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980894,"byte_end":11980897,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980898,"byte_end":11980976,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980977,"byte_end":11980990,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11980991,"byte_end":11981095,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981096,"byte_end":11981099,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981100,"byte_end":11981134,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981135,"byte_end":11981157,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981158,"byte_end":11981161,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981162,"byte_end":11981172,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981173,"byte_end":11981192,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981193,"byte_end":11981246,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981247,"byte_end":11981250,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981251,"byte_end":11981270,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981271,"byte_end":11981289,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981290,"byte_end":11981299,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981300,"byte_end":11981305,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981306,"byte_end":11981309,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981310,"byte_end":11981354,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981355,"byte_end":11981379,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981380,"byte_end":11981420,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981421,"byte_end":11981433,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981434,"byte_end":11981441,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981442,"byte_end":11981449,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1611},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983349,"byte_end":11983361,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983845,"byte_end":11983848,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983638,"byte_end":11983699,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983704,"byte_end":11983740,"line_start":58,"line_end":58,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983745,"byte_end":11983748,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983753,"byte_end":11983792,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983797,"byte_end":11983833,"line_start":61,"line_end":61,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11986793,"byte_end":11986805,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987422,"byte_end":11987425,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987004,"byte_end":11987084,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987089,"byte_end":11987092,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987097,"byte_end":11987173,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987178,"byte_end":11987249,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987254,"byte_end":11987299,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987304,"byte_end":11987307,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987312,"byte_end":11987347,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987352,"byte_end":11987375,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987380,"byte_end":11987410,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987941,"byte_end":11987948,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987804,"byte_end":11987850,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987855,"byte_end":11987858,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987863,"byte_end":11987929,"line_start":99,"line_end":99,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988140,"byte_end":11988147,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987995,"byte_end":11988049,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988054,"byte_end":11988057,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988062,"byte_end":11988128,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988358,"byte_end":11988369,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988206,"byte_end":11988267,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988272,"byte_end":11988275,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988280,"byte_end":11988346,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988600,"byte_end":11988610,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988449,"byte_end":11988512,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988517,"byte_end":11988520,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988525,"byte_end":11988588,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":375}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1532},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1540},{"krate":0,"index":1553},{"krate":0,"index":1549},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1540},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1546}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2433,"byte_end":2446,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\n                     B: BufMut>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1204,"byte_end":1289,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1294,"byte_end":1297,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1302,"byte_end":1328,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1341,"byte_end":1354,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1367,"byte_end":1374,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1379,"byte_end":1412,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1417,"byte_end":1448,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1453,"byte_end":1479,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1484,"byte_end":1538,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1543,"byte_end":1576,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1581,"byte_end":1603,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1608,"byte_end":1628,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1633,"byte_end":1679,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1684,"byte_end":1687,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1692,"byte_end":1770,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1775,"byte_end":1788,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1793,"byte_end":1897,"line_start":85,"line_end":85,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1902,"byte_end":1905,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1910,"byte_end":1944,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1949,"byte_end":1971,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1976,"byte_end":1979,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1984,"byte_end":1994,"line_start":90,"line_end":90,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":1999,"byte_end":2018,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2023,"byte_end":2109,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2114,"byte_end":2117,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2122,"byte_end":2141,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2146,"byte_end":2164,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2169,"byte_end":2178,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2183,"byte_end":2188,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2193,"byte_end":2196,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2201,"byte_end":2245,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2250,"byte_end":2274,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2279,"byte_end":2319,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2324,"byte_end":2336,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2341,"byte_end":2348,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":2353,"byte_end":2360,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4734,"byte_end":4748,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\n                      B: Buf>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3362,"byte_end":3430,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3435,"byte_end":3494,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3499,"byte_end":3502,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3507,"byte_end":3584,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3589,"byte_end":3609,"line_start":140,"line_end":140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3614,"byte_end":3617,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3622,"byte_end":3636,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3641,"byte_end":3644,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3649,"byte_end":3720,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3725,"byte_end":3737,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3742,"byte_end":3745,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3750,"byte_end":3763,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3768,"byte_end":3807,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3812,"byte_end":3830,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3835,"byte_end":3859,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3864,"byte_end":3867,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3872,"byte_end":3891,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3896,"byte_end":3920,"line_start":153,"line_end":153,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3925,"byte_end":3947,"line_start":154,"line_end":154,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3952,"byte_end":3985,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3990,"byte_end":3993,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":3998,"byte_end":4016,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4021,"byte_end":4060,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4065,"byte_end":4119,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4124,"byte_end":4176,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4181,"byte_end":4184,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4189,"byte_end":4259,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4264,"byte_end":4284,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4289,"byte_end":4324,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4329,"byte_end":4412,"line_start":165,"line_end":165,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4417,"byte_end":4426,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4431,"byte_end":4434,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4439,"byte_end":4453,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4458,"byte_end":4463,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4468,"byte_end":4475,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4480,"byte_end":4483,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4488,"byte_end":4511,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4516,"byte_end":4557,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4562,"byte_end":4591,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":4596,"byte_end":4661,"line_start":175,"line_end":175,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890017,"byte_end":11890027,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890178,"byte_end":11890188,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890515,"byte_end":11890525,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11900703,"byte_end":11900712,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11900912,"byte_end":11900922,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901073,"byte_end":11901082,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901405,"byte_end":11901415,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901661,"byte_end":11901669,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901766,"byte_end":11901774,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901885,"byte_end":11901893,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901993,"byte_end":11902001,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11902111,"byte_end":11902121,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11907703,"byte_end":11907713,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910549,"byte_end":11910555,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914367,"byte_end":11914373,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919688,"byte_end":11919694,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11920010,"byte_end":11920016,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11920731,"byte_end":11920737,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921777,"byte_end":11921788,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11922715,"byte_end":11922725,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923614,"byte_end":11923624,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925721,"byte_end":11925731,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11926044,"byte_end":11926054,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11926780,"byte_end":11926790,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11927769,"byte_end":11927780,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928136,"byte_end":11928147,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11930256,"byte_end":11930267,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11931031,"byte_end":11931042,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11931283,"byte_end":11931294,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946302,"byte_end":11946322,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11949655,"byte_end":11949675,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11950561,"byte_end":11950581,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11951922,"byte_end":11951942,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952035,"byte_end":11952042,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961641,"byte_end":11961648,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961774,"byte_end":11961799,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961957,"byte_end":11961982,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11962117,"byte_end":11962142,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963211,"byte_end":11963221,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965763,"byte_end":11965773,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969149,"byte_end":11969159,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969482,"byte_end":11969492,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969797,"byte_end":11969812,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11970094,"byte_end":11970109,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11970226,"byte_end":11970241,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972567,"byte_end":11972584,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11975233,"byte_end":11975250,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11978542,"byte_end":11978559,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11978923,"byte_end":11978940,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979357,"byte_end":11979379,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979708,"byte_end":11979730,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979861,"byte_end":11979883,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981700,"byte_end":11981709,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983616,"byte_end":11983628,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11984010,"byte_end":11984022,"line_start":70,"line_end":70,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11986896,"byte_end":11986908,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987779,"byte_end":11987791,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988680,"byte_end":11988692,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11989453,"byte_end":11989465,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/mod.rs","byte_start":11888429,"byte_end":11888445,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":798,"byte_end":800,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1308}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890017,"byte_end":11890027,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890178,"byte_end":11890188,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/bytes_codec.rs","byte_start":11890515,"byte_end":11890525,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11900703,"byte_end":11900712,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11900912,"byte_end":11900922,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901073,"byte_end":11901082,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901405,"byte_end":11901415,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901661,"byte_end":11901669,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901766,"byte_end":11901774,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901885,"byte_end":11901893,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11901993,"byte_end":11902001,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11902111,"byte_end":11902121,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1778},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_impl.rs","byte_start":11907703,"byte_end":11907713,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1778},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11910549,"byte_end":11910555,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11914367,"byte_end":11914373,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11919688,"byte_end":11919694,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1728},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11920010,"byte_end":11920016,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1728},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11920731,"byte_end":11920737,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1728},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed.rs","byte_start":11921777,"byte_end":11921788,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11922715,"byte_end":11922725,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11923614,"byte_end":11923624,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11925721,"byte_end":11925731,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1687},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11926044,"byte_end":11926054,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1687},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_read.rs","byte_start":11926780,"byte_end":11926790,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11927769,"byte_end":11927780,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11928136,"byte_end":11928147,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11930256,"byte_end":11930267,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1646},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11931031,"byte_end":11931042,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1646},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/framed_write.rs","byte_start":11931283,"byte_end":11931294,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1646},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11946302,"byte_end":11946322,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11949655,"byte_end":11949675,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11950561,"byte_end":11950581,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11951922,"byte_end":11951942,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11952035,"byte_end":11952042,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961641,"byte_end":11961648,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961774,"byte_end":11961799,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11961957,"byte_end":11961982,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/length_delimited.rs","byte_start":11962117,"byte_end":11962142,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11963211,"byte_end":11963221,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11965763,"byte_end":11965773,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969149,"byte_end":11969159,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969482,"byte_end":11969492,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11969797,"byte_end":11969812,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11970094,"byte_end":11970109,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/lines_codec.rs","byte_start":11970226,"byte_end":11970241,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11972567,"byte_end":11972584,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11975233,"byte_end":11975250,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11978542,"byte_end":11978559,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11978923,"byte_end":11978940,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979357,"byte_end":11979379,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979708,"byte_end":11979730,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/codec/any_delimiter_codec.rs","byte_start":11979861,"byte_end":11979883,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1300},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/read_buf.rs","byte_start":11981700,"byte_end":11981709,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11983616,"byte_end":11983628,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/reader_stream.rs","byte_start":11984010,"byte_end":11984022,"line_start":70,"line_end":70,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1611},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11986896,"byte_end":11986908,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11987779,"byte_end":11987791,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11988680,"byte_end":11988692,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1564},"to":{"krate":20,"index":221}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/io/stream_reader.rs","byte_start":11989453,"byte_end":11989465,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1564},"to":{"krate":20,"index":179}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1532},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":286},"to":{"krate":18,"index":96}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":11835}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1540},"to":{"krate":20,"index":221}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1540},"to":{"krate":20,"index":179}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1540},"to":{"krate":20,"index":260}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1540},"to":{"krate":20,"index":300}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.6/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1540},"to":{"krate":18,"index":96}}]}