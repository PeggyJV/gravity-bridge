{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1","program":"/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","password_hash","--edition=2018","/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"rand_core\"","-C","metadata=c0c38745c1fed1b5","-C","extra-filename=-c0c38745c1fed1b5","--out-dir","/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","-L","dependency=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps","--extern","base64ct=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libbase64ct-7d4c79409a52612f.rmeta","--extern","rand_core=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/librand_core-7aef63c7b7031ab2.rmeta","--extern","subtle=/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libsubtle-e2f94bf36a34fd9e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hannydevelop/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hannydevelop/gravity-bridge/orchestrator/gorc/target/rls/debug/deps/libpassword_hash-c0c38745c1fed1b5.rmeta"},"prelude":{"crate_id":{"name":"password_hash","disambiguator":[2457512509526958121,6642540692331226433]},"crate_root":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src","external_crates":[{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9461532395471723626,17649752992216879242]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13102141027849022754,10844956084955862736]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10802439125609973726,12056872925128751599]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","num":4,"id":{"name":"base64ct","disambiguator":[559631286589222384,4087918704850658821]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","num":5,"id":{"name":"alloc","disambiguator":[10377672983135696745,6222977342718677897]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","num":6,"id":{"name":"subtle","disambiguator":[16473552840971905471,13383263026665092334]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":7,"id":{"name":"rand_core","disambiguator":[8139118517281542286,12191278135173016247]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":8,"id":{"name":"std","disambiguator":[16244594805693024294,13769610595479902485]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":9,"id":{"name":"libc","disambiguator":[12556834526510219591,10145975442274216472]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":10,"id":{"name":"unwind","disambiguator":[1920608168423631117,11305390197699278538]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":11,"id":{"name":"cfg_if","disambiguator":[14153420169627805217,3922141685752559776]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8992588241071530954,2055378767109441873]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6584924783227651491,7746393078969085327]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[16866912217167506759,12404743428505733407]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":15,"id":{"name":"addr2line","disambiguator":[5891363554589716223,15364815277334307594]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":16,"id":{"name":"gimli","disambiguator":[15133864894733438722,17571364763769299029]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":17,"id":{"name":"object","disambiguator":[5376887079506337588,3050710466351220396]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[3374711390048344050,17348866986865533303]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":19,"id":{"name":"adler","disambiguator":[16389676859204901274,11575250456210569958]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[4785159557203218631,3838940703516147450]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":21,"id":{"name":"getrandom","disambiguator":[13811811233254902674,13880380393548880828]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":22,"id":{"name":"cfg_if","disambiguator":[1132953217716025813,4978080957525979457]}},{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","num":23,"id":{"name":"libc","disambiguator":[6097756368536057402,9635002418138546655]}}],"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":0,"byte_end":11978,"line_start":1,"line_end":377,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2118,"byte_end":2126,"line_start":62,"line_end":62,"column_start":15,"column_end":23},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":244},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2141,"byte_end":2149,"line_start":63,"line_end":63,"column_start":14,"column_end":22},"alias_span":null,"name":"B64Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2151,"byte_end":2156,"line_start":63,"line_end":63,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2158,"byte_end":2164,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2178,"byte_end":2183,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2197,"byte_end":2203,"line_start":65,"line_end":65,"column_start":13,"column_end":19},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2217,"byte_end":2229,"line_start":66,"line_end":66,"column_start":13,"column_end":25},"alias_span":null,"name":"ParamsString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2242,"byte_end":2246,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"alias_span":null,"name":"Salt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2248,"byte_end":2258,"line_start":67,"line_end":67,"column_start":18,"column_end":28},"alias_span":null,"name":"SaltString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2273,"byte_end":2280,"line_start":68,"line_end":68,"column_start":13,"column_end":20},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2282,"byte_end":2287,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":0,"byte_end":11978,"line_start":1,"line_end":377,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":29},{"krate":0,"index":44},{"krate":0,"index":90},{"krate":0,"index":162},{"krate":0,"index":277},{"krate":0,"index":359},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":707},{"krate":0,"index":728},{"krate":0,"index":725},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":486},{"krate":0,"index":498},{"krate":0,"index":502}],"decl_id":null,"docs":" This crate defines a set of traits which describe the functionality of\n [password hashing algorithms].","sig":null,"attributes":[{"value":"/ This crate defines a set of traits which describe the functionality of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ [password hashing algorithms].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":75,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":110,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Provides a `no_std`-friendly implementation of the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":114,"byte_end":168,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/ [Password Hashing Competition (PHC) string format specification][PHC]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":169,"byte_end":242,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ (a well-defined subset of the [Modular Crypt Format a.k.a. MCF][MCF]) which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":243,"byte_end":322,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ works in conjunction with the traits this crate defines.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":323,"byte_end":383,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":384,"byte_end":387,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Supported Crates","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":388,"byte_end":410,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":411,"byte_end":414,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [RustCrypto/password-hashes] for algorithm implementations which use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":415,"byte_end":491,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ this crate for interoperability:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":492,"byte_end":528,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":529,"byte_end":532,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - [`argon2`] - Argon2 memory hard key derivation function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":533,"byte_end":594,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ - [`pbkdf2`] - Password-Based Key Derivation Function v2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":595,"byte_end":655,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ - [`scrypt`] - scrypt key derivation function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":656,"byte_end":705,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":706,"byte_end":709,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":710,"byte_end":721,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":722,"byte_end":725,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate represents password hashes using the [`PasswordHash`] type, which","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":726,"byte_end":806,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ represents a parsed \"PHC string\" with the following format:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":807,"byte_end":870,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":871,"byte_end":874,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":875,"byte_end":886,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":887,"byte_end":965,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":966,"byte_end":973,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":974,"byte_end":977,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ For more information, please see the documentation for [`PasswordHash`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":978,"byte_end":1054,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [password hashing algorithms]: https://en.wikipedia.org/wiki/Cryptographic_hash_function#Password_verification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1059,"byte_end":1173,"line_start":29,"line_end":29,"column_start":1,"column_end":115}},{"value":"/ [PHC]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1174,"byte_end":1254,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1255,"byte_end":1332,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ [RustCrypto/password-hashes]: https://github.com/RustCrypto/password-hashes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1333,"byte_end":1412,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ [`argon2`]: https://docs.rs/argon2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1413,"byte_end":1451,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ [`pbkdf2`]: https://docs.rs/pbkdf2","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1452,"byte_end":1490,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ [`scrypt`]: https://docs.rs/scrypt","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1491,"byte_end":1529,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"no_std","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1531,"byte_end":1541,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1837,"byte_end":1860,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":1861,"byte_end":1901,"line_start":45,"line_end":45,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12508,"byte_end":12511,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"B64","qualname":"::encoding::Encoding::B64","value":"Encoding::B64","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" \"B64\" encoding: standard Base64 without padding.","sig":null,"attributes":[{"value":"/ \"B64\" encoding: standard Base64 without padding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12230,"byte_end":12282,"line_start":9,"line_end":9,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12287,"byte_end":12290,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12295,"byte_end":12306,"line_start":11,"line_end":11,"column_start":5,"column_end":16}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12311,"byte_end":12355,"line_start":12,"line_end":12,"column_start":5,"column_end":49}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12360,"byte_end":12407,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12412,"byte_end":12419,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ <https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#b64>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12424,"byte_end":12503,"line_start":15,"line_end":15,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12676,"byte_end":12682,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Bcrypt","qualname":"::encoding::Encoding::Bcrypt","value":"Encoding::Bcrypt","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" bcrypt encoding.","sig":null,"attributes":[{"value":"/ bcrypt encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12518,"byte_end":12538,"line_start":18,"line_end":18,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12543,"byte_end":12546,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12551,"byte_end":12562,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"/ ./         [A-Z]      [a-z]     [0-9]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12567,"byte_end":12608,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/ 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12613,"byte_end":12659,"line_start":22,"line_end":22,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12664,"byte_end":12671,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":510},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12830,"byte_end":12835,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::encoding::Encoding::Crypt","value":"Encoding::Crypt","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" `crypt(3)` encoding.","sig":null,"attributes":[{"value":"/ `crypt(3)` encoding.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12689,"byte_end":12713,"line_start":26,"line_end":26,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12718,"byte_end":12721,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12726,"byte_end":12737,"line_start":28,"line_end":28,"column_start":5,"column_end":16}},{"value":"/ [.-9]      [A-Z]      [a-z]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12742,"byte_end":12773,"line_start":29,"line_end":29,"column_start":5,"column_end":36}},{"value":"/ 0x2e-0x39, 0x41-0x5a, 0x61-0x7a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12778,"byte_end":12813,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12818,"byte_end":12825,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":505},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12215,"byte_end":12223,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::encoding::Encoding","value":"pub enum Encoding { B64, Bcrypt, Crypt, }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510}],"decl_id":null,"docs":" Base64 encoding variants.\n","sig":null,"attributes":[{"value":"/ Base64 encoding variants.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12114,"byte_end":12143,"line_start":6,"line_end":6,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13018,"byte_end":13024,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"pub fn decode<impl AsRef<[u8]>: AsRef<[u8]>>(Self, impl AsRef<[u8]>,\n                                             &mut [u8])\n-> Result<&[u8], B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64 string into the provided destination buffer.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into the provided destination buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12942,"byte_end":13006,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13488,"byte_end":13494,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"pub fn encode<'a>(Self, &[u8], &'a mut [u8]) -> Result<&'a str, B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode the input byte slice as Base64.","sig":null,"attributes":[{"value":"/ Encode the input byte slice as Base64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13307,"byte_end":13349,"line_start":51,"line_end":51,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13354,"byte_end":13357,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Writes the result into the provided destination slice, returning an","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13362,"byte_end":13433,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ ASCII-encoded Base64 string value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13438,"byte_end":13476,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13882,"byte_end":13893,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"<Encoding>::encoded_len","value":"pub fn encoded_len(Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of Base64 produced by encoding the given bytes.\n","sig":null,"attributes":[{"value":"/ Get the length of Base64 produced by encoding the given bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":13804,"byte_end":13870,"line_start":64,"line_end":64,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14235,"byte_end":14241,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14209,"byte_end":14225,"line_start":7,"line_end":7,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":528},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14406,"byte_end":14415,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"Algorithm","qualname":"::errors::Error::Algorithm","value":"Error::Algorithm","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Unsupported algorithm.\n","sig":null,"attributes":[{"value":"/ Unsupported algorithm.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14375,"byte_end":14401,"line_start":13,"line_end":13,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14452,"byte_end":14455,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"B64","qualname":"::errors::Error::B64","value":"Error::B64(B64Error)","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" \"B64\" encoding error.\n","sig":null,"attributes":[{"value":"/ \"B64\" encoding error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14422,"byte_end":14447,"line_start":16,"line_end":16,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14501,"byte_end":14507,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::errors::Error::Crypto","value":"Error::Crypto","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Cryptographic error.\n","sig":null,"attributes":[{"value":"/ Cryptographic error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14472,"byte_end":14496,"line_start":19,"line_end":19,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14555,"byte_end":14569,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"name":"OutputTooShort","qualname":"::errors::Error::OutputTooShort","value":"Error::OutputTooShort","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Output too short (min 10-bytes).\n","sig":null,"attributes":[{"value":"/ Output too short (min 10-bytes).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14514,"byte_end":14550,"line_start":22,"line_end":22,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14616,"byte_end":14629,"line_start":26,"line_end":26,"column_start":5,"column_end":18},"name":"OutputTooLong","qualname":"::errors::Error::OutputTooLong","value":"Error::OutputTooLong","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Output too long (max 64-bytes).\n","sig":null,"attributes":[{"value":"/ Output too long (max 64-bytes).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14576,"byte_end":14611,"line_start":25,"line_end":25,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14682,"byte_end":14701,"line_start":29,"line_end":29,"column_start":5,"column_end":24},"name":"ParamNameDuplicated","qualname":"::errors::Error::ParamNameDuplicated","value":"Error::ParamNameDuplicated","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Duplicate parameter name encountered.\n","sig":null,"attributes":[{"value":"/ Duplicate parameter name encountered.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14636,"byte_end":14677,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14740,"byte_end":14756,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"ParamNameInvalid","qualname":"::errors::Error::ParamNameInvalid","value":"Error::ParamNameInvalid","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Invalid parameter name.\n","sig":null,"attributes":[{"value":"/ Invalid parameter name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14708,"byte_end":14735,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14796,"byte_end":14813,"line_start":35,"line_end":35,"column_start":5,"column_end":22},"name":"ParamValueInvalid","qualname":"::errors::Error::ParamValueInvalid","value":"Error::ParamValueInvalid","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Invalid parameter value.\n","sig":null,"attributes":[{"value":"/ Invalid parameter value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14763,"byte_end":14791,"line_start":34,"line_end":34,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14867,"byte_end":14884,"line_start":38,"line_end":38,"column_start":5,"column_end":22},"name":"ParamsMaxExceeded","qualname":"::errors::Error::ParamsMaxExceeded","value":"Error::ParamsMaxExceeded","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Maximum number of parameters exceeded.\n","sig":null,"attributes":[{"value":"/ Maximum number of parameters exceeded.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14820,"byte_end":14862,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14917,"byte_end":14925,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Password","qualname":"::errors::Error::Password","value":"Error::Password","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Invalid password.\n","sig":null,"attributes":[{"value":"/ Invalid password.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14891,"byte_end":14912,"line_start":40,"line_end":40,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14990,"byte_end":15006,"line_start":44,"line_end":44,"column_start":5,"column_end":21},"name":"PhcStringInvalid","qualname":"::errors::Error::PhcStringInvalid","value":"Error::PhcStringInvalid","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Password hash string contains invalid characters.\n","sig":null,"attributes":[{"value":"/ Password hash string contains invalid characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14932,"byte_end":14985,"line_start":43,"line_end":43,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15053,"byte_end":15070,"line_start":47,"line_end":47,"column_start":5,"column_end":22},"name":"PhcStringTooShort","qualname":"::errors::Error::PhcStringTooShort","value":"Error::PhcStringTooShort","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Password hash string too short.\n","sig":null,"attributes":[{"value":"/ Password hash string too short.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15013,"byte_end":15048,"line_start":46,"line_end":46,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15116,"byte_end":15132,"line_start":50,"line_end":50,"column_start":5,"column_end":21},"name":"PhcStringTooLong","qualname":"::errors::Error::PhcStringTooLong","value":"Error::PhcStringTooLong","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Password hash string too long.\n","sig":null,"attributes":[{"value":"/ Password hash string too long.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15077,"byte_end":15111,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15163,"byte_end":15175,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"name":"SaltTooShort","qualname":"::errors::Error::SaltTooShort","value":"Error::SaltTooShort","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Salt too short.\n","sig":null,"attributes":[{"value":"/ Salt too short.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15139,"byte_end":15158,"line_start":52,"line_end":52,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15205,"byte_end":15216,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"SaltTooLong","qualname":"::errors::Error::SaltTooLong","value":"Error::SaltTooLong","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Salt too long.\n","sig":null,"attributes":[{"value":"/ Salt too long.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15182,"byte_end":15200,"line_start":55,"line_end":55,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15258,"byte_end":15265,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"Version","qualname":"::errors::Error::Version","value":"Error::Version","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Invalid algorithm version.\n","sig":null,"attributes":[{"value":"/ Invalid algorithm version.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15223,"byte_end":15253,"line_start":58,"line_end":58,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":527},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14363,"byte_end":14368,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    Algorithm,\n    B64(B64Error),\n    Crypto,\n    OutputTooShort,\n    OutputTooLong,\n    ParamNameDuplicated,\n    ParamNameInvalid,\n    ParamValueInvalid,\n    ParamsMaxExceeded,\n    Password,\n    PhcStringInvalid,\n    PhcStringTooShort,\n    PhcStringTooLong,\n    SaltTooShort,\n    SaltTooLong,\n    Version,\n}","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559}],"decl_id":null,"docs":" Password hashing errors.\n","sig":null,"attributes":[{"value":"/ Password hashing errors.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":14280,"byte_end":14308,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":573},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18571,"byte_end":18576,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm or parameter identifier.","sig":null,"attributes":[{"value":"/ Algorithm or parameter identifier.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":17964,"byte_end":18002,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18003,"byte_end":18006,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type encompasses both the \"function symbolic name\" and \"parameter name\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18007,"byte_end":18087,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ use cases as described in the [PHC string format specification][1].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18088,"byte_end":18159,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18160,"byte_end":18163,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18164,"byte_end":18181,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-z0-9-]`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18182,"byte_end":18249,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18250,"byte_end":18303,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 1 ASCII character (i.e. 1-byte)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18304,"byte_end":18357,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ - Maximum length: 32 ASCII characters (i.e. 32-bytes)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18358,"byte_end":18415,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18416,"byte_end":18419,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18420,"byte_end":18498,"line_start":33,"line_end":33,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19567,"byte_end":19570,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<Ident>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse an [`Ident`] from a string.","sig":null,"attributes":[{"value":"/ Parse an [`Ident`] from a string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19112,"byte_end":19149,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19154,"byte_end":19157,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19162,"byte_end":19174,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19179,"byte_end":19182,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Must conform to the contraints given in the type-level documentation,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19187,"byte_end":19260,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ or else it will panic.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19265,"byte_end":19291,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19296,"byte_end":19299,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use in a `const` context where instead of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19304,"byte_end":19377,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ panicking it will cause a compile error.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19382,"byte_end":19426,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19431,"byte_end":19434,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ For fallible non-panicking parsing of an [`Ident`], use the [`TryFrom`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19439,"byte_end":19514,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ impl on this type instead.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":19519,"byte_end":19549,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":20736,"byte_end":20742,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Ident>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this ident as a `str`\n","sig":null,"attributes":[{"value":"/ Borrow this ident as a `str`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":20692,"byte_end":20724,"line_start":96,"line_end":96,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28867,"byte_end":28873,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Output","qualname":"::output::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":607}],"decl_id":null,"docs":" Output from password hashing functions, i.e. the \"hash\" or \"digest\"\n as raw bytes.","sig":null,"attributes":[{"value":"/ Output from password hashing functions, i.e. the \"hash\" or \"digest\"","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24250,"byte_end":24321,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ as raw bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24322,"byte_end":24339,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24340,"byte_end":24343,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Output`] type implements the RECOMMENDED best practices described in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24344,"byte_end":24422,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ the [PHC string format specification][1], namely:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24423,"byte_end":24476,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24477,"byte_end":24480,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ > The hash output, for a verification, must be long enough to make preimage","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24481,"byte_end":24560,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ > attacks at least as hard as password guessing. To promote wide acceptance,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24561,"byte_end":24641,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ > a default output size of 256 bits (32 bytes, encoded as 43 characters) is","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24642,"byte_end":24721,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ > recommended. Function implementations SHOULD NOT allow outputs of less","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24722,"byte_end":24798,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ > than 80 bits to be used for password verification.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24799,"byte_end":24855,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24856,"byte_end":24859,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24860,"byte_end":24884,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ Per the description above, the recommended default length for an [`Output`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24885,"byte_end":24964,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of a password hashing function is **32-bytes** (256-bits).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":24965,"byte_end":25027,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25028,"byte_end":25031,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25032,"byte_end":25049,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ The above guidelines are interpreted into the following constraints:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25050,"byte_end":25122,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25123,"byte_end":25126,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **10**-bytes (80-bits)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25127,"byte_end":25171,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ - Maximum length: **64**-bytes (512-bits)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25172,"byte_end":25217,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25218,"byte_end":25221,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The specific recommendation of a 64-byte maximum length is taken as a best","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25222,"byte_end":25300,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ practice from the hash output guidelines for [Argon2 Encoding][2] given in","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25301,"byte_end":25379,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ the same document:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25380,"byte_end":25402,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25403,"byte_end":25406,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ > The hash output...length shall be between 12 and 64 bytes (16 and 86","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25407,"byte_end":25481,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ > characters, respectively). The default output length is 32 bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25482,"byte_end":25552,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ > (43 characters).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25553,"byte_end":25575,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25576,"byte_end":25579,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25580,"byte_end":25653,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 32-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25654,"byte_end":25713,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25714,"byte_end":25717,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Constant-time comparisons","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25718,"byte_end":25749,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ The [`Output`] type impls the [`ConstantTimeEq`] trait from the [`subtle`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25750,"byte_end":25828,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ crate and uses it to perform constant-time comparisons.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25829,"byte_end":25888,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25889,"byte_end":25892,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Additionally the [`PartialEq`] and [`Eq`] trait impls for [`Output`] use","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25893,"byte_end":25969,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ [`ConstantTimeEq`] when performing comparisons.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":25970,"byte_end":26021,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26022,"byte_end":26025,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Attacks on non-constant-time password hash comparisons","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26026,"byte_end":26087,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ Comparing password hashes in constant-time is known to mitigate at least","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26088,"byte_end":26164,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ one [poorly understood attack][3] involving an adversary with the following","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26165,"byte_end":26244,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ knowledge/capabilities:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26245,"byte_end":26272,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26273,"byte_end":26276,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - full knowledge of what password hashing algorithm is being used","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26277,"byte_end":26346,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/   including any relevant configurable parameters","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26347,"byte_end":26399,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ - knowledge of the salt for a particular victim","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26400,"byte_end":26451,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ - ability to accurately measure a timing side-channel on comparisons","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26452,"byte_end":26524,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/   of the password hash over the network","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26525,"byte_end":26568,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26569,"byte_end":26572,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ An attacker with the above is able to perform an offline computation of","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26573,"byte_end":26648,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ the hash for any chosen password in such a way that it will match the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26649,"byte_end":26722,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ hash computed by the server.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26723,"byte_end":26755,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26756,"byte_end":26759,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As noted above, they also measure timing variability in the server's","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26760,"byte_end":26832,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ comparison of the hash it computes for a given password and a target hash","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26833,"byte_end":26910,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ the attacker is trying to learn.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26911,"byte_end":26947,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26948,"byte_end":26951,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ When the attacker observes a hash comparison that takes longer than their","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":26952,"byte_end":27029,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ previous attempts, they learn that they guessed another byte in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27030,"byte_end":27101,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/ password hash correctly. They can leverage repeated measurements and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27102,"byte_end":27174,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ observations with different candidate passwords to learn the password","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27175,"byte_end":27248,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ hash a byte-at-a-time in a manner similar to other such timing side-channel","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27249,"byte_end":27328,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ attacks.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27329,"byte_end":27341,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27342,"byte_end":27345,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The attack may seem somewhat counterintuitive since learning prefixes of a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27346,"byte_end":27424,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ password hash does not reveal any additional information about the password","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27425,"byte_end":27504,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ itself. However, the above can be combined with an offline dictionary","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27505,"byte_end":27578,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ attack where the attacker is able to determine candidate passwords to send","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27579,"byte_end":27657,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ to the server by performing a brute force search offline and selecting","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27658,"byte_end":27732,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ candidate passwords whose hashes match the portion of the prefix they have","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27733,"byte_end":27811,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ learned so far.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27812,"byte_end":27831,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27832,"byte_end":27835,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ As the attacker learns a longer and longer prefix of the password hash,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27836,"byte_end":27911,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ they are able to more effectively eliminate candidate passwords offline as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27912,"byte_end":27990,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ part of a dictionary attack, until they eventually guess the correct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":27991,"byte_end":28063,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ password or exhaust their set of candidate passwords.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28064,"byte_end":28121,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28122,"byte_end":28125,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Mitigations","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28126,"byte_end":28144,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ While we have taken care to ensure password hashes are compared in constant","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28145,"byte_end":28224,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ time, we would also suggest preventing such attacks by using randomly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28225,"byte_end":28298,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ generated salts and keeping those salts secret.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28299,"byte_end":28350,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28351,"byte_end":28354,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`SaltString::generate`][`crate::SaltString::generate`] function can be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28355,"byte_end":28434,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ used to generate random high-entropy salt values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28435,"byte_end":28488,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28489,"byte_end":28492,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28493,"byte_end":28587,"line_start":94,"line_end":94,"column_start":1,"column_end":95}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28588,"byte_end":28682,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ [3]: https://web.archive.org/web/20130208100210/http://security-assessment.com/files/documents/presentations/TimingAttackPresentation2012.pdf","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":28683,"byte_end":28828,"line_start":96,"line_end":96,"column_start":1,"column_end":146}}]},{"kind":"Const","id":{"krate":0,"index":122},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29268,"byte_end":29278,"line_start":112,"line_end":112,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::output::Output::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Minimum length of a [`Output`] string: 10-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Output`] string: 10-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29201,"byte_end":29253,"line_start":111,"line_end":111,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29446,"byte_end":29456,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::output::Output::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] string: 64-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29297,"byte_end":29347,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29352,"byte_end":29355,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Output`] for more information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29360,"byte_end":29431,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29594,"byte_end":29608,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"name":"B64_MAX_LENGTH","qualname":"::output::Output::B64_MAX_LENGTH","value":"usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] when encoded as B64 string: 86-bytes\n (i.e. 86 ASCII characters)\n","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] when encoded as B64 string: 86-bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29475,"byte_end":29544,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ (i.e. 86 ASCII characters)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29549,"byte_end":29579,"line_start":120,"line_end":120,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29818,"byte_end":29821,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Output>::new","value":"pub fn new(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice, validating it according\n to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice, validating it according","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29657,"byte_end":29731,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29736,"byte_end":29806,"line_start":124,"line_end":124,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30170,"byte_end":30187,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"new_with_encoding","qualname":"<Output>::new_with_encoding","value":"pub fn new_with_encoding(&[u8], Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice and [`Encoding`],\n validating it according to [`Output::MIN_LENGTH`] and\n [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice and [`Encoding`],","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29984,"byte_end":30051,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/ validating it according to [`Output::MIN_LENGTH`] and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30056,"byte_end":30113,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30118,"byte_end":30158,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30678,"byte_end":30687,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"init_with","qualname":"<Output>::init_with","value":"pub fn init_with<F>(usize, F) -> Result<Self> where F: FnOnce(&mut [u8]) ->\nResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an [`Output`] using the provided method, which is given\n a mutable byte slice into which it should write the output.","sig":null,"attributes":[{"value":"/ Initialize an [`Output`] using the provided method, which is given","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30350,"byte_end":30420,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ a mutable byte slice into which it should write the output.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30425,"byte_end":30488,"line_start":142,"line_end":142,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30493,"byte_end":30496,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The `output_size` (in bytes) must be known in advance, as well as at","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30501,"byte_end":30573,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ least [`Output::MIN_LENGTH`] bytes and at most [`Output::MAX_LENGTH`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30578,"byte_end":30651,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":30656,"byte_end":30666,"line_start":146,"line_end":146,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31282,"byte_end":31290,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Output>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the output value as a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31226,"byte_end":31270,"line_start":169,"line_end":169,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31431,"byte_end":31439,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Output>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`Output`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`Output`] is serialized with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31354,"byte_end":31419,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31561,"byte_end":31564,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"len","qualname":"<Output>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the length of the output value as a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31494,"byte_end":31549,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31759,"byte_end":31769,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Output>::b64_decode","value":"pub fn b64_decode(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse B64-encoded [`Output`], i.e. using the PHC string\n specification's restricted interpretation of Base64.\n","sig":null,"attributes":[{"value":"/ Parse B64-encoded [`Output`], i.e. using the PHC string","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31627,"byte_end":31686,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/ specification's restricted interpretation of Base64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31691,"byte_end":31747,"line_start":185,"line_end":185,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32065,"byte_end":32075,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<Output>::b64_encode","value":"pub fn b64_encode<'a>(&Self, &'a mut [u8]) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Write B64-encoded [`Output`] to the provided buffer, returning\n a sub-slice containing the encoded data.","sig":null,"attributes":[{"value":"/ Write B64-encoded [`Output`] to the provided buffer, returning","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31855,"byte_end":31921,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ a sub-slice containing the encoded data.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31926,"byte_end":31970,"line_start":191,"line_end":191,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31975,"byte_end":31978,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the buffer is too short to contain the output.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":31983,"byte_end":32053,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32257,"byte_end":32263,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"decode","qualname":"<Output>::decode","value":"pub fn decode(&str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given input string using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Decode the given input string using the specified [`Encoding`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32178,"byte_end":32245,"line_start":198,"line_end":198,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32612,"byte_end":32618,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"encode","qualname":"<Output>::encode","value":"pub fn encode<'a>(&Self, &'a mut [u8], Encoding) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Encode this [`Output`] using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Encode this [`Output`] using the specified [`Encoding`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32540,"byte_end":32600,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32820,"byte_end":32827,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"b64_len","qualname":"<Output>::b64_len","value":"pub fn b64_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this [`Output`] when encoded as B64.\n","sig":null,"attributes":[{"value":"/ Get the length of this [`Output`] when encoded as B64.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32750,"byte_end":32808,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36387,"byte_end":36399,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"ParamsString","qualname":"::params::ParamsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter string.","sig":null,"attributes":[{"value":"/ Algorithm parameter string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":35899,"byte_end":35930,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":35931,"byte_end":35934,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The [PHC string format specification][1] defines a set of optional","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":35935,"byte_end":36005,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ algorithm-specific name/value pairs which can be encoded into a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36006,"byte_end":36073,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ PHC-formatted parameter string as follows:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36074,"byte_end":36120,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36121,"byte_end":36124,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36125,"byte_end":36136,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ $<param>=<value>(,<param>=<value>)*","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36137,"byte_end":36176,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36177,"byte_end":36184,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36185,"byte_end":36188,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This type represents that set of parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36189,"byte_end":36237,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36238,"byte_end":36241,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36242,"byte_end":36334,"line_start":42,"line_end":42,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36484,"byte_end":36487,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<ParamsString>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new empty [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Create new empty [`ParamsString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36434,"byte_end":36472,"line_start":47,"line_end":47,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36616,"byte_end":36623,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"add_str","qualname":"<ParamsString>::add_str","value":"pub fn add_str<'a, impl TryInto<Ident<'a>>: TryInto<Ident>,\n               impl TryInto<Value<'a>>: TryInto<Value>>(&mut Self,\n                                                        impl TryInto<Ident<'a>>,\n                                                        impl TryInto<Value<'a>>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a string value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a string value to the [`ParamsString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36535,"byte_end":36604,"line_start":52,"line_end":52,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37023,"byte_end":37034,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"add_decimal","qualname":"<ParamsString>::add_decimal","value":"pub fn add_decimal<'a,\n                   impl TryInto<Ident<'a>>: TryInto<Ident>>(&mut Self,\n                                                            impl TryInto<Ident<'a>>,\n                                                            Decimal)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a decimal value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a decimal value to the [`ParamsString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36941,"byte_end":37011,"line_start":63,"line_end":63,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37305,"byte_end":37313,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ParamsString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a byte slice.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37228,"byte_end":37293,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37448,"byte_end":37454,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ParamsString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a `str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37376,"byte_end":37436,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37593,"byte_end":37596,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<ParamsString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the count of the number ASCII characters in this [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Get the count of the number ASCII characters in this [`ParamsString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37507,"byte_end":37581,"line_start":79,"line_end":79,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37702,"byte_end":37710,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParamsString>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this set of parameters empty?\n","sig":null,"attributes":[{"value":"/ Is this set of parameters empty?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37654,"byte_end":37690,"line_start":84,"line_end":84,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37807,"byte_end":37811,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"iter","qualname":"<ParamsString>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the parameters.\n","sig":null,"attributes":[{"value":"/ Iterate over the parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37763,"byte_end":37795,"line_start":89,"line_end":89,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37927,"byte_end":37930,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"get","qualname":"<ParamsString>::get","value":"pub fn get<'a,\n           impl TryInto<Ident<'a>>: TryInto<Ident>>(&Self,\n                                                    impl TryInto<Ident<'a>>)\n-> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter [`Value`] by name.\n","sig":null,"attributes":[{"value":"/ Get a parameter [`Value`] by name.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":37877,"byte_end":37915,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":38226,"byte_end":38233,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"get_str","qualname":"<ParamsString>::get_str","value":"pub fn get_str<'a,\n               impl TryInto<Ident<'a>>: TryInto<Ident>>(&Self,\n                                                        impl TryInto<Ident<'a>>)\n-> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a `str`.\n","sig":null,"attributes":[{"value":"/ Get a parameter as a `str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":38183,"byte_end":38214,"line_start":107,"line_end":107,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":38468,"byte_end":38479,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"get_decimal","qualname":"<ParamsString>::get_decimal","value":"pub fn get_decimal<'a,\n                   impl TryInto<Ident<'a>>: TryInto<Ident>>(&Self,\n                                                            impl TryInto<Ident<'a>>)\n-> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a [`Decimal`].","sig":null,"attributes":[{"value":"/ Get a parameter as a [`Decimal`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":38356,"byte_end":38393,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":38398,"byte_end":38401,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ See [`Value::decimal`] for format information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":38406,"byte_end":38456,"line_start":114,"line_end":114,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":41057,"byte_end":41061,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"Iter","qualname":"::params::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" Iterator over algorithm parameters stored in a [`ParamsString`] struct.\n","sig":null,"attributes":[{"value":"/ Iterator over algorithm parameters stored in a [`ParamsString`] struct.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40970,"byte_end":41045,"line_start":210,"line_end":210,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":642},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49940,"byte_end":49944,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"Salt","qualname":"::salt::Salt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Salt string.","sig":null,"attributes":[{"value":"/ Salt string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46735,"byte_end":46751,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46752,"byte_end":46755,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In password hashing, a \"salt\" is an additional value used to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46756,"byte_end":46820,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ personalize/tweak the output of a password hashing function for a given","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46821,"byte_end":46896,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ input password.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46897,"byte_end":46916,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46917,"byte_end":46920,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Salts help defend against attacks based on precomputed tables of hashed","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46921,"byte_end":46996,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ passwords, i.e. \"[rainbow tables][1]\".","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":46997,"byte_end":47039,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47040,"byte_end":47043,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The [`Salt`] type implements the RECOMMENDED best practices for salts","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47044,"byte_end":47117,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][2], namely:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47118,"byte_end":47184,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47185,"byte_end":47188,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ > - Maximum lengths for salt, output and parameter values are meant to help","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47189,"byte_end":47268,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ >   consumer implementations, in particular written in C and using","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47269,"byte_end":47339,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ >   stack-allocated buffers. These buffers must account for the worst case,","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47340,"byte_end":47419,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ >   i.e. the maximum defined length. Therefore, keep these lengths low.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47420,"byte_end":47495,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ > - The role of salts is to achieve uniqueness. A random salt is fine for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47496,"byte_end":47573,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ >   that as long as its length is sufficient; a 16-byte salt would work well","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47574,"byte_end":47654,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ >   (by definition, UUID are very good salts, and they encode over exactly","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47655,"byte_end":47733,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ >   16 bytes). 16 bytes encode as 22 characters in B64. Functions should","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47734,"byte_end":47810,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ >   disallow salt values that are too small for security (4 bytes should be","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47811,"byte_end":47890,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ >   viewed as an absolute minimum).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47891,"byte_end":47930,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47931,"byte_end":47934,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47935,"byte_end":47959,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ The recommended default length for a salt string is **16-bytes** (128-bits).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":47960,"byte_end":48040,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48041,"byte_end":48044,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ See below for rationale.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48045,"byte_end":48073,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48074,"byte_end":48077,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48078,"byte_end":48095,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ Salt strings are constrained to the following set of characters per the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48096,"byte_end":48171,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ PHC spec:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48172,"byte_end":48185,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48186,"byte_end":48189,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ > The salt consists in a sequence of characters in: `[a-zA-Z0-9/+.-]`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48190,"byte_end":48263,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ > (lowercase letters, uppercase letters, digits, /, +, . and -).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48264,"byte_end":48332,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48333,"byte_end":48336,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Additionally the following length restrictions are enforced based on the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48337,"byte_end":48413,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ guidelines from the spec:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48414,"byte_end":48443,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48444,"byte_end":48447,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **4**-bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48448,"byte_end":48481,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/ - Maximum length: **64**-bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48482,"byte_end":48516,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48517,"byte_end":48520,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A maximum length is enforced based on the above recommendation for","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48521,"byte_end":48591,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ supporting stack-allocated buffers (which this library uses), and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48592,"byte_end":48665,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ specific determination of 64-bytes is taken as a best practice from the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48666,"byte_end":48741,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [Argon2 Encoding][3] specification in the same document:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48742,"byte_end":48802,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48803,"byte_end":48806,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ > The length in bytes of the salt is between 8 and 64 bytes<sup>†</sup>, thus","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48807,"byte_end":48890,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/ > yielding a length in characters between 11 and 64 characters (and that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48891,"byte_end":48967,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ > length is never equal to 1 modulo 4). The default byte length of the salt","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":48968,"byte_end":49047,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ > is 16 bytes (22 characters in B64 encoding). An encoded UUID, or a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49048,"byte_end":49120,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ > sequence of 16 bytes produced with a cryptographically strong PRNG, are","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49121,"byte_end":49198,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ > appropriate salt values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49199,"byte_end":49229,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49230,"byte_end":49235,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ > <sup>†</sup>The Argon2 specification states that the salt can be much longer, up","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49236,"byte_end":49324,"line_start":69,"line_end":69,"column_start":1,"column_end":87}},{"value":"/ > to 2^32-1 bytes, but this makes little sense for password hashing.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49325,"byte_end":49397,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/ > Specifying a relatively small maximum length allows for parsing with a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49398,"byte_end":49474,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ > stack allocated buffer.)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49475,"byte_end":49505,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49506,"byte_end":49509,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49510,"byte_end":49583,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 16-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49584,"byte_end":49643,"line_start":75,"line_end":75,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49644,"byte_end":49647,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Rainbow_table","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49648,"byte_end":49700,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49701,"byte_end":49795,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/ [3]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":49796,"byte_end":49890,"line_start":79,"line_end":79,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":315},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50089,"byte_end":50099,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::salt::Salt::<'a>::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Minimum length of a [`Salt`] string: 4-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Salt`] string: 4-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50025,"byte_end":50074,"line_start":85,"line_end":85,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":316},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50264,"byte_end":50274,"line_start":91,"line_end":91,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::salt::Salt::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Maximum length of a [`Salt`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of a [`Salt`] string: 64-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50117,"byte_end":50167,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50172,"byte_end":50175,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Salt`] for more information.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50180,"byte_end":50249,"line_start":90,"line_end":90,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":317},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50351,"byte_end":50369,"line_start":94,"line_end":94,"column_start":15,"column_end":33},"name":"RECOMMENDED_LENGTH","qualname":"::salt::Salt::<'a>::RECOMMENDED_LENGTH","value":"usize","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Recommended length of a salt: 16-bytes.\n","sig":null,"attributes":[{"value":"/ Recommended length of a salt: 16-bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50293,"byte_end":50336,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50545,"byte_end":50548,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Salt>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Salt`] from the given `str`, validating it according to\n [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Salt`] from the given `str`, validating it according to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50388,"byte_end":50458,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50463,"byte_end":50533,"line_start":97,"line_end":97,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51239,"byte_end":51249,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Salt>::b64_decode","value":"pub fn b64_decode<'b>(&Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Salt`], writing the decoded result\n into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Salt`], writing the decoded result","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50928,"byte_end":51000,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ into the provided buffer, and returning a slice of the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51005,"byte_end":51070,"line_start":112,"line_end":112,"column_start":5,"column_end":70}},{"value":"/ containing the decoded result on success.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51075,"byte_end":51120,"line_start":113,"line_end":113,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51125,"byte_end":51128,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51133,"byte_end":51227,"line_start":115,"line_end":115,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51389,"byte_end":51395,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Salt>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51344,"byte_end":51377,"line_start":120,"line_end":120,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51494,"byte_end":51502,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Salt>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51451,"byte_end":51482,"line_start":125,"line_end":125,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51633,"byte_end":51636,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"len","qualname":"<Salt>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51568,"byte_end":51621,"line_start":130,"line_end":130,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52326,"byte_end":52336,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"SaltString","qualname":"::salt::SaltString","value":"SaltString {  }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":665}],"decl_id":null,"docs":" Owned stack-allocated equivalent of [`Salt`].\n","sig":null,"attributes":[{"value":"/ Owned stack-allocated equivalent of [`Salt`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52237,"byte_end":52286,"line_start":162,"line_end":162,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52725,"byte_end":52733,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"generate","qualname":"<SaltString>::generate","value":"pub fn generate<impl CryptoRng + RngCore: CryptoRng +\n                RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random B64-encoded [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Generate a random B64-encoded [`SaltString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52573,"byte_end":52622,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"rand_core\")","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52627,"byte_end":52656,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52991,"byte_end":52994,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<SaltString>::new","value":"pub fn new(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Create a new [`SaltString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52947,"byte_end":52979,"line_start":183,"line_end":183,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":53606,"byte_end":53616,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<SaltString>::b64_encode","value":"pub fn b64_encode(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given byte slice as B64 into a new [`SaltString`].","sig":null,"attributes":[{"value":"/ Encode the given byte slice as B64 into a new [`SaltString`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":53472,"byte_end":53537,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":53542,"byte_end":53545,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the slice is too long.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":53550,"byte_end":53594,"line_start":204,"line_end":204,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":53903,"byte_end":53913,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<SaltString>::b64_decode","value":"pub fn b64_decode<'a>(&Self, &'a mut [u8]) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Decode this [`SaltString`] from B64 into the provided output buffer.\n","sig":null,"attributes":[{"value":"/ Decode this [`SaltString`] from B64 into the provided output buffer.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":53819,"byte_end":53891,"line_start":211,"line_end":211,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54086,"byte_end":54093,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"as_salt","qualname":"<SaltString>::as_salt","value":"pub fn as_salt(&Self) -> Salt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a [`Salt`].\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a [`Salt`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54016,"byte_end":54074,"line_start":216,"line_end":216,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54257,"byte_end":54263,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SaltString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a `str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54190,"byte_end":54245,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54428,"byte_end":54436,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SaltString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54385,"byte_end":54416,"line_start":226,"line_end":226,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54564,"byte_end":54567,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"len","qualname":"<SaltString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54499,"byte_end":54552,"line_start":231,"line_end":231,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":380},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":56897,"byte_end":56904,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"Decimal","qualname":"::value::Decimal","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Type used to represent decimal (i.e. integer) values.\n","sig":null,"attributes":[{"value":"/ Type used to represent decimal (i.e. integer) values.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":56830,"byte_end":56887,"line_start":19,"line_end":19,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":674},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57786,"byte_end":57791,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Value","qualname":"::value::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter value string.","sig":null,"attributes":[{"value":"/ Algorithm parameter value string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":56913,"byte_end":56950,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":56951,"byte_end":56954,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Parameter values are defined in the [PHC string format specification][1].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":56955,"byte_end":57032,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57033,"byte_end":57036,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57037,"byte_end":57054,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-zA-Z0-9/+.-]`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57055,"byte_end":57128,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57129,"byte_end":57182,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 0 (i.e. empty values are allowed)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57183,"byte_end":57238,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ - Maximum length: 48 ASCII characters (i.e. 48-bytes)","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57239,"byte_end":57296,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57297,"byte_end":57300,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Additional Notes","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57301,"byte_end":57323,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ The PHC spec allows for algorithm-defined maximum lengths for parameter","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57324,"byte_end":57399,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ values, however in the interest of interoperability this library defines a","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57400,"byte_end":57478,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ [`Value::MAX_LENGTH`] of 48 ASCII characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57479,"byte_end":57528,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57529,"byte_end":57532,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57533,"byte_end":57611,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57612,"byte_end":57706,"line_start":38,"line_end":38,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":383},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58368,"byte_end":58378,"line_start":53,"line_end":53,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::value::Value::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Maximum length of an [`Value`] - 48 ASCII characters (i.e. 48-bytes).","sig":null,"attributes":[{"value":"/ Maximum length of an [`Value`] - 48 ASCII characters (i.e. 48-bytes).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57832,"byte_end":57905,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57910,"byte_end":57913,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This value is selected based on the maximum value size used in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57918,"byte_end":57988,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ [Argon2 Encoding][1] as described in the PHC string format specification.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57993,"byte_end":58070,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ Namely the `data` parameter, when encoded as B64, can be up to 43","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58075,"byte_end":58144,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58149,"byte_end":58164,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58169,"byte_end":58172,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This implementation rounds that up to 48 as a safe maximum limit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58177,"byte_end":58246,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58251,"byte_end":58254,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58259,"byte_end":58353,"line_start":52,"line_end":52,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58521,"byte_end":58524,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Value>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a [`Value`] from the provided `str`, validating it according to\n the PHC string format's rules.\n","sig":null,"attributes":[{"value":"/ Parse a [`Value`] from the provided `str`, validating it according to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58397,"byte_end":58470,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ the PHC string format's rules.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58475,"byte_end":58509,"line_start":56,"line_end":56,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59340,"byte_end":59350,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Value>::b64_decode","value":"pub fn b64_decode<'b>(&Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Value`], writing the decoded\n result into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Value`], writing the decoded","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58823,"byte_end":58889,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/ result into the provided buffer, and returning a slice of the buffer","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58894,"byte_end":58966,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ containing the decoded result on success.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":58971,"byte_end":59016,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59021,"byte_end":59024,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Examples of \"B64\"-encoded parameters in practice are the `keyid` and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59029,"byte_end":59101,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ `data` parameters used by the [Argon2 Encoding][1] as described in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59106,"byte_end":59180,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ PHC string format specification.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59185,"byte_end":59221,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59226,"byte_end":59229,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59234,"byte_end":59328,"line_start":75,"line_end":75,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59513,"byte_end":59519,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59468,"byte_end":59501,"line_start":80,"line_end":80,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59609,"byte_end":59617,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Value>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59566,"byte_end":59597,"line_start":85,"line_end":85,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59748,"byte_end":59751,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"len","qualname":"<Value>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59683,"byte_end":59736,"line_start":90,"line_end":90,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59845,"byte_end":59853,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Value>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this value empty?\n","sig":null,"attributes":[{"value":"/ Is this value empty?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59809,"byte_end":59833,"line_start":95,"line_end":95,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61552,"byte_end":61559,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"decimal","qualname":"<Value>::decimal","value":"pub fn decimal(&Self) -> Result<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","sig":null,"attributes":[{"value":"/ Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59915,"byte_end":59991,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":59996,"byte_end":59999,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Decimal values are integers which follow the rules given in the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60004,"byte_end":60071,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ [\"Decimal Encoding\" section of the PHC string format specification][1].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60076,"byte_end":60151,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60156,"byte_end":60159,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The decimal encoding rules are as follows:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60164,"byte_end":60210,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/ > For an integer value x, its decimal encoding consist in the following:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60215,"byte_end":60291,"line_start":106,"line_end":106,"column_start":5,"column_end":81}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60296,"byte_end":60301,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ > - If x < 0, then its decimal encoding is the minus sign - followed by the decimal","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60306,"byte_end":60393,"line_start":108,"line_end":108,"column_start":5,"column_end":92}},{"value":"/ >   encoding of -x.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60398,"byte_end":60421,"line_start":109,"line_end":109,"column_start":5,"column_end":28}},{"value":"/ > - If x = 0, then its decimal encoding is the single character 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60426,"byte_end":60496,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/ > - If x > 0, then its decimal encoding is the smallest sequence of ASCII digits that","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60501,"byte_end":60590,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"/ >   matches its value (i.e. there is no leading zero).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60595,"byte_end":60653,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60658,"byte_end":60663,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ > Thus, a value is a valid decimal for an integer x if and only if all of the following hold true:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60668,"byte_end":60770,"line_start":114,"line_end":114,"column_start":5,"column_end":107}},{"value":"/ >","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60775,"byte_end":60780,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ > - The first character is either a - sign, or an ASCII digit.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60785,"byte_end":60851,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"/ > - All characters other than the first are ASCII digits.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60856,"byte_end":60917,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/ > - If the first character is - sign, then there is at least another character, and the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":60922,"byte_end":61013,"line_start":118,"line_end":118,"column_start":5,"column_end":96}},{"value":"/ >   second character is not a 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61018,"byte_end":61054,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ > - If the string consists in more than one character, then the first one cannot be a 0.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61059,"byte_end":61151,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61156,"byte_end":61159,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note: this implementation does not support negative decimals despite","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61164,"byte_end":61236,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ them being allowed per the spec above. If you need to parse a negative","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61241,"byte_end":61315,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ number, please parse it from the string representation directly e.g.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61320,"byte_end":61392,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ `value.as_str().parse::<i32>()`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61397,"byte_end":61432,"line_start":125,"line_end":125,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61437,"byte_end":61440,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#decimal-encoding","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":61445,"byte_end":61540,"line_start":127,"line_end":127,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62496,"byte_end":62506,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"is_decimal","qualname":"<Value>::is_decimal","value":"pub fn is_decimal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this value parse successfully as a decimal?\n","sig":null,"attributes":[{"value":"/ Does this value parse successfully as a decimal?","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62432,"byte_end":62484,"line_start":156,"line_end":156,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":467},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2528,"byte_end":2542,"line_start":80,"line_end":80,"column_start":11,"column_end":25},"name":"PasswordHasher","qualname":"::PasswordHasher","value":"PasswordHasher","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474}],"decl_id":null,"docs":" Trait for password hashing functions.\n","sig":null,"attributes":[{"value":"/ Trait for password hashing functions.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2476,"byte_end":2517,"line_start":79,"line_end":79,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2593,"byte_end":2599,"line_start":82,"line_end":82,"column_start":10,"column_end":16},"name":"Params","qualname":"::PasswordHasher::Params","value":"type Params: Clone\n        + Debug\n        + Default\n        + for<'a> TryFrom<&'a PasswordHash<'a>, Error = Error>\n        + for<'a> TryInto<ParamsString, Error = Error>;","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.\n","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2549,"byte_end":2583,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2943,"byte_end":2963,"line_start":92,"line_end":92,"column_start":8,"column_end":28},"name":"hash_password_simple","qualname":"::PasswordHasher::hash_password_simple","value":"pub fn hash_password_simple<'a, S: ?Sized>(&Self, &[u8], &'a S)\n-> Result<PasswordHash> where S: AsRef<str>","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Simple API for computing a [`PasswordHash`] from a password and\n [`Salt`] value.","sig":null,"attributes":[{"value":"/ Simple API for computing a [`PasswordHash`] from a password and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2765,"byte_end":2832,"line_start":88,"line_end":88,"column_start":5,"column_end":72}},{"value":"/ [`Salt`] value.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2837,"byte_end":2856,"line_start":89,"line_end":89,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2861,"byte_end":2864,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Uses the default recommended parameters for a given algorithm.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":2869,"byte_end":2935,"line_start":91,"line_end":91,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3416,"byte_end":3429,"line_start":107,"line_end":107,"column_start":8,"column_end":21},"name":"hash_password","qualname":"::PasswordHasher::hash_password","value":"pub fn hash_password<'a,\n                     impl Into<Salt<'a>>: Into<Salt>>(&Self, &[u8],\n                                                      Option<Ident>,\n                                                      Self::Params,\n                                                      impl Into<Salt<'a>>)\n-> Result<PasswordHash>","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Compute a [`PasswordHash`] with the given algorithm [`Ident`]\n (or `None` for the recommended default), password, salt, and\n parameters.\n","sig":null,"attributes":[{"value":"/ Compute a [`PasswordHash`] with the given algorithm [`Ident`]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3254,"byte_end":3319,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ (or `None` for the recommended default), password, salt, and","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3324,"byte_end":3388,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/ parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3393,"byte_end":3408,"line_start":106,"line_end":106,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":477},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3945,"byte_end":3961,"line_start":123,"line_end":123,"column_start":11,"column_end":27},"name":"PasswordVerifier","qualname":"::PasswordVerifier","value":"PasswordVerifier","parent":null,"children":[{"krate":0,"index":478}],"decl_id":null,"docs":" Trait for password verification.","sig":null,"attributes":[{"value":"/ Trait for password verification.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3616,"byte_end":3652,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3653,"byte_end":3656,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Automatically impl'd for any type that impls [`PasswordHasher`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3657,"byte_end":3725,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This trait is object safe and can be used to implement abstractions over","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3730,"byte_end":3806,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ multiple password hashing algorithms. One such abstraction is provided by","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3807,"byte_end":3884,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/ the [`PasswordHash::verify_password`] method.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3885,"byte_end":3934,"line_start":122,"line_end":122,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":4157,"byte_end":4172,"line_start":127,"line_end":127,"column_start":8,"column_end":23},"name":"verify_password","qualname":"::PasswordVerifier::verify_password","value":"pub fn verify_password(&Self, &[u8], &PasswordHash) -> Result<()>","parent":{"krate":0,"index":477},"children":[],"decl_id":null,"docs":" Compute this password hashing function against the provided password\n using the parameters from the provided password hash and see if the\n computed output matches.\n","sig":null,"attributes":[{"value":"/ Compute this password hashing function against the provided password","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":3968,"byte_end":4040,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ using the parameters from the provided password hash and see if the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":4045,"byte_end":4116,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ computed output matches.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":4121,"byte_end":4149,"line_start":126,"line_end":126,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":482},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5178,"byte_end":5187,"line_start":156,"line_end":156,"column_start":11,"column_end":20},"name":"McfHasher","qualname":"::McfHasher","value":"McfHasher","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":485}],"decl_id":null,"docs":" Trait for password hashing algorithms which support the legacy\n [Modular Crypt Format (MCF)][MCF].","sig":null,"attributes":[{"value":"/ Trait for password hashing algorithms which support the legacy","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":4980,"byte_end":5046,"line_start":152,"line_end":152,"column_start":1,"column_end":67}},{"value":"/ [Modular Crypt Format (MCF)][MCF].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5047,"byte_end":5085,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5086,"byte_end":5089,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5090,"byte_end":5167,"line_start":155,"line_end":155,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5496,"byte_end":5512,"line_start":165,"line_end":165,"column_start":8,"column_end":24},"name":"upgrade_mcf_hash","qualname":"::McfHasher::upgrade_mcf_hash","value":"pub fn upgrade_mcf_hash<'a>(&Self, &'a str) -> Result<PasswordHash>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","sig":null,"attributes":[{"value":"/ Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5194,"byte_end":5262,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5267,"byte_end":5270,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5275,"byte_end":5286,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/ $<id>$<content>","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5291,"byte_end":5310,"line_start":160,"line_end":160,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5315,"byte_end":5322,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5327,"byte_end":5330,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ MCF hashes are otherwise largely unstructured and parsed according to","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5335,"byte_end":5408,"line_start":163,"line_end":163,"column_start":5,"column_end":78}},{"value":"/ algorithm-specific rules so hashers must parse a raw string themselves.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5413,"byte_end":5488,"line_start":164,"line_end":164,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5652,"byte_end":5667,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"verify_mcf_hash","qualname":"::McfHasher::verify_mcf_hash","value":"pub fn verify_mcf_hash(&Self, &[u8], &str) -> Result<()> where\nSelf: PasswordVerifier","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Verify a password hash in MCF format against the provided password.\n","sig":null,"attributes":[{"value":"/ Verify a password hash in MCF format against the provided password.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5573,"byte_end":5644,"line_start":167,"line_end":167,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":707},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7143,"byte_end":7155,"line_start":209,"line_end":209,"column_start":12,"column_end":24},"name":"PasswordHash","qualname":"::PasswordHash","value":"PasswordHash { algorithm, version, params, salt, hash }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":" Password hash.","sig":null,"attributes":[{"value":"/ Password hash.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5853,"byte_end":5871,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5872,"byte_end":5875,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ This type corresponds to the parsed representation of a PHC string as","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5876,"byte_end":5949,"line_start":178,"line_end":178,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][1].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":5950,"byte_end":6008,"line_start":179,"line_end":179,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6009,"byte_end":6012,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ PHC strings have the following format:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6013,"byte_end":6055,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6056,"byte_end":6059,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6060,"byte_end":6071,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6072,"byte_end":6150,"line_start":184,"line_end":184,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6151,"byte_end":6158,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6159,"byte_end":6162,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ where:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6163,"byte_end":6173,"line_start":187,"line_end":187,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ - `<id>` is the symbolic name for the function","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6178,"byte_end":6228,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/ - `<version>` is the algorithm version","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6229,"byte_end":6271,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/ - `<param>` is a parameter name","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6272,"byte_end":6307,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ - `<value>` is a parameter value","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6308,"byte_end":6344,"line_start":192,"line_end":192,"column_start":1,"column_end":37}},{"value":"/ - `<salt>` is an encoding of the salt","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6345,"byte_end":6386,"line_start":193,"line_end":193,"column_start":1,"column_end":42}},{"value":"/ - `<hash>` is an encoding of the hash output","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6387,"byte_end":6435,"line_start":194,"line_end":194,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6436,"byte_end":6439,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ The string is then the concatenation, in that order, of:","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6440,"byte_end":6500,"line_start":196,"line_end":196,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6501,"byte_end":6504,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ - a `$` sign;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6505,"byte_end":6522,"line_start":198,"line_end":198,"column_start":1,"column_end":18}},{"value":"/ - the function symbolic name;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6523,"byte_end":6556,"line_start":199,"line_end":199,"column_start":1,"column_end":34}},{"value":"/ - optionally, a `$` sign followed by the algorithm version with a `v=version` format;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6557,"byte_end":6646,"line_start":200,"line_end":200,"column_start":1,"column_end":90}},{"value":"/ - optionally, a `$` sign followed by one or several parameters, each with a `name=value` format;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6647,"byte_end":6747,"line_start":201,"line_end":201,"column_start":1,"column_end":101}},{"value":"/   the parameters are separated by commas;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6748,"byte_end":6793,"line_start":202,"line_end":202,"column_start":1,"column_end":46}},{"value":"/ - optionally, a `$` sign followed by the (encoded) salt value;","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6794,"byte_end":6860,"line_start":203,"line_end":203,"column_start":1,"column_end":67}},{"value":"/ - optionally, a `$` sign followed by the (encoded) hash output (the hash output may be present","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6861,"byte_end":6959,"line_start":204,"line_end":204,"column_start":1,"column_end":99}},{"value":"/   only if the salt is present).","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6960,"byte_end":6995,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":6996,"byte_end":6999,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7000,"byte_end":7092,"line_start":207,"line_end":207,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7338,"byte_end":7347,"line_start":214,"line_end":214,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::PasswordHash::algorithm","value":"ident::Ident<'a>","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Password hashing algorithm identifier.","sig":null,"attributes":[{"value":"/ Password hashing algorithm identifier.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7166,"byte_end":7208,"line_start":210,"line_end":210,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7213,"byte_end":7216,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<id>` field in a PHC string, a.k.a. the","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7221,"byte_end":7289,"line_start":212,"line_end":212,"column_start":5,"column_end":73}},{"value":"/ symbolic name for the function.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7294,"byte_end":7329,"line_start":213,"line_end":213,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7476,"byte_end":7483,"line_start":219,"line_end":219,"column_start":9,"column_end":16},"name":"version","qualname":"::PasswordHash::version","value":"core::option::Option<u32>","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Optional version field.","sig":null,"attributes":[{"value":"/ Optional version field.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7365,"byte_end":7392,"line_start":216,"line_end":216,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7397,"byte_end":7400,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<version>` field in a PHC string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7405,"byte_end":7467,"line_start":218,"line_end":218,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7677,"byte_end":7683,"line_start":225,"line_end":225,"column_start":9,"column_end":15},"name":"params","qualname":"::PasswordHash::params","value":"params::ParamsString","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7507,"byte_end":7541,"line_start":221,"line_end":221,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7546,"byte_end":7549,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the set of `$<param>=<value>(,<param>=<value>)*`","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7554,"byte_end":7626,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ name/value pairs in a PHC string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7631,"byte_end":7668,"line_start":224,"line_end":224,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":712},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7846,"byte_end":7850,"line_start":230,"line_end":230,"column_start":9,"column_end":13},"name":"salt","qualname":"::PasswordHash::salt","value":"core::option::Option<salt::Salt<'a>>","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" [`Salt`] string for personalizing a password hash output.","sig":null,"attributes":[{"value":"/ [`Salt`] string for personalizing a password hash output.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7704,"byte_end":7765,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7770,"byte_end":7773,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<salt>` value in a PHC string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7778,"byte_end":7837,"line_start":229,"line_end":229,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8018,"byte_end":8022,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"name":"hash","qualname":"::PasswordHash::hash","value":"core::option::Option<output::Output>","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Password hashing function [`Output`], a.k.a. hash/digest.","sig":null,"attributes":[{"value":"/ Password hashing function [`Output`], a.k.a. hash/digest.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7875,"byte_end":7936,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7941,"byte_end":7944,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<hash>` output in a PHC string.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":7949,"byte_end":8009,"line_start":234,"line_end":234,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8152,"byte_end":8155,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"new","qualname":"<PasswordHash>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from a string in the PHC string format.\n","sig":null,"attributes":[{"value":"/ Parse a password hash from a string in the PHC string format.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8075,"byte_end":8140,"line_start":239,"line_end":239,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8301,"byte_end":8306,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"parse","qualname":"<PasswordHash>::parse","value":"pub fn parse(&'a str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from the given [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Parse a password hash from the given [`Encoding`].","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8235,"byte_end":8289,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10214,"byte_end":10222,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"generate","qualname":"<PasswordHash>::generate","value":"pub fn generate<impl PasswordHasher: PasswordHasher,\n                impl AsRef<[u8]>: AsRef<[u8]>>(impl PasswordHasher,\n                                               impl AsRef<[u8]>, &'a str)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Generate a password hash using the supplied algorithm.\n","sig":null,"attributes":[{"value":"/ Generate a password hash using the supplied algorithm.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10144,"byte_end":10202,"line_start":314,"line_end":314,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10530,"byte_end":10545,"line_start":325,"line_end":325,"column_start":12,"column_end":27},"name":"verify_password","qualname":"<PasswordHash>::verify_password","value":"pub fn verify_password<impl AsRef<[u8]>: AsRef<[u8]>>(&Self,\n                                                      &[&dyn\n                                                         PasswordVerifier],\n                                                      impl AsRef<[u8]>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify this password hash using the specified set of supported\n [`PasswordHasher`] trait objects.\n","sig":null,"attributes":[{"value":"/ Verify this password hash using the specified set of supported","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10410,"byte_end":10476,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/ [`PasswordHasher`] trait objects.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10481,"byte_end":10518,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10936,"byte_end":10944,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"encoding","qualname":"<PasswordHash>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`PasswordHash`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`PasswordHash`] is serialized with.","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":10853,"byte_end":10924,"line_start":339,"line_end":339,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12857,"byte_end":12865,"line_start":35,"line_end":35,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12927,"byte_end":12935,"line_start":41,"line_end":41,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15292,"byte_end":15297,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":16694,"byte_end":16699,"line_start":88,"line_end":88,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":16817,"byte_end":16822,"line_start":94,"line_end":94,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18601,"byte_end":18606,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":20811,"byte_end":20816,"line_start":102,"line_end":102,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":20904,"byte_end":20909,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":21151,"byte_end":21156,"line_start":118,"line_end":118,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":21691,"byte_end":21696,"line_start":143,"line_end":143,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":21827,"byte_end":21832,"line_start":149,"line_end":149,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29188,"byte_end":29194,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32925,"byte_end":32931,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33023,"byte_end":33029,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33148,"byte_end":33154,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33279,"byte_end":33285,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33395,"byte_end":33401,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33535,"byte_end":33541,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33829,"byte_end":33835,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36415,"byte_end":36427,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":39268,"byte_end":39280,"line_start":142,"line_end":142,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40377,"byte_end":40389,"line_start":183,"line_end":183,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40689,"byte_end":40701,"line_start":198,"line_end":198,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40831,"byte_end":40843,"line_start":204,"line_end":204,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":41121,"byte_end":41125,"line_start":215,"line_end":215,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":41402,"byte_end":41406,"line_start":228,"line_end":228,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42100,"byte_end":42106,"line_start":252,"line_end":252,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42259,"byte_end":42265,"line_start":258,"line_end":258,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42413,"byte_end":42419,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42609,"byte_end":42615,"line_start":274,"line_end":274,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50010,"byte_end":50014,"line_start":84,"line_end":84,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51716,"byte_end":51720,"line_start":136,"line_end":136,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51819,"byte_end":51823,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51965,"byte_end":51969,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52107,"byte_end":52111,"line_start":156,"line_end":156,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52556,"byte_end":52566,"line_start":173,"line_end":173,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54643,"byte_end":54653,"line_start":237,"line_end":237,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54737,"byte_end":54747,"line_start":243,"line_end":243,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54956,"byte_end":54960,"line_start":250,"line_end":250,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57816,"byte_end":57821,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62588,"byte_end":62593,"line_start":162,"line_end":162,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62692,"byte_end":62697,"line_start":168,"line_end":168,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62845,"byte_end":62852,"line_start":176,"line_end":176,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":63011,"byte_end":63018,"line_start":184,"line_end":184,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":63161,"byte_end":63166,"line_start":192,"line_end":192,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":4285,"byte_end":4286,"line_start":130,"line_end":130,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8052,"byte_end":8064,"line_start":238,"line_end":238,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":11185,"byte_end":11197,"line_start":347,"line_end":347,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":11331,"byte_end":11343,"line_start":355,"line_end":355,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12857,"byte_end":12865,"line_start":35,"line_end":35,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":505},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/encoding.rs","byte_start":12927,"byte_end":12935,"line_start":41,"line_end":41,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":15292,"byte_end":15297,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":527},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":16694,"byte_end":16699,"line_start":88,"line_end":88,"column_start":25,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":527},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/errors.rs","byte_start":16817,"byte_end":16822,"line_start":94,"line_end":94,"column_start":45,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":527},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":18601,"byte_end":18606,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":20811,"byte_end":20816,"line_start":102,"line_end":102,"column_start":25,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":20904,"byte_end":20909,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":21151,"byte_end":21156,"line_start":118,"line_end":118,"column_start":31,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":21691,"byte_end":21696,"line_start":143,"line_end":143,"column_start":27,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/ident.rs","byte_start":21827,"byte_end":21832,"line_start":149,"line_end":149,"column_start":25,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":29188,"byte_end":29194,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":32925,"byte_end":32931,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33023,"byte_end":33029,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":603},"to":{"krate":6,"index":57}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33148,"byte_end":33154,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33279,"byte_end":33285,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33395,"byte_end":33401,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33535,"byte_end":33541,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/output.rs","byte_start":33829,"byte_end":33835,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":36415,"byte_end":36427,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":39268,"byte_end":39280,"line_start":142,"line_end":142,"column_start":18,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":11108}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40377,"byte_end":40389,"line_start":183,"line_end":183,"column_start":37,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":6994}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40689,"byte_end":40701,"line_start":198,"line_end":198,"column_start":23,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":40831,"byte_end":40843,"line_start":204,"line_end":204,"column_start":21,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":41121,"byte_end":41125,"line_start":215,"line_end":215,"column_start":10,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":41402,"byte_end":41406,"line_start":228,"line_end":228,"column_start":23,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":7161}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42100,"byte_end":42106,"line_start":252,"line_end":252,"column_start":21,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42259,"byte_end":42265,"line_start":258,"line_end":258,"column_start":18,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42413,"byte_end":42419,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/params.rs","byte_start":42609,"byte_end":42615,"line_start":274,"line_end":274,"column_start":16,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":8659}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":50010,"byte_end":50014,"line_start":84,"line_end":84,"column_start":10,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51716,"byte_end":51720,"line_start":136,"line_end":136,"column_start":25,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51819,"byte_end":51823,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":51965,"byte_end":51969,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52107,"byte_end":52111,"line_start":156,"line_end":156,"column_start":25,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":52556,"byte_end":52566,"line_start":173,"line_end":173,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54643,"byte_end":54653,"line_start":237,"line_end":237,"column_start":21,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54737,"byte_end":54747,"line_start":243,"line_end":243,"column_start":20,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/salt.rs","byte_start":54956,"byte_end":54960,"line_start":250,"line_end":250,"column_start":35,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":57816,"byte_end":57821,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62588,"byte_end":62593,"line_start":162,"line_end":162,"column_start":25,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":674},"to":{"krate":1,"index":2719}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62692,"byte_end":62697,"line_start":168,"line_end":168,"column_start":31,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":674},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":62845,"byte_end":62852,"line_start":176,"line_end":176,"column_start":33,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":63011,"byte_end":63018,"line_start":184,"line_end":184,"column_start":34,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/value.rs","byte_start":63161,"byte_end":63166,"line_start":192,"line_end":192,"column_start":27,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":674},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":4285,"byte_end":4286,"line_start":130,"line_end":130,"column_start":46,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":480},"to":{"krate":0,"index":477}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":8052,"byte_end":8064,"line_start":238,"line_end":238,"column_start":10,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":11185,"byte_end":11197,"line_start":347,"line_end":347,"column_start":31,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":707},"to":{"krate":1,"index":2735}},{"span":{"file_name":"/home/hannydevelop/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.1/src/lib.rs","byte_start":11331,"byte_end":11343,"line_start":355,"line_end":355,"column_start":27,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":707},"to":{"krate":1,"index":8708}}]}